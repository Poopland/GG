-- This file was generated using Luraph Obfuscator v13.5.9

do return(function(TH,wH,EH,ZH,DH,rH,CH,gH,IH,hH,XH,fH,BH,SH,yH,xH,FH,iH,KH,pH,sH,zH,QH,cH,tH,qH,RH,YH,MH,kH,PH,LH,G,...)local lH,v,vH=0X0,nil,nil;local b,o=yH,(pcall);do repeat do if lH==0X0 then v=pH;do lH=0x001;end;else vH={};lH=2;continue;end;end;until lH==2;end;local J,A,i,y,M=nil,nil,nil,nil,nil;local T=(0X1);local e=(type);for fC=0X0,4 do if fC<=0X1 then if fC==0 then J=string.sub;continue;else A=string.char;continue;end;else do if fC<=0x2 then i={[0X0]=MH};continue;else do if fC==3 then y=hH;else M=RH;end;end;end;end;end;end;local K=getfenv;lH=3;local U,l,R,I,a=nil,nil,nil,nil,nil;do while lH~=5 do if lH<=0X0001 then if lH==0X0 then R=rH;lH=4;continue;else a=fH.bnot;do lH=5;end;do continue;end;end;else do if lH<=0X02 then l=IH;do lH=0X00000;end;else if lH~=0X3 then do I=CH;end;lH=0X1;else U=xH.rep;lH=0X2;end;end;end;end;end;end;lH=0;local x,u,C,s,j,d,r,g,k,P,t,f=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;do while lH<=13 do if not(lH<=0X00006)then if lH<=0X09 then if not(lH<=7)then if lH==0X8 then g=K();do lH=6;end;else d=xH.byte;lH=4;continue;end;else do u=wH;end;lH=0Xa;continue;end;else if not(lH<=11)then if lH==0X00C then s=string.unpack;lH=11;continue;else klH=0x00001;do continue;end;end;else do if lH~=0Xa then j=gH;do lH=0x9;end;else C=KH;lH=0xC;continue;end;end;end;end;else if lH<=2 then if not(lH<=0X00000)then if lH==1 then lH=2;continue;else do t=0X100000000;end;lH=0X05;end;else do x=sH;end;lH=0x7;continue;end;else if not(lH<=4)then do if lH==0X5 then f=kH;do lH=0X3;end;else lH=0xD;end;end;else if lH==0x03 then do k=y(J(k,0X5),"..",function(B3)if d(B3,PH)==0X48 then P=u(J(B3,0X00001,0X1));do return"";end;else local pF=(A(u(B3,0X10)));do if not(P)then return pF;else local vP=(nil);do for De=0,0x2 do if not(De<=0)then do if De~=1 then do return vP;end;else P=nil;end;end;else vP=U(pF,P);continue;end;end;end;end;end;end;end);end;do lH=0X0e;end;continue;else do r=TH.wrap;end;lH=0X0008;continue;end;end;end;end;end;end;do lH=0X0;end;local B,L,JH,z=nil,nil,nil,(nil);while lH~=4 do if not(lH<=0X1)then if lH==0X2 then L=2147483648;lH=1;else z=2^52;lH=0X004;continue;end;else do if lH~=0 then JH={};lH=3;else do B=function()local bQ=(d(k,T,T));T=T+MH;do return bQ;end;end;end;lH=2;end;end;end;end;local D,q=L-1,(nil);for SM=0X000,1 do if SM==0X0 then q=function()local lh=(1);local ah,Ch=nil,nil;repeat do if not(lh<=0x0)then if lh~=1 then do T=Ch;end;do lh=0;end;else ah,Ch=s('\060\0734',k,T);do lh=0X02;end;end;else return ah;end;end;until false;end;else do local yp=nil;for zY=0,1 do if zY~=0 then for Ir=0X01,31 do local Or=0x00001;do while true do if Or==0x0 then yp=yp*0X2;break;else(i)[Ir]=yp;Or=0;continue;end;end;end;end;continue;else yp=2;end;end;end;continue;end;end;local Q=t-0X1;do lH=0X2;end;local c,S,W,E=nil,nil,nil,nil;do repeat do if not(lH<=0x0001)then do if lH==0X002 then c=function()local f4,D4=s("<i8",k,T);T=D4;return f4;end;lH=0X003;else S=ZH;do lH=0X0;end;do continue;end;end;end;else if lH~=0x0 then E=function(oI,BI,zI)local wI,rI=0X1,nil;repeat if not(wI<=0X000)then do if wI~=1 then rI=rI-rI%1;wI=0;else rI=(oI/i[BI])%i[zI];do wI=2;end;end;end;else return rI;end;until(false);end;break;else W=BH;lH=0x01;continue;end;end;end;until false;end;local F=function()local PM,OM=s(qH,k,T);T=OM;return PM;end;local w,m,H=setfenv,{[8]='',[2]=0.29241641778245764,[0X002]='\059\117',[0X5]=0X3,[0x7]=false,[8]=817049955,[0X01]=-2135382117,[3]="4\k\036P",[8]='\114b\098\081\Z\089\g',[2]=0.14426038716549638,[0x8]=0x003,[0X8]=0X6,[0x6]=0.7342495256588071,[5]=0.512233601487882,[0X7]=XH,[0X6]=PH,[0x3]=0X5,[0x2]=0X0008,[5]=2,[2]=0X0,[1]=0x0005,[2]=LH,[0x8]=2},(assert);do lH=0;end;local p,O=nil,(nil);while'\117\046\089\{\y'do if lH~=0 then O=fH.lshift;break;else p=tH;lH=0X1;end;end;lH=0X0000;local N,GH=nil,nil;repeat if lH~=0X0 then GH=function()local iL=0x00000;local YL=(0X0);do while 0.5862392733685795 do local ED=d(k,T,T);T=T+0X01;YL=W(YL,O(l(ED,0X7F),iL));if l(ED,0X80)==0 then return YL;end;iL=iL+7;end;end;end;do break;end;else N={7,1,0X6};lH=1;end;until false;local HH=(B());local bH=B();local V=error;local uH=function(gu)local uu={d(k,T,T+3)};local yu=S(uu[1],bH);local Uu,ku=nil,nil;local qu=0;while qu<=0X1 do do if qu==0 then Uu=S(uu[0x2],bH);do qu=0X1;end;do continue;end;else do ku=S(uu[XH],bH);end;qu=2;continue;end;end;end;local Su=S(uu[0X0004],bH);do bH=(0X51*bH+gu)%256;end;T=T+0X4;return Su*16777216+ku*0x010000+Uu*0x100+yu;end;local h=setmetatable;lH=1;local eH,VH=nil,nil;while lH<0X2 do do if lH~=0x0 then eH=function(...)do return b("#",...),{...};end;end;lH=0X0;continue;else VH=0x1;lH=0X2;do continue;end;end;end;end;lH=0X001;local oH,nH,dH,AH=nil,nil,nil,nil;do while lH<=4 do if not(lH<=0x1)then if lH<=2 then nH=function()local TU=(nil);local mU=1;while(true)do if not(mU<=0X0)then if mU==0x1 then TU=GH();do mU=0X2;end;continue;else if TU>D then return TU-t;end;mU=0;continue;end;else do return TU;end;end;end;end;do lH=0;end;else if lH==3 then function AH()local tV=({});local RV=({});local TV,OV,EV,VV={{},{},zH,zH,nil,{},nil,nil,nil},0X03,nil,(nil);while OV<=3 do do if OV<=1 then if OV==0X00 then(TV)[18]=B();do OV=1;end;else TV[QH]=q();OV=4;end;else do if OV~=2 then EV=1;OV=0x0002;else VV={};OV=0X0;end;end;end;end;end;OV=1;local WV,zV,SV,NV,UV,gV=nil,nil,nil,nil,nil,(nil);repeat if OV<=0X6 then if OV<=2 then if OV<=0x000 then do(TV)[0x00009]=GH();end;do OV=9;end;else if OV==0X01 then WV=q()-0X91DE;OV=0X4;else UV=B();do OV=0X8;end;continue;end;end;else if not(OV<=4)then if OV~=0x5 then do TV[0X7]=E(SV,2,0X00001)~=0;end;OV=13;else SV=B();OV=0XA;end;else if OV==3 then do for Ow=0x01,NV do local vw=(0x0002);local Cw,Xw,fw=nil,nil,nil;do repeat if not(vw<=0X3)then if vw<=0X5 then if vw==4 then RV[Ow-1]=EV;vw=0X6;continue;else if not(gV)then else local Ok=0x1;while(true)do if Ok~=0X0 then(vH)[VH]=fw;Ok=0;else VH=VH+1;break;end;end;end;vw=0X00008;end;else if vw~=6 then do fw={Xw,{}};end;vw=0;continue;else if Cw==0XD0 then Xw=iH;elseif Cw==239 then Xw=EH;elseif Cw==cH then Xw=F();elseif Cw==249 then do Xw=J(oH(UV),6);end;elseif Cw==0X4 then do Xw=c();end;elseif Cw==61 then Xw=q();elseif Cw==180 then Xw=J(oH(UV),B());elseif Cw==0X00006E then do Xw=J(oH(UV),FH);end;elseif Cw==0X40 then Xw=J(oH(UV),FH);elseif Cw~=0X7a then else Xw=J(oH(UV),B());end;vw=0x7;continue;end;end;else do if vw<=0x1 then if vw~=0 then do EV=EV+1;end;do vw=5;end;continue;else VV[EV]=fw;vw=0X1;end;else if vw==2 then Cw=B();vw=0X3;else Xw=nil;vw=0x4;continue;end;end;end;end;until vw>=0x8;end;end;end;OV=7;continue;else zV=TV[2];OV=0X00B;do continue;end;end;end;end;else if OV<=10 then do if OV<=0X8 then if OV==0X7 then TV[SH]=B();OV=0x0;continue;else do gV=B()~=0;end;OV=3;continue;end;else if OV~=0X009 then(TV)[0x04]=E(SV,0x1,0X01)~=0X0;do OV=0X6;end;continue;else do(TV)[18]=q();end;do OV=0X000C;end;continue;end;end;end;else if not(OV<=12)then do if OV==0Xd then NV=q()-0X00015C6A;OV=2;continue;else do(TV)[0X0005]=GH();end;OV=15;end;end;else if OV~=0X000B then do TV[14]=q();end;do OV=14;end;else for ue=1,WV do zV[ue]={[0x05]=0.41405892443146286,[YH]=-1437530860,[7]=nH(),[0X00002]=true,[1]=DH,[6]=0.7400740383159058,[5]=B(),[0x2]=B(),[0x3]=B(),[0X6]=nH(),[1]=nH(),[0X4]=GH()};end;OV=5;do continue;end;end;end;end;end;until OV==15;TV[19]=B();for aI=0,0X5 do if not(aI<=2)then if not(aI<=3)then if aI==4 then TV[0X12]=B();do continue;end;else(TV)[0XC]=q();do continue;end;end;else for eB=0X00001,WV do local xB=TV[2][eB];for L4,H4 in ipairs(N)do local E4,t4,e4=0X2,nil,nil;while E4<3 do do if E4<=0 then if e4==0x1 then local Vr,Cr,Pr=1,nil,nil;while(true)do if not(Vr<=0)then do if Vr~=0X0001 then if not(Pr)then else(xB)[t4]=Pr[1];local Kh=Pr[2];(Kh)[#Kh+1]={xB,t4};end;break;else Cr=RV[xB[H4]];Vr=0;end;end;else do Pr=VV[Cr];end;do Vr=0x0002;end;continue;end;end;elseif e4~=12 then else(xB)[H4]=eB+xB[H4]+0x1;end;E4=0x3;continue;else do if E4~=0X1 then t4=m[H4];E4=1;else e4=xB[t4];E4=0X0;end;end;end;end;end;end;end;continue;end;else if aI<=0 then do TV[0X00003]=tV;end;else do if aI~=0X0001 then TV[8]=GH();else do for j5=1,GH()do(tV)[j5]={B(),GH()};end;end;continue;end;end;end;end;end;do OV=2;end;local pV,dV=nil,(nil);repeat if OV<=0X0 then dV=q()-0X0201e;OV=0X00003;else if OV~=1 then pV=q();do OV=1;end;else do for q9=0X1,pV do local s9,O9,j9=nil,nil,(nil);local k9=(0X02);repeat do if not(k9<=0X1)then do if k9==2 then s9=q();k9=3;continue;else O9=q();k9=0X1;end;end;else if k9==0X0000 then for sM=s9,O9 do do(TV[1])[sM]=j9;end;end;do break;end;else j9=q();do k9=0X0;end;continue;end;end;end;until(false);end;end;OV=0x00;do continue;end;end;end;until OV>0X2;do OV=0;end;local LV=(nil);while OV~=0X02 do if OV~=0 then for DA=0X0000,dV-0X00001 do LV[DA]=AH();end;OV=2;do continue;end;else LV=TV[0X6];do OV=1;end;end;end;(TV)[0X0000E]=B();return TV;end;lH=0X5;continue;else do lH=2;end;end;end;else do if lH==0x00 then function dH(Xm,bm,Qm)local Zm=(Xm[0X6]);local km=Xm[0X0005];local Sm=Xm[2];local Im=Xm[0x00009];local Dm,Lm,Um=Xm[1],Xm[0x04],(Xm[0X7]);local Cm=h({},{__mode="v"});local xm=(Xm[8]);local Km=nil;if not(xm>=93)then if xm<0x02e then do if xm>=0X00017 then if xm<0X22 then if xm<0X1C then if xm<0X19 then if xm==24 then do Km=function(...)local E4,T4,Z4=1,0,{};local z4=(K());local Y4={[1]=Xm,[2]=Z4};local a4,R4=eH(...);a4=a4-1;for H4=0x00000,a4 do if km>H4 then(Z4)[H4]=R4[H4+0X01];else do break;end;end;end;local S4=(z4==g and Qm or z4);do if not Lm then R4=nil;elseif Um then Z4[km]={n=a4>=km and a4-km+1 or 0X0,f(R4,km+1,a4+0x1)};end;end;if S4~=z4 then w(Km,S4);end;local e4,D4,f4,h4=o(function()while true do local XU=Sm[E4];local iU=(XU[0X4]);E4=E4+1;if not(iU>=26)then if not(iU>=0XD)then if iU>=0X6 then if iU<9 then do if iU>=7 then do if iU~=8 then do(Z4)[XU[7]]=XU[0x002];end;else(Z4)[1]=S4[XU[0X2]];E4=E4+0X001;do T4=0X1;end;do Z4[T4]=Z4[T4]();end;E4=E4+1;E4=E4+0X1;do XU=Sm[E4];end;local zX=0X2;do E4=E4+1;end;Z4[0x2]=S4[XU[0X00002]];XU=Sm[E4];E4=E4+1;local DX=(nil);Z4[0X00003]=XU[0x2];E4=E4+1;local kX=bm[1];Z4[zX]=Z4[zX](Z4[zX+1]);T4=zX;E4=E4+0X1;E4=E4+1;XU=Sm[E4];E4=E4+0X00001;do Z4[0x00002]=Z4[0x0002][XU[0X5]];end;E4=E4+0X1;(Z4)[3]=kX[1][kX[2]];E4=E4+1;E4=E4+1;XU=Sm[E4];E4=E4+0X01;Z4[3]=Z4[3][XU[5]];do E4=E4+0X0001;end;do E4=E4+1;end;E4=E4+0X1;(Z4)[0X04]=Z4[0];E4=E4+0X0001;kX=bm[0];(Z4)[5]=kX[0x1][kX[0x2]];do XU=Sm[E4];end;E4=E4+1;local VX=(Zm[XU[6]]);local jX=(VX[3]);local gX=(#jX);if not(gX>0)then else DX={};for Ea=1,gX do local Ka=jX[Ea];if Ka[1]~=0 then(DX)[Ea-1]=bm[Ka[0X2]];else do DX[Ea-1]={Z4,Ka[0X002]};end;end;end;(M)(Cm,DX);end;do Z4[0X6]=dH(VX,DX,S4);end;do E4=E4+1;end;(Z4)[0X007]={};XU=Sm[E4];E4=E4+1;VX=Zm[XU[0X6]];DX=nil;jX=VX[0x03];gX=#jX;do if gX>0X0 then DX={};for aw=0X00001,gX do local rw=(jX[aw]);if rw[1]==0X0 then DX[aw-1]={Z4,rw[0X0002]};else DX[aw-0X1]=bm[rw[2]];end;end;(M)(Cm,DX);end;end;Z4[0x8]=dH(VX,DX,S4);XU=Sm[E4];E4=E4+1;do Z4[7][XU[2]]=Z4[8];end;E4=E4+0X001;zX=0X3;T4=zX+0x0005-1;Z4[zX](f(Z4,zX+1,T4));T4=zX-0X1;E4=E4+0X1;E4=E4+0x1;E4=E4+0x1;kX=bm[0x00000];Z4[3]=kX[0x1][kX[2]];do XU=Sm[E4];end;do E4=E4+0X001;end;zX=3;local FX=(Z4[0x3]);Z4[zX+1]=FX;do(Z4)[zX]=FX[XU[0x05]];end;E4=E4+1;do zX=0x3;end;Z4[zX](Z4[zX+1]);T4=zX-0x00001;do E4=E4+1;end;repeat local BN,rN=Cm,Z4;if#BN>0X00 then local uD={};for sA,ZA in I,BN do for WL,VL in I,ZA do if VL[1]==rN and VL[0X2]>=1 then local fu=(VL[2]);if not uD[fu]then do uD[fu]={rN[fu]};end;end;VL[0X1]=uD[fu];(VL)[2]=0X1;end;end;end;end;until true;XU=Sm[E4];do E4=E4+1;end;E4=XU[0X6];end;end;else do Z4[0]=S4[XU[2]];end;E4=E4+1;do E4=E4+1;end;local k2=0;XU=Sm[E4];E4=E4+1;(Z4)[1]=XU[2];E4=E4+1;do Z4[k2]=Z4[k2](Z4[k2+0x1]);end;T4=k2;do XU=Sm[E4];end;E4=E4+0x001;do Z4[0]=Z4[0X0000][XU[0x005]];end;XU=Sm[E4];E4=E4+1;if not(not Z4[0X0000])then else do E4=XU[6];end;end;end;end;else if not(iU<11)then if iU==0X00c then(Z4)[0X00]=S4[XU[0X02]];E4=E4+0X01;local Le=0;do E4=E4+0X00001;end;XU=Sm[E4];E4=E4+0X00001;(Z4)[1]=XU[2];E4=E4+1;do(Z4)[Le]=Z4[Le](Z4[Le+1]);end;do T4=Le;end;XU=Sm[E4];do E4=E4+0X1;end;(Z4)[0]=Z4[0x000][XU[5]];XU=Sm[E4];do E4=E4+1;end;do if Z4[0]then E4=XU[0X6];end;end;else if not(not Z4[XU[7]])then else E4=XU[0X00006];end;end;else if iU~=0Xa then do(Z4)[XU[0X007]]=-Z4[XU[0X6]];end;else local hD=bm[0X1];(Z4)[1]=hD[1][hD[2]];XU=Sm[E4];do E4=E4+1;end;do(Z4)[1]=Z4[1][XU[0x5]];end;do E4=E4+1;end;do(Z4)[0X02]=Z4[0];end;E4=E4+1;hD=bm[0X0];(Z4)[3]=hD[0x001][hD[0x2]];E4=E4+1;do E4=E4+0X01;end;E4=E4+1;local bD=(0X1);Z4[4]=nil;E4=E4+0X1;do(Z4)[0x5]={};end;XU=Sm[E4];E4=E4+0X1;local oD=(Zm[XU[0X0006]]);local gD=(oD[3]);local JD=nil;local eD=#gD;do if not(eD>0)then else JD={};for zp=1,eD do local Np=gD[zp];if Np[1]==0 then(JD)[zp-1]={Z4,Np[0x2]};else(JD)[zp-1]=bm[Np[0X2]];end;end;M(Cm,JD);end;end;Z4[6]=dH(oD,JD,S4);do XU=Sm[E4];end;E4=E4+0x1;Z4[5][XU[0x2]]=Z4[6];E4=E4+1;do T4=bD+0X00005-1;end;Z4[bD](f(Z4,bD+0X1,T4));do T4=bD-0X1;end;E4=E4+0X001;hD=bm[0];(Z4)[1]=hD[0X0001][hD[0X2]];XU=Sm[E4];E4=E4+0X01;bD=1;local mD=(Z4[1]);Z4[bD+0X001]=mD;do Z4[bD]=mD[XU[5]];end;E4=E4+0X00001;bD=1;(Z4[bD])(Z4[bD+0X0001]);do T4=bD-1;end;E4=E4+1;E4=E4+0X001;XU=Sm[E4];E4=E4+0X01;E4=XU[6];end;end;end;else if iU<0X3 then if not(iU>=1)then local Du=XU[7];local nu=XU[1];local Ju=XU[0X06];if Ju~=0X0 then T4=Du+Ju-1;end;local wu,bu=nil,nil;do if Ju==0x1 then wu,bu=eH(Z4[Du]());else do wu,bu=eH(Z4[Du](f(Z4,Du+1,T4)));end;end;end;if nu~=0x1 then if nu~=0 then wu=Du+nu-2;do T4=wu+0X1;end;else wu=wu+Du-1;do T4=wu;end;end;local KS=0;for A9=Du,wu do KS=KS+1;(Z4)[A9]=bu[KS];end;else do T4=Du-0X1;end;end;else if iU==2 then Z4[0X00000]=S4[XU[2]];XU=Sm[E4];E4=E4+1;do(Z4)[0X0]=Z4[0x0][XU[5]];end;E4=E4+1;E4=E4+1;do XU=Sm[E4];end;E4=E4+1;if not Z4[0]then E4=XU[0X6];end;else Z4[0]=S4[XU[2]];E4=E4+0X00001;do E4=E4+0X1;end;do XU=Sm[E4];end;E4=E4+1;(Z4)[1]=XU[0X2];local m_=0;do E4=E4+1;end;(Z4)[m_]=Z4[m_](Z4[m_+1]);do T4=m_;end;E4=E4+0X1;do E4=E4+1;end;XU=Sm[E4];E4=E4+1;(Z4)[0x0]=Z4[0X00][XU[5]];E4=E4+1;E4=E4+1;XU=Sm[E4];E4=E4+1;if Z4[0]then E4=XU[6];end;end;end;else if iU>=4 then if iU~=5 then Z4[XU[7]]=#Z4[XU[6]];else do(Z4)[XU[7]]=Z4[XU[6]]==Z4[XU[0X1]];end;end;else S4[XU[0X2]]=Z4[XU[0X7]];end;end;end;else if iU>=0x13 then if not(iU<22)then do if iU<24 then if iU~=0X000017 then(Z4)[0X00000]=S4[XU[0x002]];XU=Sm[E4];E4=E4+1;Z4[1]=XU[2];do XU=Sm[E4];end;E4=E4+1;local wc=0;(Z4)[0X2]=XU[2];E4=E4+1;(Z4)[wc]=Z4[wc](Z4[wc+0X1],Z4[wc+2]);do T4=wc;end;E4=E4+0X1;E4=E4+1;XU=Sm[E4];E4=E4+0X1;do if not(Z4[0])then else do E4=XU[0x006];end;end;end;else(Z4)[0x0]=S4[XU[2]];XU=Sm[E4];do E4=E4+1;end;(Z4)[0]=Z4[0X0][XU[0x5]];E4=E4+1;do E4=E4+0X1;end;XU=Sm[E4];E4=E4+1;do if not(not Z4[0X0])then else E4=XU[6];end;end;end;else if iU~=25 then(Z4)[XU[0X7]]=true;else(Z4)[0]=S4[XU[0X2]];E4=E4+0x0001;E4=E4+0x1;XU=Sm[E4];E4=E4+1;if not(Z4[0x0])then else E4=XU[6];end;end;end;end;else do if not(iU>=0x000014)then Z4[0X0]=S4[XU[0X00002]];XU=Sm[E4];E4=E4+1;do Z4[0X000]=Z4[0X0][XU[5]];end;do E4=E4+0X1;end;E4=E4+1;do XU=Sm[E4];end;E4=E4+0X0001;do if not(not Z4[0])then else do E4=XU[0X6];end;end;end;else do if iU==21 then do(Z4)[0X0]=S4[XU[2]];end;do XU=Sm[E4];end;E4=E4+0x001;Z4[0x1]=XU[0x02];E4=E4+0x1;local gl=0X00;(Z4[gl])(Z4[gl+1]);T4=gl-1;XU=Sm[E4];E4=E4+0x0001;Z4[0x00]=S4[XU[0X00002]];E4=E4+1;E4=E4+1;XU=Sm[E4];E4=E4+1;do(Z4)[0x0]=Z4[0][XU[5]];end;XU=Sm[E4];E4=E4+0X01;(Z4)[0x0]=Z4[0][XU[5]];E4=E4+1;E4=E4+0X0001;XU=Sm[E4];E4=E4+1;(Z4)[0]=Z4[0][XU[5]];E4=E4+1;E4=E4+0X1;XU=Sm[E4];do E4=E4+1;end;do if not(not(XU[0x2]<=Z4[0]))then else E4=XU[7];end;end;else do if not(Z4[XU[7]])then else do E4=XU[6];end;end;end;end;end;end;end;end;else do if iU<16 then if iU<0X000e then(Z4)[0]=S4[XU[0X2]];do E4=E4+0X00001;end;E4=E4+1;XU=Sm[E4];E4=E4+0X1;do Z4[0]=Z4[0X00000][XU[0X5]];end;XU=Sm[E4];E4=E4+1;if not(Z4[0X0])then else do E4=XU[0X6];end;end;else if iU==0Xf then Z4[0]=S4[XU[0X00002]];E4=E4+0X1;E4=E4+1;E4=E4+0x001;do T4=0x00000;end;(Z4)[T4]=Z4[T4]();E4=E4+1;E4=E4+1;do XU=Sm[E4];end;do E4=E4+1;end;do if not(Z4[0X0])then else E4=XU[6];end;end;else if not(Z4[XU[6]]<Z4[XU[1]])then else E4=XU[0X7];end;end;end;else if iU>=0x11 then if iU==0X0012 then do(Z4)[0]=S4[XU[2]];end;E4=E4+0x1;E4=E4+1;local J3=0;XU=Sm[E4];E4=E4+1;Z4[1]=XU[2];E4=E4+1;(Z4[J3])(Z4[J3+1]);do T4=J3-1;end;do E4=E4+0X00001;end;E4=E4+0X1;XU=Sm[E4];E4=E4+1;E4=XU[0x6];else do Z4[XU[7]]=Z4[XU[6]][XU[0X5]];end;end;else do Z4[2]=S4[XU[0X2]];end;E4=E4+0X00001;T4=2;Z4[T4]();T4=T4-1;do E4=E4+0x00001;end;E4=E4+0X1;do XU=Sm[E4];end;do E4=E4+0X1;end;do E4=XU[0X6];end;end;end;end;end;end;else if not(iU<0X27)then do if iU>=46 then do if not(iU>=0X31)then if not(iU<47)then if iU~=48 then Z4[0X0]=S4[XU[2]];E4=E4+1;do E4=E4+0X00001;end;XU=Sm[E4];do E4=E4+0X1;end;(Z4)[0X0000]=Z4[0x000][XU[5]];do E4=E4+0X1;end;E4=E4+0X1;XU=Sm[E4];E4=E4+0X1;if Z4[0X0]then do E4=XU[0X6];end;end;else(Z4)[6]=Z4[4][XU[0X05]];XU=Sm[E4];E4=E4+0X00001;do(Z4)[7]=Z4[1][XU[5]];end;do E4=E4+0X1;end;do E4=E4+0X1;end;XU=Sm[E4];E4=E4+0X00001;do if not(Z4[6]<Z4[0X0007])then do E4=XU[0x00007];end;end;end;end;else Z4[XU[0X07]]=S4[XU[0X2]];end;else if not(iU>=0X33)then if iU==0X000032 then do Z4[0X000]=S4[XU[2]];end;E4=E4+0x1;E4=E4+1;XU=Sm[E4];do E4=E4+1;end;(Z4)[0X00]=Z4[0X0][XU[0x00005]];do XU=Sm[E4];end;do E4=E4+1;end;if not(Z4[0])then else E4=XU[0X006];end;else Z4[0X000]=S4[XU[0x00002]];E4=E4+1;local I2=0X000;E4=E4+0x1;do XU=Sm[E4];end;E4=E4+1;(Z4)[0x001]=XU[2];E4=E4+0X1;Z4[I2]=Z4[I2](Z4[I2+0X0001]);T4=I2;local H2=bm[0X1];E4=E4+0x0001;E4=E4+1;E4=E4+0X1;Z4[0X1]=H2[0X0001][H2[0X2]];do XU=Sm[E4];end;E4=E4+0X1;(Z4)[1]=Z4[0X1][XU[0X5]];E4=E4+1;E4=E4+0X001;E4=E4+0X1;Z4[2]=Z4[0];E4=E4+1;I2=0X1;do Z4[I2]=Z4[I2](Z4[I2+0x0001]);end;T4=I2;do E4=E4+1;end;E4=E4+0x1;XU=Sm[E4];E4=E4+1;do if not Z4[0X001]then E4=XU[0X6];end;end;end;else if iU==0X34 then for D2=XU[7],XU[0X06]do Z4[D2]=nil;end;else(Z4)[1]=S4[XU[0X0002]];E4=E4+1;local gO=(1);E4=E4+1;XU=Sm[E4];E4=E4+0x1;Z4[2]=XU[0X2];do E4=E4+1;end;Z4[gO](Z4[gO+1]);T4=gO-1;do XU=Sm[E4];end;E4=E4+1;E4=XU[0x0006];end;end;end;end;else do if iU<42 then if not(iU>=0X28)then Z4[0X0]=S4[XU[0X02]];do E4=E4+1;end;E4=E4+0x01;XU=Sm[E4];E4=E4+0X00001;Z4[0X00001]=XU[2];local m2=(0);E4=E4+0X1;do(Z4)[m2]=Z4[m2](Z4[m2+1]);end;T4=m2;XU=Sm[E4];E4=E4+1;(Z4)[0X00]=Z4[0X0][XU[5]];do E4=E4+0x1;end;E4=E4+0x00001;XU=Sm[E4];E4=E4+1;if not(not Z4[0])then else do E4=XU[6];end;end;else if iU~=41 then(Z4)[0X0]=S4[XU[0x2]];do XU=Sm[E4];end;E4=E4+0X1;do Z4[0]=Z4[0X0000][XU[5]];end;E4=E4+0X1;E4=E4+1;XU=Sm[E4];E4=E4+1;do Z4[1]=XU[2];end;local HJ=0X0;E4=E4+1;do Z4[HJ]=Z4[HJ](Z4[HJ+1]);end;T4=HJ;XU=Sm[E4];E4=E4+0X1;if not Z4[0]then E4=XU[6];end;else repeat local PR,nR=Cm,(Z4);if#PR>0X0000 then local qr=({});do for Jc,qc in I,PR do for dp,up in I,qc do do if up[0X1]==nR and up[2]>=0 then local RX=(up[0x2]);if not qr[RX]then do(qr)[RX]={nR[RX]};end;end;do up[1]=qr[RX];end;up[2]=0X1;end;end;end;end;end;end;until true;return;end;end;else if iU>=0X2C then if iU==45 then Z4[0X5]=Z4[0X004];E4=E4+1;(Z4)[1]=Z4[0x005];XU=Sm[E4];E4=E4+1;do E4=XU[6];end;else local bW=Zm[XU[0x6]];local cW,VW=bW[3],(nil);local rW=(#cW);if not(rW>0)then else VW={};for lV=1,rW do local AV=cW[lV];if AV[1]==0 then(VW)[lV-1]={Z4,AV[0X2]};else(VW)[lV-1]=bm[AV[0X2]];end;end;(M)(Cm,VW);end;do Z4[XU[7]]=dH(bW,VW,S4);end;end;else if iU==0x00002b then Z4[2]=S4[XU[2]];do E4=E4+0x1;end;E4=E4+0x01;XU=Sm[E4];local wO=(2);E4=E4+0x0001;do(Z4)[3]=XU[2];end;XU=Sm[E4];do E4=E4+0X001;end;do(Z4)[4]=Z4[1][XU[0x00005]];end;E4=E4+1;Z4[wO](Z4[wO+1],Z4[wO+0X2]);T4=wO-1;XU=Sm[E4];E4=E4+1;do(Z4)[0X2]=S4[XU[2]];end;XU=Sm[E4];E4=E4+0x00001;do(Z4)[3]=XU[2];end;XU=Sm[E4];E4=E4+0X1;Z4[0x00004]=XU[0X2];E4=E4+0X1;do wO=0x00002;end;(Z4[wO])(Z4[wO+1],Z4[wO+2]);T4=wO-0X1;XU=Sm[E4];do E4=E4+1;end;do Z4[0X2]=S4[XU[0X2]];end;E4=E4+1;do E4=E4+1;end;XU=Sm[E4];E4=E4+1;(Z4)[0X3]=XU[2];XU=Sm[E4];E4=E4+0X00001;(Z4)[0x004]=XU[2];E4=E4+0x1;wO=0X2;Z4[wO](Z4[wO+0X1],Z4[wO+0X002]);T4=wO-0X1;do XU=Sm[E4];end;E4=E4+1;do Z4[0x0002]=S4[XU[2]];end;XU=Sm[E4];E4=E4+0X00001;(Z4)[0X00003]=XU[0X00002];XU=Sm[E4];E4=E4+0x1;do(Z4)[0X4]=XU[2];end;E4=E4+1;wO=2;Z4[wO](Z4[wO+1],Z4[wO+0x2]);do T4=wO-0X0001;end;E4=E4+1;E4=E4+1;XU=Sm[E4];E4=E4+1;E4=XU[0X6];else do if not(not(XU[2]<=Z4[XU[1]]))then else E4=XU[7];end;end;end;end;end;end;end;end;else do if not(iU<0x00020)then do if iU>=0X023 then do if iU>=0X25 then if iU==0X026 then E4=XU[0X6];else(Z4)[0]=S4[XU[0x2]];E4=E4+1;local H8=0X00;E4=E4+0X1;XU=Sm[E4];E4=E4+0X01;(Z4)[0x0001]=XU[0X00002];do E4=E4+1;end;(Z4[H8])(Z4[H8+0X1]);T4=H8-1;XU=Sm[E4];E4=E4+0X1;do E4=XU[6];end;end;else if iU~=36 then local nd=(bm[0x0]);Z4[0X0]=nd[0X1][nd[2]];local kd=(0x0);do XU=Sm[E4];end;E4=E4+1;local Id=Z4[0];(Z4)[kd+0X1]=Id;do Z4[kd]=Id[XU[0X5]];end;E4=E4+0X001;kd=0;(Z4)[kd]=Z4[kd](Z4[kd+0X001]);T4=kd;do E4=E4+0x1;end;E4=E4+0X1;XU=Sm[E4];do E4=E4+1;end;if not Z4[0X0]then E4=XU[0X6];end;else local qy=XU[0X7];local sy,Ly,Ky=Z4[qy]();if not(sy)then else do Z4[qy+1]=Ly;end;Z4[qy+2]=Ky;E4=XU[6];end;end;end;end;else if not(iU>=33)then do if Z4[XU[0X6]]==Z4[XU[0x1]]then E4=XU[7];end;end;else if iU==0X000022 then else(Z4)[XU[0x7]]={f({},1,XU[0x0006])};end;end;end;end;else do if iU<29 then if iU>=0X1B then if iU==0X01C then Z4[0X0]=S4[XU[2]];E4=E4+0X1;E4=E4+0X01;XU=Sm[E4];E4=E4+1;(Z4)[1]=XU[2];do XU=Sm[E4];end;E4=E4+0x1;local eB=(0);(Z4)[0x00002]=XU[0x2];E4=E4+0X001;do Z4[eB]=Z4[eB](Z4[eB+1],Z4[eB+0X2]);end;T4=eB;XU=Sm[E4];E4=E4+0X1;if not Z4[0]then do E4=XU[6];end;end;else(Z4)[0]=S4[XU[2]];do E4=E4+1;end;E4=E4+0x001;XU=Sm[E4];E4=E4+1;do Z4[0x1]=XU[2];end;E4=E4+0x1;local uI=(0);(Z4)[uI]=Z4[uI](Z4[uI+1]);T4=uI;E4=E4+1;E4=E4+1;E4=E4+1;Z4[0X1]={};XU=Sm[E4];E4=E4+0x001;do(Z4)[0X0002]=XU[0x02]/XU[0X5];end;XU=Sm[E4];E4=E4+1;Z4[1][XU[2]]=Z4[2];XU=Sm[E4];E4=E4+1;Z4[2]=S4[XU[0X02]];do E4=E4+1;end;E4=E4+0X1;local SI=(2);E4=E4+1;(Z4)[3]=Z4[0x0];do E4=E4+1;end;uI=0X2;local pI=(4);do if SI~=0 then T4=uI+SI-0X001;end;end;local YI,WI=nil,(nil);if SI==1 then YI,WI=eH(Z4[uI]());else do YI,WI=eH(Z4[uI](f(Z4,uI+0X0001,T4)));end;end;if pI~=0X1 then if pI~=0 then YI=uI+pI-2;do T4=YI+1;end;else do YI=YI+uI-0X1;end;T4=YI;end;local NP=0;for EN=uI,YI do NP=NP+0X0001;Z4[EN]=WI[NP];end;else T4=uI-1;end;XU=Sm[E4];E4=E4+1;uI=0X0002;local dI=(r(function(...)(C)();do for A0,K0 in...do C(true,A0,K0);end;end;end));dI(Z4[uI],Z4[uI+1],Z4[uI+0X00002]);T4=uI;(Z4)[uI]=dI;E4=XU[0X6];end;else(Z4)[0X0]=S4[XU[0X2]];do XU=Sm[E4];end;local GJ,CJ=bm[0x001],(0);E4=E4+1;(Z4)[0X1]=XU[2];E4=E4+0x001;do Z4[CJ]=Z4[CJ](Z4[CJ+1]);end;T4=CJ;E4=E4+1;(Z4)[0X0001]=GJ[1][GJ[2]];XU=Sm[E4];E4=E4+1;(Z4)[1]=Z4[0X001][XU[0X5]];do E4=E4+1;end;Z4[0X00002]=Z4[0];do E4=E4+0x1;end;do CJ=1;end;(Z4)[CJ]=Z4[CJ](Z4[CJ+1]);T4=CJ;do E4=E4+0X001;end;E4=E4+1;XU=Sm[E4];do E4=E4+1;end;do if not(not Z4[0X1])then else E4=XU[0x0006];end;end;end;else if not(iU<0X00001E)then if iU==31 then(Z4)[XU[0X0007]]=Z4[XU[0X0006]]/Z4[XU[0X0001]];else(Z4)[0]=S4[XU[0X002]];E4=E4+1;E4=E4+0x1;do XU=Sm[E4];end;E4=E4+1;(Z4)[0x0]=Z4[0][XU[0x5]];do XU=Sm[E4];end;E4=E4+1;do if not(Z4[0X0])then else E4=XU[6];end;end;end;else Z4[0X0]=S4[XU[0x02]];local OJ=0X0;E4=E4+0X1;E4=E4+1;XU=Sm[E4];E4=E4+1;(Z4)[0x00001]=XU[2];E4=E4+0x1;(Z4)[OJ]=Z4[OJ](Z4[OJ+0X1]);T4=OJ;XU=Sm[E4];E4=E4+0X1;(Z4)[0]=Z4[0X0000][XU[0x005]];XU=Sm[E4];do E4=E4+1;end;if Z4[0X0]then E4=XU[0X06];end;end;end;end;end;end;end;end;end;end);if e4 then if D4 then do if h4~=1 then return Z4[f4](f(Z4,f4+1,T4));else return Z4[f4]();end;end;elseif not(f4)then else do return f(Z4,f4,h4);end;end;else do if e(D4)~="string"then V(D4,0X0);else if p(D4,"a\116t\101\m\p\116\032\116\o\ \y\105\e\108\100\ \097\c\114os\s\032\me\116a\m\e\116\h\o\100\/C%-\099al\l\032b\111\117n\d\097r\121")then return coroutine.yield();end;if p(D4,'\^\.\045\:\%\d+:\032')then(V)("\Lu\114a\112\104\ S\cr\105\112\116\:"..(Dm[E4-0X00001]or"(internal)")..": "..v(D4),0X00);else(V)(D4,0);end;end;end;end;end;end;else Km=function(...)local GR=({});local YR=(0X00001);local JR=({[2]=GR,[1]=Xm});local NR=K();local uR,MR=eH(...);do uR=uR-1;end;do for oS=0X0,uR do if not(km>oS)then break;else GR[oS]=MR[oS+1];end;end;end;local SR,oR=0,(NR==g and Qm or NR);if not Lm then MR=nil;elseif not(Um)then else GR[km]={n=uR>=km and uR-km+1 or 0,f(MR,km+0X1,uR+0X1)};end;if oR~=NR then(w)(Km,oR);end;local rR,qR,WR,gR=o(function()do while true do local TM=Sm[YR];local jM=(TM[4]);YR=YR+0X00001;if not(jM>=13)then if jM>=0X0006 then if jM<0X00009 then if jM<7 then GR[3]={f({},0X1,0X1)};do YR=YR+0x01;end;local Lb=0X3;GR[0X004]=GR[0X000];YR=YR+0X0001;local cb,Hb=GR[Lb],((0X1-0X1)*0X32);for Ru=1,1 do do cb[Hb+Ru]=GR[Lb+Ru];end;end;YR=YR+1;GR[0X00002]=GR[3];do TM=Sm[YR];end;do YR=YR+0x00001;end;YR=TM[6];else if jM==0X8 then do GR[0X004]=oR[TM[0X2]];end;YR=YR+1;YR=YR+1;TM=Sm[YR];YR=YR+0x1;local GA=nil;(GR)[0X4]=GR[0X4][TM[5]];YR=YR+1;YR=YR+1;do YR=YR+1;end;GR[5]=GR[0X3];local tA=(0x004);TM=Sm[YR];YR=YR+0X1;local oA=Zm[TM[0x0006]];local QA=(oA[0X3]);local UA=(#QA);if UA>0 then do GA={};end;for T_=1,UA do local n_=QA[T_];if n_[1]==0 then(GA)[T_-0X1]={GR,n_[0X2]};else GA[T_-0X001]=bm[n_[0X2]];end;end;M(Cm,GA);end;(GR)[0X6]=dH(oA,GA,oR);do YR=YR+1;end;GR[tA](GR[tA+0X1],GR[tA+2]);SR=tA-0X0001;local gA=4;YR=YR+0x1;do YR=YR+1;end;YR=YR+1;(GR)[0X0004]=GR[0x3];YR=YR+1;do repeat local mD,CD=Cm,GR;if#mD>0 then local fX=({});do for IW,MW in I,mD do do for UY,LY in I,MW do do if LY[1]==CD and LY[2]>=0 then local o5=(LY[0x2]);if not(not fX[o5])then else fX[o5]={CD[o5]};end;LY[0X001]=fX[o5];LY[0X0002]=0X1;end;end;end;end;end;end;end;until true;end;return false,gA,gA;else do for kn=TM[7],TM[0X006]do(GR)[kn]=nil;end;end;end;end;else do if jM<0xB then if jM~=0XA then YR=TM[6];else(GR)[TM[7]]=oR[TM[2]];end;else if jM~=0X000C then GR[0X00009]=oR[TM[2]];YR=YR+1;YR=YR+0X01;do YR=YR+0X1;end;(GR)[10]=GR[0X8];YR=YR+1;local eb=(0X2);local fb,Hb=9,4;if eb~=0 then do SR=fb+eb-0X1;end;end;local cb,ab=nil,(nil);if eb==1 then do cb,ab=eH(GR[fb]());end;else do cb,ab=eH(GR[fb](f(GR,fb+0X1,SR)));end;end;if Hb==0X1 then SR=fb-0X0001;else do if Hb==0x0 then cb=cb+fb-1;SR=cb;else cb=fb+Hb-0x2;SR=cb+0X1;end;end;local pF=0;do for EA=fb,cb do pF=pF+1;(GR)[EA]=ab[pF];end;end;end;TM=Sm[YR];YR=YR+0X1;do fb=0X00009;end;local Zb=(r(function(...)C();for DI,pI in...do C(true,DI,pI);end;end));(Zb)(GR[fb],GR[fb+1],GR[fb+2]);SR=fb;GR[fb]=Zb;YR=TM[0X006];else if not(GR[TM[7]])then else YR=TM[0x00006];end;end;end;end;end;else if jM<0x3 then if not(jM<1)then if jM~=0X2 then(GR[0X0d])[TM[0X2]]=GR[0xE];local M1=nil;do TM=Sm[YR];end;YR=YR+1;do GR[0X0D][TM[0X02]]=GR[11];end;TM=Sm[YR];YR=YR+1;local N1=(Zm[TM[0X006]]);local n1=N1[3];local s1=(#n1);if not(s1>0x0)then else M1={};do for Xl=0x1,s1 do local al=(n1[Xl]);if al[1]~=0 then(M1)[Xl-1]=bm[al[2]];else M1[Xl-0X1]={GR,al[2]};end;end;end;M(Cm,M1);end;GR[0xE]=dH(N1,M1,oR);TM=Sm[YR];YR=YR+0X1;(GR[13])[TM[2]]=GR[0XE];TM=Sm[YR];YR=YR+1;GR[14]=oR[TM[2]];YR=YR+1;YR=YR+0X1;do TM=Sm[YR];end;YR=YR+0X00001;if not(not GR[14])then else do YR=TM[6];end;end;else do if not(not(GR[TM[0X0006]]<=GR[TM[0X1]]))then else YR=TM[0X7];end;end;end;else do(GR)[0Xe]=oR[TM[0X00002]];end;local IY=(0XE);TM=Sm[YR];do YR=YR+1;end;do GR[0XF]=GR[0X7][TM[5]];end;YR=YR+0X1;YR=YR+1;do TM=Sm[YR];end;YR=YR+0X1;GR[15]=GR[15][TM[0X5]];YR=YR+1;do(GR)[IY]=GR[IY](GR[IY+0X00001]);end;SR=IY;TM=Sm[YR];YR=YR+1;YR=TM[6];end;else if not(jM<4)then if jM==0x5 then local D_=(TM[0x0007]);local O_,f_=GR[D_],(TM[1]-0x1)*50;for Gb=1,TM[6]do(O_)[f_+Gb]=GR[D_+Gb];end;else do(GR)[TM[0X7]]={f({},0X1,TM[0X6])};end;end;else local Wd,Ud=Zm[TM[0X6]],nil;local zd=(Wd[0X3]);local Ed=#zd;do if Ed>0X000 then do Ud={};end;do for NQ=1,Ed do local vQ=(zd[NQ]);if vQ[0X00001]==0 then Ud[NQ-0X0001]={GR,vQ[2]};else Ud[NQ-0X001]=bm[vQ[2]];end;end;end;(M)(Cm,Ud);end;end;(GR)[TM[7]]=dH(Wd,Ud,oR);end;end;end;else if jM>=0X00013 then if jM>=0X16 then if jM<24 then if jM~=0X17 then repeat local vF,BF=Cm,GR;if not(#vF>0X00000)then else local iu=({});for W4,C4 in I,vF do for x1,O1 in I,C4 do if not(O1[0X0001]==BF and O1[2]>=0X000)then else local Vq=(O1[2]);do if not iu[Vq]then iu[Vq]={BF[Vq]};end;end;do(O1)[0X0001]=iu[Vq];end;O1[2]=1;end;end;end;end;until true;return;else local s9=(TM[0X07]);local w9=(r(function(...)(C)();for W6,K6,D6,G6,m6,x6,X6,z6,h6,v6 in...do C(true,{W6,K6,D6,G6,m6,x6,X6,z6,h6,v6});end;end));w9(GR[s9],GR[s9+1],GR[s9+2]);SR=s9;(GR)[s9]=w9;YR=TM[0X6];end;else if jM~=0X19 then GR[14]=oR[TM[0X2]];TM=Sm[YR];YR=YR+0X1;(GR)[0XE]=GR[0X000E][TM[0x00005]];YR=YR+1;GR[14]=GR[11]==GR[0Xe];TM=Sm[YR];do YR=YR+0X0001;end;YR=TM[6];else do(GR)[3]={};end;TM=Sm[YR];do YR=YR+0X00001;end;do(GR)[4]=oR[TM[2]];end;local x3=2;YR=YR+0X1;(GR)[5]=GR[2];YR=YR+0x0001;local I3=0X4;local c3=(4);do if x3~=0X0 then do SR=c3+x3-1;end;end;end;local b3,e3=nil,nil;if x3==0X1 then b3,e3=eH(GR[c3]());else do b3,e3=eH(GR[c3](f(GR,c3+1,SR)));end;end;if I3==0X1 then SR=c3-0X1;else if I3~=0x0 then do b3=c3+I3-2;end;do SR=b3+1;end;else do b3=b3+c3-0X1;end;SR=b3;end;local n4=0X0;do for E7=c3,b3 do n4=n4+0x1;do GR[E7]=e3[n4];end;end;end;end;TM=Sm[YR];YR=YR+0x1;c3=4;local Y3=r(function(...)(C)();for OZ,eZ in...do(C)(true,OZ,eZ);end;end);Y3(GR[c3],GR[c3+0X001],GR[c3+2]);do SR=c3;end;do GR[c3]=Y3;end;YR=TM[0X6];end;end;else if not(jM>=0X14)then repeat local nt,St,Mt=Cm,GR,TM[0x7];if#nt>0X0 then local WG={};for bN,fN in I,nt do for cS,YS in I,fN do if not(YS[1]==St and YS[0X2]>=Mt)then else local pQ=YS[2];if not WG[pQ]then(WG)[pQ]={St[pQ]};end;do YS[1]=WG[pQ];end;do(YS)[2]=0X001;end;end;end;end;end;until true;else if jM~=21 then GR[2]=GR[0X0];TM=Sm[YR];YR=YR+0X00001;(GR)[3]=oR[TM[2]];YR=YR+1;local zy=3;(GR)[0X4]=GR[0];do YR=YR+1;end;GR[zy]=GR[zy](GR[zy+0X00001]);SR=zy;YR=YR+1;do YR=YR+0X1;end;TM=Sm[YR];YR=YR+1;do if GR[0x3]~=TM[0X5]then YR=TM[0X007];end;end;else end;end;end;else if not(jM>=16)then if jM<0xE then GR[0X7]=oR[TM[2]];YR=YR+1;GR[0X008]=GR[0X6];local ly=0X7;YR=YR+0X1;do GR[ly]=GR[ly](GR[ly+0x1]);end;SR=ly;TM=Sm[YR];YR=YR+0X01;GR[8]=oR[TM[2]];TM=Sm[YR];do YR=YR+0X1;end;(GR)[0X8]=GR[0x8][TM[5]];YR=YR+0X1;(GR)[8]=GR[8][GR[6]];YR=YR+1;YR=YR+0x1;TM=Sm[YR];YR=YR+1;if not(not GR[0X008])then else YR=TM[0X06];end;else do if jM~=0Xf then(GR)[TM[7]]=-GR[TM[6]];else local Am=(TM[7]);local om,rm,pm=GR[Am]();if not(om)then else(GR)[Am+0X001]=rm;do GR[Am+0x2]=pm;end;YR=TM[6];end;end;end;end;else if jM<17 then(GR)[12]=#GR[3];TM=Sm[YR];YR=YR+1;do(GR)[0Xc]=GR[0XC]+TM[5];end;YR=YR+0X1;(GR)[13]={};TM=Sm[YR];do YR=YR+0X00001;end;(GR[0Xd])[TM[2]]=GR[7];TM=Sm[YR];YR=YR+1;GR[0Xd][TM[0X002]]=GR[0X6];YR=YR+0x1;(GR)[14]=GR[7];do TM=Sm[YR];end;YR=YR+0X1;if not(not GR[0X0000e])then else YR=TM[0x006];end;else if jM~=0X012 then(GR)[TM[7]]=TM[2];else GR[13][TM[2]]=GR[14];do YR=YR+0X0001;end;(GR[0X003])[GR[12]]=GR[13];YR=YR+0X1;repeat local dN,xN=Cm,GR;if#dN>0X0 then local gc=({});for DN,rN in I,dN do for pK,aK in I,rN do if aK[0x1]==xN and aK[0X00002]>=9 then local Hm=aK[2];do if not(not gc[Hm])then else(gc)[Hm]={xN[Hm]};end;end;do aK[1]=gc[Hm];end;do(aK)[2]=0X1;end;end;end;end;end;until true;TM=Sm[YR];do YR=YR+1;end;do YR=TM[6];end;end;end;end;end;end;end;end;end);if rR then do if qR then if gR~=1 then do return GR[WR](f(GR,WR+0X1,SR));end;else return GR[WR]();end;elseif not(WR)then else return f(GR,WR,gR);end;end;else if e(qR)~="string"then(V)(qR,0X0);else if p(qR,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(qR,"\^.-\:\%\d\043\058\032"))then(V)(qR,0X0);else(V)("Luraph Script:"..(Dm[YR-1]or"(internal)")..":\ "..v(qR),0);end;end;end;end;end;else if not(xm>=26)then Km=function(...)local Rk=(0X00);local Yk=({});local hk=(K());local Dk=({[2]=Yk,[1]=Xm});local Fk,Ck=eH(...);Fk=Fk-1;local Mk=(hk==g and Qm or hk);for ge=0,Fk do if not(km>ge)then break;else do Yk[ge]=Ck[ge+1];end;end;end;if not Lm then Ck=nil;elseif Um then do(Yk)[km]={n=Fk>=km and Fk-km+1 or 0X0,f(Ck,km+1,Fk+1)};end;end;local xk=0X0001;if Mk==hk then else w(Km,Mk);end;local bk,gk,Ak,Wk=o(function()while true do local E2=(Sm[xk]);local n2=E2[4];xk=xk+1;do if not(n2>=16)then if n2>=0X8 then if not(n2<12)then if n2<14 then if n2~=0xd then(Yk)[E2[0X7]]=Yk[E2[0X0006]][E2[0X05]];else Yk[1]={};E2=Sm[xk];xk=xk+1;do Yk[0X2]=Mk[E2[0X2]];end;E2=Sm[xk];xk=xk+1;if not Yk[2]then do xk=E2[0X6];end;end;end;else do if n2~=15 then(Yk)[10]=Yk[0X00009][E2[0X00005]];do xk=xk+0X1;end;do xk=xk+0X0001;end;E2=Sm[xk];do xk=xk+0x01;end;if not Yk[0XA]then xk=E2[6];end;else(Yk)[10]=Yk[9][E2[0X5]];xk=xk+0x0001;do xk=xk+1;end;do E2=Sm[xk];end;xk=xk+1;do if not(not Yk[0x0000A])then else xk=E2[6];end;end;end;end;end;else if n2>=10 then do if n2==11 then(Yk)[E2[0x7]]=Yk[E2[0x6]]%Yk[E2[1]];else(Yk)[0X8]=Yk[0x002][Yk[0X7]];local R5=9;E2=Sm[xk];xk=xk+0X1;local M5=(Yk[8]);(Yk)[R5+0x1]=M5;Yk[R5]=M5[E2[0X00005]];E2=Sm[xk];xk=xk+0X00001;Yk[0X000b]=E2[0X2];xk=xk+0X1;do R5=0x9;end;(Yk)[R5]=Yk[R5](Yk[R5+1],Yk[R5+0X2]);Rk=R5;do E2=Sm[xk];end;xk=xk+0X1;do if not Yk[9]then xk=E2[6];end;end;end;end;else if n2~=9 then do Yk[E2[7]]=Mk[E2[0X02]];end;else Yk[E2[0X7]]=E2[2];end;end;end;else do if n2<4 then if n2>=2 then do if n2==3 then Yk[11]=Mk[E2[2]];do xk=xk+1;end;xk=xk+0x0001;E2=Sm[xk];xk=xk+0x1;(Yk)[12]=Yk[9][E2[0X5]];xk=xk+1;xk=xk+0X1;E2=Sm[xk];xk=xk+1;local TB=(11);(Yk)[0Xc]=Yk[12][E2[5]];xk=xk+1;(Yk)[TB]=Yk[TB](Yk[TB+0X01]);Rk=TB;E2=Sm[xk];xk=xk+1;(Yk)[12]=Yk[0]+E2[5];E2=Sm[xk];xk=xk+1;if not(Yk[0Xb]<Yk[12])then xk=E2[7];end;else do if Yk[E2[6]]<=Yk[E2[0X1]]then do xk=E2[7];end;end;end;end;end;else if n2==0X1 then repeat local mH,WH=Cm,Yk;do if#mH>0 then local k4=({});do for kA,YA in I,mH do for vS,fS in I,YA do do if fS[1]==WH and fS[0x2]>=0 then local Ll=(fS[2]);if not(not k4[Ll])then else(k4)[Ll]={WH[Ll]};end;(fS)[1]=k4[Ll];(fS)[2]=1;end;end;end;end;end;end;end;until true;local fz=(E2[7]);return false,fz,fz;else local CF=nil;local wF=Zm[E2[6]];local MF=wF[0X3];local xF=#MF;if not(xF>0)then else do CF={};end;do for UD=0x1,xF do local zD=(MF[UD]);if zD[0X01]==0X00 then(CF)[UD-0X1]={Yk,zD[2]};else(CF)[UD-1]=bm[zD[2]];end;end;end;(M)(Cm,CF);end;Yk[E2[7]]=dH(wF,CF,Mk);end;end;else if not(n2>=0x06)then if n2==0x05 then else do(Yk)[E2[7]]={f({},1,E2[0x0006])};end;end;else if n2~=0X07 then Yk[E2[0x7]]=not Yk[E2[0X06]];else local CB=(E2[7]);local EB,TB=Yk[CB]();if EB then xk=E2[6];(Yk)[CB+3]=TB;end;end;end;end;end;end;else if n2<0x000018 then if not(n2<0X14)then do if n2<22 then if n2==0x000015 then Yk[10]=Mk[E2[0X2]];local d9=(10);E2=Sm[xk];xk=xk+1;Yk[0X0000A]=Yk[0X000a][E2[5]];xk=xk+1;(Yk)[0XB]=Yk[0X1];E2=Sm[xk];xk=xk+0x1;do(Yk)[0x000C]=Yk[0x9][E2[0X00005]];end;xk=xk+0x00001;xk=xk+1;xk=xk+0x1;Yk[d9](Yk[d9+1],Yk[d9+0X0002]);Rk=d9-1;xk=xk+0X1;xk=xk+0X001;do E2=Sm[xk];end;xk=xk+0x0001;xk=E2[6];else do(Yk)[8]=Yk[3][Yk[0X7]];end;E2=Sm[xk];do xk=xk+1;end;Yk[0x09]=Mk[E2[2]];E2=Sm[xk];xk=xk+0X01;Yk[0X0009]=Yk[0X9][E2[5]];xk=xk+0X1;xk=xk+1;E2=Sm[xk];xk=xk+1;if Yk[0X0008]~=Yk[0x9]then else do xk=E2[7];end;end;end;else if n2~=23 then Yk[0X04]=E2[0X2];do xk=xk+1;end;do(Yk)[5]=#Yk[3];end;E2=Sm[xk];xk=xk+1;(Yk)[0X006]=E2[0X2];local UE=0X4;E2=Sm[xk];xk=xk+1;local mE,tE=Yk[UE+1],(Yk[UE+2]);local iE=Yk[UE];Yk[UE]=r(function()for y7=iE,mE,tE do(C)(true,y7);end;end);xk=E2[6];else if not(not(E2[2]<Yk[E2[0X001]]))then else xk=E2[7];end;end;end;end;else if not(n2>=18)then do if n2~=0x000011 then Yk[11]=Mk[E2[2]];do xk=xk+1;end;xk=xk+1;do E2=Sm[xk];end;local Kf=0x0b;do xk=xk+0X001;end;(Yk)[12]=Yk[0X00009][E2[5]];do E2=Sm[xk];end;xk=xk+0X1;(Yk)[12]=Yk[12][E2[5]];xk=xk+1;do Yk[Kf]=Yk[Kf](Yk[Kf+1]);end;Rk=Kf;E2=Sm[xk];xk=xk+0x1;Yk[12]=Yk[0x0]+E2[0x5];E2=Sm[xk];xk=xk+1;if not(Yk[11]<Yk[12])then do xk=E2[0X00007];end;end;else for W1=E2[7],E2[0X00006]do Yk[W1]=nil;end;end;end;else do if n2==0X00013 then(Yk)[E2[0X7]]=nil;else Yk[E2[7]]=j(Yk[E2[0X006]],Yk[E2[0X001]]);end;end;end;end;else if n2<0X1C then if n2<0X1a then if n2==25 then(Yk)[0X000a]=Mk[E2[2]];do E2=Sm[xk];end;xk=xk+0X1;Yk[10]=Yk[10][E2[5]];do xk=xk+1;end;local Dr=(10);Yk[0XB]=Yk[0x001];do E2=Sm[xk];end;xk=xk+0X1;Yk[0Xc]=Yk[0X009][E2[5]];xk=xk+1;(Yk[Dr])(Yk[Dr+0X1],Yk[Dr+2]);Rk=Dr-1;xk=xk+1;do xk=xk+1;end;E2=Sm[xk];xk=xk+1;do xk=E2[0x6];end;else Yk[E2[0x07]]=Yk[E2[0X6]]==Yk[E2[0X1]];end;else if n2~=27 then repeat local z1,Z1=Cm,(Yk);if#z1>0 then local Qq={};do for uK,NK in I,z1 do for PG,HG in I,NK do if HG[0X1]==Z1 and HG[0X00002]>=0 then local oj=(HG[0X002]);if not(not Qq[oj])then else(Qq)[oj]={Z1[oj]};end;(HG)[0x0001]=Qq[oj];HG[0X2]=1;end;end;end;end;end;until true;return;else local jg=E2[7];local Ig=r(function(...)C();for Cw,Uw,Rw,Jw,tw,cw,Dw,Yw,Lw,jw in...do(C)(true,{Cw,Uw,Rw,Jw,tw,cw,Dw,Yw,Lw,jw});end;end);Ig(Yk[jg],Yk[jg+1],Yk[jg+2]);Rk=jg;Yk[jg]=Ig;xk=E2[6];end;end;else if n2<0X1e then if n2==0x1d then(Yk)[E2[7]]=Yk[E2[6]];else do Yk[2]=Mk[E2[0X2]];end;xk=xk+1;local JN=2;xk=xk+1;E2=Sm[xk];do xk=xk+1;end;Yk[2]=Yk[0X2][E2[5]];E2=Sm[xk];do xk=xk+1;end;local bN=(Yk[2]);(Yk)[JN+1]=bN;Yk[JN]=bN[E2[0x5]];do xk=xk+0x0001;end;JN=0x2;Yk[JN]=Yk[JN](Yk[JN+1]);do Rk=JN;end;xk=xk+1;xk=xk+1;local CN=4;E2=Sm[xk];do xk=xk+1;end;do(Yk)[3]=Mk[E2[0X00002]];end;E2=Sm[xk];do xk=xk+0X1;end;(Yk)[3]=Yk[0x3][E2[0x5]];xk=xk+0X00001;do xk=xk+1;end;E2=Sm[xk];xk=xk+0X1;do JN=0X003;end;bN=Yk[0x00003];do Yk[JN+1]=bN;end;Yk[JN]=bN[E2[5]];do xk=xk+0X1;end;JN=3;Yk[JN]=Yk[JN](Yk[JN+0X1]);Rk=JN;xk=xk+1;xk=xk+0X1;E2=Sm[xk];xk=xk+0x1;Yk[0x04]=E2[0X02];xk=xk+0X0001;(Yk)[0X5]=#Yk[0X00002];E2=Sm[xk];xk=xk+1;Yk[6]=E2[2];E2=Sm[xk];xk=xk+1;do JN=Yk[CN];end;local qN,lN=Yk[CN+0X01],(Yk[CN+2]);Yk[CN]=r(function()for F3=JN,qN,lN do(C)(true,F3);end;end);xk=E2[0x6];end;else do if n2~=31 then do xk=E2[0X6];end;else local m8=(9);local J8=Yk[8];(Yk)[m8+0X0001]=J8;Yk[m8]=J8[E2[5]];do E2=Sm[xk];end;xk=xk+1;Yk[0xB]=E2[0X0002];xk=xk+0X1;m8=0X09;(Yk)[m8]=Yk[m8](Yk[m8+0X1],Yk[m8+0X00002]);Rk=m8;xk=xk+1;xk=xk+0X1;do E2=Sm[xk];end;do xk=xk+1;end;if not Yk[9]then xk=E2[0X6];end;end;end;end;end;end;end;end;end;end);do if not(bk)then if e(gk)=="\s\116ri\110g"then if not(p(gk,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(p(gk,'^\046\-:%\d\+\:\ '))then V(gk,0x0);else V("Luraph Script:"..(Dm[xk-0X00001]or"(in\116\ern\097\108)")..': '..v(gk),0);end;else V(gk,0X0);end;else do if gk then if Wk==1 then return Yk[Ak]();else return Yk[Ak](f(Yk,Ak+1,Rk));end;elseif not(Ak)then else return f(Yk,Ak,Wk);end;end;end;end;end;else if xm==0X1B then Km=function(...)local xd=(1);local qd=({});local rd=K();local Hd=0;local Td=({[2]=qd,[1]=Xm});local Ld=(rd==g and Qm or rd);local zd,Ud=eH(...);zd=zd-1;do for A9=0X0000,zd do if km>A9 then(qd)[A9]=Ud[A9+1];else break;end;end;end;do if not Lm then Ud=nil;elseif Um then(qd)[km]={n=zd>=km and zd-km+0x001 or 0X000,f(Ud,km+0X00001,zd+1)};end;end;if Ld~=rd then(w)(Km,Ld);end;local Gd,Wd,Cd,id=o(function()while true do local mH=(Sm[xd]);local aH=mH[4];do xd=xd+0X1;end;if aH<9 then if aH<0X04 then if aH>=0X02 then if aH==3 then(qd)[mH[0X7]]=S(qd[mH[0x006]],qd[mH[0x01]]);else local ut=mH[0x7];local Ht=((mH[1]-1)*0x000032);local kt=qd[ut];do for Nm=0X0001,mH[0x6]do kt[Ht+Nm]=qd[ut+Nm];end;end;end;else if aH~=1 then repeat local cM,PM=Cm,(qd);do if#cM>0x00000 then local PJ=({});for WH,OH in I,cM do for Ke,ye in I,OH do if not(ye[0X0001]==PM and ye[2]>=0)then else local af=ye[2];if not PJ[af]then do(PJ)[af]={PM[af]};end;end;ye[1]=PJ[af];do(ye)[0X002]=0X1;end;end;end;end;end;end;until true;do return;end;else qd[mH[0X7]]={f({},1,mH[0X6])};end;end;else do if not(aH<0X00006)then if not(aH>=0X7)then(qd)[10]=nil;do mH=Sm[xd];end;do xd=xd+1;end;do Ld[mH[0x02]]=qd[0X00a];end;xd=xd+0x01;qd[10]=false;mH=Sm[xd];xd=xd+1;(Ld)[mH[2]]=qd[0x0a];xd=xd+0X1;qd[0x00a]=false;mH=Sm[xd];xd=xd+1;Ld[mH[2]]=qd[10];do xd=xd+0X1;end;qd[10]=false;mH=Sm[xd];xd=xd+1;do Ld[mH[0X2]]=qd[0Xa];end;xd=xd+1;repeat local uO,MO=Cm,qd;if not(#uO>0X000)then else local LY={};for JD,GD in I,uO do for ur,Br in I,GD do do if not(Br[0x001]==MO and Br[2]>=0)then else local iG=(Br[2]);if not(not LY[iG])then else do(LY)[iG]={MO[iG]};end;end;(Br)[1]=LY[iG];do Br[0X2]=0X1;end;end;end;end;end;end;until true;return;else if aH==0X8 then(qd)[mH[7]]=qd[mH[0X6]];else do(qd)[mH[7]]=Ld[mH[0X0002]];end;end;end;else if aH==0X5 then do(qd)[10]=Ld[mH[2]];end;mH=Sm[xd];xd=xd+0x1;qd[11]=mH[0x2];do xd=xd+1;end;local wQ=(0Xa);do(qd)[0XC]=qd[0X9];end;xd=xd+1;(qd[wQ])(qd[wQ+1],qd[wQ+0X2]);Hd=wQ-0X1;xd=xd+1;xd=xd+1;mH=Sm[xd];do xd=xd+1;end;xd=mH[6];else xd=mH[0X6];end;end;end;end;else if aH>=13 then if not(aH<15)then if aH<16 then else if aH==0X11 then(qd)[0X6]=Ld[mH[2]];xd=xd+0x1;xd=xd+1;mH=Sm[xd];xd=xd+1;do(qd)[6]=qd[6][mH[5]];end;xd=xd+0X0001;xd=xd+0X01;mH=Sm[xd];xd=xd+1;do if not(not qd[0X6])then else xd=mH[0X6];end;end;else(qd)[6]=Ld[mH[2]];mH=Sm[xd];xd=xd+1;qd[6]=qd[6][mH[0X05]];xd=xd+1;do xd=xd+1;end;do xd=xd+1;end;do Hd=6;end;qd[Hd]();Hd=Hd-0X00001;do xd=xd+0X1;end;do xd=xd+0X1;end;mH=Sm[xd];xd=xd+0X1;do(qd)[0X0006]=Ld[mH[0X2]];end;do xd=xd+1;end;xd=xd+1;xd=xd+0X1;Hd=6;do(qd)[Hd]=qd[Hd]();end;mH=Sm[xd];xd=xd+0x1;do qd[7]=qd[0][mH[5]];end;local WW=0X3;xd=xd+0X001;do xd=xd+1;end;mH=Sm[xd];do xd=xd+0X1;end;do qd[0x8]=Ld[mH[0x2]];end;do mH=Sm[xd];end;local hW=(Zm[mH[0x6]]);local GW=(hW[0X3]);xd=xd+1;local XW=#GW;local AW,PW=0x0008,(nil);do if not(XW>0x00)then else do PW={};end;for G0=1,XW do local u0=GW[G0];if u0[0X1]~=0 then PW[G0-1]=bm[u0[2]];else(PW)[G0-1]={qd,u0[2]};end;end;(M)(Cm,PW);end;end;(qd)[0x9]=dH(hW,PW,Ld);xd=xd+0X0001;local nW=2;if nW~=0 then Hd=AW+nW-1;end;local NW,wW=nil,(nil);if nW~=0X1 then NW,wW=eH(qd[AW](f(qd,AW+1,Hd)));else NW,wW=eH(qd[AW]());end;if WW==1 then Hd=AW-0x1;else do if WW~=0 then NW=AW+WW-2;do Hd=NW+1;end;else NW=NW+AW-1;Hd=NW;end;end;local lM=0;do for SU=AW,NW do lM=lM+1;do(qd)[SU]=wW[lM];end;end;end;end;xd=xd+0x1;do xd=xd+0X001;end;mH=Sm[xd];xd=xd+1;do if qd[8]then xd=mH[6];end;end;end;end;else do if aH==14 then for lz=mH[0X0007],mH[0X06]do do(qd)[lz]=nil;end;end;else qd[mH[7]]=mH[0X02];end;end;end;else do if aH<0X00b then if aH~=10 then(qd)[mH[0X7]]={};else if qd[mH[0x7]]then xd=mH[6];end;end;else if aH~=0X0C then local Gu=Zm[mH[6]];local nu=(nil);local qu=(Gu[3]);local vu=#qu;if not(vu>0X0)then else do nu={};end;for NN=1,vu do local TN=(qu[NN]);if TN[1]==0X0 then nu[NN-0X1]={qd,TN[2]};else do nu[NN-1]=bm[TN[0X2]];end;end;end;M(Cm,nu);end;(qd)[mH[0X7]]=dH(Gu,nu,Ld);else(qd[mH[7]])[qd[mH[0X6]]]=qd[mH[0x01]];end;end;end;end;end;end;end);if not(Gd)then if e(Wd)=="string"then if not(p(Wd,'\097t\116\e\m\p\116\ \116o\032y\i\e\l\d \097\099\114\111s\s m\et\097\m\e\116\hod\/\C\037-\c\097\108\l\ b\oun\da\114y'))then else return coroutine.yield();end;if not(p(Wd,'\^\046-\058\%\100+\058\ '))then V(Wd,0);else(V)("Luraph Script:"..(Dm[xd-1]or"(internal)")..": "..v(Wd),0X00);end;else(V)(Wd,0);end;else if Wd then if id~=0X1 then do return qd[Cd](f(qd,Cd+0X0001,Hd));end;else do return qd[Cd]();end;end;elseif Cd then return f(qd,Cd,id);end;end;end;else Km=function(...)local nO,gO=1,({});local TO=(K());local SO,dO={[2]=gO,[1]=Xm},(0X0);local RO=(TO==g and Qm or TO);local CO,jO=eH(...);do CO=CO-1;end;for XG=0,CO do if not(km>XG)then do break;end;else(gO)[XG]=jO[XG+1];end;end;if not Lm then jO=nil;elseif not(Um)then else(gO)[km]={n=CO>=km and CO-km+0X1 or 0X0,f(jO,km+0X1,CO+1)};end;if RO~=TO then w(Km,RO);end;local xO,oO,eO,NO=o(function()while true do local FF=Sm[nO];local lF=FF[0X4];do nO=nO+1;end;if lF>=0X00e then if not(lF>=0x15)then if not(lF<17)then if lF<0x013 then if lF~=0x00012 then gO[0x002]=RO[FF[2]];FF=Sm[nO];nO=nO+1;do gO[0X3]=FF[2];end;local JL=0X2;nO=nO+0X1;gO[JL]=gO[JL](gO[JL+0X1]);dO=JL;nO=nO+0x1;gO[0X2]=not gO[0X2];FF=Sm[nO];nO=nO+0X1;do RO[FF[2]]=gO[0X2];end;FF=Sm[nO];nO=nO+0X1;do nO=FF[0X006];end;else(gO)[2]=RO[FF[2]];do nO=nO+1;end;local tk=2;nO=nO+1;FF=Sm[nO];do nO=nO+1;end;gO[0X3]=FF[0X02];FF=Sm[nO];nO=nO+1;gO[0X4]=FF[2];nO=nO+1;gO[tk]=gO[tk](gO[tk+0X001],gO[tk+0X2]);dO=tk;nO=nO+0X1;nO=nO+1;do FF=Sm[nO];end;nO=nO+0X1;do if not(gO[2])then else nO=FF[0X6];end;end;end;else if lF==20 then gO[2]=RO[FF[0X002]];FF=Sm[nO];nO=nO+1;gO[3]=FF[0X2];local VW=(0X2);do nO=nO+0x1;end;gO[VW]=gO[VW](gO[VW+1]);dO=VW;nO=nO+1;nO=nO+1;do FF=Sm[nO];end;do nO=nO+1;end;if not gO[2]then do nO=FF[6];end;end;else SO[FF[6]]=gO[FF[0X007]];end;end;else if not(lF<15)then do if lF==0X0010 then local Vl=Zm[FF[6]];local ql=nil;local jl=(Vl[3]);local yl=#jl;if yl>0 then do ql={};end;do for Ki=0x00001,yl do local Ti=jl[Ki];do if Ti[0X01]~=0x0000 then ql[Ki-1]=bm[Ti[2]];else(ql)[Ki-0X001]={gO,Ti[2]};end;end;end;end;(M)(Cm,ql);end;gO[FF[0X7]]=dH(Vl,ql,RO);else if gO[FF[0x06]]==FF[5]then else nO=FF[0X7];end;end;end;else gO[0]=RO[FF[0x002]];FF=Sm[nO];nO=nO+0X001;do(gO)[0X1]=RO[FF[0X2]];end;do FF=Sm[nO];end;nO=nO+0x0001;gO[2]=FF[2];do FF=Sm[nO];end;nO=nO+0X00001;gO[0X00003]=RO[FF[2]];nO=nO+0X00001;nO=nO+0X00001;FF=Sm[nO];local P7=(0X3);local V7=0X0000;do nO=nO+0X1;end;gO[3]=gO[3][FF[5]];nO=nO+1;do nO=nO+0X1;end;do nO=nO+0X0001;end;local K7=(4);do if K7==0X0 then else dO=V7+K7-1;end;end;local G7,C7=nil,(nil);do if K7==1 then G7,C7=eH(gO[V7]());else do G7,C7=eH(gO[V7](f(gO,V7+0X1,dO)));end;end;end;do if P7==1 then dO=V7-0X0001;else if P7~=0X00000 then G7=V7+P7-2;do dO=G7+0X01;end;else do G7=G7+V7-1;end;do dO=G7;end;end;local xX=0X00000;for Np=V7,G7 do xX=xX+1;gO[Np]=C7[xX];end;end;end;do nO=nO+0x00001;end;do nO=nO+0X001;end;FF=Sm[nO];nO=nO+0x1;if gO[0X1]~=FF[0X005]then else nO=FF[7];end;end;end;else do if lF>=0X18 then if lF<26 then if lF==0X19 then gO[0X2]=RO[FF[0X2]];do nO=nO+1;end;nO=nO+1;FF=Sm[nO];nO=nO+1;(gO[2])[FF[0X02]]=FF[5];do nO=nO+0X001;end;(gO)[0X2]=false;FF=Sm[nO];nO=nO+0X1;do RO[FF[0X2]]=gO[0X02];end;nO=nO+0X0001;repeat local NC,XC=Cm,gO;if#NC>0X0000 then local o_=({});for pJ,OJ in I,NC do for v1,V1 in I,OJ do if V1[0X001]==XC and V1[0X2]>=0X000 then local Zy=(V1[2]);if not o_[Zy]then(o_)[Zy]={XC[Zy]};end;(V1)[1]=o_[Zy];(V1)[0X2]=0X1;end;end;end;end;until true;return;else gO[2]=RO[FF[2]];FF=Sm[nO];nO=nO+1;gO[2][FF[0X2]]=FF[5];nO=nO+1;repeat local mE,JE=Cm,gO;do if#mE>0x0 then local pL=({});for JO,LO in I,mE do for CD,kD in I,LO do if kD[0X1]==JE and kD[0X2]>=0 then local Vm=(kD[0X2]);if not pL[Vm]then(pL)[Vm]={JE[Vm]};end;kD[0x1]=pL[Vm];(kD)[0X2]=1;end;end;end;end;end;until true;do return;end;end;else do if lF==27 then gO[FF[7]]={f({},0X01,FF[0X0006])};else gO[0X2]=true;FF=Sm[nO];do nO=nO+1;end;do RO[FF[0X2]]=gO[2];end;FF=Sm[nO];nO=nO+1;nO=FF[6];end;end;end;else if lF<0X16 then(gO)[0x00002]=RO[FF[0X2]];FF=Sm[nO];nO=nO+1;gO[0x03]=FF[0X02];local tP=0X2;do FF=Sm[nO];end;nO=nO+1;gO[4]=FF[0X2];nO=nO+0x0001;gO[tP]=gO[tP](gO[tP+0X1],gO[tP+2]);dO=tP;nO=nO+0X1;nO=nO+0x1;do FF=Sm[nO];end;nO=nO+1;do if not(gO[0x002])then else nO=FF[0X006];end;end;else if lF~=0X00017 then do(gO)[0X2]=RO[FF[2]];end;FF=Sm[nO];do nO=nO+0x1;end;(gO)[3]=FF[0X0002];nO=nO+1;local cl=(2);do(gO)[cl]=gO[cl](gO[cl+1]);end;dO=cl;do FF=Sm[nO];end;do nO=nO+0X00001;end;if not(not gO[0X2])then else do nO=FF[0X6];end;end;else nO=FF[6];end;end;end;end;end;else if lF>=7 then do if lF<10 then if lF>=8 then do if lF~=9 then for ge=FF[7],FF[0x006]do(gO)[ge]=nil;end;else gO[FF[7]]=FF[2];end;end;else do gO[0X2]=RO[FF[0X002]];end;FF=Sm[nO];do nO=nO+1;end;gO[3]=FF[2];FF=Sm[nO];nO=nO+0X0001;(gO)[0X00004]=FF[0X2];do nO=nO+1;end;local FK=2;gO[FK]=gO[FK](gO[FK+1],gO[FK+2]);do dO=FK;end;nO=nO+0X01;nO=nO+1;FF=Sm[nO];do nO=nO+1;end;if gO[0X2]then do nO=FF[6];end;end;end;else if lF<0X0c then if lF==0XB then gO[0x02]=RO[FF[0X2]];do nO=nO+0x1;end;do nO=nO+0X001;end;do FF=Sm[nO];end;nO=nO+0X1;(gO)[2]=gO[2][FF[5]];FF=Sm[nO];nO=nO+0x001;if not(not gO[0X00002])then else nO=FF[6];end;else gO[FF[7]]=RO[FF[2]];end;else do if lF~=0XD then else do repeat local Gq,rq=Cm,(gO);if not(#Gq>0)then else local MQ={};for xg,Vg in I,Gq do for ui,Zi in I,Vg do do if Zi[1]==rq and Zi[0X0002]>=0 then local Vf=(Zi[2]);if not MQ[Vf]then do(MQ)[Vf]={rq[Vf]};end;end;Zi[0X1]=MQ[Vf];Zi[2]=1;end;end;end;end;end;until true;end;return;end;end;end;end;end;else if lF<3 then if not(lF<0x00001)then do if lF==0X02 then gO[FF[0X7]]=S(gO[FF[0X00006]],gO[FF[0x1]]);else gO[0x00002]=RO[FF[2]];do FF=Sm[nO];end;nO=nO+1;local c_=0x2;(gO)[0X3]=FF[2];do FF=Sm[nO];end;nO=nO+0x01;gO[0X4]=FF[2];do nO=nO+1;end;gO[c_]=gO[c_](gO[c_+1],gO[c_+0X2]);dO=c_;nO=nO+0X1;do nO=nO+0X1;end;FF=Sm[nO];nO=nO+0x1;if gO[0X2]then nO=FF[6];end;end;end;else(gO)[FF[7]]=W(gO[FF[6]],gO[FF[0X001]]);end;else do if not(lF<0X5)then if lF==6 then(gO)[0x0003]=RO[FF[2]];FF=Sm[nO];do nO=nO+1;end;do gO[3]=gO[3][FF[0X5]];end;FF=Sm[nO];do nO=nO+0x1;end;if gO[0X3]then nO=FF[6];end;else(gO)[0X00002]=false;FF=Sm[nO];nO=nO+1;(RO)[FF[2]]=gO[2];FF=Sm[nO];nO=nO+1;do gO[0X2]=RO[FF[0X2]];end;FF=Sm[nO];nO=nO+0X1;do(gO)[2]=gO[2][FF[0X5]];end;FF=Sm[nO];nO=nO+1;gO[2]=gO[0x2][FF[5]];FF=Sm[nO];do nO=nO+0X001;end;if not(FF[0x2]<=gO[0X02])then nO=FF[0X07];end;end;else if lF==4 then gO[0X2]=RO[FF[2]];do FF=Sm[nO];end;nO=nO+1;gO[0X2]=gO[0X2][FF[5]];do nO=nO+1;end;nO=nO+1;do FF=Sm[nO];end;nO=nO+1;do gO[0x2]=gO[0X2][FF[5]];end;FF=Sm[nO];nO=nO+0x0001;do if not(gO[0x2]<FF[0X5])then do nO=FF[7];end;end;end;else local iP=(FF[0X0006]);local FP=gO[iP];for HG=iP+1,FF[1]do FP=FP..gO[HG];end;(gO)[FF[7]]=FP;end;end;end;end;end;end;end;end);if not(xO)then if e(oO)=="\str\i\110g"then do if p(oO,'\097\116te\m\pt t\o \y\105\101\108d\ acro\s\s\ \m\e\116\097m\101\116\104\o\d\047\C\037\-cal\l\ \098\111\117n\100a\114\y')then do return coroutine.yield();end;end;end;if p(oO,"^.-:%d+: ")then V('Lu\114a\ph\ \083\cr\ip\116\:'..(Dm[nO-1]or'\(\in\116\e\114\110\097\108\041')..": "..v(oO),0);else(V)(oO,0X0);end;else V(oO,0x0);end;else if oO then if NO==1 then return gO[eO]();else return gO[eO](f(gO,eO+1,dO));end;elseif eO then return f(gO,eO,NO);end;end;end;end;end;end;else do if xm<0X001f then if xm<0X1d then Km=function(...)local gv=(0X001);local av,Nv={},(0X0);local dv=({[2]=av,[1]=Xm});local Qv=(K());local Jv,sv=eH(...);Jv=Jv-1;local xv=((Qv==g and Qm or Qv));for uo=0X0,Jv do if not(km>uo)then break;else av[uo]=sv[uo+1];end;end;if not Lm then do sv=nil;end;elseif Um then(av)[km]={n=Jv>=km and Jv-km+0X1 or 0,f(sv,km+0X00001,Jv+0X001)};end;do if xv~=Qv then(w)(Km,xv);end;end;local jv,Fv,Iv,Gv=o(function()while true do local zP=(Sm[gv]);local fP=zP[0X4];gv=gv+1;if not(fP<7)then if fP<10 then do if not(fP<0X8)then if fP==0X9 then do(av)[zP[0x7]]={f({},1,zP[6])};end;else av[zP[7]]=xv[zP[2]];end;else do if av[zP[6]]==av[zP[0X1]]then else do gv=zP[0X007];end;end;end;end;end;else if fP<0XC then if fP~=11 then local NP=(Zm[zP[6]]);local pP=(NP[3]);local eP=#pP;local bP=nil;if eP>0 then bP={};do for KW=1,eP do local oW=(pP[KW]);if oW[0X01]~=0X0 then(bP)[KW-1]=bm[oW[0X00002]];else bP[KW-1]={av,oW[2]};end;end;end;(M)(Cm,bP);end;(av)[zP[0X7]]=dH(NP,bP,xv);else av[zP[7]]=zP[0X2];end;else if fP~=13 then if not(av[zP[6]]<av[zP[0X01]])then else do gv=zP[7];end;end;else(xv)[zP[2]]=av[zP[0X007]];end;end;end;else if fP<0X3 then if fP>=0X001 then if fP==0X002 then do(av)[zP[7]]=true;end;else gv=zP[0X6];end;else do(av)[0]=xv[zP[2]];end;do gv=gv+0X001;end;do gv=gv+0X1;end;do zP=Sm[gv];end;local QF=0X0;gv=gv+0x1;av[0]=av[0X0][zP[0X5]];local zF=0X0;do gv=gv+0x01;end;do gv=gv+1;end;do zP=Sm[gv];end;gv=gv+0X001;local HF=av[0x0];do(av)[zF+1]=HF;end;av[zF]=HF[zP[0X0005]];zP=Sm[gv];do gv=gv+1;end;av[2]=zP[2];do gv=gv+1;end;do zF=0X0;end;do(av)[zF]=av[zF](av[zF+0X1],av[zF+2]);end;do Nv=zF;end;do gv=gv+0X1;end;do av[0]=not av[0];end;gv=gv+0X1;repeat local a1,H1=Cm,av;if#a1>0X0 then local e4=({});for mv,Sv in I,a1 do for b4,g4 in I,Sv do if g4[1]==H1 and g4[0X002]>=0X0 then local YC=(g4[0X02]);do if not e4[YC]then(e4)[YC]={H1[YC]};end;end;do g4[0x1]=e4[YC];end;(g4)[0X0002]=0X01;end;end;end;end;until true;return false,QF,QF;end;else if not(fP<0x5)then if fP==6 then else if not av[zP[0x7]]then do gv=zP[6];end;end;end;else if fP==4 then repeat local mH,jH=Cm,(av);if#mH>0X00000 then local Eu={};for TV,uV in I,mH do for II,qI in I,uV do if qI[1]==jH and qI[2]>=0 then local Gl=(qI[2]);if not Eu[Gl]then Eu[Gl]={jH[Gl]};end;qI[1]=Eu[Gl];qI[0X0002]=0X1;end;end;end;end;until true;local PM=(zP[7]);return false,PM,PM+zP[6]-0X0002;else do repeat local yp,Sp=Cm,(av);if#yp>0X0 then local kc={};for SM,fM in I,yp do do for ey,py in I,fM do if not(py[1]==Sp and py[0X00002]>=0X0)then else local xK=(py[2]);if not(not kc[xK])then else kc[xK]={Sp[xK]};end;do py[0X01]=kc[xK];end;do(py)[2]=0X1;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;end);if jv then if Fv then if Gv==1 then return av[Iv]();else do return av[Iv](f(av,Iv+0X001,Nv));end;end;elseif Iv then return f(av,Iv,Gv);end;else if e(Fv)~="string"then(V)(Fv,0);else if p(Fv,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if p(Fv,"^.-:%d+: ")then(V)('\L\117r\097\ph\032\083c\114\ipt\:'..(Dm[gv-0x1]or"\(\i\110t\e\114na\l)")..": "..v(Fv),0x0);else(V)(Fv,0X0);end;end;end;end;end;else if xm==0X00001e then Km=function(...)local mY=({});local OY=0x1;local HY=(K());local nY,dY=eH(...);local KY,MY=0x00,({[2]=mY,[1]=Xm});do nY=nY-1;end;local sY=(HY==g and Qm or HY);for UL=0X0,nY do do if km>UL then do(mY)[UL]=dY[UL+0x0001];end;else do break;end;end;end;end;if not Lm then dY=nil;elseif Um then mY[km]={n=nY>=km and nY-km+1 or 0,f(dY,km+0X1,nY+1)};end;do if sY~=HY then w(Km,sY);end;end;local FY,TY,iY,CY=o(function()while true do local HC=Sm[OY];local LC=HC[4];OY=OY+0X00001;if LC<11 then if LC<0X05 then if not(LC>=2)then if LC~=0X00001 then(mY)[HC[7]]=mY[HC[6]]>=mY[HC[1]];else(mY)[1]=sY[HC[2]];OY=OY+1;OY=OY+0x1;OY=OY+1;KY=1;mY[KY]=mY[KY]();OY=OY+1;OY=OY+1;HC=Sm[OY];OY=OY+0x001;do(mY)[0X2]=sY[HC[2]];end;OY=OY+1;OY=OY+0X001;OY=OY+1;mY[1]=mY[1]-mY[0X0002];HC=Sm[OY];do OY=OY+1;end;if not(mY[1]<HC[0X05])then OY=HC[0X7];end;end;else do if not(LC<0X3)then if LC==4 then else do mY[HC[0X07]]={f({},0X00001,HC[0x006])};end;end;else OY=HC[0x06];end;end;end;else if not(LC<8)then do if not(LC>=0X9)then local lz=(bm[0X2]);mY[0X00003]=lz[0x00001][lz[2]];do OY=OY+0X001;end;OY=OY+0X001;do OY=OY+1;end;do KY=3;end;mY[KY]=mY[KY]();OY=OY+0x00001;OY=OY+0X1;HC=Sm[OY];OY=OY+1;do if not mY[0x00003]then OY=HC[0x6];end;end;else if LC==10 then(mY)[HC[7]]=mY[HC[6]]/mY[HC[0X1]];else local m_=(Zm[HC[6]]);local j_=m_[3];local V_=(#j_);local o_=nil;do if not(V_>0X0)then else o_={};for e7=0x001,V_ do local K7=j_[e7];do if K7[0X1]==0x00 then o_[e7-0X1]={mY,K7[2]};else(o_)[e7-0x001]=bm[K7[2]];end;end;end;(M)(Cm,o_);end;end;mY[HC[0X0007]]=dH(m_,o_,sY);end;end;end;else do if not(LC<0x6)then if LC~=7 then local lc=bm[0];(mY)[1]=lc[1][lc[0X2]];do HC=Sm[OY];end;do OY=OY+1;end;(mY)[2]=sY[HC[2]];OY=OY+1;OY=OY+0X1;HC=Sm[OY];OY=OY+1;do mY[0X02]=mY[2][HC[5]];end;OY=OY+0X1;OY=OY+1;do HC=Sm[OY];end;OY=OY+1;if mY[0x01]==mY[0X2]then OY=HC[7];end;else(mY)[HC[7]]=HC[0x2];end;else if not(mY[HC[6]]<mY[HC[1]])then OY=HC[0X7];end;end;end;end;end;else do if not(LC>=0x11)then if not(LC>=0Xe)then if not(LC>=0Xc)then local jF=bm[1];mY[0X1]=jF[1][jF[2]];do OY=OY+1;end;OY=OY+1;do HC=Sm[OY];end;do OY=OY+0X1;end;do if not(mY[1])then else do OY=HC[6];end;end;end;else do if LC~=0xD then local Mu=bm[0X0];do(mY)[2]=Mu[0X00001][Mu[2]];end;do HC=Sm[OY];end;do OY=OY+1;end;mY[3]=sY[HC[0x2]];OY=OY+1;OY=OY+0X1;HC=Sm[OY];OY=OY+1;mY[3]=mY[3][HC[5]];do HC=Sm[OY];end;OY=OY+1;if mY[2]~=mY[0X3]then else do OY=HC[0X0007];end;end;else repeat local NM,QM=Cm,mY;if#NM>0x0 then local lY=({});do for Xu,Lu in I,NM do for O8,Q8 in I,Lu do do if Q8[0X00001]==QM and Q8[0X2]>=0X0 then local FX=(Q8[2]);if not lY[FX]then lY[FX]={QM[FX]};end;Q8[0X001]=lY[FX];Q8[0X2]=0X1;end;end;end;end;end;end;until true;return;end;end;end;else do if not(LC<15)then do if LC==16 then do mY[0X01]=true;end;HC=Sm[OY];local m_=(bm[0]);OY=OY+0X1;sY[HC[2]]=mY[0X1];HC=Sm[OY];do OY=OY+1;end;mY[1]=sY[HC[2]];OY=OY+0X00001;OY=OY+0X00001;OY=OY+1;(mY)[0X2]=m_[0X1][m_[0x2]];OY=OY+0X00001;OY=OY+1;HC=Sm[OY];do OY=OY+0X1;end;do(mY)[0X00002]=mY[0X2][HC[0X5]];end;OY=OY+1;OY=OY+0X1;HC=Sm[OY];OY=OY+0x1;do mY[3]=sY[HC[0X2]];end;OY=OY+0x1;do OY=OY+0x1;end;HC=Sm[OY];do OY=OY+1;end;mY[0x03]=mY[0x3][HC[0x5]];OY=OY+1;OY=OY+0X1;HC=Sm[OY];OY=OY+1;mY[4]=HC[2];HC=Sm[OY];OY=OY+1;mY[0X5]=HC[2];HC=Sm[OY];local K_=3;do OY=OY+1;end;mY[6]=HC[0X2];OY=OY+0x1;KY=K_+4-0X1;do(mY)[K_]=mY[K_](f(mY,K_+1,KY));end;KY=K_;OY=OY+0x1;do(mY)[0x00002]=mY[0x2]+mY[3];end;do HC=Sm[OY];end;local J_=(Zm[HC[6]]);local l_=(J_[3]);OY=OY+1;local e_,M_=nil,#l_;if not(M_>0X00)then else do e_={};end;for om=1,M_ do local gm=(l_[om]);do if gm[1]~=0X00 then(e_)[om-1]=bm[gm[0X00002]];else(e_)[om-1]={mY,gm[0X2]};end;end;end;(M)(Cm,e_);end;mY[3]=dH(J_,e_,sY);do OY=OY+0x1;end;do K_=0x1;end;mY[K_](mY[K_+1],mY[K_+2]);KY=K_-1;OY=OY+0x1;do OY=OY+0x01;end;do OY=OY+1;end;mY[1]=false;HC=Sm[OY];OY=OY+0X1;sY[HC[0X2]]=mY[1];do HC=Sm[OY];end;OY=OY+1;OY=HC[0X6];else mY[0X1]=sY[HC[2]];do OY=OY+0x1;end;KY=1;(mY)[KY]=mY[KY]();local WM,hM=1,(bm[0]);HC=Sm[OY];OY=OY+0X01;(sY)[HC[0X0002]]=mY[0X1];HC=Sm[OY];OY=OY+1;(mY)[0x1]=sY[HC[2]];OY=OY+1;OY=OY+0X01;do HC=Sm[OY];end;OY=OY+0x00001;(mY)[0X00001]=mY[0X1][HC[5]];OY=OY+1;OY=OY+1;HC=Sm[OY];OY=OY+0x1;mY[1]=mY[1][HC[0X05]];HC=Sm[OY];OY=OY+1;(mY)[0X001]=mY[0X1][HC[0X5]];OY=OY+0x1;OY=OY+1;HC=Sm[OY];OY=OY+1;local wM=(mY[0X00001]);do(mY)[WM+1]=wM;end;mY[WM]=wM[HC[0X05]];OY=OY+1;mY[3]=hM[0X1][hM[0x0002]];OY=OY+1;WM=0X1;(mY[WM])(mY[WM+0x1],mY[WM+2]);KY=WM-0X00001;HC=Sm[OY];OY=OY+0X00001;OY=HC[0x6];end;end;else local xd,sd,Id=HC[0x0007],HC[0X6],HC[1];if sd~=0 then KY=xd+sd-0X001;end;local md,Zd=nil,(nil);if sd==0X00001 then md,Zd=eH(mY[xd]());else md,Zd=eH(mY[xd](f(mY,xd+0X1,KY)));end;if Id==1 then KY=xd-0X0001;else if Id==0 then md=md+xd-0X1;KY=md;else md=xd+Id-0X02;KY=md+0X001;end;local po=0X00000;do for hy=xd,md do do po=po+1;end;mY[hy]=Zd[po];end;end;end;end;end;end;else if LC>=0X14 then if LC>=0X0015 then if LC~=0X16 then local I5=bm[HC[0x6]];mY[HC[0X7]]=I5[1][I5[0x2]];else(mY)[HC[7]]=sY[HC[0X2]];end;else for T6=HC[0X7],HC[0x6]do(mY)[T6]=nil;end;end;else do if LC>=0X12 then if LC~=0X13 then if not(not mY[HC[0x7]])then else OY=HC[6];end;else do(MY)[HC[0x00006]]=mY[HC[7]];end;end;else if mY[HC[0X6]]==mY[HC[1]]then OY=HC[0X7];end;end;end;end;end;end;end;end;end);if FY then if TY then if CY==1 then return mY[iY]();else return mY[iY](f(mY,iY+0X1,KY));end;elseif iY then return f(mY,iY,CY);end;else do if e(TY)~="string"then(V)(TY,0);else if p(TY,'a\116t\101\m\pt\ to \y\i\101\l\d\ a\c\114\o\115\115\ met\097\109e\116\ho\100/\067\037-\c\097\ll \098\o\117n\100\097\114\121')then return coroutine.yield();end;do if p(TY,"^.-:%d+: ")then(V)('\L\117\114\097p\104 \083\099\114\ipt\:'..(Dm[OY-0X001]or"\(i\110\116\e\114n\097\108\041")..": "..v(TY),0);else V(TY,0x0000);end;end;end;end;end;end;else Km=function(...)local gJ={};local NJ=0X00001;local xJ=K();local yJ,oJ=0,(xJ==g and Qm or xJ);local jJ,ZJ=eH(...);local aJ=({[1]=Xm,[2]=gJ});jJ=jJ-1;do for Mk=0X0,jJ do if not(km>Mk)then break;else(gJ)[Mk]=ZJ[Mk+0x1];end;end;end;if not Lm then do ZJ=nil;end;elseif not(Um)then else gJ[km]={n=jJ>=km and jJ-km+1 or 0,f(ZJ,km+1,jJ+0x1)};end;if oJ~=xJ then w(Km,oJ);end;local TJ,LJ,FJ,eJ=o(function()while true do local A9=(Sm[NJ]);local Y9=(A9[0X004]);NJ=NJ+1;if Y9<8 then if not(Y9>=4)then if not(Y9<2)then do if Y9==0X3 then gJ[0X05]=oJ[A9[2]];NJ=NJ+1;yJ=0X5;gJ[yJ]=gJ[yJ]();do A9=Sm[NJ];end;NJ=NJ+0X00001;if not gJ[5]then do NJ=A9[6];end;end;else do(gJ)[A9[7]]=gJ[A9[0x0006]]>=gJ[A9[1]];end;end;end;else if Y9==1 then(gJ)[A9[7]]={f({},1,A9[6])};else local HJ=Zm[A9[0X6]];local PJ=nil;local wJ=(HJ[3]);local nJ=(#wJ);if nJ>0 then PJ={};for MV=0X1,nJ do local aV=(wJ[MV]);do if aV[1]~=0X00000 then PJ[MV-1]=bm[aV[0X02]];else(PJ)[MV-0X1]={gJ,aV[2]};end;end;end;M(Cm,PJ);end;gJ[A9[7]]=dH(HJ,PJ,oJ);end;end;else if not(Y9<0X6)then if Y9==7 then if not(gJ[A9[0X0007]])then else NJ=A9[0X06];end;else do repeat local e6,B6=Cm,gJ;if not(#e6>0)then else local sC={};do for K5,o5 in I,e6 do for Pu,ru in I,o5 do if ru[1]==B6 and ru[2]>=0 then local pD=(ru[0X0002]);if not sC[pD]then(sC)[pD]={B6[pD]};end;do ru[1]=sC[pD];end;ru[2]=1;end;end;end;end;end;until true;end;return;end;else if Y9~=5 then else do(gJ)[A9[0X7]]=gJ[A9[6]]==gJ[A9[0X00001]];end;end;end;end;else if not(Y9>=0XC)then do if Y9<10 then do if Y9~=0X9 then NJ=A9[0X06];else do(gJ)[0x5]=oJ[A9[2]];end;NJ=NJ+0X1;NJ=NJ+0x1;A9=Sm[NJ];NJ=NJ+1;if not(gJ[5])then else NJ=A9[6];end;end;end;else if Y9~=0XB then gJ[A9[7]]=gJ[A9[6]]/gJ[A9[1]];else do gJ[A9[0X07]]=A9[2];end;end;end;end;else if not(Y9<14)then do if not(Y9>=0X0000F)then for qc=A9[7],A9[0X6]do(gJ)[qc]=nil;end;else if Y9==0X000010 then(gJ)[5]=oJ[A9[2]];A9=Sm[NJ];NJ=NJ+0x1;gJ[5]=gJ[0x5][A9[0X005]];do NJ=NJ+1;end;NJ=NJ+0X1;NJ=NJ+0X1;do yJ=5;end;gJ[yJ]();local EY=(nil);do yJ=yJ-1;end;NJ=NJ+1;NJ=NJ+1;NJ=NJ+0x00001;gJ[0X00005]=nil;A9=Sm[NJ];NJ=NJ+0X1;(gJ)[6]=oJ[A9[0X2]];local fY=0X6;do NJ=NJ+1;end;NJ=NJ+0X1;A9=Sm[NJ];NJ=NJ+0X1;local LY=Zm[A9[0x6]];local FY=(LY[0X3]);local dY=(#FY);if not(dY>0)then else do EY={};end;do for xb=0x00001,dY do local ib=FY[xb];if ib[0X0001]==0 then(EY)[xb-1]={gJ,ib[2]};else(EY)[xb-1]=bm[ib[2]];end;end;end;(M)(Cm,EY);end;local gY=(0X0003);(gJ)[7]=dH(LY,EY,oJ);do NJ=NJ+1;end;local TY=(2);do if TY~=0 then do yJ=fY+TY-1;end;end;end;local MY,aY=nil,(nil);do if TY~=0x1 then MY,aY=eH(gJ[fY](f(gJ,fY+0x1,yJ)));else MY,aY=eH(gJ[fY]());end;end;if gY==1 then yJ=fY-0X00001;else do if gY==0X0 then do MY=MY+fY-0x1;end;yJ=MY;else do MY=fY+gY-0x0002;end;do yJ=MY+1;end;end;end;local B5=(0X0);for RK=fY,MY do B5=B5+0X001;(gJ)[RK]=aY[B5];end;end;A9=Sm[NJ];do NJ=NJ+1;end;do(gJ)[8]=oJ[A9[0X2]];end;NJ=NJ+1;NJ=NJ+0x0001;A9=Sm[NJ];NJ=NJ+1;(gJ)[8]=gJ[8][A9[5]];do NJ=NJ+1;end;do NJ=NJ+1;end;NJ=NJ+0X01;yJ=0X8;(gJ[yJ])();yJ=yJ-0X1;NJ=NJ+0X00001;NJ=NJ+1;NJ=NJ+0X1;do gJ[0X008]=gJ[0X5];end;NJ=NJ+0X0001;local GY=(0X00008);repeat local Wm,Pm=Cm,gJ;if not(#Wm>0x0)then else local DT={};do for at,gt in I,Wm do do for c_,s_ in I,gt do do if not(s_[0X0001]==Pm and s_[2]>=0X0)then else local PU=s_[2];if not DT[PU]then DT[PU]={Pm[PU]};end;(s_)[0X1]=DT[PU];s_[2]=1;end;end;end;end;end;end;end;until true;return false,GY,GY;else gJ[A9[0X7]]=S(gJ[A9[6]],gJ[A9[1]]);end;end;end;else if Y9==0X00d then(gJ)[A9[7]]=oJ[A9[0X2]];else gJ[0X5]=oJ[A9[2]];NJ=NJ+0X1;NJ=NJ+0x001;do A9=Sm[NJ];end;NJ=NJ+1;do if not(not gJ[0x5])then else do NJ=A9[6];end;end;end;end;end;end;end;end;end);if TJ then if LJ then if eJ==0X1 then return gJ[FJ]();else return gJ[FJ](f(gJ,FJ+1,yJ));end;elseif not(FJ)then else return f(gJ,FJ,eJ);end;else if e(LJ)=="str\i\110\g"then if p(LJ,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if p(LJ,"^.-:%d+: ")then V("Luraph Script:"..(Dm[NJ-1]or'\(\in\116\er\110\097\l\)')..": "..v(LJ),0);else(V)(LJ,0);end;end;else V(LJ,0x0);end;end;end;end;end;else if xm<32 then do Km=function(...)local nM=0;local VM,CM=0X1,({});local bM=K();local PM=(bM==g and Qm or bM);local AM,IM=eH(...);local YM=({[1]=Xm,[2]=CM});AM=AM-0x0001;for yw=0,AM do if not(km>yw)then break;else(CM)[yw]=IM[yw+0x0001];end;end;if not Lm then IM=nil;elseif not(Um)then else do(CM)[km]={n=AM>=km and AM-km+0X1 or 0x0,f(IM,km+0x0001,AM+1)};end;end;if PM==bM then else(w)(Km,PM);end;local dM,vM,JM,iM=o(function()while true do local jS=Sm[VM];local AS=(jS[4]);VM=VM+1;if AS<0X08 then do if AS<4 then if AS>=0x2 then do if AS~=0X3 then(CM)[5]=CM[0X4][jS[5]];jS=Sm[VM];VM=VM+1;do(CM)[5]=CM[0X5][jS[5]];end;jS=Sm[VM];do VM=VM+0x0001;end;do CM[0x5]=CM[5][jS[5]];end;jS=Sm[VM];VM=VM+1;do(CM)[0X05]=CM[0X5]~=jS[0X5];end;jS=Sm[VM];do VM=VM+1;end;do VM=jS[0X00006];end;else for hD=jS[0X7],jS[0X6]do do CM[hD]=nil;end;end;end;end;else if AS~=0x1 then local I6=(Zm[jS[6]]);local d6=I6[3];local W6,m6=#d6,nil;if not(W6>0)then else m6={};for EG=1,W6 do local vG=d6[EG];if vG[0X1]~=0 then(m6)[EG-1]=bm[vG[2]];else(m6)[EG-0X0001]={CM,vG[0X2]};end;end;M(Cm,m6);end;do CM[jS[0X7]]=dH(I6,m6,PM);end;else if not(not CM[jS[0X7]])then else VM=jS[6];end;end;end;else if not(AS>=0x00006)then if AS~=5 then else VM=jS[6];end;else if AS==7 then CM[jS[7]]={f({},0x1,jS[0X06])};else repeat local ud,Sd=Cm,CM;if not(#ud>0X0)then else local r8=({});for Sp,gp in I,ud do for nb,wb in I,gp do if wb[1]==Sd and wb[0x2]>=0 then local ZM=(wb[0X2]);do if not(not r8[ZM])then else r8[ZM]={Sd[ZM]};end;end;(wb)[0X001]=r8[ZM];do(wb)[2]=0X1;end;end;end;end;end;until true;return;end;end;end;end;else do if not(AS>=12)then if not(AS<0Xa)then if AS~=0X00b then repeat local gD,sD=Cm,(CM);do if#gD>0 then local NY=({});for r6,l6 in I,gD do for Z9,d9 in I,l6 do if not(d9[1]==sD and d9[0x2]>=0)then else local Ep=d9[0x0002];if not(not NY[Ep])then else do NY[Ep]={sD[Ep]};end;end;d9[0X1]=NY[Ep];(d9)[2]=0x00001;end;end;end;end;end;until true;local RX=jS[0X7];do return false,RX,RX;end;else CM[jS[0X7]]=PM[jS[0X00002]];end;else if AS~=9 then do CM[jS[0X7]]=CM[jS[6]];end;else CM[0X002]=PM[jS[2]];jS=Sm[VM];VM=VM+0X00001;(CM)[2]=CM[0X2][jS[0X00005]];do jS=Sm[VM];end;VM=VM+1;CM[0X2]=CM[2][jS[0X5]];do jS=Sm[VM];end;VM=VM+0X001;local Mk=(0X3);do(CM)[2]=CM[0X2][jS[5]];end;jS=Sm[VM];do VM=VM+1;end;local uk=CM[2];CM[Mk+1]=uk;do(CM)[Mk]=uk[jS[0X00005]];end;local Fk=2;do jS=Sm[VM];end;VM=VM+1;(CM)[0x5]=PM[jS[2]];VM=VM+1;VM=VM+1;VM=VM+0X00001;(CM)[6]=CM[0X0];VM=VM+1;do Mk=5;end;local Nk=(0X00);if Fk==0X0 then else nM=Mk+Fk-1;end;local Xk,Ik=nil,nil;do if Fk~=0X1 then Xk,Ik=eH(CM[Mk](f(CM,Mk+1,nM)));else Xk,Ik=eH(CM[Mk]());end;end;if Nk==0X1 then nM=Mk-1;else if Nk==0 then Xk=Xk+Mk-1;nM=Xk;else Xk=Mk+Nk-0X2;do nM=Xk+1;end;end;local oo=(0);for ND=Mk,Xk do oo=oo+0X1;CM[ND]=Ik[oo];end;end;VM=VM+1;VM=VM+1;VM=VM+0X1;Mk=3;(CM)[Mk]=CM[Mk](f(CM,Mk+0x01,nM));do nM=Mk;end;VM=VM+1;(CM)[4]=CM[0X003];jS=Sm[VM];do VM=VM+0X1;end;if not(not CM[0x4])then else VM=jS[0X06];end;end;end;else if not(AS<14)then do if not(AS<0X00F)then if AS~=16 then local vX=jS[7];local qX,sX,HX=CM[vX],CM[vX+1],CM[vX+0X00002];(CM)[vX]=r(function()for iL=qX,sX,HX do C(true,iL);end;end);VM=jS[0X6];else(CM)[jS[7]]=O(CM[jS[0X006]],CM[jS[0X1]]);end;else local a6=4;local W6=(CM[3]);(CM)[a6+0x1]=W6;(CM)[a6]=W6[jS[5]];do VM=VM+1;end;do(CM)[6]=CM[0X00001];end;VM=VM+1;a6=4;(CM)[a6]=CM[a6](CM[a6+1],CM[a6+0X002]);do nM=a6;end;VM=VM+1;VM=VM+0X1;jS=Sm[VM];VM=VM+1;do VM=jS[0X06];end;end;end;else if AS~=0Xd then(CM)[jS[7]]=CM[jS[0x6]]/CM[jS[0X01]];else(CM)[jS[0x7]]=jS[2];end;end;end;end;end;end;end);if dM then if vM then if iM==1 then return CM[JM]();else return CM[JM](f(CM,JM+1,nM));end;elseif JM then return f(CM,JM,iM);end;else if e(vM)=="string"then if p(vM,'atte\m\p\116\032t\111\ \yield a\cr\111\115\s\032met\097\109e\116\h\od\047\C\%\-\099\097\l\108\ \098\oun\100\097\114\y')then return coroutine.yield();end;if not(p(vM,"^.-:%d+: "))then V(vM,0);else(V)('\076\117r\097\112\104\ \S\099r\ip\116\:'..(Dm[VM-0X0001]or"\(in\116\erna\108)")..": "..v(vM),0);end;else V(vM,0);end;end;end;end;else if xm~=0X21 then Km=function(...)local wC,yC=1,{};local RC=(K());local IC=0;local LC,bC=eH(...);local KC=({[2]=yC,[1]=Xm});local UC=((RC==g and Qm or RC));LC=LC-1;for DF=0,LC do if not(km>DF)then break;else do(yC)[DF]=bC[DF+1];end;end;end;if not Lm then bC=nil;elseif Um then(yC)[km]={n=LC>=km and LC-km+0X1 or 0X0,f(bC,km+0x001,LC+1)};end;if UC~=RC then w(Km,UC);end;local uC,PC,ZC,cC=o(function()while true do local G1=(Sm[wC]);local g1=G1[4];wC=wC+0X00001;do if not(g1>=0X8)then if not(g1>=4)then if not(g1<2)then if g1==0X00003 then yC[G1[7]]=UC[G1[0x2]];else local kx=G1[6];local Px=(yC[kx]);for YB=kx+0X01,G1[1]do Px=Px..yC[YB];end;do(yC)[G1[7]]=Px;end;end;else if g1~=1 then local t9=(Zm[G1[0X6]]);local Y9=(nil);local L9=t9[3];local S9=#L9;do if not(S9>0)then else do Y9={};end;do for OK=1,S9 do local DK=(L9[OK]);if DK[0X01]~=0 then do(Y9)[OK-0X1]=bm[DK[0X2]];end;else Y9[OK-1]={yC,DK[0X0002]};end;end;end;M(Cm,Y9);end;end;do yC[G1[7]]=dH(t9,Y9,UC);end;else end;end;else if g1<0X6 then if g1==0X5 then local lq=(G1[7]);local gq=(G1[0X1]-1)*0X32;local Yq=yC[lq];for CZ=1,G1[6]do do Yq[gq+CZ]=yC[lq+CZ];end;end;else(yC)[G1[0X7]]={f({},0X0001,G1[6])};end;else do if g1==0X007 then(yC)[G1[0x7]]=KC[G1[6]];else do wC=G1[6];end;end;end;end;end;else if g1>=12 then if not(g1>=14)then do if g1==13 then local U2,P2=G1[0X7],yC[G1[6]];(yC)[U2+0X001]=P2;yC[U2]=P2[G1[5]];else if yC[G1[0X0006]]<yC[G1[0x1]]then wC=G1[7];end;end;end;else if g1~=0Xf then for eN=G1[0x07],G1[6]do do(yC)[eN]=nil;end;end;else local PY=G1[7];local wY,eY=yC[PY]();if not(wY)then else for t1=1,G1[1]do do yC[PY+t1]=eY[t1];end;end;wC=G1[0X6];end;end;end;else do if g1>=10 then if g1==11 then(yC)[G1[0X7]]=G1[2];else(yC)[G1[7]]=S(yC[G1[6]],yC[G1[1]]);end;else if g1==0X9 then yC[0X0]=UC[G1[2]];local H1=0X0;G1=Sm[wC];wC=wC+1;local q1=yC[0];do yC[H1+0X1]=q1;end;yC[H1]=q1[G1[5]];G1=Sm[wC];do wC=wC+1;end;local w1=nil;do yC[2]=G1[0X2];end;wC=wC+1;H1=0x0;(yC)[H1]=yC[H1](yC[H1+1],yC[H1+0x2]);do IC=H1;end;G1=Sm[wC];wC=wC+1;yC[0X001]=UC[G1[0X2]];G1=Sm[wC];wC=wC+1;yC[0x0001]=yC[0x001][G1[0x5]];do G1=Sm[wC];end;wC=wC+1;local c1=Zm[G1[6]];local X1=(c1[0x3]);local p1=(#X1);if p1>0 then w1={};for u4=0X1,p1 do local G4=X1[u4];if G4[0X1]~=0X0 then(w1)[u4-1]=bm[G4[0x2]];else(w1)[u4-1]={yC,G4[0x02]};end;end;(M)(Cm,w1);end;yC[0X2]=dH(c1,w1,UC);do wC=wC+0x01;end;do H1=0X1;end;(yC[H1])(yC[H1+1]);IC=H1-1;wC=wC+1;do wC=wC+1;end;wC=wC+1;repeat local TI,KI=Cm,yC;do if#TI>0X0000 then local Db={};for rN,kN in I,TI do do for y6,L6 in I,kN do do if not(L6[0x0001]==KI and L6[2]>=0X0)then else local uw=(L6[0X2]);do if not Db[uw]then Db[uw]={KI[uw]};end;end;(L6)[1]=Db[uw];(L6)[0x2]=0X1;end;end;end;end;end;end;end;until true;return;else do yC[G1[0X7]]=yC[G1[6]]>yC[G1[0x1]];end;end;end;end;end;end;end;end;end);if uC then if PC then if cC~=1 then return yC[ZC](f(yC,ZC+0X01,IC));else return yC[ZC]();end;elseif not(ZC)then else return f(yC,ZC,cC);end;else do if e(PC)=="string"then if p(PC,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(PC,"^.-:%d+: ")then V("Luraph Script:"..(Dm[wC-1]or"(internal)")..'\058 '..v(PC),0);else V(PC,0x0);end;else V(PC,0);end;end;end;end;else Km=function(...)local kd={};local cd=(1);local sd=(K());local Dd=((sd==g and Qm or sd));local gd,Ud=eH(...);local dd,Sd=0,({[1]=Xm,[2]=kd});gd=gd-0X00001;for kL=0,gd do if km>kL then(kd)[kL]=Ud[kL+1];else break;end;end;if not Lm then Ud=nil;elseif Um then(kd)[km]={n=gd>=km and gd-km+1 or 0x0,f(Ud,km+1,gd+0X1)};end;if Dd~=sd then w(Km,Dd);end;local Pd,Xd,Ad,bd=o(function()while true do local CV=Sm[cd];local sV=(CV[4]);cd=cd+1;do if sV<14 then do if not(sV>=7)then if sV>=3 then if sV>=0X5 then if sV==6 then do kd[1]=Dd[CV[0X2]];end;CV=Sm[cd];do cd=cd+0X1;end;kd[0X1]=kd[1][CV[0X5]];CV=Sm[cd];cd=cd+1;(kd)[0x001]=kd[0x001][CV[0x05]];cd=cd+1;cd=cd+0X01;do CV=Sm[cd];end;cd=cd+1;cd=CV[0X6];else for nf=CV[7],CV[0X06]do kd[nf]=nil;end;end;else if sV==4 then repeat local aH,mH=Cm,(kd);if not(#aH>0)then else local aE=({});for nl,Cl in I,aH do do for WA,pA in I,Cl do if pA[1]==mH and pA[0X2]>=0x0 then local FP=pA[2];if not(not aE[FP])then else do(aE)[FP]={mH[FP]};end;end;(pA)[0x0001]=aE[FP];(pA)[2]=1;end;end;end;end;end;until true;local lR=(CV[0X07]);do return false,lR,lR;end;else(kd)[CV[7]]=a(kd[CV[0x00006]]);end;end;else if sV>=0X00001 then if sV~=2 then kd[0X4]=Dd[CV[0X2]];cd=cd+1;dd=0X00004;kd[dd]=kd[dd]();CV=Sm[cd];cd=cd+1;do cd=CV[6];end;else if not(kd[CV[0X7]])then else cd=CV[0X6];end;end;else(kd)[1]=Dd[CV[0X2]];do cd=cd+0X1;end;dd=1;do kd[dd]=kd[dd]();end;CV=Sm[cd];do cd=cd+0x1;end;cd=CV[0X6];end;end;else if sV>=0xa then if sV>=12 then do if sV==0X0d then cd=CV[0X006];else(kd)[CV[7]]={f({},0X00001,CV[0X006])};end;end;else if sV~=11 then repeat local mm,Tm=Cm,kd;if not(#mm>0X0)then else local ku={};for r2,i2 in I,mm do for Ry,Hy in I,i2 do do if not(Hy[1]==Tm and Hy[0X2]>=0)then else local IY=Hy[2];if not(not ku[IY])then else ku[IY]={Tm[IY]};end;Hy[1]=ku[IY];Hy[2]=1;end;end;end;end;end;until true;return;else kd[CV[0x007]]=kd[CV[0X6]];end;end;else if sV>=0X8 then if sV==9 then do(kd)[CV[7]]=kd[CV[0X6]]/kd[CV[0X001]];end;else local gw,Jw=CV[7],CV[0X0006];dd=gw+Jw-1;repeat local nS,VS=Cm,(kd);if#nS>0X00 then local pc={};for F5,M5 in I,nS do for P1,Z1 in I,M5 do if not(Z1[0X1]==VS and Z1[0X00002]>=0X0)then else local lx=Z1[2];do if not pc[lx]then(pc)[lx]={VS[lx]};end;end;Z1[1]=pc[lx];(Z1)[2]=0X0001;end;end;end;end;until true;do return true,gw,Jw;end;end;else do(kd)[CV[7]]=Dd[CV[0X2]];end;end;end;end;end;else if not(sV<0X15)then if not(sV<25)then do if sV>=27 then if sV~=0X1c then kd[CV[7]]=l(kd[CV[6]],kd[CV[1]]);else local By,oy=CV[7],kd[CV[0x00006]];kd[By+1]=oy;do(kd)[By]=oy[CV[0X0005]];end;end;else if sV==0X0001A then(kd)[CV[7]]=kd[CV[6]]+kd[CV[1]];else if not kd[CV[7]]then cd=CV[6];end;end;end;end;else if not(sV<0X0017)then if sV==24 then do(kd)[CV[7]]=kd[CV[0X00006]]>=kd[CV[1]];end;else(kd)[4]=Dd[CV[2]];cd=cd+1;cd=cd+0x0001;CV=Sm[cd];cd=cd+0X1;(kd)[0X4]=kd[4][CV[0X5]];CV=Sm[cd];do cd=cd+0X1;end;do(kd)[4]=kd[4][CV[0X5]];end;cd=cd+1;do cd=cd+1;end;CV=Sm[cd];cd=cd+1;cd=CV[0x6];end;else do if sV==22 then local KP=(0X01);dd=KP+0X04-1;(kd)[KP]=kd[KP](f(kd,KP+1,dd));dd=KP;cd=cd+1;do cd=cd+1;end;do CV=Sm[cd];end;do cd=cd+0x1;end;cd=CV[0x006];else kd[1]=Dd[CV[2]];cd=cd+0X1;cd=cd+0X1;CV=Sm[cd];do cd=cd+1;end;(kd)[1]=kd[1][CV[5]];CV=Sm[cd];cd=cd+0x0001;(kd)[0x2]=Dd[CV[0X2]];CV=Sm[cd];cd=cd+0X1;(kd)[0X2]=kd[2][CV[5]];cd=cd+1;do cd=cd+1;end;CV=Sm[cd];do cd=cd+1;end;kd[0X3]=Dd[CV[2]];do cd=cd+0X00001;end;do kd[4]=kd[0];end;CV=Sm[cd];cd=cd+1;do if not kd[4]then cd=CV[0X006];end;end;end;end;end;end;else if not(sV>=0X11)then if sV>=0XF then if sV~=0X000010 then local nN=Zm[CV[6]];local zN=nN[3];local DN=(nil);local MN=#zN;if not(MN>0X00000)then else DN={};for D8=1,MN do local m8=zN[D8];if m8[0X1]~=0X000 then(DN)[D8-0x1]=bm[m8[0x2]];else do DN[D8-0x1]={kd,m8[0X2]};end;end;end;M(Cm,DN);end;kd[CV[0X7]]=dH(nN,DN,Dd);else(kd)[1]=Dd[CV[0X02]];CV=Sm[cd];cd=cd+0x1;(kd)[0x01]=kd[1][CV[0X0005]];CV=Sm[cd];cd=cd+1;if not(not kd[0X1])then else cd=CV[6];end;end;else(kd)[CV[0X7]]=S(kd[CV[0X0006]],kd[CV[1]]);end;else if sV>=19 then if sV==0x014 then local In=(CV[7]);for Pc=In,In+(CV[0x6]-0X1)do kd[Pc]=Ud[km+(Pc-In)+1];end;else end;else if sV==18 then kd[CV[7]]=CV[2];else do(kd)[CV[0x007]]=true;end;end;end;end;end;end;end;end;end);if not(Pd)then if e(Xd)~="\str\in\g"then V(Xd,0);else if not(p(Xd,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if p(Xd,"^.-:%d+: ")then(V)("\L\117\114a\ph\ \S\099\114i\p\116\:"..(Dm[cd-1]or"(internal)")..'\058\ '..v(Xd),0X00000);else(V)(Xd,0);end;end;else if Xd then if bd~=0x01 then return kd[Ad](f(kd,Ad+1,dd));else do return kd[Ad]();end;end;elseif not(Ad)then else return f(kd,Ad,bd);end;end;end;end;end;end;end;end;else if not(xm>=0X28)then do if not(xm<37)then do if not(xm>=0X26)then Km=function(...)local gp=({});local kp=(1);local sp=K();local Ap=0;local up=((sp==g and Qm or sp));local lp,Op=eH(...);local Wp={[1]=Xm,[2]=gp};lp=lp-0X1;for po=0,lp do if km>po then gp[po]=Op[po+0X1];else break;end;end;if not Lm then Op=nil;elseif not(Um)then else gp[km]={n=lp>=km and lp-km+0X1 or 0X0000,f(Op,km+1,lp+0X01)};end;if up~=sp then(w)(Km,up);end;while true do local gZ=Sm[kp];local fZ=gZ[0X4];kp=kp+1;return(function(m,B,...)return Client.PlayerGui.Main.Timer.Visible or JustStarted;end)(gp,bm,...);end;end;else if xm==39 then Km=function(...)local RX=0;local UX={};local mX=K();local qX,rX=0X1,({[2]=UX,[1]=Xm});local ZX=((mX==g and Qm or mX));local kX,YX=eH(...);kX=kX-0x1;for eA=0X000,kX do do if km>eA then UX[eA]=YX[eA+1];else do break;end;end;end;end;if not Lm then YX=nil;elseif Um then UX[km]={n=kX>=km and kX-km+1 or 0x0000,f(YX,km+1,kX+1)};end;if ZX==mX then else w(Km,ZX);end;while true do local Qf=Sm[qX];local ff=(Qf[4]);qX=qX+0x1;do return(function(i,s,...)local n=i[0];local T=game.Players.LocalPlayer;if typeof(n)=="Instance"and n:IsA("BasePart")then local c=math.clamp(T.SimulationRadius,0,1250);local G=T:DistanceFromCharacter(n.Position);if G<c then for f,y in pairs(game.Players:GetPlayers())do if y:DistanceFromCharacter(n.Position)<G and y~=T then return false;end;end;return true;end;end;end)(UX,bm,...);end;end;end;else Km=function(...)local vV,mV=0X1,({});local uV=K();local VV,wV=eH(...);local QV=({[1]=Xm,[2]=mV});do VV=VV-0X01;end;for MZ=0,VV do if not(km>MZ)then do break;end;else(mV)[MZ]=wV[MZ+0X1];end;end;if not Lm then wV=nil;elseif Um then(mV)[km]={n=VV>=km and VV-km+0x00001 or 0,f(wV,km+1,VV+1)};end;local OV,dV=(uV==g and Qm or uV),0;if OV~=uV then w(Km,OV);end;local IV,qV,gV,XV=o(function()while true do local QA=(Sm[vV]);local zA=(QA[0X4]);vV=vV+1;if zA<7 then if zA>=3 then if zA<0x5 then if zA~=0X4 then mV[QA[0X7]]={f({},0x1,QA[6])};else(mV)[QA[7]]=mV[QA[6]]<=mV[QA[1]];end;else if zA~=0x6 then else do(QV)[QA[6]]=mV[QA[0x7]];end;end;end;else if not(zA<0X1)then if zA==0X2 then do vV=QA[0X06];end;else local R7=Zm[QA[6]];local r7=(R7[0x0003]);local G7,V7=#r7,(nil);if not(G7>0)then else V7={};for rv=0X1,G7 do local Jv=r7[rv];if Jv[0X1]==0X0000 then do(V7)[rv-1]={mV,Jv[0X0002]};end;else V7[rv-1]=bm[Jv[0X00002]];end;end;(M)(Cm,V7);end;mV[QA[0x07]]=dH(R7,V7,OV);end;else if mV[QA[6]]~=mV[QA[0X0001]]then vV=QA[7];end;end;end;else if not(zA<11)then do if zA<13 then if zA==0xc then mV[QA[0x007]]=mV[QA[0X6]];else mV[QA[7]]=l(mV[QA[0x0006]],mV[QA[1]]);end;else if zA==14 then mV[QA[7]]=W(mV[QA[0X6]],mV[QA[1]]);else(mV)[QA[7]]=mV[QA[0X6]]>mV[QA[1]];end;end;end;else do if zA<9 then do if zA==0X8 then mV[QA[7]]=OV[QA[2]];else(mV)[0]=OV[QA[2]];local EC=(0X0);QA=Sm[vV];vV=vV+1;local TC=mV[0];mV[EC+1]=TC;mV[EC]=TC[QA[5]];QA=Sm[vV];vV=vV+1;(mV)[0X0002]=QA[0X2];do vV=vV+0X0001;end;EC=0;(mV)[EC]=mV[EC](mV[EC+1],mV[EC+2]);dV=EC;QA=Sm[vV];vV=vV+1;do(mV)[1]=OV[QA[0X0002]];end;QA=Sm[vV];vV=vV+1;(mV)[1]=mV[0X00001][QA[5]];vV=vV+1;vV=vV+0X1;local QC=(nil);do QA=Sm[vV];end;do vV=vV+1;end;local zC=Zm[QA[6]];local aC=zC[3];local jC=(#aC);do if jC>0x00 then do QC={};end;for fr=0x1,jC do local zr=aC[fr];do if zr[0X1]==0 then(QC)[fr-1]={mV,zr[2]};else QC[fr-1]=bm[zr[0X2]];end;end;end;M(Cm,QC);end;end;(mV)[0x002]=dH(zC,QC,OV);vV=vV+1;EC=1;(mV[EC])(mV[EC+0X01]);dV=EC-0x1;vV=vV+1;repeat local aJ,dJ=Cm,(mV);if not(#aJ>0x0000)then else local Gf=({});do for il,ql in I,aJ do for Z3,D3 in I,ql do do if D3[0X1]==dJ and D3[0X0002]>=0X0 then local oJ=(D3[2]);do if not(not Gf[oJ])then else(Gf)[oJ]={dJ[oJ]};end;end;D3[0X1]=Gf[oJ];do D3[2]=0x1;end;end;end;end;end;end;end;until true;return;end;end;else if zA~=0xa then do mV[QA[7]]=QA[0X02];end;else mV[QA[7]]=not mV[QA[0X6]];end;end;end;end;end;end;end);do if IV then if qV then if XV==1 then do return mV[gV]();end;else return mV[gV](f(mV,gV+0X01,dV));end;elseif gV then do return f(mV,gV,XV);end;end;else if e(qV)~="string"then V(qV,0);else if not(p(qV,'\097\116t\e\mpt t\o\ \y\105\e\108\d a\c\114\o\s\s\032\me\116a\109et\h\o\100/\C\%\-\ca\l\l \098\111\117\110d\097\114\y'))then else return coroutine.yield();end;if p(qV,"\^\.\-\:\%\100\+\:\032")then V("\L\117r\097\112\104\ \S\c\114i\pt\:"..(Dm[vV-0X00001]or"(internal)").."\:\032"..v(qV),0);else V(qV,0);end;end;end;end;end;end;end;end;else if not(xm<0X23)then if xm~=0X24 then do Km=function(...)local Zg={};local Og=(0);local Tg=(1);local tg={[2]=Zg,[1]=Xm};local Eg=(K());local Ag=((Eg==g and Qm or Eg));local Wg,Vg=eH(...);Wg=Wg-0X001;for vP=0,Wg do if km>vP then Zg[vP]=Vg[vP+1];else do break;end;end;end;if not Lm then do Vg=nil;end;elseif not(Um)then else Zg[km]={n=Wg>=km and Wg-km+0X01 or 0,f(Vg,km+0x1,Wg+1)};end;if Ag==Eg then else w(Km,Ag);end;local fg,mg,ng,Cg=o(function()do while true do local Xq=Sm[Tg];local Iq=Xq[0X4];do Tg=Tg+0X001;end;if Iq<8 then if Iq<0X0004 then do if Iq<2 then if Iq~=1 then for Wc=Xq[7],Xq[0x006]do Zg[Wc]=nil;end;else local oS=(Zm[Xq[6]]);local NS,aS=oS[3],(nil);local US=(#NS);if US>0X0 then aS={};for r9=1,US do local V9=(NS[r9]);if V9[1]~=0 then(aS)[r9-0X0001]=bm[V9[2]];else do aS[r9-0X1]={Zg,V9[0X0002]};end;end;end;(M)(Cm,aS);end;Zg[Xq[0X7]]=dH(oS,aS,Ag);end;else if Iq==0X3 then local jG=Xq[0X7];local yG=Zg[jG+2];local LG,YG=Zg[jG],(Zg[jG+0X1]);(Zg)[jG]=r(function()for W3=LG,YG,yG do(C)(true,W3);end;end);do Tg=Xq[6];end;else(Zg)[Xq[7]]=Zg[Xq[6]];end;end;end;else if Iq>=0x00006 then do if Iq==7 then(Zg)[Xq[7]]=Zg[Xq[0X00006]]>Zg[Xq[1]];else Zg[Xq[7]]={f({},0X1,Xq[6])};end;end;else if Iq==5 then do(Zg)[0]=Ag[Xq[2]];end;Tg=Tg+0X01;Tg=Tg+0x001;Xq=Sm[Tg];local SD=Zg[0x000];Tg=Tg+1;local ND=(0X00);Zg[ND+0X1]=SD;(Zg)[ND]=SD[Xq[0X5]];Xq=Sm[Tg];Tg=Tg+0X01;do Zg[2]=Xq[2];end;Tg=Tg+0X1;ND=0;do Zg[ND]=Zg[ND](Zg[ND+1],Zg[ND+0x2]);end;do Og=ND;end;Tg=Tg+0X1;Tg=Tg+1;Xq=Sm[Tg];Tg=Tg+1;(Zg)[0X1]=Ag[Xq[2]];Xq=Sm[Tg];Tg=Tg+1;do(Zg)[0X0001]=Zg[0X00001][Xq[0X5]];end;Tg=Tg+0x0001;Tg=Tg+1;Xq=Sm[Tg];Tg=Tg+0X1;local jD,wD=Zm[Xq[0x00006]],(nil);local UD=(jD[0X3]);local tD=(#UD);if tD>0X0 then wD={};for AU=1,tD do local QU=UD[AU];if QU[1]==0X000 then do(wD)[AU-1]={Zg,QU[2]};end;else(wD)[AU-0X00001]=bm[QU[0X02]];end;end;(M)(Cm,wD);end;Zg[2]=dH(jD,wD,Ag);Tg=Tg+0x1;ND=0X001;(Zg[ND])(Zg[ND+1]);do Og=ND-0x1;end;do Tg=Tg+0X1;end;Tg=Tg+1;do Tg=Tg+0X1;end;do repeat local f5,H5=Cm,Zg;do if#f5>0 then local En={};for vO,uO in I,f5 do do for os,ks in I,uO do if ks[0X1]==H5 and ks[0X2]>=0 then local qP=ks[0X0002];if not En[qP]then do En[qP]={H5[qP]};end;end;(ks)[0x1]=En[qP];do(ks)[0X2]=1;end;end;end;end;end;end;end;until true;end;return;else local zA,yA=Xq[0x007],Xq[0X6];do if yA==0x0 then else do Og=zA+yA-0X1;end;end;end;local uA,ZA=nil,(nil);local TA=(Xq[0X00001]);do if yA~=1 then uA,ZA=eH(Zg[zA](f(Zg,zA+1,Og)));else uA,ZA=eH(Zg[zA]());end;end;if TA~=0X1 then if TA~=0 then uA=zA+TA-0X2;Og=uA+0X1;else uA=uA+zA-0X1;Og=uA;end;local na=(0X00000);do for cM=zA,uA do do na=na+0x1;end;(Zg)[cM]=ZA[na];end;end;else do Og=zA-0X0001;end;end;end;end;end;else if not(Iq>=0XC)then if Iq<10 then do if Iq==9 then do Zg[Xq[7]]=Zg[Xq[6]]+Zg[Xq[0X0001]];end;else end;end;else if Iq~=11 then Zg[Xq[7]]=Zg[Xq[0X6]]==Zg[Xq[0X1]];else do Tg=Xq[6];end;end;end;else if not(Iq>=14)then do if Iq~=0Xd then if not(Zg[Xq[6]]<Zg[Xq[1]])then Tg=Xq[0x7];end;else Zg[Xq[7]]=Zg[Xq[6]]*Zg[Xq[1]];end;end;else if Iq~=15 then(Zg)[Xq[0x0007]]=Ag[Xq[2]];else do(Zg)[Xq[0X07]]=Xq[0X2];end;end;end;end;end;end;end;end);do if fg then do if mg then if Cg==1 then return Zg[ng]();else return Zg[ng](f(Zg,ng+1,Og));end;elseif not(ng)then else do return f(Zg,ng,Cg);end;end;end;else if e(mg)=='\s\116\114\ing'then if p(mg,"\097tt\e\m\112t \116\o\ y\i\e\ld\032\097\099\114\o\s\s\032\m\101\116a\m\101th\o\d\047\C\%\-\099\097l\l\ b\o\117\110\d\097r\y")then do return coroutine.yield();end;end;if p(mg,"^.-:%d+: ")then(V)('Lur\097\p\104\ \S\c\114ipt\:'..(Dm[Tg-0x1]or"(internal)").."\:\ "..v(mg),0);else(V)(mg,0);end;else V(mg,0);end;end;end;end;end;else do Km=function(...)local t6,k6=0X01,{};local a6=({[2]=k6,[1]=Xm});local I6=K();local f6,Q6=eH(...);f6=f6-0X1;for aO=0x0,f6 do if not(km>aO)then do break;end;else k6[aO]=Q6[aO+0X0001];end;end;local s6=((I6==g and Qm or I6));if not Lm then Q6=nil;elseif Um then do k6[km]={n=f6>=km and f6-km+1 or 0X0,f(Q6,km+0X00001,f6+0x1)};end;end;if s6~=I6 then w(Km,s6);end;local K6=0;do while true do local mZ=(Sm[t6]);local hZ=(mZ[4]);t6=t6+0X1;do return(function(R,p,...)local O,D=R[0],R[1];return O:lower():sub(1,#D)==D:lower();end)(k6,bm,...);end;end;end;end;end;end;else Km=function(...)local fx,Cx=0,({});local Wx=K();local px=({[2]=Cx,[1]=Xm});local Dx,Jx=eH(...);Dx=Dx-1;local tx=((Wx==g and Qm or Wx));for Kn=0,Dx do do if not(km>Kn)then break;else Cx[Kn]=Jx[Kn+1];end;end;end;if not Lm then do Jx=nil;end;elseif Um then Cx[km]={n=Dx>=km and Dx-km+1 or 0,f(Jx,km+0X00001,Dx+1)};end;local Nx=(1);do if tx~=Wx then(w)(Km,tx);end;end;local ux,Ax,Qx,lx=o(function()while true do local aU=(Sm[Nx]);local qU=(aU[4]);do Nx=Nx+0X1;end;if qU<0X6 then if not(qU>=3)then if qU>=0x1 then if qU~=2 then(Cx)[aU[0x0007]]=S(Cx[aU[6]],Cx[aU[1]]);else for h0=aU[0X00007],aU[0X6]do do(Cx)[h0]=nil;end;end;end;else local fZ=(Zm[aU[6]]);local IZ=(fZ[0x3]);local JZ=#IZ;local zZ=(nil);if not(JZ>0)then else do zZ={};end;do for tl=1,JZ do local Zl=IZ[tl];do if Zl[1]==0 then(zZ)[tl-1]={Cx,Zl[0X2]};else zZ[tl-1]=bm[Zl[2]];end;end;end;end;M(Cm,zZ);end;do Cx[aU[0X7]]=dH(fZ,zZ,tx);end;end;else if not(qU>=4)then(Cx)[0]=tx[aU[2]];do aU=Sm[Nx];end;local f5=(0);Nx=Nx+1;local n5=(Cx[0]);Cx[f5+1]=n5;(Cx)[f5]=n5[aU[0X5]];do aU=Sm[Nx];end;Nx=Nx+1;Cx[2]=aU[0X0002];Nx=Nx+0x1;f5=0X0;(Cx)[f5]=Cx[f5](Cx[f5+1],Cx[f5+0x002]);fx=f5;Nx=Nx+1;Nx=Nx+1;aU=Sm[Nx];Nx=Nx+1;(Cx)[1]=tx[aU[2]];aU=Sm[Nx];local Y5=nil;do Nx=Nx+0X001;end;(Cx)[0X1]=Cx[1][aU[5]];Nx=Nx+0x1;do Nx=Nx+1;end;do aU=Sm[Nx];end;Nx=Nx+1;local z5=(Zm[aU[6]]);local g5=(z5[3]);local d5=(#g5);do if not(d5>0)then else Y5={};for su=0X1,d5 do local Zu=g5[su];if Zu[0X1]~=0X0 then(Y5)[su-1]=bm[Zu[2]];else do Y5[su-1]={Cx,Zu[0x2]};end;end;end;(M)(Cm,Y5);end;end;(Cx)[2]=dH(z5,Y5,tx);Nx=Nx+0X1;do f5=1;end;Cx[f5](Cx[f5+0X0001]);fx=f5-0X1;do Nx=Nx+1;end;Nx=Nx+0X01;Nx=Nx+0x1;repeat local sl,Ol=Cm,Cx;if not(#sl>0X0000)then else local Rz={};for gs,Ls in I,sl do for VQ,IQ in I,Ls do do if not(IQ[1]==Ol and IQ[2]>=0)then else local a8=IQ[2];if not(not Rz[a8])then else(Rz)[a8]={Ol[a8]};end;(IQ)[1]=Rz[a8];do IQ[0X2]=1;end;end;end;end;end;end;until true;return;else do if qU==5 then if Cx[aU[6]]~=Cx[aU[1]]then else do Nx=aU[7];end;end;else end;end;end;end;else if not(qU<0x9)then do if qU<0X00b then if qU==0Xa then Cx[aU[0X7]]=tx[aU[0X2]];else do(Cx)[aU[0X7]]=aU[0X002];end;end;else if qU~=0X0000C then(Cx[aU[0X7]])[Cx[aU[6]]]=Cx[aU[1]];else(Cx)[aU[0x7]]=l(Cx[aU[0X6]],Cx[aU[1]]);end;end;end;else do if not(qU>=0X7)then(Cx)[aU[0x7]]={f({},1,aU[0X6])};else do if qU==0X0008 then Nx=aU[6];else do Cx[aU[0x0007]]=#Cx[aU[6]];end;end;end;end;end;end;end;end;end);do if not(ux)then if e(Ax)=="\115tr\in\g"then do if p(Ax,"a\116\116\101\109\p\116\ \116\o\032\y\105\eld\032a\cro\s\s \m\et\097m\e\116\h\od\/\C\%\-\c\097\l\l b\111\117\110\dar\y")then do return coroutine.yield();end;end;end;if p(Ax,'\^\046\045:\%\d\+\:\032')then(V)("Luraph Script:"..(Dm[Nx-0X1]or"(internal)")..':\ '..v(Ax),0X0);else(V)(Ax,0X000);end;else(V)(Ax,0x0);end;else if Ax then do if lx~=0X0001 then return Cx[Qx](f(Cx,Qx+0x1,fx));else do return Cx[Qx]();end;end;end;elseif Qx then do return f(Cx,Qx,lx);end;end;end;end;end;end;end;end;else do if xm<0X2B then if xm>=41 then if xm~=42 then Km=function(...)local nY={};local uY=(1);local DY=(K());local JY,vY=eH(...);local cY={[2]=nY,[1]=Xm};JY=JY-0X01;for Fj=0,JY do if not(km>Fj)then do break;end;else do nY[Fj]=vY[Fj+1];end;end;end;if not Lm then vY=nil;elseif not(Um)then else do(nY)[km]={n=JY>=km and JY-km+1 or 0,f(vY,km+1,JY+1)};end;end;local MY=(DY==g and Qm or DY);local CY=0;if MY==DY then else(w)(Km,MY);end;local IY,bY,qY,tY=o(function()do while true do local Ow=Sm[uY];local Sw=Ow[4];do uY=uY+0X1;end;if Sw<21 then do if not(Sw>=0XA)then do if not(Sw>=5)then if not(Sw<2)then if Sw>=0X3 then do if Sw==0X4 then repeat local XQ,OQ=Cm,nY;if#XQ>0X0000 then local SL={};for oM,SM in I,XQ do for Ax,Ex in I,SM do do if not(Ex[1]==OQ and Ex[2]>=0)then else local x8=Ex[0X2];if not(not SL[x8])then else(SL)[x8]={OQ[x8]};end;(Ex)[1]=SL[x8];Ex[2]=0x1;end;end;end;end;end;until true;do return;end;else nY[3]=MY[Ow[2]];do Ow=Sm[uY];end;uY=uY+0X1;local lX=0X3;nY[4]=Ow[2];do uY=uY+1;end;(nY)[0X5]=true;do uY=uY+0X001;end;nY[lX]=nY[lX](nY[lX+1],nY[lX+2]);CY=lX;do Ow=Sm[uY];end;uY=uY+0X1;if nY[3]~=Ow[0X0005]then else do uY=Ow[0X7];end;end;end;end;else if nY[Ow[0x007]]then uY=Ow[0x00006];end;end;else if Sw==0x1 then(nY)[0X2]=MY[Ow[2]];uY=uY+0X1;uY=uY+1;Ow=Sm[uY];uY=uY+1;(nY)[0X3]=Ow[0X2];do uY=uY+1;end;do nY[0X0004]=true;end;uY=uY+0X01;local pz=2;(nY)[pz]=nY[pz](nY[pz+1],nY[pz+2]);do CY=pz;end;uY=uY+1;uY=uY+0X00001;Ow=Sm[uY];uY=uY+1;if not nY[2]then uY=Ow[0X6];end;else nY[4]=nY[0X2][Ow[0x5]];uY=uY+0x1;uY=uY+0X1;Ow=Sm[uY];uY=uY+1;(nY)[0X4]=nY[4][Ow[0X5]];do Ow=Sm[uY];end;uY=uY+1;uY=Ow[6];end;end;else do if Sw>=0x0007 then if Sw>=0X0008 then if Sw~=9 then for ki=Ow[7],Ow[6]do(nY)[ki]=nil;end;else do(nY)[2]=MY[Ow[2]];end;Ow=Sm[uY];do uY=uY+1;end;nY[0X002]=nY[0X2][Ow[5]];Ow=Sm[uY];do uY=uY+0x001;end;do if not nY[0x00002]then do uY=Ow[0X6];end;end;end;end;else do(nY)[Ow[0X7]]=MY[Ow[0X2]];end;end;else do if Sw==0X6 then do(nY)[0X3]=MY[Ow[2]];end;do uY=uY+0X1;end;uY=uY+0X0001;Ow=Sm[uY];uY=uY+1;(nY)[3]=nY[3][Ow[5]];Ow=Sm[uY];uY=uY+1;do nY[0X3]=nY[0x003][Ow[0X5]];end;uY=uY+0x0001;do uY=uY+1;end;Ow=Sm[uY];uY=uY+0X1;(nY)[0X3]=nY[0X3][Ow[5]];uY=uY+1;uY=uY+0X1;Ow=Sm[uY];do uY=uY+1;end;do if not(Ow[2]<=nY[0X3])then uY=Ow[7];end;end;else do(MY)[Ow[2]]=nY[Ow[7]];end;end;end;end;end;end;end;else if Sw>=15 then if Sw<18 then if Sw>=0X0010 then do if Sw==0X0011 then local xK,dK=Ow[0X00007],(Ow[6]);CY=xK+dK-0X1;repeat local Bd,Ud=Cm,(nY);if#Bd>0X00 then local ju={};for a4,g4 in I,Bd do do for WL,eL in I,g4 do if eL[1]==Ud and eL[0X2]>=0 then local Uu=eL[2];if not(not ju[Uu])then else do(ju)[Uu]={Ud[Uu]};end;end;eL[1]=ju[Uu];do(eL)[0X02]=0X1;end;end;end;end;end;end;until true;return true,xK,dK;else do nY[0X2]=MY[Ow[2]];end;uY=uY+1;uY=uY+0X1;do Ow=Sm[uY];end;uY=uY+1;do(nY)[2]=nY[0x2][Ow[5]];end;Ow=Sm[uY];do uY=uY+0X1;end;do if not(nY[2])then else do uY=Ow[0x006];end;end;end;end;end;else do nY[0X00005]=MY[Ow[2]];end;do uY=uY+0x00001;end;do uY=uY+1;end;uY=uY+0X0001;do CY=0x05;end;nY[CY]=nY[CY]();Ow=Sm[uY];uY=uY+1;do if not(nY[5])then else do uY=Ow[0x6];end;end;end;end;else if Sw<0X00013 then(nY)[Ow[0X7]]=nY[Ow[6]]^nY[Ow[0X1]];else if Sw==0X14 then do nY[Ow[0X7]]=true;end;else(nY)[0x4]=MY[Ow[0x2]];uY=uY+1;CY=4;do nY[CY]=nY[CY]();end;uY=uY+0x1;uY=uY+1;Ow=Sm[uY];uY=uY+1;if not(nY[4])then else uY=Ow[0X6];end;end;end;end;else if Sw>=0Xc then if Sw<0XD then if nY[Ow[0x6]]~=Ow[0X5]then do uY=Ow[7];end;end;else do if Sw~=0xE then(nY)[Ow[7]]={f({},1,Ow[0X06])};else do if not(Ow[2]<=nY[Ow[1]])then uY=Ow[7];end;end;end;end;end;else do if Sw~=11 then do(nY)[0x3]=MY[Ow[0X2]];end;Ow=Sm[uY];uY=uY+1;(nY[3])[Ow[0X2]]=Ow[0X5];Ow=Sm[uY];uY=uY+0X1;uY=Ow[6];else do nY[0X4]=MY[Ow[2]];end;uY=uY+1;do uY=uY+0X01;end;Ow=Sm[uY];do uY=uY+0x01;end;do(nY)[4]=nY[4][Ow[0X005]];end;do Ow=Sm[uY];end;uY=uY+1;if not(nY[4])then else uY=Ow[6];end;end;end;end;end;end;end;else if not(Sw<0X1F)then if Sw>=0X0024 then if Sw<0X27 then if not(Sw>=37)then local ux=(Zm[Ow[6]]);local Dx=(ux[3]);local Sx=(nil);local px=(#Dx);do if not(px>0)then else do Sx={};end;do for fh=1,px do local wh=Dx[fh];if wh[1]==0 then Sx[fh-1]={nY,wh[0x2]};else do Sx[fh-1]=bm[wh[2]];end;end;end;end;M(Cm,Sx);end;end;(nY)[Ow[0X0007]]=dH(ux,Sx,MY);else if Sw==38 then do nY[2]=MY[Ow[2]];end;uY=uY+1;uY=uY+1;Ow=Sm[uY];uY=uY+0x1;local Pl=0X00002;do(nY)[3]=Ow[2];end;do uY=uY+0x1;end;(nY)[Pl]=nY[Pl](nY[Pl+0X01]);do CY=Pl;end;uY=uY+0x001;do uY=uY+1;end;do Ow=Sm[uY];end;do uY=uY+1;end;do if not nY[2]then uY=Ow[0X006];end;end;else end;end;else do if not(Sw<0x28)then if Sw==0X29 then do(nY)[0]=MY[Ow[0X2]];end;uY=uY+0X1;uY=uY+1;local RO=0;Ow=Sm[uY];do uY=uY+1;end;do(nY)[0X1]=MY[Ow[2]];end;uY=uY+1;uY=uY+1;do Ow=Sm[uY];end;uY=uY+0x00001;(nY)[0x00002]=Ow[2];do Ow=Sm[uY];end;uY=uY+1;(nY)[3]=MY[Ow[0x0002]];Ow=Sm[uY];uY=uY+0X1;nY[3]=nY[0X00003][Ow[0x5]];uY=uY+1;do uY=uY+1;end;uY=uY+0X1;local jO=0x3;local FO=(4);if FO==0x0 then else CY=RO+FO-1;end;local kO,HO=nil,(nil);if FO==1 then kO,HO=eH(nY[RO]());else kO,HO=eH(nY[RO](f(nY,RO+0X1,CY)));end;do if jO==1 then do CY=RO-1;end;else if jO==0X0 then kO=kO+RO-0X1;CY=kO;else kO=RO+jO-0X2;CY=kO+0X1;end;local SF=(0);for Fz=RO,kO do SF=SF+1;do nY[Fz]=HO[SF];end;end;end;end;do Ow=Sm[uY];end;uY=uY+1;if not nY[0]then uY=Ow[0X6];end;else nY[3]=MY[Ow[2]];uY=uY+1;do uY=uY+1;end;uY=uY+1;(nY)[4]=nY[0x01];uY=uY+0x001;local Dx=0x3;nY[Dx]=nY[Dx](nY[Dx+0x1]);CY=Dx;do uY=uY+1;end;uY=uY+0x1;Ow=Sm[uY];uY=uY+1;if nY[0X003]==Ow[0X00005]then else uY=Ow[7];end;end;else nY[0x3]=true;do Ow=Sm[uY];end;uY=uY+1;MY[Ow[2]]=nY[3];Ow=Sm[uY];uY=uY+1;do uY=Ow[6];end;end;end;end;else if Sw<0x21 then if Sw==32 then if nY[Ow[0X6]]~=Ow[0X5]then else uY=Ow[7];end;else(nY)[0X2]=MY[Ow[0X00002]];uY=uY+1;uY=uY+0X0001;do Ow=Sm[uY];end;uY=uY+1;do if not(nY[0x00002])then else uY=Ow[6];end;end;end;else if Sw<0X22 then uY=Ow[0X6];else if Sw==0x23 then local N5=Ow[6];local v5=(nY[N5]);do for Rc=N5+1,Ow[1]do v5=v5..nY[Rc];end;end;nY[Ow[0X7]]=v5;else nY[0X0003]=MY[Ow[0X00002]];do Ow=Sm[uY];end;uY=uY+0X0001;do nY[3]=nY[3][Ow[0X5]];end;do Ow=Sm[uY];end;do uY=uY+0X1;end;do(nY)[0X03]=nY[3][Ow[0X5]];end;do Ow=Sm[uY];end;uY=uY+1;do if not(not(Ow[2]<=nY[0X3]))then else uY=Ow[7];end;end;end;end;end;end;else if not(Sw>=0x00001a)then do if Sw>=23 then if not(Sw<24)then do if Sw~=0x19 then do nY[3]=MY[Ow[2]];end;uY=uY+1;uY=uY+0X1;local a5=(3);Ow=Sm[uY];do uY=uY+1;end;do nY[0X00003][Ow[0x2]]=Ow[0X0005];end;Ow=Sm[uY];uY=uY+0X1;(nY)[0x3]=MY[Ow[2]];uY=uY+0X1;CY=3;(nY[CY])();do CY=CY-0x01;end;Ow=Sm[uY];uY=uY+1;(nY)[3]=MY[Ow[2]];uY=uY+1;uY=uY+1;Ow=Sm[uY];uY=uY+0X001;(nY)[4]=MY[Ow[2]];uY=uY+1;uY=uY+0X0001;uY=uY+0X1;(nY[a5])(nY[a5+1]);do CY=a5-0x1;end;uY=uY+0X1;uY=uY+0X001;Ow=Sm[uY];uY=uY+0X01;do uY=Ow[0X6];end;else nY[3]=false;Ow=Sm[uY];do uY=uY+1;end;MY[Ow[2]]=nY[0x3];Ow=Sm[uY];uY=uY+0X1;(nY)[0X3]=MY[Ow[0x00002]];Ow=Sm[uY];uY=uY+0X1;do(nY)[4]=Ow[2];end;local mp=3;uY=uY+1;(nY)[mp]=nY[mp](nY[mp+0x0001]);CY=mp;uY=uY+1;uY=uY+1;Ow=Sm[uY];uY=uY+0X1;do if not(not nY[0X003])then else do uY=Ow[6];end;end;end;end;end;else nY[2]=MY[Ow[2]];uY=uY+1;uY=uY+0X00001;Ow=Sm[uY];do uY=uY+0x1;end;(nY[2])[Ow[0X2]]=Ow[5];Ow=Sm[uY];do uY=uY+1;end;nY[0X00002]=MY[Ow[0X2]];uY=uY+1;CY=0X002;nY[CY]();CY=CY-1;uY=uY+0X00001;uY=uY+1;do uY=uY+1;end;repeat local u7,L7=Cm,nY;if#u7>0 then local OH={};for wW,xW in I,u7 do for gV,ZV in I,xW do if ZV[1]==L7 and ZV[2]>=0 then local Hn=(ZV[0X2]);do if not OH[Hn]then do OH[Hn]={L7[Hn]};end;end;end;(ZV)[1]=OH[Hn];ZV[0X2]=1;end;end;end;end;until true;return;end;else if Sw==22 then do(nY)[0X2]=MY[Ow[2]];end;uY=uY+0x00001;uY=uY+0X0001;Ow=Sm[uY];do uY=uY+0X1;end;do nY[0X00003]=Ow[2];end;local U8=0x0002;Ow=Sm[uY];uY=uY+1;nY[4]=Ow[0X2];do uY=uY+0X1;end;nY[U8]=nY[U8](nY[U8+1],nY[U8+0X00002]);CY=U8;do uY=uY+1;end;uY=uY+1;Ow=Sm[uY];do uY=uY+1;end;if nY[0X0002]then uY=Ow[6];end;else do(nY)[Ow[7]]=Ow[2];end;end;end;end;else if not(Sw<28)then if Sw<29 then(nY)[2]=MY[Ow[0X2]];uY=uY+0X00001;do uY=uY+1;end;Ow=Sm[uY];uY=uY+0X001;nY[0X02]=nY[2][Ow[5]];Ow=Sm[uY];uY=uY+0X01;do if nY[0X0002]then uY=Ow[6];end;end;else if Sw~=30 then do(nY)[3]=MY[Ow[0X02]];end;Ow=Sm[uY];local zo,xo=Zm[Ow[0x6]],(3);uY=uY+1;local ko,jo=nil,(zo[3]);local no=#jo;if no>0X00 then ko={};for zk=1,no do local Dk=(jo[zk]);do if Dk[1]~=0x0 then do(ko)[zk-1]=bm[Dk[2]];end;else ko[zk-1]={nY,Dk[0X002]};end;end;end;M(Cm,ko);end;nY[0X00004]=dH(zo,ko,MY);uY=uY+1;(nY[xo])(nY[xo+0X01]);CY=xo-1;uY=uY+1;uY=uY+0x00001;Ow=Sm[uY];uY=uY+0X001;uY=Ow[6];else nY[2]=MY[Ow[0X2]];do uY=uY+1;end;do uY=uY+0X1;end;Ow=Sm[uY];uY=uY+0X1;nY[2][Ow[0x00002]]=Ow[5];do Ow=Sm[uY];end;do uY=uY+0X01;end;uY=Ow[0X006];end;end;else if Sw==0X1b then do(nY)[0X2]=MY[Ow[2]];end;do Ow=Sm[uY];end;do uY=uY+0X1;end;nY[2]=nY[0X002][Ow[0X5]];uY=uY+1;do uY=uY+1;end;Ow=Sm[uY];do uY=uY+0X1;end;do if not nY[0X2]then uY=Ow[0x006];end;end;else nY[3]=MY[Ow[2]];Ow=Sm[uY];uY=uY+1;nY[3][Ow[2]]=Ow[5];do Ow=Sm[uY];end;uY=uY+1;nY[3]=MY[Ow[0X2]];uY=uY+0X1;uY=uY+1;do Ow=Sm[uY];end;uY=uY+0X1;do if not(nY[0X00003])then else uY=Ow[0x0006];end;end;end;end;end;end;end;end;end;end);if IY then do if bY then do if tY~=1 then return nY[qY](f(nY,qY+1,CY));else return nY[qY]();end;end;elseif not(qY)then else return f(nY,qY,tY);end;end;else if e(bY)~="string"then V(bY,0);else if p(bY,"a\116\116\em\pt\ to\ \y\105e\108\d a\c\114\111\ss\ me\116a\m\e\116\104\o\d\/C\037\045\099a\ll \098\ou\110\dar\y")then return coroutine.yield();end;if not(p(bY,"^.-:%d+: "))then V(bY,0);else V("\Lurap\h\ \S\c\114i\112\116\058"..(Dm[uY-1]or"\040\i\110\116\e\114\110\097\108\041")..": "..v(bY),0x0000);end;end;end;end;else Km=function(...)local O0,l0=1,{};local R0=(K());local k0,i0=0,(R0==g and Qm or R0);local D0,W0=eH(...);local I0=({[2]=l0,[1]=Xm});D0=D0-1;for ZT=0X0,D0 do if not(km>ZT)then break;else l0[ZT]=W0[ZT+1];end;end;if not Lm then W0=nil;elseif not(Um)then else(l0)[km]={n=D0>=km and D0-km+1 or 0,f(W0,km+0x001,D0+0X00001)};end;if i0~=R0 then(w)(Km,i0);end;local q0,E0,P0,g0=o(function()while true do local V0=(Sm[O0]);local a0=V0[4];do O0=O0+1;end;if a0<8 then if not(a0<4)then if not(a0<0X6)then if a0==7 then local Kh,Wh=V0[7],((V0[1]-0x0001)*0X32);local Zh=l0[Kh];for Rp=0X1,V0[0X6]do(Zh)[Wh+Rp]=l0[Kh+Rp];end;else local W4=(bm[0X0000]);(l0)[0x1]=W4[1][W4[2]];O0=O0+1;O0=O0+0X1;V0=Sm[O0];O0=O0+1;do(l0)[0x1]=l0[1][V0[0X05]];end;O0=O0+0X1;do l0[2]=l0[0X0];end;O0=O0+0X1;local B4=(1);W4=bm[1];l0[0X3]=W4[0X1][W4[2]];O0=O0+1;do O0=O0+0x1;end;do O0=O0+0x1;end;(l0[B4])(l0[B4+0X1],l0[B4+0X2]);do k0=B4-1;end;do O0=O0+1;end;do W4=bm[0X1];end;(l0)[0X1]=W4[0X1][W4[0X2]];local j4=l0[0X01];O0=O0+0X00001;O0=O0+1;do V0=Sm[O0];end;O0=O0+1;B4=0X00001;l0[B4+1]=j4;do(l0)[B4]=j4[V0[5]];end;do O0=O0+1;end;B4=0X1;l0[B4](l0[B4+1]);k0=B4-0x001;O0=O0+1;do O0=O0+0X01;end;end;else if a0==0X0005 then O0=V0[0X06];else repeat local Px,Kx,tx=Cm,l0,(V0[7]);if#Px>0 then local PS=({});for i3,T3 in I,Px do for zr,ir in I,T3 do do if ir[0X001]==Kx and ir[2]>=tx then local Sr=(ir[0X2]);if not(not PS[Sr])then else(PS)[Sr]={Kx[Sr]};end;(ir)[1]=PS[Sr];ir[0X2]=0X001;end;end;end;end;end;until true;end;end;else if not(a0<0X2)then do if a0==0X0003 then l0[V0[0X7]]=V0[0X2];else if l0[V0[0X06]]==l0[V0[1]]then O0=V0[0x0007];end;end;end;else if a0~=1 then l0[V0[0X00007]]=#l0[V0[0X6]];else(l0)[V0[7]]=i0[V0[2]];end;end;end;else if a0<12 then if a0<0X0000A then do if a0~=9 then l0[V0[7]]={f({},1,V0[0x00006])};else repeat local o7,r7=Cm,(l0);do if not(#o7>0)then else local tI=({});do for Xr,gr in I,o7 do do for fJ,cJ in I,gr do if not(cJ[0X1]==r7 and cJ[2]>=0)then else local NG=(cJ[0X2]);if not tI[NG]then tI[NG]={r7[NG]};end;cJ[0X1]=tI[NG];cJ[2]=1;end;end;end;end;end;end;end;until true;do return;end;end;end;else do if a0~=11 then for fV=V0[7],V0[0X6]do l0[fV]=nil;end;else do l0[V0[0X00007]]=I0[V0[0X6]];end;end;end;end;else do if not(a0<14)then if not(a0<15)then if a0~=16 then else(I0)[V0[6]]=l0[V0[0x7]];end;else local Bm=(Zm[V0[0X6]]);local pm,Wm=Bm[3],nil;local fm=(#pm);do if not(fm>0x0)then else Wm={};for nr=1,fm do local lr=pm[nr];if lr[1]~=0 then Wm[nr-1]=bm[lr[2]];else Wm[nr-1]={l0,lr[2]};end;end;(M)(Cm,Wm);end;end;l0[V0[0X7]]=dH(Bm,Wm,i0);end;else if a0~=0Xd then do(l0)[0]=i0[V0[2]];end;V0=Sm[O0];O0=O0+0x0001;l0[0x1]=V0[0X00002];do O0=O0+0X001;end;local Mx=(0X0000);local gx=bm[0];l0[Mx]=l0[Mx](l0[Mx+0X1]);k0=Mx;do O0=O0+1;end;O0=O0+1;O0=O0+0X00001;l0[1]=gx[0X1][gx[0X2]];V0=Sm[O0];O0=O0+1;do(l0)[1]=l0[0X1][V0[5]];end;O0=O0+0x1;do O0=O0+0x1;end;do O0=O0+0X1;end;l0[0X2]=l0[0x0];O0=O0+1;Mx=1;do l0[Mx]=l0[Mx](l0[Mx+0X1]);end;k0=Mx;O0=O0+1;O0=O0+1;V0=Sm[O0];O0=O0+1;if not l0[1]then O0=V0[0X6];end;else local g_=(V0[0X7]);local P_=r(function(...)C();for lx,ax,Mx,hx,Ix,Qx,wx,yx,ux,Wx in...do(C)(true,{lx,ax,Mx,hx,Ix,Qx,wx,yx,ux,Wx});end;end);P_(l0[g_],l0[g_+1],l0[g_+2]);do k0=g_;end;do l0[g_]=P_;end;O0=V0[6];end;end;end;end;end;end;end);do if q0 then if E0 then do if g0==0X1 then return l0[P0]();else return l0[P0](f(l0,P0+0X1,k0));end;end;elseif P0 then return f(l0,P0,g0);end;else if e(E0)~="str\in\g"then(V)(E0,0X00);else do if not(p(E0,'a\116\116\e\m\p\116 to\ \121\105\101\l\100 \097c\114oss\ \109eta\m\e\116\104\o\100/\C%-\c\097\l\l\ \098\ou\110\100\097r\y'))then else return coroutine.yield();end;end;if not(p(E0,"^.-:%d+: "))then(V)(E0,0);else V("L\117raph\ \S\099\114i\pt\:"..(Dm[O0-0X001]or"\040\in\116\erna\l\041")..': '..v(E0),0);end;end;end;end;end;end;else do Km=function(...)local J1=({});local Q1=0X1;local E1=K();local S1=({[2]=J1,[1]=Xm});local o1,Y1=eH(...);o1=o1-0X1;local a1=((E1==g and Qm or E1));for BI=0,o1 do do if not(km>BI)then break;else(J1)[BI]=Y1[BI+1];end;end;end;local B1=0;if not Lm then Y1=nil;elseif Um then(J1)[km]={n=o1>=km and o1-km+1 or 0x0,f(Y1,km+0X1,o1+1)};end;if a1==E1 then else(w)(Km,a1);end;local f1,L1,H1,u1=o(function()while true do local y2=(Sm[Q1]);local L2=y2[4];Q1=Q1+1;if L2>=5 then if L2<8 then do if L2<0X6 then local ah=(Zm[y2[6]]);local Fh,Ch=ah[3],(nil);local Dh=#Fh;if Dh>0X00000 then Ch={};for hp=0X1,Dh do local qp=Fh[hp];do if qp[1]~=0X0000 then(Ch)[hp-1]=bm[qp[0X02]];else(Ch)[hp-0x0001]={J1,qp[2]};end;end;end;(M)(Cm,Ch);end;(J1)[y2[0X7]]=dH(ah,Ch,a1);else if L2==7 then(J1)[y2[7]]=a1[y2[0X2]];else J1[y2[0X7]]=not J1[y2[6]];end;end;end;else if L2<0X9 then for fa=y2[0X07],y2[0X00006]do do(J1)[fa]=nil;end;end;else do if L2==0Xa then(J1)[y2[0X7]]=y2[0X02];else end;end;end;end;else if L2>=2 then if not(L2>=0X0003)then J1[y2[7]]={f({},1,y2[6])};else if L2==0x4 then(J1)[0X0]=a1[y2[0x002]];do Q1=Q1+0x1;end;Q1=Q1+1;y2=Sm[Q1];local Ey=0x0;Q1=Q1+0x01;J1[0X0]=J1[0X0][y2[5]];Q1=Q1+0x01;do Q1=Q1+1;end;do y2=Sm[Q1];end;local Cy=Zm[y2[6]];local wy=Cy[0X3];Q1=Q1+1;local Xy,fy=nil,(#wy);if fy>0 then Xy={};for kB=0x00001,fy do local dB=wy[kB];if dB[0X001]==0X00 then do(Xy)[kB-0X1]={J1,dB[0X02]};end;else(Xy)[kB-1]=bm[dB[0X002]];end;end;M(Cm,Xy);end;J1[1]=dH(Cy,Xy,a1);Q1=Q1+1;J1[Ey](J1[Ey+1]);B1=Ey-0x00001;Q1=Q1+1;do Q1=Q1+0X1;end;Q1=Q1+1;do repeat local Zy,Fy=Cm,(J1);if#Zy>0 then local NN={};for so,Ho in I,Zy do for WG,lG in I,Ho do do if not(lG[0X01]==Fy and lG[0x2]>=0X0)then else local pR=lG[0X0002];if not NN[pR]then(NN)[pR]={Fy[pR]};end;(lG)[0X1]=NN[pR];(lG)[0x2]=0x00001;end;end;end;end;end;until true;end;return;else do Q1=y2[0X6];end;end;end;else if L2==0X001 then J1[y2[7]][J1[y2[0x06]]]=J1[y2[0X1]];else do(a1)[y2[2]]=J1[y2[7]];end;end;end;end;end;end);if f1 then if L1 then do if u1~=1 then return J1[H1](f(J1,H1+0x1,B1));else do return J1[H1]();end;end;end;elseif not(H1)then else return f(J1,H1,u1);end;else do if e(L1)=="string"then if p(L1,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if not(p(L1,"^.-:%d+: "))then V(L1,0);else(V)('\076u\114\097\p\104\ \083\cr\i\112\116\:'..(Dm[Q1-1]or"\(\i\110\116\101\114nal\)")..": "..v(L1),0x0000);end;end;else(V)(L1,0);end;end;end;end;end;end;else if xm>=0X2c then if xm==0X02d then do Km=function(...)local Ef=(0X1);local Bf={};local hf=(0X0000);local Gf=(K());local Af=((Gf==g and Qm or Gf));local Of=({[1]=Xm,[2]=Bf});local mf,vf=eH(...);mf=mf-1;for da=0,mf do if km>da then Bf[da]=vf[da+1];else break;end;end;if not Lm then vf=nil;elseif not(Um)then else Bf[km]={n=mf>=km and mf-km+0X00001 or 0,f(vf,km+0x001,mf+0X1)};end;if Af~=Gf then w(Km,Af);end;local Kf,Qf,tf,wf=o(function()while true do local eb=(Sm[Ef]);local Fb=eb[0X4];Ef=Ef+1;do if Fb>=10 then if not(Fb<15)then if Fb<0X00012 then if not(Fb>=0x10)then do Bf[eb[7]]=O(Bf[eb[6]],Bf[eb[0X1]]);end;else do if Fb==0X11 then Bf[0X00]=Af[eb[0x2]];Ef=Ef+1;Ef=Ef+0X1;do eb=Sm[Ef];end;local dn=0X0;do Ef=Ef+1;end;do(Bf)[1]=eb[0x2];end;Ef=Ef+0X1;do(Bf)[dn]=Bf[dn](Bf[dn+0X1]);end;hf=dn;eb=Sm[Ef];Ef=Ef+1;if not(not Bf[0])then else Ef=eb[6];end;else(Bf)[eb[7]]=eb[0x0002];end;end;end;else if not(Fb<0X13)then do if Fb==20 then(Bf)[0]=Af[eb[2]];Ef=Ef+1;Ef=Ef+0X1;eb=Sm[Ef];Ef=Ef+1;do Bf[1]=eb[0X2];end;eb=Sm[Ef];Ef=Ef+0X1;do Bf[0X02]=eb[0x2];end;eb=Sm[Ef];Ef=Ef+0X001;Bf[3]=eb[2];local Ws=0x0;Ef=Ef+1;hf=Ws+0X4-1;(Bf)[Ws]=Bf[Ws](f(Bf,Ws+1,hf));hf=Ws;eb=Sm[Ef];Ef=Ef+0X1;if Bf[0X0]~=eb[5]then else Ef=eb[0X07];end;else Bf[0]=Af[eb[2]];do Ef=Ef+1;end;Ef=Ef+0X0001;eb=Sm[Ef];Ef=Ef+1;do(Bf)[0]=Bf[0X0][eb[5]];end;do eb=Sm[Ef];end;Ef=Ef+1;if not(not Bf[0X0])then else Ef=eb[0X006];end;end;end;else(Bf)[0x01]=true;eb=Sm[Ef];Ef=Ef+0x1;(Af)[eb[2]]=Bf[0X01];do eb=Sm[Ef];end;Ef=Ef+0X01;Ef=eb[0X0006];end;end;else if Fb<0x0C then do if Fb~=11 then if Bf[eb[6]]==Bf[eb[1]]then do Ef=eb[0x7];end;end;else do repeat local Yq,Gq=Cm,(Bf);do if not(#Yq>0)then else local le={};for QE,dE in I,Yq do for Q3,j3 in I,dE do if j3[0X0001]==Gq and j3[0x2]>=0X0000 then local f_=(j3[0x2]);if not(not le[f_])then else le[f_]={Gq[f_]};end;(j3)[1]=le[f_];do j3[0x2]=0x1;end;end;end;end;end;end;until true;end;do return;end;end;end;else do if not(Fb<0X000D)then if Fb==14 then(Bf)[eb[7]]=W(Bf[eb[6]],Bf[eb[1]]);else do Bf[eb[7]]=Bf[eb[0X06]]==Bf[eb[0X0001]];end;end;else end;end;end;end;else do if Fb<0x05 then do if not(Fb<0X2)then if not(Fb>=0X3)then do if not(not(Bf[eb[0X06]]<=Bf[eb[1]]))then else Ef=eb[0x007];end;end;else if Fb~=4 then if Bf[eb[6]]==eb[5]then else Ef=eb[7];end;else Bf[eb[7]]=not Bf[eb[6]];end;end;else if Fb==1 then Ef=eb[6];else Bf[eb[7]]={f({},0X1,eb[6])};end;end;end;else if not(Fb<7)then if not(Fb>=0X8)then local M8=(eb[7]);for Vc=M8,M8+(eb[6]-0X1)do Bf[Vc]=vf[km+(Vc-M8)+0x1];end;else do if Fb~=9 then do(Bf)[0X0]=Af[eb[0X00002]];end;do Ef=Ef+0x1;end;Ef=Ef+1;eb=Sm[Ef];do Ef=Ef+1;end;if Bf[0x0]then do Ef=eb[6];end;end;else local Ud,Md=Zm[eb[6]],(nil);local nd=(Ud[0x3]);local jd=(#nd);if not(jd>0X0)then else do Md={};end;for IC=0X1,jd do local xC=(nd[IC]);if xC[1]~=0 then(Md)[IC-1]=bm[xC[0X2]];else do(Md)[IC-0x1]={Bf,xC[0X2]};end;end;end;M(Cm,Md);end;Bf[eb[7]]=dH(Ud,Md,Af);end;end;end;else if Fb~=6 then do if not(not(Bf[eb[6]]<Bf[eb[1]]))then else Ef=eb[0X7];end;end;else(Bf)[eb[0x0007]]=Af[eb[2]];end;end;end;end;end;end;end;end);if Kf then if Qf then if wf==0X1 then return Bf[tf]();else return Bf[tf](f(Bf,tf+0X001,hf));end;elseif not(tf)then else return f(Bf,tf,wf);end;else if e(Qf)=='\115\116\114\in\103'then do if p(Qf,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if p(Qf,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[Ef-0X1]or"(internal)")..'\058\ '..v(Qf),0X0);else V(Qf,0x0);end;else(V)(Qf,0);end;end;end;end;else Km=function(...)local Oy,gy=0X0,({});local Wy=K();local vy,Fy=eH(...);local Jy={[2]=gy,[1]=Xm};do vy=vy-1;end;for Jm=0X0000,vy do if not(km>Jm)then do break;end;else gy[Jm]=Fy[Jm+0X00001];end;end;local fy=((Wy==g and Qm or Wy));local dy=0X0001;if not Lm then do Fy=nil;end;elseif Um then(gy)[km]={n=vy>=km and vy-km+0X1 or 0,f(Fy,km+1,vy+0X1)};end;do if fy==Wy then else(w)(Km,fy);end;end;local Zy,cy,Ay,qy=o(function()do while true do local gV=(Sm[dy]);local SV=(gV[4]);dy=dy+0X01;do if not(SV<6)then if SV>=0X9 then if not(SV<0Xb)then if SV~=12 then if gy[gV[6]]==gy[gV[0X1]]then dy=gV[0x07];end;else local ov=Zm[gV[6]];local fv=ov[3];local pv=#fv;local Cv=(nil);if pv>0 then Cv={};for Rp=0X1,pv do local Hp=(fv[Rp]);do if Hp[1]==0X0 then(Cv)[Rp-0X1]={gy,Hp[2]};else(Cv)[Rp-1]=bm[Hp[0x2]];end;end;end;M(Cm,Cv);end;(gy)[gV[0x7]]=dH(ov,Cv,fy);end;else if SV~=0X00A then do if not(gy[gV[6]]<=gy[gV[0X00001]])then else dy=gV[7];end;end;else(gy)[0X0]=fy[gV[0X2]];gV=Sm[dy];dy=dy+0X1;gy[0]=gy[0X000][gV[5]];gV=Sm[dy];local qU,KU=0X0000,(Zm[gV[6]]);local pU=KU[0X003];dy=dy+0X01;local bU,AU=nil,(#pU);if not(AU>0x0)then else bU={};for Ur=1,AU do local Er=(pU[Ur]);if Er[0X001]==0X0 then bU[Ur-0X1]={gy,Er[2]};else do bU[Ur-1]=bm[Er[2]];end;end;end;M(Cm,bU);end;gy[1]=dH(KU,bU,fy);dy=dy+1;(gy[qU])(gy[qU+0X1]);Oy=qU-0x0001;dy=dy+0X1;repeat local v5,t5=Cm,gy;do if not(#v5>0)then else local rx={};for hI,kI in I,v5 do for wv,Bv in I,kI do if not(Bv[1]==t5 and Bv[2]>=0)then else local YM=Bv[0X2];do if not(not rx[YM])then else(rx)[YM]={t5[YM]};end;end;(Bv)[1]=rx[YM];do(Bv)[2]=0x1;end;end;end;end;end;end;until true;return;end;end;else if SV>=7 then if SV~=8 then gy[gV[0x7]][gy[gV[6]]]=gy[gV[1]];else end;else(Jy)[gV[0x0006]]=gy[gV[0X7]];end;end;else if SV>=0x3 then if SV<0x4 then(gy)[gV[7]]=fy[gV[0X002]];else if SV~=0X05 then(gy)[gV[7]]=O(gy[gV[6]],gy[gV[0x1]]);else(gy)[gV[0X7]]={f({},0X1,gV[6])};end;end;else if SV<1 then dy=gV[0x06];else if SV~=2 then gy[gV[7]]=gV[2];else local KD=(gV[6]);local OD=(gy[KD]);for qs=KD+1,gV[0X1]do do OD=OD..gy[qs];end;end;gy[gV[7]]=OD;end;end;end;end;end;end;end;end);if not(Zy)then if e(cy)=='\st\114\i\110\103'then do if p(cy,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(cy,"^.-:%d+: ")then(V)("\076u\114\097\p\h\ \S\c\114\ip\116\058"..(Dm[dy-1]or"(internal)").."\058\ "..v(cy),0X0000);else V(cy,0x00);end;end;else V(cy,0);end;else if cy then if qy==0X00001 then return gy[Ay]();else return gy[Ay](f(gy,Ay+0X1,Oy));end;elseif Ay then return f(gy,Ay,qy);end;end;end;end;else Km=function(...)local SW,TW=1,{};local iW=(K());local gW,ZW={[2]=TW,[1]=Xm},(iW==g and Qm or iW);local cW,dW=eH(...);cW=cW-1;local lW=(0X000);for jH=0X0,cW do if km>jH then TW[jH]=dW[jH+1];else break;end;end;do if not Lm then do dW=nil;end;elseif Um then(TW)[km]={n=cW>=km and cW-km+1 or 0x0,f(dW,km+1,cW+0X00001)};end;end;if ZW~=iW then w(Km,ZW);end;local EW,AW,VW,sW=o(function()while true do local v8=(Sm[SW]);local M8=v8[0x4];SW=SW+0X1;if not(M8>=12)then if M8<6 then if M8>=0x0003 then do if M8<0x00004 then do SW=v8[6];end;else do if M8~=0X00005 then local zG,aG=v8[0x7],v8[0X6];do lW=zG+aG-0X001;end;repeat local vX,FX=Cm,(TW);do if not(#vX>0X0)then else local nK={};for Qp,Jp in I,vX do do for G7,H7 in I,Jp do if H7[0X1]==FX and H7[2]>=0X0 then local Tt=(H7[2]);do if not nK[Tt]then nK[Tt]={FX[Tt]};end;end;(H7)[0X1]=nK[Tt];do H7[2]=1;end;end;end;end;end;end;end;until true;return true,zG,aG;else(TW)[0X0]=ZW[v8[2]];SW=SW+1;SW=SW+1;do v8=Sm[SW];end;SW=SW+1;do TW[0]=TW[0X00][v8[5]];end;SW=SW+0X1;SW=SW+1;v8=Sm[SW];SW=SW+0X1;if not TW[0X00000]then do SW=v8[6];end;end;end;end;end;end;else if not(M8>=1)then(TW)[0]=ZW[v8[2]];v8=Sm[SW];SW=SW+0X1;TW[0X0]=TW[0][v8[5]];v8=Sm[SW];SW=SW+0X0001;if not(not TW[0x00])then else SW=v8[6];end;else if M8~=0x00002 then TW[v8[7]]={f({},0x1,v8[0X6])};else end;end;end;else if not(M8>=9)then if not(M8>=7)then if not(TW[v8[0X7]])then else SW=v8[0X006];end;else if M8~=0x0008 then(TW)[v8[0x00007]]=O(TW[v8[0X06]],TW[v8[0X1]]);else do TW[0X0]=ZW[v8[0X00002]];end;do v8=Sm[SW];end;local LW=(0X000);SW=SW+1;TW[0x1]=v8[0X2];SW=SW+0X00001;(TW)[LW]=TW[LW](TW[LW+0X01]);do lW=LW;end;SW=SW+1;SW=SW+1;v8=Sm[SW];SW=SW+0x1;do if not TW[0X000]then do SW=v8[6];end;end;end;end;end;else if not(M8<0x00a)then if M8==11 then do TW[v8[7]]=ZW[v8[0X2]];end;else local RS=v8[0X7];local kS=TW[RS+0X0002];local oS,yS=TW[RS],TW[RS+1];(TW)[RS]=r(function()for Db=oS,yS,kS do(C)(true,Db);end;end);SW=v8[6];end;else do for iZ=v8[7],v8[6]do TW[iZ]=nil;end;end;end;end;end;else if not(M8>=0X12)then if M8<15 then if not(M8<13)then if M8==14 then do(TW)[v8[0X7]]=TW[v8[6]]==TW[v8[0X1]];end;else local um=(v8[0x6]);local em=(TW[um]);for Xd=um+1,v8[0X1]do em=em..TW[Xd];end;TW[v8[7]]=em;end;else do repeat local U4,W4=Cm,(TW);if#U4>0x000 then local e7={};for kj,Pj in I,U4 do for qU,xU in I,Pj do if xU[0x001]==W4 and xU[2]>=0x0 then local WW=xU[2];if not e7[WW]then do(e7)[WW]={W4[WW]};end;end;xU[1]=e7[WW];(xU)[0X2]=0x1;end;end;end;end;until true;end;return;end;else if not(M8<0x10)then if M8==0X11 then do(TW)[v8[0X00007]]=l(TW[v8[6]],TW[v8[1]]);end;else TW[0]=ZW[v8[0X2]];local jE=(0x1);v8=Sm[SW];SW=SW+0X1;(TW)[1]=ZW[v8[2]];v8=Sm[SW];SW=SW+1;local XE=(TW[1]);(TW)[jE+0x1]=XE;(TW)[jE]=XE[v8[5]];v8=Sm[SW];SW=SW+1;(TW)[3]=v8[2];SW=SW+0X1;do TW[4]=true;end;SW=SW+0x1;jE=0X001;lW=jE+0X4-1;TW[jE]=TW[jE](f(TW,jE+1,lW));lW=jE;do SW=SW+0X01;end;SW=SW+1;v8=Sm[SW];SW=SW+0X1;(TW)[0X0001]=TW[1][v8[0X00005]];v8=Sm[SW];do SW=SW+1;end;TW[0x0001]=TW[1][v8[0X0005]];do SW=SW+0X1;end;do SW=SW+1;end;SW=SW+1;do jE=0X0;end;TW[jE](TW[jE+1]);lW=jE-0X00001;v8=Sm[SW];do SW=SW+1;end;do(TW)[0X00000]=ZW[v8[2]];end;SW=SW+0X00001;do SW=SW+0X1;end;v8=Sm[SW];SW=SW+0X1;(TW)[1]=v8[2];do SW=SW+1;end;jE=0;TW[jE](TW[jE+1]);do lW=jE-1;end;do v8=Sm[SW];end;SW=SW+0X00001;TW[0x0000]=ZW[v8[0X2]];SW=SW+0X1;SW=SW+1;do v8=Sm[SW];end;SW=SW+0X1;(TW)[0X0]=TW[0X0][v8[0X5]];do v8=Sm[SW];end;SW=SW+0X01;do if not TW[0]then do SW=v8[0X6];end;end;end;end;else TW[0X0]=ZW[v8[0X2]];do SW=SW+0X1;end;SW=SW+1;v8=Sm[SW];SW=SW+1;TW[0X1]=v8[0X2];v8=Sm[SW];do SW=SW+1;end;do TW[0X02]=v8[2];end;local rC=0x0000;SW=SW+0X1;TW[rC]=TW[rC](TW[rC+1],TW[rC+0X2]);lW=rC;v8=Sm[SW];do SW=SW+0x00001;end;if not(not(v8[2]<=TW[0]))then else SW=v8[0X007];end;end;end;else do if not(M8<21)then do if M8<0X017 then if M8==22 then local Zv,Kv=Zm[v8[6]],(nil);local iv=Zv[3];local hv=#iv;if hv>0 then Kv={};for Hs=0X0001,hv do local es=iv[Hs];do if es[0X1]==0 then(Kv)[Hs-0X0001]={TW,es[2]};else do Kv[Hs-1]=bm[es[2]];end;end;end;end;M(Cm,Kv);end;(TW)[v8[0X00007]]=dH(Zv,Kv,ZW);else TW[0]=ZW[v8[2]];do SW=SW+1;end;SW=SW+0X001;local TV=0X0;v8=Sm[SW];SW=SW+1;(TW)[0]=TW[0][v8[5]];v8=Sm[SW];SW=SW+1;local bV=TW[0];do TW[TV+0X01]=bV;end;TW[TV]=bV[v8[5]];v8=Sm[SW];do SW=SW+1;end;TW[0x002]=v8[2];SW=SW+1;do TV=0;end;TW[TV]=TW[TV](TW[TV+0X1],TW[TV+0x00002]);lW=TV;v8=Sm[SW];SW=SW+1;do if not TW[0]then do SW=v8[6];end;end;end;end;else if M8==24 then(TW)[0]=ZW[v8[2]];do SW=SW+0X1;end;SW=SW+1;v8=Sm[SW];do SW=SW+0x1;end;TW[0]=TW[0][v8[0X5]];SW=SW+1;SW=SW+0X001;v8=Sm[SW];local Rl=0;SW=SW+0x00001;local Jl=TW[0X000];(TW)[Rl+0X1]=Jl;do(TW)[Rl]=Jl[v8[0X5]];end;do v8=Sm[SW];end;do SW=SW+1;end;TW[2]=v8[2];SW=SW+1;Rl=0;do(TW)[Rl]=TW[Rl](TW[Rl+0X1],TW[Rl+0X2]);end;lW=Rl;do SW=SW+0X1;end;SW=SW+0X0001;v8=Sm[SW];SW=SW+1;if not TW[0]then do SW=v8[0X6];end;end;else do TW[v8[7]]=TW[v8[6]]<=TW[v8[1]];end;end;end;end;else if not(M8<19)then do if M8==0X000014 then TW[v8[7]]=not TW[v8[6]];else do TW[v8[7]]=v8[0x2];end;end;end;else do TW[0]=ZW[v8[0X2]];end;do v8=Sm[SW];end;SW=SW+1;(TW)[0]=TW[0][v8[0X5]];SW=SW+1;SW=SW+1;v8=Sm[SW];SW=SW+1;local BG=(0);TW[0X1]=v8[0X002];do SW=SW+1;end;do(TW)[BG]=TW[BG](TW[BG+1]);end;lW=BG;v8=Sm[SW];SW=SW+0x1;do if not(not TW[0])then else SW=v8[6];end;end;end;end;end;end;end;end;end);do if EW then if AW then if sW~=0X1 then return TW[VW](f(TW,VW+0X1,lW));else return TW[VW]();end;elseif VW then return f(TW,VW,sW);end;else if e(AW)=='\s\116r\i\110\g'then if p(AW,'\097tte\109\112\116 \116\o\ \yi\101\l\d a\c\114o\s\s \m\et\097\m\101t\104\o\d\/\067%\-\c\097\ll\ \098\ou\110\dar\121')then return coroutine.yield();end;do if p(AW,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[SW-0x01]or'\040i\110\116ern\097\l)')..": "..v(AW),0);else V(AW,0X0);end;end;else(V)(AW,0);end;end;end;end;end;end;end;end;end;else do if xm>=11 then if not(xm>=17)then if not(xm>=14)then if xm<0X0c then Km=function(...)local zk,ik,Ek=0X00001,{},0;local Ak={[2]=ik,[1]=Xm};local kk=(K());local bk=((kk==g and Qm or kk));local yk,ok=eH(...);do yk=yk-1;end;do for ve=0,yk do do if not(km>ve)then break;else ik[ve]=ok[ve+1];end;end;end;end;if not Lm then ok=nil;elseif Um then ik[km]={n=yk>=km and yk-km+0X001 or 0,f(ok,km+0X1,yk+1)};end;if bk==kk then else(w)(Km,bk);end;local Qk,ak,Gk,Tk=o(function()while true do local hd=(Sm[zk]);local id=(hd[0X04]);zk=zk+0X001;if not(id<0X0008)then if id>=0Xc then do if not(id>=14)then if id==13 then else(ik)[hd[0x0007]]=ik[hd[6]];end;else if not(id<15)then if id==16 then if ik[hd[0X7]]then zk=hd[0x6];end;else if ik[hd[0X006]]==ik[hd[0X1]]then zk=hd[0X7];end;end;else(ik)[hd[0X007]]=ik[hd[0x6]]~=ik[hd[0X1]];end;end;end;else if id<10 then if id==0X9 then do if not(not ik[hd[0X7]])then else zk=hd[6];end;end;else do for Uw=hd[0X00007],hd[0X006]do do ik[Uw]=nil;end;end;end;end;else if id~=0Xb then ik[hd[7]]={f({},0X1,hd[6])};else ik[hd[7]]=ik[hd[0X6]]+ik[hd[1]];end;end;end;else if id<0X00004 then if not(id<0X2)then if id~=3 then repeat local TP,UP=Cm,ik;if not(#TP>0)then else local aH={};for vv,Uv in I,TP do do for ob,cb in I,Uv do do if not(cb[0X1]==UP and cb[0X00002]>=0X0)then else local lx=cb[0X2];if not(not aH[lx])then else(aH)[lx]={UP[lx]};end;(cb)[0X001]=aH[lx];cb[2]=1;end;end;end;end;end;end;until true;return;else zk=hd[0X6];end;else if id==1 then ik[0X0]=bk[hd[2]];local Qz=(0X0);do hd=Sm[zk];end;do zk=zk+0x1;end;local kz=(ik[0X0]);ik[Qz+1]=kz;do(ik)[Qz]=kz[hd[5]];end;hd=Sm[zk];zk=zk+1;ik[2]=hd[0X00002];do zk=zk+0X1;end;local yz=(nil);Qz=0;(ik)[Qz]=ik[Qz](ik[Qz+1],ik[Qz+0X2]);do Ek=Qz;end;zk=zk+0x1;zk=zk+1;do zk=zk+0X1;end;ik[0x1]={};hd=Sm[zk];zk=zk+1;(ik)[0X2]=hd[0X0002];hd=Sm[zk];zk=zk+0X00001;local cz=(Zm[hd[0x006]]);local iz=(cz[3]);local sz=(#iz);if sz>0 then yz={};do for Vw=0x0001,sz do local ow=(iz[Vw]);do if ow[1]~=0 then(yz)[Vw-0X00001]=bm[ow[0X2]];else yz[Vw-0X1]={ik,ow[0x2]};end;end;end;end;M(Cm,yz);end;(ik)[0X3]=dH(cz,yz,bk);hd=Sm[zk];do zk=zk+1;end;ik[0x4]=bk[hd[0x0002]];zk=zk+0X1;do zk=zk+1;end;hd=Sm[zk];zk=zk+0X1;(ik)[0X4]=ik[0x4][hd[5]];zk=zk+0x1;zk=zk+0x01;do hd=Sm[zk];end;zk=zk+0X00001;cz=Zm[hd[6]];do yz=nil;end;iz=cz[3];sz=#iz;if not(sz>0X0)then else yz={};for R1=0x00001,sz do local j1=(iz[R1]);if j1[0X0001]==0x0 then yz[R1-0X01]={ik,j1[0X02]};else yz[R1-1]=bm[j1[0x2]];end;end;(M)(Cm,yz);end;ik[0X5]=dH(cz,yz,bk);do zk=zk+0X01;end;Qz=4;(ik[Qz])(ik[Qz+0X1]);Ek=Qz-0X0001;do zk=zk+0X00001;end;repeat local bY,rY=Cm,ik;if not(#bY>0)then else local KI={};for E5,o5 in I,bY do do for w6,D6 in I,o5 do if D6[1]==rY and D6[2]>=0X0 then local jV=D6[0X2];if not(not KI[jV])then else(KI)[jV]={rY[jV]};end;D6[1]=KI[jV];D6[0X02]=0X1;end;end;end;end;end;until true;return;else ik[hd[0X007]]=-ik[hd[0X006]];end;end;else if not(id>=6)then if id==5 then ik[hd[7]]=bk[hd[2]];else local nv=(Zm[hd[0X6]]);local cv=nil;local kv=nv[3];local Fv=#kv;if not(Fv>0)then else cv={};do for Xw=1,Fv do local mw=(kv[Xw]);if mw[1]~=0X000 then cv[Xw-1]=bm[mw[0x2]];else(cv)[Xw-0X00001]={ik,mw[2]};end;end;end;(M)(Cm,cv);end;do(ik)[hd[7]]=dH(nv,cv,bk);end;end;else do if id==0X7 then ik[hd[0X7]]=hd[2];else(ik)[hd[0X07]]=ik[hd[6]][ik[hd[1]]];end;end;end;end;end;end;end);if Qk then if ak then do if Tk~=1 then return ik[Gk](f(ik,Gk+1,Ek));else return ik[Gk]();end;end;elseif Gk then return f(ik,Gk,Tk);end;else if e(ak)~="string"then(V)(ak,0X0);else if not(p(ak,'a\116\116e\m\112\116\ \116o\ \y\ie\108d\ \097\c\114\o\s\s\032m\e\116a\me\116\h\o\d\/\067\037\-\ca\ll b\111\117\110\dar\121'))then else return coroutine.yield();end;do if not(p(ak,"^\.\-\058%\100\+:\ "))then V(ak,0X000);else V("Luraph Script:"..(Dm[zk-1]or"(internal)")..": "..v(ak),0X0);end;end;end;end;end;else if xm==0Xd then Km=function(...)local MK=({});local PK=0X1;local SK=({[1]=Xm,[2]=MK});local nK=K();local RK,GK=eH(...);local jK=((nK==g and Qm or nK));do RK=RK-0x00001;end;for eA=0X0,RK do do if km>eA then do(MK)[eA]=GK[eA+0X01];end;else break;end;end;end;local tK=(0);if not Lm then do GK=nil;end;elseif Um then(MK)[km]={n=RK>=km and RK-km+1 or 0X0,f(GK,km+1,RK+0X1)};end;if jK~=nK then(w)(Km,jK);end;local DK,CK,xK,kK=o(function()while true do local DC=Sm[PK];local hC=(DC[0X4]);PK=PK+0X1;do if not(hC<10)then do if not(hC<15)then if hC<18 then if hC>=0X10 then if hC~=17 then MK[DC[7]]=jK[DC[0x0002]];else do MK[0X0]=jK[DC[2]];end;DC=Sm[PK];PK=PK+1;do(MK)[0X0]=MK[0X0][DC[0x5]];end;do DC=Sm[PK];end;do PK=PK+1;end;do PK=DC[6];end;end;else do repeat local TT,FT=Cm,MK;if#TT>0x0 then local LP=({});for ou,ju in I,TT do for xr,sr in I,ju do do if sr[1]==FT and sr[2]>=0 then local my=(sr[2]);do if not LP[my]then(LP)[my]={FT[my]};end;end;(sr)[0X1]=LP[my];do(sr)[0X00002]=0x001;end;end;end;end;end;end;until true;end;local Xo=(DC[0X7]);return false,Xo,Xo;end;else if not(hC>=19)then PK=DC[6];else if hC==0X0014 then local kU=bm[0x00];do(MK)[0]=kU[1][kU[2]];end;DC=Sm[PK];do PK=PK+1;end;(MK)[0]=MK[0X00][DC[5]];PK=PK+0X001;MK[0]=not MK[0];DC=Sm[PK];PK=PK+1;if MK[0X0]then PK=DC[6];end;else(MK)[0]=jK[DC[0X0002]];PK=PK+0x1;PK=PK+1;PK=PK+0X1;tK=0;(MK)[tK]=MK[tK]();DC=Sm[PK];PK=PK+1;PK=DC[6];end;end;end;else if hC>=12 then if hC>=0x000d then if hC~=14 then(MK)[DC[7]]=not MK[DC[6]];else local bP=DC[0X6];local XP=(DC[0X1]);local AP=(DC[0x7]);if bP~=0 then tK=AP+bP-1;end;local gP,lP=nil,nil;if bP~=0X1 then gP,lP=eH(MK[AP](f(MK,AP+1,tK)));else gP,lP=eH(MK[AP]());end;if XP~=0X01 then if XP~=0X0 then gP=AP+XP-0X002;do tK=gP+0X1;end;else gP=gP+AP-0X1;do tK=gP;end;end;local At=0;for ec=AP,gP do At=At+1;do MK[ec]=lP[At];end;end;else tK=AP-0X1;end;end;else local Jm=(nil);local jm=(Zm[DC[0X06]]);local Wm=(jm[0X003]);local em=#Wm;do if em>0 then Jm={};for zZ=1,em do local iZ=(Wm[zZ]);if iZ[0X0001]==0 then(Jm)[zZ-0x001]={MK,iZ[0X2]};else(Jm)[zZ-0x0001]=bm[iZ[0x2]];end;end;M(Cm,Jm);end;end;do MK[DC[7]]=dH(jm,Jm,jK);end;end;else if hC==11 then repeat local oK,sK=Cm,MK;if#oK>0X0 then local mJ={};for J8,E8 in I,oK do do for od,Qd in I,E8 do if Qd[0X1]==sK and Qd[2]>=0 then local jt=Qd[2];do if not(not mJ[jt])then else do(mJ)[jt]={sK[jt]};end;end;end;do Qd[1]=mJ[jt];end;do Qd[2]=0X1;end;end;end;end;end;end;until true;return;else do if MK[DC[7]]then do PK=DC[0X6];end;end;end;end;end;end;end;else if hC>=5 then do if hC>=7 then if not(hC>=8)then(MK)[DC[7]]=SK[DC[0X006]];else do if hC~=9 then(MK)[0]=jK[DC[0X2]];do DC=Sm[PK];end;do PK=PK+1;end;MK[0X1]=jK[DC[2]];do PK=PK+0x00001;end;do PK=PK+1;end;PK=PK+1;MK[0]=MK[0x00][MK[1]];do PK=PK+0X001;end;(MK)[0x0]=not MK[0];do DC=Sm[PK];end;PK=PK+0X1;do if not(not MK[0])then else PK=DC[6];end;end;else if MK[DC[0X6]]==MK[DC[1]]then else PK=DC[7];end;end;end;end;else if hC~=0x6 then(MK)[0X0]=jK[DC[0X00002]];DC=Sm[PK];PK=PK+0X0001;do MK[0]=MK[0x0000][DC[5]];end;do PK=PK+0x1;end;PK=PK+0X1;PK=PK+1;(MK)[0X0]=not MK[0X0000];else end;end;end;else if not(hC>=0x02)then if hC~=0X1 then(MK)[DC[7]]=MK[DC[0X6]]%MK[DC[0x1]];else MK[DC[0X7]]=true;end;else if not(hC>=0X3)then local GY=bm[0X0];(MK)[0]=GY[1][GY[2]];PK=PK+1;do PK=PK+1;end;DC=Sm[PK];PK=PK+1;MK[0]=MK[0X0000][DC[0X5]];DC=Sm[PK];PK=PK+1;do MK[0X0000]=MK[0]<=DC[0X5];end;do DC=Sm[PK];end;do PK=PK+1;end;PK=DC[6];else do if hC~=4 then do MK[DC[7]]={f({},0x1,DC[6])};end;else MK[DC[0X7]]=DC[0X02];end;end;end;end;end;end;end;end;end);if not(DK)then if e(CK)=="string"then if not(p(CK,"\097tt\em\pt\ \116\o\ \yi\eld\ acros\115\ \me\116a\met\h\o\d\/C%-\099a\108\l b\111\117\110\d\097\114\y"))then else return coroutine.yield();end;if p(CK,"^.-:%d+: ")then V("\Lur\097ph\032\083\099\114\105p\116\:"..(Dm[PK-1]or"\(\inter\110al\)")..'\:\032'..v(CK),0X0);else(V)(CK,0);end;else V(CK,0);end;else if CK then do if kK==1 then return MK[xK]();else do return MK[xK](f(MK,xK+0X1,tK));end;end;end;elseif not(xK)then else return f(MK,xK,kK);end;end;end;else do Km=function(...)local TF,LF=1,{};local SF=K();local nF=({[1]=Xm,[2]=LF});local rF,mF=eH(...);local gF=(SF==g and Qm or SF);do rF=rF-1;end;local HF=(0);for dt=0,rF do if km>dt then(LF)[dt]=mF[dt+0X1];else break;end;end;do if not Lm then do mF=nil;end;elseif not(Um)then else LF[km]={n=rF>=km and rF-km+0X1 or 0,f(mF,km+0x1,rF+0X1)};end;end;do if gF==SF then else(w)(Km,gF);end;end;local UF,zF,CF,bF=o(function()while true do local Vw=(Sm[TF]);local Xw=Vw[0X4];TF=TF+1;if Xw<68 then if Xw>=34 then if Xw<0X33 then if Xw<42 then if Xw>=38 then if not(Xw<40)then do if Xw==41 then local kd=bm[0X0];do(LF)[0x2]=kd[0x0001][kd[2]];end;TF=TF+1;TF=TF+1;Vw=Sm[TF];local Wd=(2);TF=TF+1;(LF)[0x3]=Vw[2];TF=TF+0X001;LF[Wd](LF[Wd+1]);do HF=Wd-0X1;end;Vw=Sm[TF];TF=TF+0X00001;LF[0X2]=gF[Vw[2]];Vw=Sm[TF];do TF=TF+1;end;(LF)[0x00003]=Vw[0X02];Vw=Sm[TF];TF=TF+1;LF[4]=Vw[0X00002];do Vw=Sm[TF];end;TF=TF+0x1;(LF)[5]=Vw[2];do TF=TF+1;end;do Wd=0x02;end;HF=Wd+0X4-1;(LF[Wd])(f(LF,Wd+1,HF));HF=Wd-1;do TF=TF+1;end;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;TF=Vw[6];else local d5=bm[0];LF[4]=d5[1][d5[0x02]];do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+1;local q5=0X0004;LF[5]=Vw[0x2];TF=TF+0x01;(LF[q5])(LF[q5+0X1]);HF=q5-1;TF=TF+1;d5=bm[0X1];(LF)[0x4]=d5[1][d5[0X2]];Vw=Sm[TF];TF=TF+1;q5=4;local Q5=LF[4];(LF)[q5+1]=Q5;(LF)[q5]=Q5[Vw[5]];TF=TF+0X001;q5=0X4;(LF[q5])(LF[q5+0X00001]);do HF=q5-0X1;end;TF=TF+1;TF=TF+0x01;TF=TF+1;(LF)[0X04]=false;Vw=Sm[TF];TF=TF+0X0001;do gF[Vw[0X2]]=LF[4];end;Vw=Sm[TF];TF=TF+1;LF[4]=gF[Vw[0x02]];TF=TF+1;do TF=TF+1;end;do TF=TF+0X1;end;HF=0X04;(LF[HF])();HF=HF-1;Vw=Sm[TF];TF=TF+0x1;LF[4]=gF[Vw[2]];Vw=Sm[TF];do TF=TF+0X1;end;do LF[5]=LF[3][Vw[0X005]];end;Vw=Sm[TF];TF=TF+0X1;LF[5]=LF[0X00005][Vw[0x05]];do TF=TF+0x001;end;do TF=TF+1;end;do Vw=Sm[TF];end;do TF=TF+0X1;end;do LF[6]=gF[Vw[0x2]];end;TF=TF+0X0001;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+0x1;LF[0X6]=LF[6][Vw[5]];TF=TF+0x1;TF=TF+1;do Vw=Sm[TF];end;TF=TF+0X1;(LF)[7]=Vw[0X2];Vw=Sm[TF];TF=TF+1;LF[8]=Vw[2];Vw=Sm[TF];TF=TF+1;LF[9]=gF[Vw[0X02]];TF=TF+0X1;TF=TF+0X0001;do Vw=Sm[TF];end;TF=TF+0x1;do(LF)[0x9]=LF[0x0009][Vw[5]];end;Vw=Sm[TF];TF=TF+0X00001;LF[10]=Vw[0x2];do Vw=Sm[TF];end;TF=TF+1;LF[0X0000B]=Vw[2];TF=TF+0X0001;q5=9;do LF[q5]=LF[q5](LF[q5+0x1],LF[q5+0X2]);end;HF=q5;do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+1;(LF)[0X9]=LF[9]/Vw[5];TF=TF+1;q5=6;HF=q5+4-1;LF[q5]=LF[q5](f(LF,q5+0x1,HF));HF=q5;TF=TF+0X1;do LF[5]=LF[0X005]+LF[6];end;Vw=Sm[TF];local l5=(Zm[Vw[6]]);local x5=(l5[0X3]);TF=TF+0x00001;local p5,N5=nil,#x5;do if not(N5>0X0)then else do p5={};end;do for px=1,N5 do local Lx=x5[px];if Lx[1]==0 then(p5)[px-0X1]={LF,Lx[0X2]};else do p5[px-0X1]=bm[Lx[2]];end;end;end;end;(M)(Cm,p5);end;end;LF[0X00006]=dH(l5,p5,gF);TF=TF+0X001;q5=4;(LF[q5])(LF[q5+0x1],LF[q5+2]);do HF=q5-1;end;Vw=Sm[TF];TF=TF+0X1;LF[4]=gF[Vw[0x2]];Vw=Sm[TF];TF=TF+1;LF[4]=LF[4][Vw[5]];Vw=Sm[TF];do TF=TF+1;end;(LF)[5]=Vw[2];TF=TF+0X001;q5=4;(LF[q5])(LF[q5+0X1]);HF=q5-0X01;Vw=Sm[TF];TF=TF+1;do LF[4]=gF[Vw[2]];end;local K5=0X2;do Vw=Sm[TF];end;TF=TF+1;(LF)[0X5]=gF[Vw[2]];TF=TF+0x0001;TF=TF+1;do Vw=Sm[TF];end;TF=TF+1;do(LF)[0x00006]=gF[Vw[0X00002]];end;Vw=Sm[TF];TF=TF+1;do LF[6]=LF[0X06][Vw[5]];end;TF=TF+0X1;do TF=TF+0x1;end;TF=TF+1;do q5=0x5;end;local z5=0x0000;if K5~=0X0 then HF=q5+K5-0X1;end;local R5,W5=nil,nil;do if K5==1 then do R5,W5=eH(LF[q5]());end;else R5,W5=eH(LF[q5](f(LF,q5+0X1,HF)));end;end;if z5~=0X00001 then do if z5~=0x0 then do R5=q5+z5-0x2;end;HF=R5+0X1;else do R5=R5+q5-1;end;do HF=R5;end;end;end;local gg=0;do for BS=q5,R5 do gg=gg+1;(LF)[BS]=W5[gg];end;end;else HF=q5-0X1;end;TF=TF+1;TF=TF+1;TF=TF+0X1;q5=4;(LF)[q5]=LF[q5](f(LF,q5+1,HF));HF=q5;Vw=Sm[TF];TF=TF+0x1;if LF[0x00004]~=Vw[5]then else do TF=Vw[0X7];end;end;end;end;else if Xw~=39 then(LF)[0X07]=gF[Vw[2]];TF=TF+0x001;TF=TF+1;Vw=Sm[TF];TF=TF+1;(LF)[0x0007]=LF[7][Vw[5]];Vw=Sm[TF];do TF=TF+0x1;end;if not LF[0X7]then TF=Vw[6];end;else local OH=bm[0];LF[2]=OH[0X1][OH[2]];Vw=Sm[TF];TF=TF+1;local jH=0X2;LF[0X3]=Vw[2];TF=TF+0X1;(LF[jH])(LF[jH+0X0001]);HF=jH-0X1;Vw=Sm[TF];TF=TF+0X01;do(LF)[0X2]=gF[Vw[2]];end;TF=TF+1;TF=TF+0x1;Vw=Sm[TF];TF=TF+0x001;do(LF)[0x3]=Vw[0X002];end;TF=TF+1;(LF)[0x00004]=nil;do TF=TF+0X1;end;do LF[5]=true;end;do Vw=Sm[TF];end;TF=TF+1;(LF)[0X006]=Vw[0x2]/Vw[0X00005];TF=TF+1;(LF)[7]=true;do TF=TF+1;end;jH=0x0002;HF=jH+0X006-1;do(LF)[jH]=LF[jH](f(LF,jH+0X0001,HF));end;HF=jH;TF=TF+1;TF=TF+1;do Vw=Sm[TF];end;TF=TF+0x1;if not LF[2]then TF=Vw[0X6];end;end;end;else if Xw>=0X24 then do if Xw~=37 then local ly=bm[0x0000];LF[0X2]=ly[0x00001][ly[2]];do TF=TF+0x1;end;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+1;local Yy=2;LF[3]=Vw[0X2];TF=TF+1;(LF[Yy])(LF[Yy+0X1]);HF=Yy-1;Vw=Sm[TF];TF=TF+0x1;(LF)[2]=gF[Vw[2]];do Vw=Sm[TF];end;TF=TF+0x1;LF[3]=Vw[0x2];do Vw=Sm[TF];end;TF=TF+1;(LF)[0X00004]=Vw[0X2];Vw=Sm[TF];TF=TF+1;(LF)[0x5]=Vw[0X2];do TF=TF+0x00001;end;Yy=0x2;do HF=Yy+4-0x1;end;(LF[Yy])(f(LF,Yy+1,HF));HF=Yy-0x1;do Vw=Sm[TF];end;TF=TF+0X1;do TF=Vw[6];end;else do(LF)[2]=gF[Vw[0x0002]];end;Vw=Sm[TF];TF=TF+0x001;LF[2]=LF[0X0002][Vw[0X5]];do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+1;LF[0x00002]=LF[2][Vw[0X005]];Vw=Sm[TF];do TF=TF+0X1;end;TF=Vw[0X006];end;end;else if Xw~=0X23 then LF[0X3]=gF[Vw[2]];local qj=0X00003;do TF=TF+0x01;end;TF=TF+1;do Vw=Sm[TF];end;TF=TF+0x0001;do(LF)[4]=gF[Vw[2]];end;TF=TF+1;TF=TF+0X01;Vw=Sm[TF];TF=TF+0X1;LF[5]=LF[0X2][Vw[5]];do TF=TF+0X1;end;TF=TF+0X00001;Vw=Sm[TF];do TF=TF+0X1;end;LF[6]=Vw[2];TF=TF+0X01;HF=qj+0X4-1;LF[qj](f(LF,qj+0X001,HF));HF=qj-0x1;Vw=Sm[TF];TF=TF+0X1;TF=Vw[0x6];else(LF)[9]=gF[Vw[2]];do TF=TF+1;end;HF=0X9;(LF)[HF]=LF[HF]();TF=TF+1;(LF)[9]=LF[0X9]-LF[8];do Vw=Sm[TF];end;TF=TF+0X0001;if not(Vw[0X2]<LF[0X009])then do TF=Vw[7];end;end;end;end;end;else if Xw>=0X02E then if Xw>=0x30 then if Xw>=0X31 then do if Xw~=0x32 then local lP=4;local FP=LF[0X3];do LF[lP+1]=FP;end;(LF)[lP]=FP[Vw[0x5]];Vw=Sm[TF];do TF=TF+0X1;end;(LF)[6]=Vw[2];TF=TF+1;do lP=0X4;end;(LF)[lP]=LF[lP](LF[lP+1],LF[lP+2]);do HF=lP;end;Vw=Sm[TF];TF=TF+0X01;TF=Vw[6];else if not(Vw[0X2]<LF[Vw[1]])then TF=Vw[7];end;end;end;else(LF)[Vw[0X7]]=Vw[2]/Vw[0X05];end;else if Xw==0x002f then local My=0x3;local dy=bm[0];do LF[3]=dy[1][dy[0X2]];end;do TF=TF+0X01;end;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;LF[4]=Vw[2];TF=TF+0X1;(LF[My])(LF[My+1]);HF=My-1;TF=TF+1;do dy=bm[2];end;do(LF)[3]=dy[0X1][dy[0X002]];end;do Vw=Sm[TF];end;TF=TF+1;(LF)[3]=LF[3][Vw[5]];TF=TF+1;LF[0x4]=LF[2];TF=TF+0X0001;dy=bm[0X1];(LF)[5]=dy[1][dy[0X00002]];TF=TF+1;TF=TF+1;TF=TF+0X1;(LF)[6]=nil;TF=TF+0X1;(LF)[7]={};do Vw=Sm[TF];end;TF=TF+1;(LF[0X7])[Vw[2]]=Vw[0X005];TF=TF+1;My=0X0003;HF=My+5-1;(LF[My])(f(LF,My+1,HF));HF=My-1;TF=TF+0X00001;TF=TF+1;do TF=TF+1;end;dy=bm[1];LF[3]=dy[0X1][dy[0x02]];local Dy=LF[0X3];TF=TF+0x1;do TF=TF+0x1;end;do Vw=Sm[TF];end;TF=TF+1;My=3;(LF)[My+1]=Dy;(LF)[My]=Dy[Vw[5]];TF=TF+1;My=3;LF[My](LF[My+1]);HF=My-0X1;Vw=Sm[TF];TF=TF+1;TF=Vw[0X6];else LF[0X0008]=false;Vw=Sm[TF];local Eh,lh=bm[1],8;TF=TF+0X00001;do(gF)[Vw[0X02]]=LF[0X8];end;TF=TF+1;(LF)[0X08]=Eh[0X001][Eh[2]];do Vw=Sm[TF];end;TF=TF+0x01;local Ih=(LF[8]);do LF[lh+0X1]=Ih;end;do(LF)[lh]=Ih[Vw[5]];end;TF=TF+1;do lh=8;end;(LF[lh])(LF[lh+1]);HF=lh-1;do Vw=Sm[TF];end;TF=TF+0x00001;TF=Vw[6];end;end;else if not(Xw<0X2c)then if Xw~=45 then local A4=(0X3);local P4=(LF[0X2]);do(LF)[A4+0x00001]=P4;end;(LF)[A4]=P4[Vw[5]];Vw=Sm[TF];TF=TF+1;LF[0x005]=Vw[0x02];do TF=TF+0X1;end;A4=0x3;LF[A4]=LF[A4](LF[A4+1],LF[A4+2]);HF=A4;do Vw=Sm[TF];end;TF=TF+0X00001;TF=Vw[0X0006];else LF[0x6]=gF[Vw[2]];do TF=TF+1;end;TF=TF+0x1;local Nw=6;Vw=Sm[TF];TF=TF+1;do(LF)[7]=LF[0x3][Vw[0X00005]];end;TF=TF+1;TF=TF+0x1;TF=TF+0X00001;do LF[Nw]=LF[Nw](LF[Nw+1]);end;HF=Nw;do TF=TF+0X00001;end;TF=TF+0X1;Vw=Sm[TF];do TF=TF+0X01;end;if not(not LF[6])then else do TF=Vw[0x6];end;end;end;else do if Xw==0x00002B then local cN=Vw[7];local kN,YN,wN=LF[cN]();do if kN then do LF[cN+0X00001]=YN;end;LF[cN+2]=wN;TF=Vw[6];end;end;else local di,Bi=3,(LF[0X002]);(LF)[di+0x001]=Bi;LF[di]=Bi[Vw[5]];do Vw=Sm[TF];end;TF=TF+1;(LF)[5]=Vw[2];TF=TF+1;di=0X0003;LF[di]=LF[di](LF[di+1],LF[di+0x00002]);do HF=di;end;Vw=Sm[TF];TF=TF+1;do if not LF[0X3]then TF=Vw[0X006];end;end;end;end;end;end;end;else if Xw>=0X3B then if Xw>=63 then do if not(Xw<0X41)then if not(Xw<0X42)then if Xw==0X43 then local LK=(bm[0]);(LF)[0X00002]=LK[0x1][LK[2]];local DK=0X00002;do Vw=Sm[TF];end;do TF=TF+0X1;end;LF[0X3]=Vw[2];TF=TF+0X1;LF[DK](LF[DK+1]);HF=DK-0X1;TF=TF+0X1;TF=TF+0X001;do Vw=Sm[TF];end;do TF=TF+1;end;LF[0x2]=gF[Vw[0X2]];Vw=Sm[TF];TF=TF+0X1;(LF)[0X00003]=Vw[0X2];Vw=Sm[TF];TF=TF+0X1;(LF)[0X4]=Vw[2];Vw=Sm[TF];TF=TF+1;LF[0X005]=Vw[2];TF=TF+1;DK=2;HF=DK+0X04-0X01;LF[DK](f(LF,DK+1,HF));HF=DK-1;Vw=Sm[TF];TF=TF+1;do TF=Vw[0X06];end;else repeat local HJ,pJ=Cm,(LF);if#HJ>0x0000 then local G0={};do for HS,MS in I,HJ do for g0,C0 in I,MS do if C0[1]==pJ and C0[0X2]>=0x0 then local dx=C0[0X02];if not(not G0[dx])then else(G0)[dx]={pJ[dx]};end;C0[1]=G0[dx];C0[2]=1;end;end;end;end;end;until true;return;end;else local Xe=(bm[0]);LF[0X02]=Xe[1][Xe[0X00002]];local Ye=(2);Vw=Sm[TF];TF=TF+1;do(LF)[3]=Vw[2];end;TF=TF+0X1;(LF[Ye])(LF[Ye+1]);do HF=Ye-0x1;end;do Vw=Sm[TF];end;TF=TF+0X1;(LF)[0X02]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0X1;LF[0X3]=Vw[0X2];Vw=Sm[TF];TF=TF+1;LF[0x04]=Vw[0x2];Vw=Sm[TF];do TF=TF+1;end;LF[0X00005]=Vw[2];TF=TF+1;do Ye=0X002;end;HF=Ye+4-1;LF[Ye](f(LF,Ye+0X1,HF));HF=Ye-0X1;Vw=Sm[TF];do TF=TF+0x1;end;TF=Vw[6];end;else if Xw==0X40 then local yU=bm[0x0];do LF[0X05]=yU[0X1][yU[0X2]];end;do Vw=Sm[TF];end;TF=TF+0x1;do(LF)[0X6]=Vw[2];end;do TF=TF+1;end;local VU=(5);(LF[VU])(LF[VU+0X1]);HF=VU-0X1;TF=TF+1;yU=bm[0X00001];LF[0X5]=yU[0X1][yU[2]];Vw=Sm[TF];local kU=(LF[0X05]);TF=TF+0X1;do VU=0X00005;end;do LF[VU+1]=kU;end;do LF[VU]=kU[Vw[5]];end;TF=TF+1;VU=5;LF[VU](LF[VU+0X1]);HF=VU-1;Vw=Sm[TF];do TF=TF+0X1;end;LF[5]=gF[Vw[2]];Vw=Sm[TF];TF=TF+1;LF[0X0006]=gF[Vw[2]];Vw=Sm[TF];TF=TF+1;LF[6]=LF[6][Vw[5]];TF=TF+1;do(LF)[7]=LF[0X004];end;TF=TF+1;VU=0x6;do(LF)[VU]=LF[VU](LF[VU+0X01]);end;HF=VU;TF=TF+0X1;TF=TF+0X01;Vw=Sm[TF];do TF=TF+1;end;LF[7]=gF[Vw[0x2]];do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;LF[7]=LF[0x00007][Vw[5]];Vw=Sm[TF];TF=TF+0X1;LF[0X008]=gF[Vw[0X0002]];do Vw=Sm[TF];end;TF=TF+1;(LF)[8]=LF[8][Vw[5]];Vw=Sm[TF];TF=TF+1;LF[0x9]=Vw[0X00002];Vw=Sm[TF];TF=TF+0X00001;LF[0X0000a]=Vw[0X0002];do TF=TF+0X1;end;do VU=0X8;end;(LF)[VU]=LF[VU](LF[VU+1],LF[VU+0X2]);do HF=VU;end;Vw=Sm[TF];do TF=TF+1;end;do(LF)[0X00008]=LF[8]/Vw[5];end;Vw=Sm[TF];TF=TF+0X1;do(LF)[9]=Vw[2];end;Vw=Sm[TF];TF=TF+1;(LF)[0X0A]=gF[Vw[0X2]];TF=TF+1;TF=TF+0X001;Vw=Sm[TF];TF=TF+0X00001;(LF)[10]=LF[10][Vw[0X5]];TF=TF+0X1;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+1;(LF)[11]=Vw[0X2];do Vw=Sm[TF];end;TF=TF+0X01;do(LF)[0Xc]=Vw[2];end;TF=TF+1;do VU=10;end;do(LF)[VU]=LF[VU](LF[VU+0x1],LF[VU+0X002]);end;HF=VU;do Vw=Sm[TF];end;TF=TF+0X1;LF[0XA]=LF[10]/Vw[0X005];TF=TF+1;do VU=0X7;end;do HF=VU+0X004-0X1;end;LF[VU]=LF[VU](f(LF,VU+0X1,HF));HF=VU;do TF=TF+1;end;TF=TF+1;TF=TF+0X1;LF[6]=LF[0x6]+LF[0x7];Vw=Sm[TF];local fU=(Zm[Vw[6]]);TF=TF+0X01;local oU,XU=nil,(fU[3]);local YU=#XU;do if not(YU>0X0)then else oU={};for cq=0X1,YU do local Hq=XU[cq];if Hq[0X1]==0X0000 then do oU[cq-1]={LF,Hq[0X2]};end;else(oU)[cq-0X1]=bm[Hq[2]];end;end;M(Cm,oU);end;end;(LF)[0x7]=dH(fU,oU,gF);TF=TF+0X001;(LF)[0X8]=true;TF=TF+1;do VU=0X5;end;do HF=VU+4-1;end;LF[VU](f(LF,VU+1,HF));do HF=VU-0X001;end;TF=TF+1;do TF=TF+1;end;do Vw=Sm[TF];end;TF=TF+0X01;LF[0X5]=gF[Vw[2]];TF=TF+0X0001;HF=0x00005;(LF[HF])();HF=HF-1;do TF=TF+1;end;do TF=TF+1;end;do Vw=Sm[TF];end;TF=TF+1;(LF)[0X005]=gF[Vw[0X2]];Vw=Sm[TF];TF=TF+0x1;LF[5]=LF[0X05][Vw[5]];Vw=Sm[TF];TF=TF+0X1;if not(not LF[5])then else do TF=Vw[0X0006];end;end;else do(LF)[0x03]=Vw[2];end;Vw=Sm[TF];local qC=(0X3);TF=TF+1;(LF)[4]=Vw[2];do Vw=Sm[TF];end;TF=TF+0x1;LF[0x5]=Vw[2];do Vw=Sm[TF];end;TF=TF+0X1;local nC=LF[qC];local gC,cC=LF[qC+1],(LF[qC+0x2]);LF[qC]=r(function()do for au=nC,gC,cC do C(true,au);end;end;end);TF=Vw[6];end;end;end;else do if Xw<0X0003D then if Xw==60 then(LF)[Vw[0X7]]=LF[Vw[6]][LF[Vw[0X1]]];else(LF)[Vw[0X7]]=gF[Vw[0X0002]];end;else if Xw~=62 then local p3,k3=6,(LF[5]);LF[p3+1]=k3;LF[p3]=k3[Vw[0x5]];Vw=Sm[TF];TF=TF+0X1;LF[8]=Vw[0X2];TF=TF+0X1;p3=6;LF[p3]=LF[p3](LF[p3+1],LF[p3+0X2]);HF=p3;Vw=Sm[TF];TF=TF+1;do if not LF[6]then do TF=Vw[0X00006];end;end;end;else do LF[0x9]=LF[3][Vw[0x0005]];end;TF=TF+1;TF=TF+0X1;Vw=Sm[TF];TF=TF+1;if LF[0x0009]==Vw[5]then else do TF=Vw[0X7];end;end;end;end;end;end;else if Xw>=0x37 then if not(Xw<57)then if Xw~=0X00003a then(LF)[0X9]=gF[Vw[2]];do Vw=Sm[TF];end;do TF=TF+1;end;do LF[10]=gF[Vw[2]];end;Vw=Sm[TF];local hN=0Xa;TF=TF+1;(LF)[10]=LF[0Xa][Vw[5]];Vw=Sm[TF];do TF=TF+1;end;local bN=(0);local AN=LF[10];(LF)[hN+0X1]=AN;(LF)[hN]=AN[Vw[5]];TF=TF+1;do hN=10;end;local ON=0X002;if ON==0X0 then else HF=hN+ON-1;end;local QN,BN=nil,(nil);if ON~=0x1 then QN,BN=eH(LF[hN](f(LF,hN+0X1,HF)));else QN,BN=eH(LF[hN]());end;if bN~=1 then if bN==0X0 then QN=QN+hN-1;do HF=QN;end;else QN=hN+bN-2;do HF=QN+1;end;end;local ZK=(0);for fS=hN,QN do do ZK=ZK+0x1;end;do LF[fS]=BN[ZK];end;end;else HF=hN-0X01;end;do TF=TF+1;end;TF=TF+1;TF=TF+0X01;hN=0X9;ON=0X0000;do bN=4;end;if ON~=0X0 then do HF=hN+ON-0X1;end;end;QN,BN=nil;if ON==1 then QN,BN=eH(LF[hN]());else QN,BN=eH(LF[hN](f(LF,hN+0X001,HF)));end;do if bN~=0X001 then if bN~=0X000 then QN=hN+bN-2;do HF=QN+0x01;end;else QN=QN+hN-0X001;HF=QN;end;local Ni=0;for Eh=hN,QN do Ni=Ni+1;LF[Eh]=BN[Ni];end;else HF=hN-0X1;end;end;do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X0001;hN=9;local vN=r(function(...)(C)();for Lo,Xo in...do C(true,Lo,Xo);end;end);vN(LF[hN],LF[hN+1],LF[hN+0X02]);HF=hN;do(LF)[hN]=vN;end;TF=Vw[0X06];else do LF[0X6]=gF[Vw[2]];end;do Vw=Sm[TF];end;TF=TF+1;LF[0X0007]=Vw[0X00002];Vw=Sm[TF];TF=TF+1;LF[0x8]=Vw[2];Vw=Sm[TF];TF=TF+0x01;LF[0X0009]=LF[0X5][Vw[0X5]];Vw=Sm[TF];TF=TF+0X1;local Bo=6;(LF)[0xA]=Vw[0x2];TF=TF+0X0001;do HF=Bo+5-0X01;end;(LF)[Bo]=LF[Bo](f(LF,Bo+1,HF));do HF=Bo;end;TF=TF+0x1;TF=TF+1;Vw=Sm[TF];TF=TF+0x1;if not(not LF[0X0006])then else TF=Vw[0X006];end;end;else if Xw~=0X38 then(LF)[0x07]=gF[Vw[2]];local cv=0X7;Vw=Sm[TF];TF=TF+1;LF[7]=LF[0X7][Vw[5]];Vw=Sm[TF];do TF=TF+0X1;end;LF[8]=Vw[2];TF=TF+0X001;LF[cv](LF[cv+0X1]);do HF=cv-1;end;Vw=Sm[TF];TF=TF+1;LF[7]=gF[Vw[2]];do Vw=Sm[TF];end;TF=TF+1;do cv=0X007;end;local Cv=LF[7];(LF)[cv+0X0001]=Cv;LF[cv]=Cv[Vw[0X5]];Vw=Sm[TF];TF=TF+0X1;(LF)[9]=Vw[0X2];TF=TF+0X001;do cv=0X07;end;(LF)[cv]=LF[cv](LF[cv+1],LF[cv+2]);do HF=cv;end;Vw=Sm[TF];TF=TF+1;if not(not LF[0x07])then else TF=Vw[6];end;else LF[3]=gF[Vw[0x2]];Vw=Sm[TF];do TF=TF+1;end;local HW=3;LF[4]=Vw[2];do TF=TF+1;end;LF[HW]=LF[HW](LF[HW+0X1]);HF=HW;TF=TF+0X1;TF=TF+1;do Vw=Sm[TF];end;do TF=TF+0X0001;end;if not(not LF[3])then else TF=Vw[6];end;end;end;else if Xw>=0X000035 then if Xw~=54 then local dJ,RJ=7,LF[0X6];LF[dJ+1]=RJ;LF[dJ]=RJ[Vw[5]];Vw=Sm[TF];TF=TF+0X00001;(LF)[0x9]=Vw[2];TF=TF+1;do dJ=0X7;end;LF[dJ]=LF[dJ](LF[dJ+0X01],LF[dJ+2]);HF=dJ;TF=TF+0X01;TF=TF+1;Vw=Sm[TF];do TF=TF+0X001;end;if not LF[7]then do TF=Vw[0x6];end;end;else do(LF)[Vw[7]]=true;end;end;else do if Xw==52 then TF=Vw[6];else local G2=(12);local L2=(LF[11]);(LF)[G2+1]=L2;LF[G2]=L2[Vw[5]];do Vw=Sm[TF];end;TF=TF+1;LF[0Xe]=Vw[2];do TF=TF+1;end;G2=0Xc;(LF)[G2]=LF[G2](LF[G2+1],LF[G2+0x2]);HF=G2;Vw=Sm[TF];TF=TF+1;if not(not LF[12])then else do TF=Vw[6];end;end;end;end;end;end;end;end;else do if not(Xw<0X011)then if Xw<0X000019 then if Xw>=0X15 then do if not(Xw>=23)then if Xw~=0x16 then LF[0x7]=Vw[0x2];TF=TF+1;local fe=0X7;LF[0x8]=LF[6];do TF=TF+0X0001;end;(LF)[7]=LF[fe]..LF[fe+0X0001];TF=TF+1;do LF[7]=LF[0X2][LF[7]];end;TF=TF+1;TF=TF+0X01;Vw=Sm[TF];TF=TF+0X1;do(LF)[0x8]=gF[Vw[2]];end;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;LF[9]=LF[7][Vw[0X005]];do TF=TF+0x1;end;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+1;end;LF[8][Vw[0x0002]]=LF[0X09];Vw=Sm[TF];TF=TF+0X0001;LF[8]=gF[Vw[0x2]];local Me=8;TF=TF+0X1;TF=TF+0X1;Vw=Sm[TF];TF=TF+1;do LF[0x9]=Vw[0X00002];end;TF=TF+0X01;LF[Me](LF[Me+0X1]);HF=Me-1;TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X1;(LF)[0X00008]=gF[Vw[0x2]];TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+1;LF[9]=LF[7][Vw[5]];do TF=TF+0X1;end;TF=TF+0X1;TF=TF+0x1;Me=0X8;(LF[Me])(LF[Me+0X1]);do HF=Me-1;end;Vw=Sm[TF];TF=TF+1;LF[8]=gF[Vw[0X2]];do TF=TF+1;end;TF=TF+0X1;TF=TF+0X00001;HF=8;LF[HF]=LF[HF]();Vw=Sm[TF];TF=TF+0X1;TF=Vw[6];else local J7=bm[0X000];do LF[0X02]=J7[0x0001][J7[0x2]];end;do Vw=Sm[TF];end;TF=TF+1;LF[3]=Vw[0X2];do TF=TF+0X1;end;local M7=(2);LF[M7](LF[M7+1]);HF=M7-0X1;Vw=Sm[TF];TF=TF+0X1;(LF)[2]=gF[Vw[0x0002]];Vw=Sm[TF];TF=TF+0X1;LF[3]=Vw[0x00002];TF=TF+0X1;M7=2;LF[M7]=LF[M7](LF[M7+1]);do HF=M7;end;TF=TF+0X1;TF=TF+1;TF=TF+1;J7=bm[0X0002];LF[0X3]=J7[0X1][J7[0X2]];TF=TF+0X00001;TF=TF+1;do Vw=Sm[TF];end;TF=TF+1;(LF)[3]=LF[3][Vw[5]];TF=TF+1;do LF[4]=LF[2];end;TF=TF+0X1;M7=3;(LF)[M7]=LF[M7](LF[M7+0x1]);HF=M7;Vw=Sm[TF];TF=TF+0X001;if not(not LF[3])then else TF=Vw[0X006];end;end;else do if Xw==24 then repeat local Ad,td,ud=Cm,LF,(Vw[0X007]);if not(#Ad>0X0)then else local G8=({});for aG,pG in I,Ad do for Dq,Uq in I,pG do if not(Uq[1]==td and Uq[0X0002]>=ud)then else local By=(Uq[0X00002]);do if not(not G8[By])then else G8[By]={td[By]};end;end;(Uq)[0X0001]=G8[By];Uq[0X0002]=1;end;end;end;end;until true;else local ce=(bm[0x1]);do LF[0X4]=ce[0X001][ce[2]];end;TF=TF+1;local te=4;TF=TF+0X00001;Vw=Sm[TF];TF=TF+1;local je=LF[0X4];(LF)[te+0X1]=je;LF[te]=je[Vw[0X0005]];do TF=TF+1;end;do te=0X4;end;(LF[te])(LF[te+0X1]);HF=te-1;do Vw=Sm[TF];end;do TF=TF+1;end;do TF=Vw[0X6];end;end;end;end;end;else if not(Xw<0X013)then do if Xw~=0x14 then LF[Vw[0X0007]]=false;else(LF)[2]=gF[Vw[2]];Vw=Sm[TF];do TF=TF+0X1;end;do(LF)[0X02]=LF[0X2][Vw[5]];end;TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+0X0001;end;(LF)[0X0002]=LF[2][Vw[5]];Vw=Sm[TF];TF=TF+1;TF=Vw[0X6];end;end;else if Xw~=0X12 then do LF[0x7]=Vw[0x2];end;TF=TF+1;do(LF)[8]=LF[6];end;local qC=(7);TF=TF+0X00001;do LF[7]=LF[qC]..LF[qC+1];end;TF=TF+0X1;do(LF)[0x07]=LF[2][LF[7]];end;TF=TF+0X00001;TF=TF+1;Vw=Sm[TF];TF=TF+0x01;(LF)[8]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0x1;do(LF)[0X0009]=LF[0x7][Vw[5]];end;Vw=Sm[TF];do TF=TF+1;end;LF[8][Vw[0X2]]=LF[0X0009];do Vw=Sm[TF];end;TF=TF+1;LF[0X8]=gF[Vw[2]];Vw=Sm[TF];TF=TF+1;do(LF)[0X9]=Vw[2];end;local rC=(8);TF=TF+1;(LF[rC])(LF[rC+1]);do HF=rC-0X1;end;Vw=Sm[TF];do TF=TF+1;end;do(LF)[0X8]=gF[Vw[2]];end;do TF=TF+1;end;TF=TF+0X1;Vw=Sm[TF];TF=TF+0x1;(LF)[9]=LF[0X0007][Vw[5]];TF=TF+1;rC=0X8;LF[rC](LF[rC+1]);HF=rC-0X01;Vw=Sm[TF];TF=TF+0x1;do(LF)[0X00008]=gF[Vw[2]];end;TF=TF+1;TF=TF+0X1;do TF=TF+1;end;HF=0x008;do(LF)[HF]=LF[HF]();end;TF=TF+0x1;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+0X001;end;TF=Vw[6];else do LF[0Xd]=LF[12][Vw[0X05]];end;TF=TF+0X00001;do TF=TF+0x01;end;Vw=Sm[TF];do TF=TF+1;end;if not LF[0XD]then TF=Vw[0X6];end;end;end;end;else if not(Xw>=29)then if not(Xw>=27)then if Xw==26 then LF[2]=gF[Vw[0x2]];TF=TF+0X1;TF=TF+0X00001;Vw=Sm[TF];TF=TF+1;LF[3]=Vw[0X2];Vw=Sm[TF];TF=TF+0X0001;LF[4]=Vw[2];local G3=bm[0X0];do Vw=Sm[TF];end;TF=TF+0x1;(LF)[0X5]=Vw[2];local a3=(0X2);TF=TF+1;do HF=a3+4-0X1;end;LF[a3](f(LF,a3+0X1,HF));HF=a3-0X1;do TF=TF+1;end;TF=TF+1;do TF=TF+1;end;(LF)[2]=G3[0X1][G3[2]];Vw=Sm[TF];TF=TF+1;(LF)[0X03]=Vw[0x02];do TF=TF+0X1;end;a3=2;(LF[a3])(LF[a3+0X1]);do HF=a3-0X1;end;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;TF=Vw[0X006];else do LF[0X2]=LF[0X0][Vw[0X005]];end;TF=TF+0X01;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X1;if LF[2]~=Vw[5]then TF=Vw[7];end;end;else if Xw~=28 then LF[13]=gF[Vw[2]];Vw=Sm[TF];do TF=TF+0X001;end;LF[14]=LF[0Xc][Vw[5]];do TF=TF+1;end;local QF=0Xd;do(LF)[QF]=LF[QF](LF[QF+1]);end;HF=QF;TF=TF+0x1;TF=TF+1;Vw=Sm[TF];TF=TF+1;if not(not LF[13])then else TF=Vw[0X6];end;else(LF)[4]=gF[Vw[0X2]];do Vw=Sm[TF];end;TF=TF+1;LF[5]=Vw[2];do TF=TF+0x1;end;local vJ=(0X004);do(LF)[0X6]=false;end;TF=TF+1;(LF[vJ])(LF[vJ+1],LF[vJ+0X2]);do HF=vJ-0X1;end;TF=TF+1;TF=TF+1;do Vw=Sm[TF];end;TF=TF+0X1;do TF=Vw[6];end;end;end;else if Xw>=31 then if Xw>=32 then if Xw==33 then do if LF[Vw[6]]<LF[Vw[0X1]]then TF=Vw[7];end;end;else do(LF)[0X7]=gF[Vw[2]];end;TF=TF+1;TF=TF+0x1;TF=TF+0X01;HF=0X07;(LF)[HF]=LF[HF]();TF=TF+0X1;TF=TF+0X0001;TF=TF+1;(LF)[0X7]=LF[7]-LF[0X5];Vw=Sm[TF];TF=TF+0X1;do if not(not(Vw[0X002]<LF[7]))then else do TF=Vw[7];end;end;end;end;else do if not(not LF[Vw[0x0007]])then else TF=Vw[0X6];end;end;end;else if Xw==30 then if LF[Vw[0X0006]]==Vw[5]then else TF=Vw[7];end;else do LF[0X2]=LF[0][Vw[5]];end;do TF=TF+0X0001;end;TF=TF+1;Vw=Sm[TF];do TF=TF+1;end;if LF[0X2]==Vw[0X005]then else TF=Vw[0X7];end;end;end;end;end;else if not(Xw<8)then if Xw>=12 then do if Xw>=0XE then if not(Xw>=15)then local k7=(bm[0]);do LF[0X00002]=k7[1][k7[2]];end;TF=TF+1;TF=TF+0X0001;Vw=Sm[TF];local c7=0X02;TF=TF+0x1;(LF)[0X3]=Vw[2];TF=TF+1;LF[c7](LF[c7+0X1]);HF=c7-1;TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;LF[0X2]=gF[Vw[2]];TF=TF+0X1;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+1;end;(LF)[0X03]=Vw[2];Vw=Sm[TF];TF=TF+0X1;LF[0X004]=Vw[2];Vw=Sm[TF];TF=TF+0x1;do(LF)[0X0005]=Vw[2];end;TF=TF+1;do c7=2;end;HF=c7+4-0X00001;LF[c7](f(LF,c7+0x01,HF));do HF=c7-0X1;end;do Vw=Sm[TF];end;TF=TF+0X1;do(LF)[2]=gF[Vw[2]];end;Vw=Sm[TF];do TF=TF+0X1;end;(LF)[3]=Vw[2];Vw=Sm[TF];do TF=TF+0X1;end;(LF)[4]=Vw[0X2];TF=TF+1;do c7=2;end;(LF[c7])(LF[c7+0X1],LF[c7+0X02]);HF=c7-1;do TF=TF+1;end;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X1;(LF)[0X0002]=gF[Vw[0X2]];Vw=Sm[TF];TF=TF+0X001;(LF)[0X3]=Vw[2];TF=TF+1;c7=2;LF[c7]=LF[c7](LF[c7+1]);HF=c7;TF=TF+1;k7=bm[2];LF[0x3]=k7[0x01][k7[2]];TF=TF+0X1;TF=TF+1;Vw=Sm[TF];TF=TF+1;(LF)[3]=LF[3][Vw[5]];do TF=TF+0X1;end;LF[0X4]=LF[2];TF=TF+1;c7=0X3;LF[c7]=LF[c7](LF[c7+0X1]);HF=c7;TF=TF+1;do TF=TF+0X1;end;Vw=Sm[TF];do TF=TF+1;end;do if not LF[3]then TF=Vw[0X6];end;end;else do if Xw~=16 then(LF)[0X007]=gF[Vw[0x2]];Vw=Sm[TF];do TF=TF+0X00001;end;(LF)[8]=Vw[0X2];TF=TF+1;local Br=0X7;(LF[Br])(LF[Br+0X001]);do HF=Br-1;end;TF=TF+1;TF=TF+0X01;Vw=Sm[TF];TF=TF+0X1;TF=Vw[6];else(LF)[3]=gF[Vw[0X2]];TF=TF+1;local Ml=(4);HF=0x0003;(LF[HF])();HF=HF-0x1;Vw=Sm[TF];TF=TF+1;do LF[0X3]=LF[0x2][Vw[0x5]];end;Vw=Sm[TF];TF=TF+1;(LF)[3]=LF[3][Vw[0X5]];Vw=Sm[TF];TF=TF+0X01;(LF)[4]=gF[Vw[2]];TF=TF+0X1;TF=TF+0X01;Vw=Sm[TF];TF=TF+0X1;LF[4]=LF[0X004][Vw[5]];Vw=Sm[TF];do TF=TF+0X1;end;(LF)[0x0005]=Vw[0x0002];do Vw=Sm[TF];end;do TF=TF+1;end;LF[0x6]=Vw[0X002];Vw=Sm[TF];TF=TF+0X1;(LF)[0X7]=Vw[0X2];TF=TF+1;HF=Ml+4-0X0001;LF[Ml]=LF[Ml](f(LF,Ml+1,HF));HF=Ml;TF=TF+1;TF=TF+0X1;Vw=Sm[TF];TF=TF+0X1;if LF[0X03]==LF[0X4]then TF=Vw[7];end;end;end;end;else if Xw==13 then do(LF)[0X5]=gF[Vw[2]];end;TF=TF+1;HF=5;LF[HF]=LF[HF]();TF=TF+1;do TF=TF+1;end;TF=TF+0X1;LF[5]=LF[5]-LF[3];do Vw=Sm[TF];end;TF=TF+1;do if not(Vw[0x2]<LF[5])then TF=Vw[0X00007];end;end;else local FO,ZO=bm[0],(3);(LF)[0X0003]=FO[1][FO[2]];TF=TF+1;TF=TF+0X00001;Vw=Sm[TF];TF=TF+1;LF[4]=Vw[2];TF=TF+0x1;LF[ZO](LF[ZO+0X1]);do HF=ZO-0X1;end;TF=TF+1;TF=TF+0x1;TF=TF+1;FO=bm[0X2];do(LF)[0X3]=FO[0x1][FO[0X02]];end;do TF=TF+1;end;do TF=TF+1;end;do Vw=Sm[TF];end;TF=TF+0X001;(LF)[0X3]=LF[0x03][Vw[0X5]];TF=TF+1;TF=TF+0X1;TF=TF+1;(LF)[4]=LF[2];TF=TF+0X0001;FO=bm[1];do LF[0X0005]=FO[1][FO[0X02]];end;do TF=TF+1;end;do ZO=0X3;end;LF[ZO](LF[ZO+0x1],LF[ZO+2]);do HF=ZO-0x1;end;TF=TF+1;FO=bm[1];do LF[0x3]=FO[0X1][FO[0X002]];end;Vw=Sm[TF];TF=TF+1;local XO=LF[3];ZO=3;do LF[ZO+0X1]=XO;end;(LF)[ZO]=XO[Vw[0X5]];TF=TF+0X1;ZO=0X3;(LF[ZO])(LF[ZO+1]);HF=ZO-1;do TF=TF+0X01;end;do TF=TF+0X1;end;Vw=Sm[TF];TF=TF+1;(LF)[0X00003]=gF[Vw[2]];TF=TF+0X0001;HF=0X3;(LF)[HF]=LF[HF]();TF=TF+0X1;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+1;end;TF=Vw[6];end;end;end;else if Xw<0xA then do if Xw~=9 then LF[0X7]=LF[0X3][Vw[5]];TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;if LF[0X7]==Vw[0X5]then else do TF=Vw[7];end;end;else local VX=bm[0x0000];do(LF)[2]=VX[1][VX[0x2]];end;local SX=(2);do Vw=Sm[TF];end;TF=TF+1;(LF)[0X3]=Vw[0X2];do TF=TF+0X1;end;LF[SX](LF[SX+0x1]);HF=SX-0X1;TF=TF+0x1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;LF[0x002]=gF[Vw[0X2]];Vw=Sm[TF];TF=TF+0x00001;LF[3]=Vw[0x2];Vw=Sm[TF];TF=TF+1;LF[0X4]=Vw[2];Vw=Sm[TF];TF=TF+1;LF[5]=Vw[2];TF=TF+1;SX=2;HF=SX+0X4-0X0001;LF[SX](f(LF,SX+1,HF));HF=SX-1;do TF=TF+0x1;end;TF=TF+1;Vw=Sm[TF];TF=TF+1;do TF=Vw[0X06];end;end;end;else if Xw~=11 then LF[Vw[7]]=Vw[2];else do LF[0Xb]=LF[6];end;TF=TF+0X1;(LF)[0X3]=LF[11];TF=TF+1;do LF[2]=LF[10];end;do Vw=Sm[TF];end;TF=TF+0X1;TF=Vw[6];end;end;end;else if not(Xw>=0X00004)then if not(Xw<2)then if Xw==3 then LF[0X4]=gF[Vw[2]];TF=TF+0X1;TF=TF+0x1;do TF=TF+0X1;end;do HF=4;end;local Ni,ti=0,(5);LF[HF]();do HF=HF-0X1;end;do TF=TF+0x1;end;TF=TF+1;do Vw=Sm[TF];end;TF=TF+1;(LF)[4]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0X1;(LF)[0X5]=gF[Vw[2]];TF=TF+1;TF=TF+1;Vw=Sm[TF];do TF=TF+1;end;(LF)[0X0006]=gF[Vw[2]];do TF=TF+1;end;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+0X1;(LF)[6]=LF[6][Vw[5]];TF=TF+1;local Yi=0X2;if Yi==0 then else HF=ti+Yi-1;end;local Zi,Hi=nil,(nil);if Yi~=1 then Zi,Hi=eH(LF[ti](f(LF,ti+1,HF)));else do Zi,Hi=eH(LF[ti]());end;end;if Ni==1 then do HF=ti-1;end;else do if Ni~=0x0 then do Zi=ti+Ni-2;end;HF=Zi+1;else Zi=Zi+ti-1;HF=Zi;end;end;local dP=0;for Br=ti,Zi do dP=dP+0X1;(LF)[Br]=Hi[dP];end;end;TF=TF+0x1;do TF=TF+0X01;end;TF=TF+0X00001;ti=4;do(LF)[ti]=LF[ti](f(LF,ti+0X001,HF));end;HF=ti;Vw=Sm[TF];TF=TF+0x01;if LF[4]~=Vw[0x5]then else TF=Vw[7];end;else if LF[Vw[6]]~=LF[Vw[1]]then TF=Vw[0X007];end;end;else if Xw==1 then(LF)[0X3]=gF[Vw[0X002]];do Vw=Sm[TF];end;TF=TF+0x1;do LF[4]=gF[Vw[0X2]];end;TF=TF+1;do TF=TF+0x1;end;Vw=Sm[TF];TF=TF+0x1;local VP=(0X3);LF[5]=LF[0x2][Vw[5]];Vw=Sm[TF];TF=TF+0x1;LF[6]=Vw[0x2];TF=TF+1;do HF=VP+4-1;end;(LF[VP])(f(LF,VP+0x00001,HF));HF=VP-1;Vw=Sm[TF];TF=TF+0X1;TF=Vw[0x00006];else do LF[0xD]=LF[0Xc][Vw[0x5]];end;do TF=TF+1;end;TF=TF+0X1;Vw=Sm[TF];TF=TF+0x1;if not(not LF[13])then else TF=Vw[6];end;end;end;else if Xw<6 then if Xw~=0X00005 then else(LF)[0X9]=gF[Vw[0X2]];TF=TF+0x0001;do TF=TF+1;end;TF=TF+1;HF=9;(LF[HF])();HF=HF-0X001;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;(LF)[9]=LF[7][Vw[0x5]];Vw=Sm[TF];TF=TF+0X1;(LF)[9]=LF[9][Vw[0x5]];Vw=Sm[TF];TF=TF+1;if not(LF[0x9])then else TF=Vw[6];end;end;else do if Xw~=0X7 then LF[3]=LF[0X2][Vw[5]];Vw=Sm[TF];TF=TF+1;LF[3]=LF[3][Vw[5]];TF=TF+0X1;do TF=TF+0X1;end;Vw=Sm[TF];TF=TF+1;(LF)[0X4]=gF[Vw[0X2]];TF=TF+0X1;do TF=TF+0X1;end;Vw=Sm[TF];TF=TF+0X0001;(LF)[0X4]=LF[0X4][Vw[5]];Vw=Sm[TF];TF=TF+1;LF[5]=Vw[2];do Vw=Sm[TF];end;do TF=TF+1;end;LF[6]=Vw[2];Vw=Sm[TF];do TF=TF+0X1;end;(LF)[7]=Vw[0X2];do TF=TF+0X1;end;local Ws=(0x00004);do HF=Ws+4-0x001;end;do LF[Ws]=LF[Ws](f(LF,Ws+1,HF));end;HF=Ws;TF=TF+0X1;do TF=TF+0x00001;end;do Vw=Sm[TF];end;do TF=TF+1;end;if LF[0x0003]==LF[4]then else TF=Vw[0x00007];end;else LF[2]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0x1;(LF)[3]=gF[Vw[2]];TF=TF+1;TF=TF+0x1;Vw=Sm[TF];TF=TF+1;LF[0X4]=gF[Vw[2]];local xv=(3);Vw=Sm[TF];TF=TF+0X00001;LF[4]=LF[4][Vw[0X5]];TF=TF+0X1;TF=TF+0X1;TF=TF+0X1;local Pv=0X2;if Pv~=0x00000 then HF=xv+Pv-0X001;end;local Rv,Hv,Lv=0x000,nil,nil;if Pv~=0X1 then do Hv,Lv=eH(LF[xv](f(LF,xv+1,HF)));end;else Hv,Lv=eH(LF[xv]());end;if Rv~=0x0001 then if Rv~=0 then Hv=xv+Rv-2;HF=Hv+0X1;else Hv=Hv+xv-1;HF=Hv;end;local zt=(0);do for tT=xv,Hv do zt=zt+1;LF[tT]=Lv[zt];end;end;else do HF=xv-0X001;end;end;TF=TF+0X0001;do TF=TF+0X1;end;TF=TF+0X1;do xv=0X2;end;LF[xv]=LF[xv](f(LF,xv+1,HF));do HF=xv;end;TF=TF+1;TF=TF+0x1;Vw=Sm[TF];do TF=TF+1;end;if LF[0X2]~=Vw[5]then else TF=Vw[0X7];end;end;end;end;end;end;end;end;end;else if Xw<102 then if Xw>=85 then if not(Xw<0x5d)then if Xw>=0X61 then if not(Xw>=99)then if Xw~=0X62 then local rR=LF[0X6];local sR=(0X009);do LF[sR+0X1]=rR;end;(LF)[sR]=rR[Vw[0x0005]];Vw=Sm[TF];TF=TF+0x1;LF[11]=Vw[0x2];TF=TF+0X1;sR=0X9;do(LF)[sR]=LF[sR](LF[sR+0x0001],LF[sR+0X002]);end;HF=sR;TF=TF+0X0001;do(LF)[0X9]=LF[0X00009]-LF[0x0007];end;do Vw=Sm[TF];end;TF=TF+0x1;(LF)[9]=LF[0X009][Vw[5]];do TF=TF+0X0001;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X01;TF=Vw[0X006];else LF[4]=gF[Vw[0X2]];Vw=Sm[TF];do TF=TF+1;end;LF[4]=LF[4][Vw[5]];Vw=Sm[TF];TF=TF+0x001;(LF)[4]=LF[0x0004][Vw[0X5]];Vw=Sm[TF];do TF=TF+1;end;if not(LF[4]<Vw[5])then TF=Vw[7];end;end;else if Xw<100 then local YB=bm[0];(LF)[0X004]=YB[1][YB[2]];TF=TF+1;do TF=TF+0X00001;end;local LB=0X4;do Vw=Sm[TF];end;TF=TF+0X00001;do LF[0x0005]=Vw[0X2];end;do TF=TF+1;end;LF[LB](LF[LB+0X1]);HF=LB-0X1;TF=TF+1;TF=TF+0X1;TF=TF+1;YB=bm[0X00001];LF[0x00004]=YB[0X00001][YB[2]];do TF=TF+0X1;end;TF=TF+1;do Vw=Sm[TF];end;TF=TF+0X1;local vB=LF[0X0004];LB=0x4;(LF)[LB+0X1]=vB;(LF)[LB]=vB[Vw[0X5]];TF=TF+0X01;LB=0X04;(LF[LB])(LF[LB+1]);HF=LB-0X1;TF=TF+0X01;TF=TF+0x0001;TF=TF+0X1;do LF[0X0004]=false;end;Vw=Sm[TF];TF=TF+0X1;gF[Vw[2]]=LF[0X00004];Vw=Sm[TF];TF=TF+1;(LF)[4]=gF[Vw[2]];do TF=TF+1;end;HF=0X00004;LF[HF]();do HF=HF-0X001;end;TF=TF+0x0001;TF=TF+0X1;Vw=Sm[TF];TF=TF+0x1;(LF)[0X0004]=gF[Vw[2]];TF=TF+1;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+0X1;LF[0X5]=LF[3][Vw[0X5]];Vw=Sm[TF];TF=TF+0x0001;(LF)[0X5]=LF[0X05][Vw[0X5]];TF=TF+1;TF=TF+0X1;Vw=Sm[TF];TF=TF+0x1;LF[6]=gF[Vw[0X2]];TF=TF+0x01;TF=TF+1;do Vw=Sm[TF];end;do TF=TF+1;end;(LF)[0x6]=LF[6][Vw[0X5]];TF=TF+1;TF=TF+0x01;Vw=Sm[TF];TF=TF+1;LF[7]=Vw[0x002];Vw=Sm[TF];TF=TF+0X00001;LF[8]=Vw[0X2];Vw=Sm[TF];TF=TF+1;(LF)[9]=gF[Vw[2]];TF=TF+0X1;TF=TF+1;do Vw=Sm[TF];end;do TF=TF+0X01;end;LF[9]=LF[0x009][Vw[0X005]];Vw=Sm[TF];TF=TF+0X1;do(LF)[0x000a]=Vw[2];end;Vw=Sm[TF];TF=TF+0X1;do(LF)[11]=Vw[0X2];end;do TF=TF+0X1;end;do LB=0X9;end;do(LF)[LB]=LF[LB](LF[LB+0x1],LF[LB+0x2]);end;HF=LB;do TF=TF+0X1;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;LF[9]=LF[9]/Vw[0x00005];do TF=TF+0x1;end;LB=0X6;HF=LB+4-0X0001;LF[LB]=LF[LB](f(LF,LB+0X0001,HF));HF=LB;TF=TF+0X1;local WB=(nil);(LF)[5]=LF[5]+LF[0x00006];Vw=Sm[TF];TF=TF+1;local JB=Zm[Vw[6]];local sB=JB[0X3];local zB=(#sB);do if zB>0X0 then do WB={};end;for VE=1,zB do local lE=sB[VE];if lE[1]~=0X00 then do WB[VE-0x1]=bm[lE[2]];end;else do WB[VE-1]={LF,lE[2]};end;end;end;M(Cm,WB);end;end;LF[6]=dH(JB,WB,gF);do TF=TF+1;end;LB=0x4;LF[LB](LF[LB+1],LF[LB+2]);HF=LB-0x01;do Vw=Sm[TF];end;TF=TF+1;(LF)[0X0004]=gF[Vw[0X0002]];do TF=TF+0X1;end;do LF[0X05]=LF[0X2];end;TF=TF+1;LB=4;LF[LB](LF[LB+0x1]);HF=LB-0x1;do TF=TF+0X001;end;do TF=TF+0X1;end;Vw=Sm[TF];TF=TF+0X00001;do(LF)[4]=gF[Vw[2]];end;do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X001;LF[0x00004]=LF[4][Vw[5]];TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;do(LF)[5]=Vw[0X002];end;do TF=TF+1;end;do LB=0x0004;end;(LF[LB])(LF[LB+1]);HF=LB-1;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;LF[0X04]=gF[Vw[0x2]];Vw=Sm[TF];TF=TF+0X01;if not(not LF[0X4])then else TF=Vw[6];end;else if Xw~=101 then(LF)[0X5]=gF[Vw[2]];Vw=Sm[TF];TF=TF+1;(LF)[5]=LF[0x5][Vw[0X00005]];TF=TF+1;do TF=TF+0x1;end;do Vw=Sm[TF];end;do TF=TF+1;end;if not(not LF[0X05])then else TF=Vw[6];end;else LF[0X00000]=gF[Vw[0X2]];TF=TF+0x0001;local tu=0;TF=TF+1;Vw=Sm[TF];do TF=TF+1;end;(LF)[0x00001]=Vw[2];Vw=Sm[TF];TF=TF+1;(LF)[2]=Vw[2];do TF=TF+1;end;LF[tu]=LF[tu](LF[tu+1],LF[tu+0x2]);HF=tu;TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+1;end;LF[0X0001]=gF[Vw[2]];do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];do TF=TF+1;end;LF[0x1]=LF[1][Vw[5]];TF=TF+0X1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X0001;LF[0X0001]=LF[0X1][Vw[5]];local ku=(LF[0x0001]);Vw=Sm[TF];do TF=TF+1;end;tu=1;LF[tu+0x00001]=ku;LF[tu]=ku[Vw[0X5]];Vw=Sm[TF];TF=TF+1;LF[0X3]=Vw[2];TF=TF+0x1;LF[4]=true;TF=TF+1;tu=1;HF=tu+4-1;do(LF)[tu]=LF[tu](f(LF,tu+1,HF));end;HF=tu;Vw=Sm[TF];TF=TF+1;if not LF[1]then TF=Vw[6];end;end;end;end;else if Xw>=95 then if Xw==0X60 then LF[0X8]=gF[Vw[2]];TF=TF+1;HF=0X08;(LF[HF])();HF=HF-1;TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;TF=Vw[6];else local uA=(bm[0X0]);LF[2]=uA[1][uA[0X0002]];Vw=Sm[TF];local SA=(0X00002);TF=TF+1;do(LF)[0X03]=Vw[0X00002];end;TF=TF+1;(LF[SA])(LF[SA+0X1]);HF=SA-0X001;do TF=TF+1;end;TF=TF+0X1;Vw=Sm[TF];do TF=TF+1;end;(LF)[0x2]=gF[Vw[0X0002]];TF=TF+1;TF=TF+0X1;Vw=Sm[TF];TF=TF+0X1;LF[0x3]=Vw[2];Vw=Sm[TF];TF=TF+0X01;LF[0x4]=Vw[0X2];Vw=Sm[TF];TF=TF+1;(LF)[5]=Vw[0X0002];TF=TF+0X1;SA=0X00002;HF=SA+4-1;LF[SA](f(LF,SA+1,HF));HF=SA-1;TF=TF+0X1;do TF=TF+0X00001;end;Vw=Sm[TF];TF=TF+1;TF=Vw[0X6];end;else do if Xw~=94 then LF[6]=LF[0X05][Vw[5]];Vw=Sm[TF];do TF=TF+0x1;end;LF[0X00007]=gF[Vw[0X00002]];do TF=TF+0X1;end;TF=TF+1;Vw=Sm[TF];TF=TF+1;(LF)[7]=LF[7][Vw[0X5]];TF=TF+0X001;TF=TF+1;Vw=Sm[TF];TF=TF+0x1;if LF[0x006]~=LF[0X7]then else TF=Vw[7];end;else local pE=(bm[Vw[0X006]]);do(LF)[Vw[0x0007]]=pE[0X0001][pE[2]];end;end;end;end;end;else do if Xw<0X59 then if not(Xw<87)then if Xw~=88 then(LF)[Vw[7]]=LF[Vw[6]]>LF[Vw[1]];else(LF)[0x02]=LF[0][Vw[5]];TF=TF+0X1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0x1;if LF[2]~=Vw[5]then do TF=Vw[7];end;end;end;else do if Xw~=0X56 then local kc=(bm[0X000]);do LF[2]=kc[1][kc[0X02]];end;do Vw=Sm[TF];end;local cc=2;TF=TF+1;do LF[3]=Vw[2];end;TF=TF+1;LF[cc](LF[cc+1]);HF=cc-1;TF=TF+1;do(LF)[2]=true;end;do Vw=Sm[TF];end;do TF=TF+0x1;end;gF[Vw[0X00002]]=LF[2];do Vw=Sm[TF];end;TF=TF+1;(LF)[2]=gF[Vw[0X2]];TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+1;do(LF)[3]=Vw[2];end;TF=TF+0X0001;(LF)[4]=false;TF=TF+0x1;cc=0X2;(LF[cc])(LF[cc+1],LF[cc+2]);do HF=cc-1;end;do Vw=Sm[TF];end;TF=TF+1;do LF[2]=gF[Vw[0X002]];end;TF=TF+0x1;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+0X001;LF[3]=Vw[0x002];do TF=TF+0X00001;end;cc=2;(LF)[cc]=LF[cc](LF[cc+0X1]);do HF=cc;end;TF=TF+0X001;TF=TF+1;Vw=Sm[TF];TF=TF+0x1;if not LF[2]then TF=Vw[0x06];end;else LF[0X3]=gF[Vw[2]];local t5=0X3;do Vw=Sm[TF];end;TF=TF+1;LF[4]=Vw[0x2];TF=TF+0X1;(LF[t5])(LF[t5+0X01]);HF=t5-1;TF=TF+0X1;TF=TF+1;Vw=Sm[TF];do TF=TF+1;end;TF=Vw[6];end;end;end;else do if not(Xw<0X05B)then if Xw==92 then LF[Vw[7]]=LF[Vw[6]];else LF[0x2]=LF[0X00][Vw[5]];TF=TF+0X0001;TF=TF+1;Vw=Sm[TF];TF=TF+1;if LF[2]==Vw[5]then else TF=Vw[0X7];end;end;else if Xw==90 then(LF)[Vw[7]]=Vw[0x002];else do LF[0X0005]=gF[Vw[0X0002]];end;do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;do(LF)[5]=LF[5][Vw[0X5]];end;TF=TF+0X0001;TF=TF+1;Vw=Sm[TF];TF=TF+1;if not(not LF[5])then else do TF=Vw[0X6];end;end;end;end;end;end;end;end;else do if Xw>=0X00004c then if not(Xw<0X50)then if Xw>=82 then if not(Xw>=0X53)then LF[0X3]=Vw[0X00002];local Nc=(0X00003);Vw=Sm[TF];TF=TF+0x1;(LF)[4]=Vw[2];Vw=Sm[TF];TF=TF+0x1;(LF)[0x0005]=Vw[2];Vw=Sm[TF];TF=TF+1;local vc=LF[Nc];local Ac=(LF[Nc+2]);local wc=LF[Nc+1];do LF[Nc]=r(function()for zf=vc,wc,Ac do C(true,zf);end;end);end;TF=Vw[6];else do if Xw==0X54 then local lQ=bm[0X1];LF[9]=lQ[0x1][lQ[2]];TF=TF+0x00001;TF=TF+1;Vw=Sm[TF];local BQ=(9);TF=TF+0X1;local JQ=LF[0X9];do(LF)[BQ+1]=JQ;end;do(LF)[BQ]=JQ[Vw[0X5]];end;TF=TF+0X0001;BQ=9;(LF)[BQ]=LF[BQ](LF[BQ+1]);HF=BQ;do Vw=Sm[TF];end;TF=TF+0X1;if not LF[9]then TF=Vw[0X006];end;else local r3=bm[0];do(LF)[0X0002]=r3[1][r3[0X2]];end;local v3=0X002;Vw=Sm[TF];TF=TF+0X1;LF[3]=Vw[2];local O3=(0X00002);TF=TF+0x1;(LF[O3])(LF[O3+0x00001]);HF=O3-1;Vw=Sm[TF];TF=TF+1;do(LF)[0X002]=Vw[0X0002];end;do Vw=Sm[TF];end;TF=TF+0x001;do LF[0X003]=gF[Vw[0X00002]];end;Vw=Sm[TF];do TF=TF+0X00001;end;(LF)[0X04]=gF[Vw[0X002]];TF=TF+1;do TF=TF+0X01;end;do TF=TF+0X1;end;O3=0X3;local l3=0x00004;if v3==0 then else HF=O3+v3-1;end;local x3,L3=nil,(nil);if v3==1 then x3,L3=eH(LF[O3]());else x3,L3=eH(LF[O3](f(LF,O3+0x1,HF)));end;if l3~=1 then if l3==0 then do x3=x3+O3-1;end;HF=x3;else do x3=O3+l3-0X2;end;do HF=x3+1;end;end;local UV=0x0000;for ZO=O3,x3 do UV=UV+0X1;(LF)[ZO]=L3[UV];end;else HF=O3-0X1;end;TF=TF+1;TF=TF+1;do Vw=Sm[TF];end;do TF=TF+0X1;end;O3=3;local Q3=(r(function(...)(C)();for Ch,yh in...do(C)(true,Ch,yh);end;end));Q3(LF[O3],LF[O3+0X00001],LF[O3+2]);HF=O3;do LF[O3]=Q3;end;TF=Vw[6];end;end;end;else if Xw==81 then local pT=bm[0];(LF)[2]=pT[1][pT[0X00002]];do TF=TF+1;end;TF=TF+1;Vw=Sm[TF];local nT=2;TF=TF+1;(LF)[0x3]=Vw[0X2];TF=TF+1;LF[nT](LF[nT+0X1]);HF=nT-1;TF=TF+1;TF=TF+0X0001;Vw=Sm[TF];TF=TF+0X00001;do(LF)[0X2]=gF[Vw[2]];end;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+1;if LF[2]then TF=Vw[0X06];end;else do LF[Vw[7]]=LF[Vw[0X6]][Vw[0X5]];end;end;end;else if Xw>=78 then if Xw==79 then(LF)[4]=LF[3][Vw[0X5]];TF=TF+1;do TF=TF+0X1;end;Vw=Sm[TF];TF=TF+1;do if not(not(Vw[2]<LF[4]))then else do TF=Vw[0X7];end;end;end;else LF[0X0005]=LF[0x3][Vw[5]];TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0x1;do if not LF[0X5]then do TF=Vw[6];end;end;end;end;else if Xw==77 then LF[0X8]=gF[Vw[2]];do TF=TF+0x0001;end;HF=8;(LF)[HF]=LF[HF]();local zf=(0x8);TF=TF+0X01;do LF[5]=LF[0X008];end;local pf=bm[0X0];TF=TF+0x01;LF[0X8]=pf[1][pf[0X2]];Vw=Sm[TF];TF=TF+0X0001;(LF)[0x0009]=Vw[0X2];TF=TF+0X00001;(LF[zf])(LF[zf+0X1]);HF=zf-0X1;TF=TF+0X1;do TF=TF+0x1;end;TF=TF+0X0001;pf=bm[1];do(LF)[8]=pf[1][pf[2]];end;local Jf=LF[8];Vw=Sm[TF];TF=TF+0X1;do zf=0X0008;end;do(LF)[zf+1]=Jf;end;(LF)[zf]=Jf[Vw[5]];TF=TF+0x1;zf=0X008;LF[zf](LF[zf+0x1]);do HF=zf-0X1;end;TF=TF+1;local Tf=(2);TF=TF+0x1;do Vw=Sm[TF];end;do TF=TF+1;end;LF[8]=gF[Vw[0X2]];TF=TF+1;do TF=TF+0x1;end;do TF=TF+0X1;end;HF=0x00008;LF[HF]();do HF=HF-1;end;TF=TF+0x1;LF[8]=true;Vw=Sm[TF];TF=TF+1;do gF[Vw[0X2]]=LF[8];end;Vw=Sm[TF];TF=TF+0X01;LF[8]=gF[Vw[0X2]];Vw=Sm[TF];TF=TF+0x1;LF[9]=LF[0X7][Vw[5]];do Vw=Sm[TF];end;TF=TF+0x1;LF[9]=LF[9][Vw[5]];Vw=Sm[TF];TF=TF+1;LF[10]=gF[Vw[2]];Vw=Sm[TF];TF=TF+1;LF[0X00A]=LF[10][Vw[5]];do TF=TF+0X0001;end;do TF=TF+1;end;do Vw=Sm[TF];end;do TF=TF+1;end;LF[11]=gF[Vw[0X2]];Vw=Sm[TF];do TF=TF+1;end;(LF)[0xb]=LF[11][Vw[5]];do Vw=Sm[TF];end;do TF=TF+1;end;LF[12]=Vw[2];do Vw=Sm[TF];end;TF=TF+0X1;LF[13]=Vw[2];TF=TF+0X01;do zf=0X0b;end;do LF[zf]=LF[zf](LF[zf+0X1],LF[zf+2]);end;HF=zf;Vw=Sm[TF];TF=TF+0X0001;do(LF)[0XB]=LF[11]/Vw[5];end;Vw=Sm[TF];do TF=TF+0X1;end;LF[0XC]=Vw[2];Vw=Sm[TF];TF=TF+0X1;LF[0XD]=gF[Vw[0X02]];Vw=Sm[TF];TF=TF+1;LF[13]=LF[0x000D][Vw[0X005]];TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;LF[0x000e]=Vw[0X2];Vw=Sm[TF];TF=TF+1;do LF[15]=Vw[0X002];end;TF=TF+0X1;do zf=0X000d;end;LF[zf]=LF[zf](LF[zf+0X1],LF[zf+0X2]);HF=zf;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;do(LF)[13]=LF[13]/Vw[0X0005];end;TF=TF+1;zf=0XA;HF=zf+4-0X001;(LF)[zf]=LF[zf](f(LF,zf+1,HF));HF=zf;TF=TF+0X1;TF=TF+0X1;TF=TF+0X1;(LF)[9]=LF[9]+LF[10];Vw=Sm[TF];local lf=(Zm[Vw[0X006]]);TF=TF+0X1;local gf,Xf=nil,(lf[0X3]);local df=(#Xf);do if df>0 then do gf={};end;for y8=0X01,df do local O8=(Xf[y8]);if O8[0x01]==0 then(gf)[y8-1]={LF,O8[2]};else gf[y8-1]=bm[O8[0x2]];end;end;(M)(Cm,gf);end;end;do(LF)[10]=dH(lf,gf,gF);end;do TF=TF+1;end;zf=0X08;(LF[zf])(LF[zf+0x1],LF[zf+2]);HF=zf-1;Vw=Sm[TF];TF=TF+0X1;do LF[8]=gF[Vw[2]];end;TF=TF+1;do LF[0X9]=LF[0X6];end;TF=TF+0x1;zf=0x8;LF[zf](LF[zf+0X01]);HF=zf-1;Vw=Sm[TF];TF=TF+1;(LF)[8]=gF[Vw[2]];do TF=TF+1;end;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X0001;(LF)[0X9]=gF[Vw[0X2]];TF=TF+0X1;TF=TF+0X1;do Vw=Sm[TF];end;do TF=TF+0x1;end;do(LF)[0xa]=gF[Vw[0X0002]];end;do Vw=Sm[TF];end;TF=TF+0X001;(LF)[10]=LF[0X00A][Vw[0X00005]];TF=TF+1;do zf=0X0009;end;local of=0;if Tf==0 then else do HF=zf+Tf-1;end;end;local If,Df=nil,(nil);if Tf~=0X1 then do If,Df=eH(LF[zf](f(LF,zf+1,HF)));end;else If,Df=eH(LF[zf]());end;if of==0X1 then HF=zf-1;else if of==0 then If=If+zf-1;HF=If;else If=zf+of-0X002;HF=If+0X1;end;local ED=(0x00);do for g6=zf,If do ED=ED+0X1;LF[g6]=Df[ED];end;end;end;TF=TF+1;TF=TF+0X1;TF=TF+1;zf=8;LF[zf](f(LF,zf+0X1,HF));HF=zf-1;Vw=Sm[TF];TF=TF+0X1;do(LF)[8]=gF[Vw[0X2]];end;Vw=Sm[TF];TF=TF+1;do LF[0X008]=LF[8][Vw[0X00005]];end;Vw=Sm[TF];TF=TF+1;do LF[9]=Vw[0X2];end;TF=TF+1;zf=0X8;LF[zf](LF[zf+1]);HF=zf-1;do Vw=Sm[TF];end;TF=TF+1;do if not LF[7]then do TF=Vw[0x6];end;end;end;else LF[3]=gF[Vw[2]];do Vw=Sm[TF];end;TF=TF+0x0001;LF[0X4]=Vw[0X0002];Vw=Sm[TF];do TF=TF+1;end;local CN=(0x3);LF[0x0005]=Vw[2];do Vw=Sm[TF];end;do TF=TF+0x0001;end;LF[6]=Vw[0X2];do Vw=Sm[TF];end;do TF=TF+1;end;LF[0x7]=Vw[0x2];TF=TF+1;HF=CN+5-1;(LF[CN])(f(LF,CN+1,HF));HF=CN-1;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+0X00001;TF=Vw[6];end;end;end;else if not(Xw>=72)then if Xw<0X00046 then if Xw==0X45 then local hv=(bm[0]);do(LF)[7]=hv[0X1][hv[2]];end;Vw=Sm[TF];do TF=TF+0X1;end;(LF)[8]=Vw[2];TF=TF+1;local Yv=7;LF[Yv](LF[Yv+0X1]);HF=Yv-0X1;TF=TF+0x1;TF=TF+0x1;do TF=TF+1;end;hv=bm[0X2];(LF)[7]=hv[1][hv[2]];do TF=TF+0x01;end;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+0X01;LF[0X7]=LF[7][Vw[0X00005]];TF=TF+1;TF=TF+1;do TF=TF+1;end;(LF)[0X8]=LF[0X05];do TF=TF+0X0001;end;hv=bm[1];do(LF)[9]=hv[1][hv[2]];end;TF=TF+0X1;do Yv=7;end;LF[Yv](LF[Yv+0X1],LF[Yv+0X2]);HF=Yv-0X001;TF=TF+1;TF=TF+1;do TF=TF+0X1;end;do hv=bm[1];end;LF[0X7]=hv[1][hv[2]];TF=TF+0X001;TF=TF+0X0001;Vw=Sm[TF];TF=TF+0X1;Yv=7;local Xv=(LF[0x7]);do(LF)[Yv+1]=Xv;end;(LF)[Yv]=Xv[Vw[5]];TF=TF+1;Yv=0x0007;(LF[Yv])(LF[Yv+0x00001]);HF=Yv-0X1;TF=TF+1;TF=TF+1;Vw=Sm[TF];TF=TF+1;TF=Vw[6];else(LF)[5]=gF[Vw[2]];TF=TF+0X00001;(LF)[0X6]=LF[0X00004];local sW=5;TF=TF+0X00001;(LF)[sW]=LF[sW](LF[sW+1]);HF=sW;TF=TF+0X1;TF=TF+1;do Vw=Sm[TF];end;do TF=TF+1;end;if LF[0x0005]<Vw[5]then do TF=Vw[7];end;end;end;else do if Xw==71 then LF[2]=LF[0][Vw[5]];do TF=TF+0x1;end;TF=TF+1;Vw=Sm[TF];TF=TF+1;do if LF[2]~=Vw[5]then TF=Vw[0X00007];end;end;else LF[0x7]=gF[Vw[0X00002]];Vw=Sm[TF];TF=TF+1;(LF)[7]=LF[7][Vw[0X0005]];TF=TF+1;TF=TF+1;Vw=Sm[TF];do TF=TF+1;end;local sT=(0X0008);local LT=(LF[0X6]);do(LF)[sT+1]=LT;end;do(LF)[sT]=LT[Vw[5]];end;Vw=Sm[TF];TF=TF+1;LF[10]=Vw[2];TF=TF+1;sT=0x008;(LF)[sT]=LF[sT](LF[sT+0X1],LF[sT+0X2]);HF=sT;do TF=TF+1;end;do TF=TF+0X1;end;do TF=TF+0x1;end;LF[7]=LF[7][LF[8]];local qT=0X3;Vw=Sm[TF];TF=TF+1;LF[0X8]=gF[Vw[2]];do TF=TF+1;end;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X1;do sT=0X8;end;LT=LF[8];do LF[sT+0x1]=LT;end;(LF)[sT]=LT[Vw[5]];do Vw=Sm[TF];end;TF=TF+0X1;sT=0X00a;do LT=LF[0X6];end;do(LF)[sT+1]=LT;end;(LF)[sT]=LT[Vw[5]];Vw=Sm[TF];TF=TF+1;do(LF)[0X0000C]=Vw[2];end;TF=TF+0X1;do sT=10;end;local OT=(0X000);do if qT==0 then else HF=sT+qT-0X1;end;end;local FT,PT=nil,nil;if qT~=0X00001 then FT,PT=eH(LF[sT](f(LF,sT+1,HF)));else FT,PT=eH(LF[sT]());end;if OT==0X0001 then HF=sT-0x1;else if OT==0 then FT=FT+sT-0X1;HF=FT;else FT=sT+OT-0X2;do HF=FT+0X1;end;end;local rq=0;for yZ=sT,FT do rq=rq+1;(LF)[yZ]=PT[rq];end;end;TF=TF+1;do sT=0X08;end;(LF)[sT]=LF[sT](f(LF,sT+1,HF));do HF=sT;end;TF=TF+1;(LF)[9]=LF[0X7];do Vw=Sm[TF];end;do TF=TF+0X1;end;if not(not LF[9])then else TF=Vw[0X6];end;end;end;end;else do if not(Xw>=0X004A)then do if Xw~=0X49 then local m1=bm[0X00];do(LF)[0x2]=m1[0X1][m1[2]];end;local e1=(2);Vw=Sm[TF];TF=TF+0x1;do LF[3]=Vw[0x002];end;TF=TF+1;LF[e1](LF[e1+0x1]);do HF=e1-0X1;end;Vw=Sm[TF];TF=TF+0X001;local R1=0X0002;LF[2]=gF[Vw[0x2]];TF=TF+0X001;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;LF[0X00002]=LF[0X0002][Vw[0X5]];Vw=Sm[TF];TF=TF+0X1;(LF)[0X0003]=gF[Vw[2]];do Vw=Sm[TF];end;TF=TF+1;do LF[4]=gF[Vw[0X2]];end;TF=TF+1;TF=TF+0x1;TF=TF+0X1;do e1=0x3;end;local w1=(4);do if R1==0 then else HF=e1+R1-1;end;end;local I1,M1=nil,nil;do if R1~=0X1 then do I1,M1=eH(LF[e1](f(LF,e1+0X1,HF)));end;else I1,M1=eH(LF[e1]());end;end;if w1==1 then HF=e1-0X1;else if w1~=0 then I1=e1+w1-0x2;HF=I1+0x1;else do I1=I1+e1-1;end;HF=I1;end;local PD=0X0;do for e3=e1,I1 do PD=PD+1;LF[e3]=M1[PD];end;end;end;Vw=Sm[TF];TF=TF+0x1;e1=3;local O1=(r(function(...)(C)();for mt,Bt in...do C(true,mt,Bt);end;end));O1(LF[e1],LF[e1+0X1],LF[e1+0x2]);HF=e1;(LF)[e1]=O1;do TF=Vw[6];end;else LF[Vw[0X00007]]={f({},1,Vw[0X00006])};end;end;else if Xw==75 then local dP=bm[0X0];LF[0x0002]=dP[0X001][dP[2]];do Vw=Sm[TF];end;local rP=2;TF=TF+1;LF[3]=Vw[0X2];TF=TF+0X1;LF[rP](LF[rP+0X00001]);HF=rP-1;Vw=Sm[TF];do TF=TF+1;end;LF[0X2]=gF[Vw[2]];Vw=Sm[TF];do TF=TF+1;end;do(LF)[0X3]=Vw[2];end;Vw=Sm[TF];do TF=TF+0X0001;end;do(LF)[0X4]=Vw[0X2];end;Vw=Sm[TF];do TF=TF+1;end;(LF)[0x5]=Vw[0X002];TF=TF+0X1;rP=0X002;HF=rP+4-1;(LF[rP])(f(LF,rP+1,HF));HF=rP-1;Vw=Sm[TF];TF=TF+1;do TF=Vw[6];end;else LF[Vw[7]]=LF[Vw[6]]<LF[Vw[1]];end;end;end;end;end;end;end;else if Xw<0X77 then if Xw>=110 then if Xw>=114 then if Xw>=116 then if Xw>=0X75 then if Xw==118 then LF[5]=gF[Vw[2]];TF=TF+0X01;TF=TF+0X1;TF=TF+0X1;HF=5;LF[HF]=LF[HF]();TF=TF+0X01;TF=TF+0X01;do Vw=Sm[TF];end;TF=TF+0X0001;TF=Vw[6];else do(LF)[0X002]=LF[0x000][Vw[0X5]];end;TF=TF+1;TF=TF+0X01;Vw=Sm[TF];TF=TF+1;if LF[2]~=Vw[0X5]then TF=Vw[0x7];end;end;else LF[0X9]=gF[Vw[0X2]];TF=TF+0X01;do HF=9;end;(LF)[HF]=LF[HF]();TF=TF+0X1;TF=TF+0x1;TF=TF+0x001;do LF[9]=LF[0X00009]-LF[0X8];end;Vw=Sm[TF];TF=TF+0X1;if not(not(Vw[0X2]<LF[9]))then else TF=Vw[7];end;end;else do if Xw~=115 then local Q0=(bm[0X1]);(LF)[0x7]=Q0[1][Q0[0X2]];Vw=Sm[TF];local G0=(0X7);do TF=TF+0x1;end;local e0=LF[0X00007];LF[G0+0X00001]=e0;LF[G0]=e0[Vw[0x5]];TF=TF+0X1;G0=0X7;LF[G0]=LF[G0](LF[G0+0X1]);do HF=G0;end;Vw=Sm[TF];do TF=TF+1;end;if not(not LF[0x00007])then else TF=Vw[0X6];end;else local Mc=(bm[1]);(LF)[0X5]=Mc[0x00001][Mc[2]];TF=TF+1;TF=TF+1;Vw=Sm[TF];local Kc=0X05;do TF=TF+0X0001;end;local ac=LF[0x5];(LF)[Kc+0X1]=ac;(LF)[Kc]=ac[Vw[0X00005]];TF=TF+0X1;Kc=5;do LF[Kc]=LF[Kc](LF[Kc+1]);end;HF=Kc;TF=TF+0X01;TF=TF+1;Vw=Sm[TF];TF=TF+0x1;if not(not LF[5])then else TF=Vw[0x00006];end;end;end;end;else do if Xw>=112 then if Xw~=113 then local Ru=bm[1];(LF)[0X2]=Ru[1][Ru[0X2]];Vw=Sm[TF];local Wu=(0X2);do TF=TF+0x1;end;local Tu=(LF[0X2]);do(LF)[Wu+0X00001]=Tu;end;do LF[Wu]=Tu[Vw[0x5]];end;TF=TF+0X1;Wu=0X2;(LF[Wu])(LF[Wu+1]);HF=Wu-1;do Vw=Sm[TF];end;do TF=TF+1;end;LF[2]=Vw[0x002];TF=TF+0X1;do LF[0X3]=nil;end;Vw=Sm[TF];TF=TF+0X01;LF[4]=gF[Vw[0X002]];do Vw=Sm[TF];end;TF=TF+0x01;LF[5]=gF[Vw[0X2]];do TF=TF+0X00001;end;TF=TF+0X1;Vw=Sm[TF];do TF=TF+1;end;(LF)[5]=LF[5][Vw[5]];Vw=Sm[TF];TF=TF+1;Wu=0X05;local Ku=2;Tu=LF[5];LF[Wu+0X1]=Tu;(LF)[Wu]=Tu[Vw[0X5]];do TF=TF+0X001;end;Wu=5;local hu=(0);if Ku~=0 then HF=Wu+Ku-1;end;local mu,uu=nil,nil;do if Ku~=1 then mu,uu=eH(LF[Wu](f(LF,Wu+0X1,HF)));else mu,uu=eH(LF[Wu]());end;end;if hu==1 then do HF=Wu-0X0001;end;else if hu==0 then mu=mu+Wu-0X1;HF=mu;else do mu=Wu+hu-2;end;do HF=mu+0X1;end;end;local V3=(0);for nb=Wu,mu do V3=V3+1;(LF)[nb]=uu[V3];end;end;do TF=TF+0X1;end;do Wu=0X4;end;Ku=0X000;hu=0x4;do if Ku~=0X0 then HF=Wu+Ku-1;end;end;do mu,uu=nil;end;if Ku==1 then mu,uu=eH(LF[Wu]());else do mu,uu=eH(LF[Wu](f(LF,Wu+1,HF)));end;end;do if hu~=0X1 then if hu==0X0 then mu=mu+Wu-0X1;HF=mu;else mu=Wu+hu-2;HF=mu+0X1;end;local zf=0;for UY=Wu,mu do zf=zf+1;(LF)[UY]=uu[zf];end;else HF=Wu-1;end;end;TF=TF+0x1;TF=TF+1;Vw=Sm[TF];TF=TF+1;Wu=0X4;local gu=r(function(...)(C)();for uq,Fq in...do C(true,uq,Fq);end;end);gu(LF[Wu],LF[Wu+0X1],LF[Wu+0x2]);HF=Wu;do(LF)[Wu]=gu;end;TF=Vw[6];else if not(LF[Vw[6]]<LF[Vw[0x01]])then TF=Vw[7];end;end;else if Xw~=111 then do LF[Vw[7]][Vw[0X2]]=Vw[0X0005];end;else LF[0X00009]=gF[Vw[2]];TF=TF+0X1;do HF=9;end;LF[HF]();HF=HF-0X1;TF=TF+0X1;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;(LF)[0X9]=LF[0X7][Vw[0x05]];TF=TF+0X1;TF=TF+1;Vw=Sm[TF];TF=TF+1;LF[9]=LF[0X9][Vw[5]];TF=TF+1;TF=TF+0X0001;Vw=Sm[TF];do TF=TF+0X1;end;do if not(LF[9])then else TF=Vw[6];end;end;end;end;end;end;else do if Xw<0x06A then if Xw>=104 then if Xw==105 then do LF[Vw[0x7]]=S(LF[Vw[6]],LF[Vw[1]]);end;else LF[0Xd]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0X1;local sb=13;(LF)[0Xe]=LF[12][Vw[0x5]];do TF=TF+1;end;TF=TF+0X1;do TF=TF+1;end;(LF)[sb]=LF[sb](LF[sb+0x1]);HF=sb;Vw=Sm[TF];TF=TF+1;if not LF[13]then TF=Vw[6];end;end;else if Xw~=0X67 then local i7=LF[0XB];local m7=(0XC);do(LF)[m7+1]=i7;end;LF[m7]=i7[Vw[5]];Vw=Sm[TF];TF=TF+1;LF[14]=Vw[0X2];do TF=TF+1;end;do m7=12;end;do LF[m7]=LF[m7](LF[m7+0X1],LF[m7+2]);end;do HF=m7;end;Vw=Sm[TF];TF=TF+0X1;if not(not LF[0X000C])then else TF=Vw[6];end;else do LF[8]=LF[7][Vw[5]];end;TF=TF+0X1;TF=TF+0x01;do Vw=Sm[TF];end;TF=TF+0X1;if LF[8]<Vw[0x5]then do TF=Vw[7];end;end;end;end;else if Xw<0X0006C then if Xw==107 then do gF[Vw[2]]=LF[Vw[0X0007]];end;else do(LF)[0X0006]=gF[Vw[0X2]];end;TF=TF+0x001;local qy=6;TF=TF+1;Vw=Sm[TF];do TF=TF+0x00001;end;LF[7]=Vw[0X2];Vw=Sm[TF];TF=TF+0X1;do LF[0X8]=Vw[0X2];end;Vw=Sm[TF];TF=TF+1;(LF)[0X00009]=LF[0X005][Vw[5]];TF=TF+1;TF=TF+1;TF=TF+0X1;HF=qy+0X4-0X1;(LF[qy])(f(LF,qy+1,HF));HF=qy-1;TF=TF+0X1;TF=TF+0X1;Vw=Sm[TF];TF=TF+0x1;(LF)[0X0006]=LF[2]+Vw[5];do TF=TF+1;end;LF[2]=LF[0X6];Vw=Sm[TF];TF=TF+0X00001;if not(not(Vw[0X2]<=LF[0X002]))then else TF=Vw[7];end;end;else if Xw~=0X6D then local yr=(3);local cr=LF[0X0002];do LF[yr+0X00001]=cr;end;LF[yr]=cr[Vw[5]];Vw=Sm[TF];TF=TF+1;do LF[0x5]=Vw[2];end;TF=TF+0X0001;yr=3;(LF)[yr]=LF[yr](LF[yr+0X01],LF[yr+2]);HF=yr;TF=TF+1;TF=TF+0X1;Vw=Sm[TF];TF=TF+0X001;if not LF[0x3]then TF=Vw[0X6];end;else(LF)[7]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0X0001;(LF)[8]=LF[0X0006][Vw[0X005]];Vw=Sm[TF];TF=TF+0X1;(LF)[0X8]=LF[8][Vw[0X5]];TF=TF+0X1;do TF=TF+1;end;local Re=(7);TF=TF+0X01;LF[0X9]=LF[2];TF=TF+1;LF[Re]=LF[Re](LF[Re+0X1],LF[Re+2]);do HF=Re;end;Vw=Sm[TF];TF=TF+0X1;if not(not LF[0X7])then else TF=Vw[6];end;end;end;end;end;end;else do if not(Xw<0X80)then if not(Xw>=0x0084)then if Xw>=0X82 then if Xw==131 then(LF)[0X02]=LF[0][Vw[0X5]];do TF=TF+1;end;TF=TF+1;do Vw=Sm[TF];end;TF=TF+0X1;if LF[2]==Vw[0X5]then else TF=Vw[0X7];end;else local kL=(LF[1]);local ML=(2);(LF)[ML+0X001]=kL;LF[ML]=kL[Vw[5]];TF=TF+1;local hL=bm[0X0];ML=2;(LF[ML])(LF[ML+0x1]);HF=ML-0x1;TF=TF+0X1;do LF[2]=hL[1][hL[2]];end;Vw=Sm[TF];TF=TF+0X01;LF[3]=Vw[2];do TF=TF+1;end;do ML=0x0002;end;LF[ML](LF[ML+0X1]);do HF=ML-1;end;TF=TF+1;TF=TF+0X1;do Vw=Sm[TF];end;TF=TF+0X001;(LF)[2]=gF[Vw[0X002]];do TF=TF+0X1;end;do TF=TF+0x1;end;do Vw=Sm[TF];end;TF=TF+1;do LF[0X00003]=Vw[2];end;Vw=Sm[TF];do TF=TF+0X00001;end;(LF)[0x4]=Vw[2];TF=TF+1;(LF)[5]=true;TF=TF+0X1;ML=0x2;HF=ML+0X4-0X1;(LF[ML])(f(LF,ML+0X1,HF));HF=ML-0X00001;TF=TF+1;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;TF=Vw[6];end;else if Xw==0X81 then LF[0X008]=LF[6][Vw[5]];do TF=TF+0X1;end;do TF=TF+0X001;end;Vw=Sm[TF];TF=TF+0X1;do if not(not LF[0X008])then else TF=Vw[0X6];end;end;else if LF[Vw[0X6]]==Vw[5]then TF=Vw[0x7];end;end;end;else if not(Xw<0X86)then if not(Xw<135)then do if Xw==0X088 then LF[0x02]=LF[0][Vw[5]];TF=TF+0X1;do TF=TF+0x01;end;Vw=Sm[TF];TF=TF+0X01;if LF[2]~=Vw[0X5]then TF=Vw[0X7];end;else local GL=(LF[Vw[0X6]]);local CL=Vw[0X7];(LF)[CL+1]=GL;(LF)[CL]=GL[Vw[0X5]];end;end;else(LF)[0X2]=gF[Vw[2]];local hx=(0);TF=TF+0x1;do TF=TF+0X01;end;Vw=Sm[TF];TF=TF+0x1;LF[0x3]=gF[Vw[0x2]];do TF=TF+1;end;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;(LF)[0X4]=gF[Vw[2]];do TF=TF+1;end;local px=3;do TF=TF+1;end;Vw=Sm[TF];TF=TF+0X1;(LF)[0X0004]=LF[0x00004][Vw[5]];do TF=TF+0x1;end;TF=TF+1;do TF=TF+1;end;local yx=(0X2);if yx~=0 then do HF=px+yx-1;end;end;local Cx,vx=nil,(nil);if yx~=1 then Cx,vx=eH(LF[px](f(LF,px+0x00001,HF)));else Cx,vx=eH(LF[px]());end;if hx~=0X0001 then if hx==0X0 then do Cx=Cx+px-0x1;end;HF=Cx;else Cx=px+hx-0x2;HF=Cx+0X1;end;local Fb=0;do for N6=px,Cx do Fb=Fb+1;(LF)[N6]=vx[Fb];end;end;else HF=px-1;end;do TF=TF+1;end;px=2;(LF)[px]=LF[px](f(LF,px+0X0001,HF));HF=px;TF=TF+0X0001;TF=TF+1;Vw=Sm[TF];do TF=TF+0X0001;end;if LF[2]~=Vw[5]then else TF=Vw[0X7];end;end;else if Xw~=133 then local s8=(bm[1]);do(LF)[6]=s8[0X1][s8[2]];end;Vw=Sm[TF];local u8=(0X6);do TF=TF+0x01;end;local h8=(LF[6]);(LF)[u8+1]=h8;(LF)[u8]=h8[Vw[0X00005]];do TF=TF+0X1;end;u8=0X0006;(LF[u8])(LF[u8+1]);HF=u8-1;Vw=Sm[TF];TF=TF+0x0001;do TF=Vw[6];end;else local ct=(Vw[7]);LF[ct]=LF[ct](LF[ct+0x00001]);HF=ct;end;end;end;else if not(Xw<0X7b)then if Xw>=0X7D then if not(Xw<126)then if Xw==0X0007F then LF[Vw[7]]=#LF[Vw[0x6]];else local yL=Zm[Vw[6]];local oL=(nil);local uL=yL[3];local ZL=(#uL);if ZL>0 then do oL={};end;for RK=1,ZL do local XK=(uL[RK]);do if XK[0x001]==0x00 then(oL)[RK-0x001]={LF,XK[0X2]};else oL[RK-0x1]=bm[XK[0X02]];end;end;end;(M)(Cm,oL);end;LF[Vw[7]]=dH(yL,oL,gF);end;else do for vq=Vw[7],Vw[6]do do(LF)[vq]=nil;end;end;end;end;else if Xw~=124 then LF[Vw[7]]=W(LF[Vw[6]],LF[Vw[1]]);else(LF)[Vw[7]]=l(LF[Vw[6]],LF[Vw[0x00001]]);end;end;else if not(Xw<0x79)then if Xw~=122 then LF[0X3]=gF[Vw[2]];TF=TF+0X1;do TF=TF+0X1;end;do Vw=Sm[TF];end;TF=TF+0X00001;LF[4]=gF[Vw[2]];TF=TF+0X01;do TF=TF+1;end;Vw=Sm[TF];TF=TF+1;(LF)[4]=LF[4][Vw[5]];TF=TF+0X1;TF=TF+0X1;Vw=Sm[TF];TF=TF+0x0001;(LF)[0X4]=LF[0X0004][Vw[5]];Vw=Sm[TF];TF=TF+0X1;LF[0X5]=gF[Vw[0X0002]];TF=TF+1;TF=TF+0X0001;local zb=(0X003);Vw=Sm[TF];do TF=TF+1;end;do LF[5]=LF[0X5][Vw[0X00005]];end;TF=TF+0x1;do TF=TF+1;end;Vw=Sm[TF];do TF=TF+1;end;do LF[5]=LF[0X00005][Vw[5]];end;Vw=Sm[TF];do TF=TF+0x0001;end;(LF)[0X5]=LF[5][Vw[0X00005]];Vw=Sm[TF];TF=TF+0X00001;LF[5]=LF[5][Vw[5]];Vw=Sm[TF];TF=TF+0x01;(LF)[6]=Vw[0x002];TF=TF+0x1;HF=zb+4-1;LF[zb](f(LF,zb+0x1,HF));do HF=zb-1;end;Vw=Sm[TF];TF=TF+1;(LF)[0X3]=gF[Vw[2]];Vw=Sm[TF];TF=TF+0X1;(LF)[4]=gF[Vw[2]];Vw=Sm[TF];TF=TF+1;do(LF)[0x4]=LF[4][Vw[0X5]];end;Vw=Sm[TF];TF=TF+0X1;LF[0X00004]=LF[4][Vw[5]];Vw=Sm[TF];do TF=TF+0X1;end;(LF)[0X005]=gF[Vw[0X2]];do Vw=Sm[TF];end;do TF=TF+0X1;end;(LF)[5]=LF[0X5][Vw[0x5]];do TF=TF+1;end;do TF=TF+1;end;do Vw=Sm[TF];end;TF=TF+1;(LF)[5]=LF[5][Vw[5]];Vw=Sm[TF];do TF=TF+0x001;end;(LF)[0x5]=LF[0X5][Vw[5]];TF=TF+1;TF=TF+0x0001;Vw=Sm[TF];TF=TF+1;(LF)[5]=LF[5][Vw[0X0005]];TF=TF+0x1;do TF=TF+0X1;end;do Vw=Sm[TF];end;do TF=TF+1;end;(LF)[6]=Vw[2];TF=TF+1;do zb=3;end;HF=zb+4-1;LF[zb](f(LF,zb+0X01,HF));HF=zb-1;do TF=TF+0X1;end;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;TF=Vw[6];else if not(LF[Vw[7]])then else TF=Vw[6];end;end;else if Xw==120 then do LF[0X9]=gF[Vw[0X2]];end;TF=TF+0X01;TF=TF+0x00001;do Vw=Sm[TF];end;TF=TF+1;do LF[10]=gF[Vw[0X00002]];end;TF=TF+1;TF=TF+0X0001;local Rs=(0xa);Vw=Sm[TF];do TF=TF+0x1;end;LF[10]=LF[0x00a][Vw[0X5]];Vw=Sm[TF];TF=TF+1;local ys=(LF[10]);LF[Rs+0X00001]=ys;(LF)[Rs]=ys[Vw[5]];local Gs=2;TF=TF+0x0001;Rs=10;local Ps=0;do if Gs~=0x0 then HF=Rs+Gs-1;end;end;local is,Os=nil,nil;if Gs~=0X1 then is,Os=eH(LF[Rs](f(LF,Rs+1,HF)));else is,Os=eH(LF[Rs]());end;if Ps~=1 then if Ps==0X0 then do is=is+Rs-0X1;end;HF=is;else do is=Rs+Ps-2;end;do HF=is+0X1;end;end;local Y2=0X00;for Mo=Rs,is do Y2=Y2+0X001;do(LF)[Mo]=Os[Y2];end;end;else HF=Rs-0x1;end;TF=TF+0X1;TF=TF+1;TF=TF+0x1;Rs=9;do Gs=0;end;Ps=4;if Gs==0 then else HF=Rs+Gs-0X1;end;do is,Os=nil;end;if Gs==1 then is,Os=eH(LF[Rs]());else do is,Os=eH(LF[Rs](f(LF,Rs+1,HF)));end;end;if Ps==0X1 then HF=Rs-1;else do if Ps==0 then is=is+Rs-0X1;HF=is;else is=Rs+Ps-2;do HF=is+0X0001;end;end;end;local r6=(0);for n4=Rs,is do r6=r6+0X01;LF[n4]=Os[r6];end;end;TF=TF+0X00001;TF=TF+1;Vw=Sm[TF];TF=TF+0X1;do Rs=9;end;local ws=r(function(...)C();for EY,YY in...do C(true,EY,YY);end;end);(ws)(LF[Rs],LF[Rs+1],LF[Rs+2]);HF=Rs;do LF[Rs]=ws;end;do TF=Vw[6];end;else local iV=Vw[0X7];local pV,ZV=LF[iV]();do if not(pV)then else TF=Vw[6];do LF[iV+3]=ZV;end;end;end;end;end;end;end;end;end;end;end;end;end);if UF then if zF then if bF==1 then return LF[CF]();else return LF[CF](f(LF,CF+1,HF));end;elseif CF then return f(LF,CF,bF);end;else if e(zF)~="string"then V(zF,0X0000);else do if not(p(zF,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if p(zF,"\094\.-\058\%\d\+: ")then V("Luraph Script:"..(Dm[TF-0X01]or"(internal)")..'\:\ '..v(zF),0);else(V)(zF,0);end;end;end;end;end;end;end;else do if not(xm>=0Xf)then Km=function(...)local RC,FC=0X1,({});local VC=(K());local NC=(0X0);local hC=(VC==g and Qm or VC);local TC,zC=eH(...);local EC={[2]=FC,[1]=Xm};TC=TC-0X01;for fG=0,TC do if km>fG then(FC)[fG]=zC[fG+1];else break;end;end;do if not Lm then do zC=nil;end;elseif Um then FC[km]={n=TC>=km and TC-km+1 or 0X00000,f(zC,km+0X0001,TC+0X1)};end;end;if hC==VC then else w(Km,hC);end;local CC,fC,DC,nC=o(function()while true do local r4=Sm[RC];local q4=(r4[0X0004]);do RC=RC+1;end;if not(q4<0X0000E)then if q4>=0X0015 then if q4<0X000018 then if q4>=0X16 then if q4==0x17 then local tV=(r4[0X00007]);local NV,VV=FC[tV]();if not(NV)then else RC=r4[0X6];do(FC)[tV+0x3]=VV;end;end;else do(FC[0X3])[r4[2]]=r4[0X5];end;r4=Sm[RC];RC=RC+1;FC[0X00003][r4[0X02]]=r4[0X5];r4=Sm[RC];do RC=RC+0x1;end;do RC=r4[6];end;end;else FC[0]=hC[r4[0X02]];r4=Sm[RC];RC=RC+1;(FC)[0X0]=FC[0][r4[0X005]];RC=RC+1;RC=RC+1;r4=Sm[RC];RC=RC+0x00001;if not FC[0X00000]then RC=r4[0X6];end;end;else if q4>=26 then if q4~=27 then do FC[r4[7]]=FC[r4[6]][r4[5]];end;else do FC[0x0]=hC[r4[2]];end;RC=RC+0x1;RC=RC+1;RC=RC+1;NC=0;FC[NC]=FC[NC]();r4=Sm[RC];RC=RC+1;if not FC[0x0]then RC=r4[0X6];end;end;else if q4~=25 then FC[0X00000]=hC[r4[2]];local yK=(2);RC=RC+0x1;RC=RC+1;r4=Sm[RC];RC=RC+1;do FC[1]=hC[r4[2]];end;do r4=Sm[RC];end;RC=RC+0X1;do(FC)[1]=FC[0X1][r4[0x005]];end;local SK=0x001;r4=Sm[RC];RC=RC+1;local IK=FC[1];do(FC)[SK+0X1]=IK;end;(FC)[SK]=IK[r4[5]];RC=RC+1;SK=0x1;local kK=0;if yK==0X000 then else NC=SK+yK-0X1;end;local HK,gK=nil,(nil);if yK~=1 then HK,gK=eH(FC[SK](f(FC,SK+0x00001,NC)));else HK,gK=eH(FC[SK]());end;if kK~=0X1 then if kK==0 then HK=HK+SK-0X1;NC=HK;else do HK=SK+kK-0x2;end;NC=HK+1;end;local O0=0;do for ZZ=SK,HK do O0=O0+1;FC[ZZ]=gK[O0];end;end;else do NC=SK-1;end;end;RC=RC+0X001;RC=RC+0X1;do RC=RC+0X1;end;do SK=0;end;yK=0;kK=0X4;do if yK==0X0 then else NC=SK+yK-1;end;end;HK,gK=nil;if yK==0X1 then HK,gK=eH(FC[SK]());else HK,gK=eH(FC[SK](f(FC,SK+0X1,NC)));end;do if kK==0x1 then do NC=SK-1;end;else do if kK~=0 then HK=SK+kK-0X0002;NC=HK+1;else HK=HK+SK-0X00001;NC=HK;end;end;local pQ=0;for S0=SK,HK do do pQ=pQ+1;end;FC[S0]=gK[pQ];end;end;end;r4=Sm[RC];RC=RC+1;do SK=0;end;local KK=(r(function(...)(C)();do for rs,hs in...do C(true,rs,hs);end;end;end));KK(FC[SK],FC[SK+0X1],FC[SK+0X00002]);NC=SK;FC[SK]=KK;RC=r4[6];else(EC)[r4[0x6]]=FC[r4[0X00007]];end;end;end;else do if q4>=0X11 then if not(q4>=0X13)then do if q4~=18 then do(FC)[r4[0X007]]=hC[r4[0X2]];end;else local zD=r4[7];local jD,mD=FC[zD],(r4[0X01]-0X1)*0x000032;for yr=0X1,r4[6]do jD[mD+yr]=FC[zD+yr];end;end;end;else if q4==20 then FC[r4[7]]=FC[r4[0X0006]]+FC[r4[1]];else do FC[r4[0X007]]={f({},0x00001,r4[6])};end;end;end;else if q4<0x0f then FC[r4[7]]=FC[r4[6]]<=FC[r4[1]];else if q4==0X10 then if FC[r4[6]]==FC[r4[0X1]]then else RC=r4[7];end;else local Tk=(r4[0X7]);local Dk,kk,rk=FC[Tk]();do if not(Dk)then else(FC)[Tk+0X00001]=kk;(FC)[Tk+0X2]=rk;RC=r4[0x6];end;end;end;end;end;end;end;else if q4>=0X00007 then if not(q4>=0xA)then if q4<0X8 then local wv,Ev=r4[0X7],r4[6];local Rv=r4[1];do if Ev~=0x0 then NC=wv+Ev-0X01;end;end;local Bv,Yv=nil,(nil);do if Ev==0X1 then Bv,Yv=eH(FC[wv]());else Bv,Yv=eH(FC[wv](f(FC,wv+0X00001,NC)));end;end;do if Rv==0x0001 then NC=wv-1;else do if Rv~=0X0 then do Bv=wv+Rv-2;end;NC=Bv+0X1;else Bv=Bv+wv-0X001;NC=Bv;end;end;local W6=0;for hS=wv,Bv do W6=W6+0X1;do FC[hS]=Yv[W6];end;end;end;end;else if q4==9 then RC=r4[6];else do if not(r4[2]<FC[r4[1]])then RC=r4[0X0007];end;end;end;end;else if q4<0XC then if q4==11 then local gX=FC[0x2];local BX=3;FC[BX+0X0001]=gX;(FC)[BX]=gX[r4[0X00005]];r4=Sm[RC];RC=RC+1;FC[5]=r4[2];RC=RC+0x01;BX=0X003;do(FC)[BX]=FC[BX](FC[BX+1],FC[BX+2]);end;do NC=BX;end;r4=Sm[RC];do RC=RC+0X1;end;if not FC[3]then RC=r4[0X6];end;else repeat local Kp,Hp=Cm,(FC);if#Kp>0X0 then local IC=({});for Z8,J8 in I,Kp do for gq,Iq in I,J8 do if Iq[0X01]==Hp and Iq[0X2]>=0x0 then local Fr=(Iq[2]);if not IC[Fr]then do IC[Fr]={Hp[Fr]};end;end;(Iq)[0X1]=IC[Fr];(Iq)[2]=1;end;end;end;end;until true;return;end;else if q4~=13 then for bN=r4[0x7],r4[6]do(FC)[bN]=nil;end;else(FC)[4]=hC[r4[2]];RC=RC+0X1;RC=RC+0x1;do r4=Sm[RC];end;RC=RC+0x1;local Rr=0X04;FC[5]=FC[3][r4[5]];RC=RC+0X00001;(FC)[Rr]=FC[Rr](FC[Rr+1]);NC=Rr;RC=RC+0x0001;RC=RC+1;r4=Sm[RC];RC=RC+1;do if not(not FC[0X04])then else RC=r4[6];end;end;end;end;end;else do if not(q4<0X3)then if q4<5 then do if q4~=4 then do FC[0X000]=hC[r4[0x002]];end;RC=RC+1;RC=RC+1;RC=RC+0X1;do NC=0;end;(FC)[NC]=FC[NC]();RC=RC+0X1;do RC=RC+1;end;do r4=Sm[RC];end;RC=RC+0X1;if not FC[0]then RC=r4[0X0006];end;else end;end;else if q4==6 then if not FC[r4[7]]then RC=r4[0X006];end;else FC[r4[0x007]]=r4[0X2];end;end;else if not(q4>=0X1)then local SJ=Zm[r4[0X00006]];local tJ,DJ=SJ[3],(nil);local nJ=(#tJ);if not(nJ>0X0)then else DJ={};do for T3=0X1,nJ do local Q3=tJ[T3];if Q3[1]==0X0 then(DJ)[T3-0X1]={FC,Q3[0X0002]};else(DJ)[T3-1]=bm[Q3[0X2]];end;end;end;(M)(Cm,DJ);end;(FC)[r4[7]]=dH(SJ,DJ,hC);else if q4~=0X2 then do(FC)[r4[0X7]]=S(FC[r4[6]],FC[r4[0X0001]]);end;else FC[0X0]=hC[r4[0X2]];do RC=RC+0X1;end;RC=RC+0x001;r4=Sm[RC];RC=RC+1;if not FC[0]then RC=r4[0x0006];end;end;end;end;end;end;end;end;end);do if CC then if fC then if nC~=1 then return FC[DC](f(FC,DC+0X00001,NC));else return FC[DC]();end;elseif not(DC)then else return f(FC,DC,nC);end;else if e(fC)~='\115t\114i\110\g'then V(fC,0);else if p(fC,"att\e\m\112t\ t\o\032\y\105\e\108d a\c\114o\115\s\ \m\e\116a\m\eth\111d/\067\%\045\ca\108\l\ b\111un\d\097\114\y")then return coroutine.yield();end;if p(fC,"\^\046\-\:\037\d\+\058\ ")then V("Luraph Script:"..(Dm[RC-0X001]or'(\int\e\114\110\097\l)')..": "..v(fC),0);else(V)(fC,0);end;end;end;end;end;else if xm==16 then Km=function(...)local Fj=(0X01);local Bj=({});local xj=K();local qj,Ej=eH(...);do qj=qj-0X1;end;local ij,gj,Kj={[2]=Bj,[1]=Xm},(xj==g and Qm or xj),0X00;do for Wh=0,qj do if not(km>Wh)then break;else(Bj)[Wh]=Ej[Wh+1];end;end;end;do if not Lm then Ej=nil;elseif not(Um)then else Bj[km]={n=qj>=km and qj-km+0X00001 or 0,f(Ej,km+1,qj+0X1)};end;end;if gj==xj then else w(Km,gj);end;local Xj,Uj,aj,ej=o(function()while true do local nQ=(Sm[Fj]);local jQ=(nQ[4]);do Fj=Fj+0X0001;end;if jQ>=12 then if jQ>=18 then do if not(jQ>=0X15)then if jQ>=0X13 then if jQ==20 then local bG=(nQ[6]);local gG=Bj[bG];do for kQ=bG+1,nQ[1]do gG=gG..Bj[kQ];end;end;do Bj[nQ[0x7]]=gG;end;else do Bj[nQ[7]]={f({},1,nQ[6])};end;end;else local lA=(Zm[nQ[6]]);local LA=(nil);local nA=(lA[0X03]);local NA=(#nA);if NA>0X0 then LA={};for ap=0X001,NA do local Ip=(nA[ap]);if Ip[1]==0 then do LA[ap-0X1]={Bj,Ip[0X2]};end;else(LA)[ap-0x01]=bm[Ip[2]];end;end;M(Cm,LA);end;do Bj[nQ[7]]=dH(lA,LA,gj);end;end;else if jQ>=0x00016 then do if jQ~=0X17 then else if not(Bj[nQ[6]]<Bj[nQ[1]])then else Fj=nQ[7];end;end;end;else Bj[0x6]=gj[nQ[0X2]];Fj=Fj+1;do(Bj)[6]=#Bj[0X6];end;nQ=Sm[Fj];Fj=Fj+1;do if not(not(nQ[2]<Bj[6]))then else Fj=nQ[0X07];end;end;end;end;end;else if jQ<15 then do if not(jQ<0xd)then if jQ==0XE then if not(Bj[nQ[0X7]])then else Fj=nQ[0X00006];end;else Fj=nQ[6];end;else repeat local vS,OS=Cm,Bj;do if not(#vS>0x0)then else local QI=({});do for h3,E3 in I,vS do for EP,wP in I,E3 do do if not(wP[1]==OS and wP[0x2]>=0)then else local ZV=wP[2];if not(not QI[ZV])then else do(QI)[ZV]={OS[ZV]};end;end;wP[0X1]=QI[ZV];wP[2]=1;end;end;end;end;end;end;end;until true;return false,nQ[7],Kj;end;end;else do if jQ>=16 then if jQ==0x11 then do Bj[0X00005]=gj[nQ[2]];end;do Fj=Fj+0X01;end;Fj=Fj+0X01;nQ=Sm[Fj];Fj=Fj+1;do(Bj)[0x5]=Bj[0x05][nQ[0X5]];end;Fj=Fj+0x1;Fj=Fj+0X01;nQ=Sm[Fj];Fj=Fj+0x1;if not(not Bj[0X5])then else Fj=nQ[6];end;else Bj[nQ[7]]=gj[nQ[0X2]];end;else Bj[0X6]=gj[nQ[0X2]];nQ=Sm[Fj];local Es=Zm[nQ[0X0006]];Fj=Fj+0x1;local Zs,Ws=6,nil;local Bs=Es[3];local rs=(#Bs);if not(rs>0X0)then else Ws={};do for oR=0X1,rs do local gR=Bs[oR];if gR[1]~=0 then do Ws[oR-1]=bm[gR[2]];end;else(Ws)[oR-0X1]={Bj,gR[2]};end;end;end;M(Cm,Ws);end;(Bj)[7]=dH(Es,Ws,gj);do nQ=Sm[Fj];end;Fj=Fj+1;do Bj[0x06][nQ[0X00002]]=Bj[0X7];end;nQ=Sm[Fj];Fj=Fj+0X1;local Vs=(Bj[0]);Bj[Zs+0X001]=Vs;do(Bj)[Zs]=Vs[nQ[5]];end;nQ=Sm[Fj];do Fj=Fj+1;end;Bj[0X8]=nQ[2];nQ=Sm[Fj];Fj=Fj+0X1;(Bj)[0X9]=nQ[0X2];nQ=Sm[Fj];do Fj=Fj+0X1;end;Bj[10]=nQ[2];Fj=Fj+0x1;do Zs=6;end;do Kj=Zs+5-1;end;(Bj[Zs])(f(Bj,Zs+1,Kj));do Kj=Zs-1;end;Fj=Fj+1;Fj=Fj+0X1;Fj=Fj+0X001;Bj[6]=Bj[0X04];nQ=Sm[Fj];do Fj=Fj+0X001;end;Bj[7]=gj[nQ[2]];do Fj=Fj+1;end;do Zs=0x6;end;Bj[Zs](Bj[Zs+0X001]);Kj=Zs-1;do nQ=Sm[Fj];end;Fj=Fj+0X001;Bj[6]=gj[nQ[2]];nQ=Sm[Fj];Fj=Fj+0X1;(Bj)[0X00007]=Bj[0X0][nQ[5]];nQ=Sm[Fj];Fj=Fj+1;(Bj)[7]=Bj[0X00007]*nQ[5];Fj=Fj+1;do Zs=0X6;end;(Bj[Zs])(Bj[Zs+1]);do Kj=Zs-0X1;end;Fj=Fj+0X1;Fj=Fj+1;nQ=Sm[Fj];Fj=Fj+0X1;Zs=0X6;Vs=Bj[0];do(Bj)[Zs+1]=Vs;end;(Bj)[Zs]=Vs[nQ[0x005]];Fj=Fj+1;Zs=6;Bj[Zs](Bj[Zs+1]);do Kj=Zs-1;end;Fj=Fj+0x1;Fj=Fj+0X1;nQ=Sm[Fj];Fj=Fj+0X0001;Fj=nQ[6];end;end;end;end;else if jQ<0X006 then if jQ>=3 then do if not(jQ<0x4)then if jQ==0x5 then if not Bj[nQ[0X7]]then do Fj=nQ[6];end;end;else do Bj[0X5]=gj[nQ[0x02]];end;nQ=Sm[Fj];Fj=Fj+1;(Bj)[5]=Bj[5][nQ[0X5]];do nQ=Sm[Fj];end;do Fj=Fj+0X1;end;if Bj[0X005]then do Fj=nQ[0X006];end;end;end;else(Bj)[0X0005]=gj[nQ[2]];Fj=Fj+0X001;do Fj=Fj+0X1;end;nQ=Sm[Fj];Fj=Fj+1;do Bj[0X06]=gj[nQ[2]];end;Fj=Fj+1;Fj=Fj+1;nQ=Sm[Fj];Fj=Fj+0X1;Bj[0X0006]=Bj[6][nQ[5]];nQ=Sm[Fj];Fj=Fj+0x0001;Bj[5][nQ[0X0002]]=Bj[6];do nQ=Sm[Fj];end;Fj=Fj+0X01;do(Bj)[5]=gj[nQ[0x0002]];end;do nQ=Sm[Fj];end;Fj=Fj+0X0001;Bj[5]=Bj[5][nQ[0x05]];Fj=Fj+1;do Bj[0X6]=Bj[0x0];end;do Fj=Fj+1;end;(Bj)[7]=Bj[0X1];Fj=Fj+1;(Bj)[0X8]=Bj[0X002];do nQ=Sm[Fj];end;Fj=Fj+1;(Bj)[9]=nQ[0X2];local t2=(0x05);do Fj=Fj+1;end;Bj[10]=Bj[4];Fj=Fj+1;local Q2=0x0006;Kj=t2+Q2-0X1;repeat local by,Xy=Cm,(Bj);if#by>0X0000 then local sq={};for bQ,rQ in I,by do for KV,FV in I,rQ do if FV[1]==Xy and FV[2]>=0 then local PS=FV[2];if not sq[PS]then(sq)[PS]={Xy[PS]};end;FV[1]=sq[PS];do(FV)[2]=1;end;end;end;end;end;until true;return true,t2,Q2;end;end;else do if jQ>=0X1 then if jQ~=2 then do(Bj)[nQ[0X07]]=nQ[2];end;else repeat local tu,Iu=Cm,(Bj);if not(#tu>0)then else local ST=({});for KE,wE in I,tu do for br,Or in I,wE do if Or[0X0001]==Iu and Or[0X0002]>=0X0 then local SQ=Or[0X2];if not(not ST[SQ])then else ST[SQ]={Iu[SQ]};end;(Or)[1]=ST[SQ];(Or)[0x002]=0X1;end;end;end;end;until true;return;end;else(Bj)[5]=gj[nQ[2]];do Fj=Fj+1;end;Fj=Fj+1;nQ=Sm[Fj];Fj=Fj+0x1;do if not(Bj[5])then else Fj=nQ[0X06];end;end;end;end;end;else if not(jQ>=0X0009)then if not(jQ>=0X00007)then do(Bj)[nQ[7]]=Bj[nQ[6]]%Bj[nQ[0X1]];end;else if jQ~=8 then(Bj)[nQ[0X00007]]=W(Bj[nQ[0x0006]],Bj[nQ[0X1]]);else for Mg=nQ[7],nQ[6]do do Bj[Mg]=nil;end;end;end;end;else if not(jQ>=10)then Bj[nQ[0X7]]=S(Bj[nQ[0x6]],Bj[nQ[1]]);else if jQ==0X00B then do(Bj)[nQ[0X7]]=O(Bj[nQ[6]],Bj[nQ[0X0001]]);end;else Bj[5]=gj[nQ[0x2]];Fj=Fj+0X1;do Fj=Fj+0x1;end;nQ=Sm[Fj];do Fj=Fj+0x1;end;Bj[0X05]=Bj[5][nQ[5]];do Fj=Fj+1;end;Fj=Fj+1;nQ=Sm[Fj];Fj=Fj+0X1;Fj=nQ[6];end;end;end;end;end;end;end);if Xj then if Uj then if ej==0X1 then do return Bj[aj]();end;else return Bj[aj](f(Bj,aj+1,Kj));end;elseif aj then return f(Bj,aj,ej);end;else if e(Uj)=='str\105\110\g'then if p(Uj,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(Uj,'^\046-\:\037\d\043\:\ ')then V("Lu\114a\112\h\032\083\099\114i\pt:"..(Dm[Fj-1]or"(internal)")..": "..v(Uj),0X0);else V(Uj,0);end;else V(Uj,0X000);end;end;end;else Km=function(...)local f1=(0X01);local k1=({});local c1={[1]=Xm,[2]=k1};local g1=(K());local R1=((g1==g and Qm or g1));local l1,x1=eH(...);do l1=l1-1;end;for cs=0,l1 do if km>cs then do k1[cs]=x1[cs+1];end;else break;end;end;if not Lm then x1=nil;elseif not(Um)then else(k1)[km]={n=l1>=km and l1-km+1 or 0,f(x1,km+0X1,l1+0X001)};end;local z1=0;if R1==g1 then else w(Km,R1);end;local h1,T1,j1,e1=o(function()do while true do local Ag=(Sm[f1]);local Ug=(Ag[4]);do f1=f1+0X1;end;do if not(Ug>=0X008)then if not(Ug>=0x4)then if not(Ug>=2)then if Ug~=0X1 then else k1[Ag[0X7]]={f({},0x001,Ag[0X0006])};end;else if Ug==3 then k1[Ag[7]]=#k1[Ag[6]];else local zg=nil;local Lg=Zm[Ag[0X6]];local kg=(Lg[0X03]);local mg=#kg;do if mg>0X0 then zg={};for UU=0x1,mg do local tU=(kg[UU]);if tU[1]~=0X00000 then zg[UU-1]=bm[tU[0x2]];else do zg[UU-1]={k1,tU[0X2]};end;end;end;(M)(Cm,zg);end;end;do k1[Ag[0X7]]=dH(Lg,zg,R1);end;end;end;else do if Ug>=0X0006 then do if Ug~=7 then k1[Ag[7]]=k1[Ag[6]]*k1[Ag[1]];else k1[Ag[7]]=k1[Ag[0X6]]%k1[Ag[1]];end;end;else if Ug==0X00005 then k1[Ag[0x00007]]=a(k1[Ag[6]]);else k1[0]=R1[Ag[0X00002]];Ag=Sm[f1];local ey=0X0;f1=f1+1;local Ly=k1[0];k1[ey+0X1]=Ly;k1[ey]=Ly[Ag[0X5]];Ag=Sm[f1];f1=f1+1;k1[0X2]=Ag[0x2];f1=f1+0X1;ey=0;(k1)[ey]=k1[ey](k1[ey+0x1],k1[ey+0X2]);z1=ey;Ag=Sm[f1];do f1=f1+1;end;(k1)[0x1]=R1[Ag[0X2]];Ag=Sm[f1];f1=f1+0x1;(k1)[0x0001]=k1[0x1][Ag[5]];do f1=f1+0X1;end;f1=f1+0X0001;Ag=Sm[f1];local Fy=Zm[Ag[0X006]];f1=f1+1;local by,yy=nil,(Fy[0x00003]);local iy=(#yy);if not(iy>0)then else by={};do for rr=1,iy do local tr=(yy[rr]);if tr[0X001]==0 then(by)[rr-0X0001]={k1,tr[2]};else(by)[rr-1]=bm[tr[0X2]];end;end;end;(M)(Cm,by);end;k1[2]=dH(Fy,by,R1);f1=f1+1;ey=1;k1[ey](k1[ey+0x001]);z1=ey-1;f1=f1+1;f1=f1+0x1;f1=f1+1;do repeat local Rg,bg=Cm,k1;do if not(#Rg>0x0)then else local lB={};for zn,Ln in I,Rg do for SL,DL in I,Ln do do if not(DL[1]==bg and DL[2]>=0x0)then else local RT=DL[2];if not(not lB[RT])then else lB[RT]={bg[RT]};end;(DL)[1]=lB[RT];DL[0X2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;else if Ug<12 then if not(Ug>=10)then if Ug==0X9 then(k1)[Ag[0X7]]=S(k1[Ag[0X06]],k1[Ag[0X1]]);else do(k1[Ag[0X07]])[k1[Ag[0X0006]]]=k1[Ag[0X01]];end;end;else if Ug~=11 then if k1[Ag[6]]<k1[Ag[1]]then f1=Ag[7];end;else(k1)[Ag[7]]=Ag[2];end;end;else do if Ug>=0XE then do if Ug==15 then for jH=Ag[7],Ag[0X6]do(k1)[jH]=nil;end;else do(k1)[Ag[0X7]]=R1[Ag[0X2]];end;end;end;else if Ug~=13 then if k1[Ag[0X6]]~=k1[Ag[0X001]]then f1=Ag[7];end;else f1=Ag[6];end;end;end;end;end;end;end;end;end);do if h1 then if T1 then if e1~=1 then return k1[j1](f(k1,j1+1,z1));else do return k1[j1]();end;end;elseif not(j1)then else return f(k1,j1,e1);end;else do if e(T1)=="string"then do if p(T1,"\097\116\116\101\m\pt\032\116o\ y\105\101\l\d \097\cr\o\115\s\ \109\e\116a\109\101t\h\o\d\/\067\037-\ca\l\108\032b\ounda\114\y")then return coroutine.yield();end;end;if not(p(T1,'\094\.\045\:\%\d\+\058\032'))then(V)(T1,0x0000);else V('\L\117\114\097\112h\ \S\c\114\ip\116\:'..(Dm[f1-0x00001]or'\(in\116\e\114na\l)').."\:\ "..v(T1),0);end;else(V)(T1,0);end;end;end;end;end;end;end;end;end;else do if not(xm<20)then if xm<0x15 then Km=function(...)local zm,Ym=1,({});local Tm=(K());local jm=(Tm==g and Qm or Tm);local Nm,Vm=eH(...);local ym=({[1]=Xm,[2]=Ym});Nm=Nm-1;for RE=0X0,Nm do if km>RE then Ym[RE]=Vm[RE+0X00001];else break;end;end;if not Lm then Vm=nil;elseif Um then Ym[km]={n=Nm>=km and Nm-km+1 or 0X00,f(Vm,km+1,Nm+0x1)};end;local Rm=(0);if jm==Tm then else(w)(Km,jm);end;local dm,em,Wm,rm=o(function()while true do local Gs=(Sm[zm]);local Bs=Gs[0X004];zm=zm+0X001;if not(Bs>=13)then if not(Bs>=6)then do if Bs<0X3 then if not(Bs>=0X001)then(Ym)[0X0]=jm[Gs[0X2]];Gs=Sm[zm];zm=zm+1;Ym[0]=Ym[0][Gs[5]];Gs=Sm[zm];zm=zm+1;if not(not Ym[0x0])then else zm=Gs[6];end;else do if Bs==2 then Ym[0]=jm[Gs[0X2]];do zm=zm+0x1;end;do zm=zm+0X1;end;do zm=zm+1;end;Rm=0X0;(Ym)[Rm]=Ym[Rm]();zm=zm+0X1;do zm=zm+0x1;end;Gs=Sm[zm];zm=zm+0X001;do if not(Ym[0])then else zm=Gs[0X006];end;end;else local Xp=(Zm[Gs[6]]);local kp=nil;local Gp=Xp[0x3];local yp=#Gp;if yp>0X00000 then do kp={};end;do for oT=1,yp do local bT=(Gp[oT]);if bT[1]~=0 then(kp)[oT-0X001]=bm[bT[0X2]];else(kp)[oT-0X1]={Ym,bT[2]};end;end;end;(M)(Cm,kp);end;Ym[Gs[7]]=dH(Xp,kp,jm);end;end;end;else if not(Bs>=4)then else if Bs==0X00005 then do repeat local fF,QF=Cm,(Ym);do if#fF>0X0 then local i9={};for jf,cf in I,fF do for Cv,pv in I,cf do if pv[1]==QF and pv[0X2]>=0x0 then local Nj=pv[0x2];if not(not i9[Nj])then else do(i9)[Nj]={QF[Nj]};end;end;(pv)[0X001]=i9[Nj];(pv)[2]=0X1;end;end;end;end;end;until true;end;return;else do(Ym)[0x03]=jm[Gs[0X2]];end;zm=zm+0X1;zm=zm+1;Gs=Sm[zm];zm=zm+0x1;Ym[0X4]=Gs[0X00002];do Gs=Sm[zm];end;zm=zm+0X1;local ef=0X4;do(Ym)[0X5]=jm[Gs[2]];end;zm=zm+0x00001;local mf=0X5;Ym[0X6]=Ym[0x2];do zm=zm+1;end;(Ym)[mf]=Ym[mf](Ym[mf+0X1]);Rm=mf;zm=zm+0X1;zm=zm+1;do zm=zm+1;end;do Ym[0X4]=Ym[ef]..Ym[ef+0X0001];end;zm=zm+0X01;mf=3;(Ym[mf])(Ym[mf+0X001]);Rm=mf-1;do Gs=Sm[zm];end;zm=zm+0X1;zm=Gs[0X6];end;end;end;end;else if Bs>=9 then if Bs<11 then if Bs~=10 then do for Ns=Gs[7],Gs[6]do(Ym)[Ns]=nil;end;end;else(Ym)[0]=jm[Gs[0X00002]];Gs=Sm[zm];do zm=zm+1;end;(Ym)[0X001]=Gs[2];local O7=(0X0);do zm=zm+1;end;Ym[O7]=Ym[O7](Ym[O7+1]);Rm=O7;zm=zm+1;zm=zm+0x1;Gs=Sm[zm];do zm=zm+0X001;end;Ym[0X0]=Ym[0X0][Gs[0X5]];zm=zm+0x0001;zm=zm+0X1;Gs=Sm[zm];zm=zm+0x1;if Ym[0]then zm=Gs[6];end;end;else if Bs==0XC then local Xj=(Gs[0x07]);local wj,kj=Ym[Xj]();if wj then do zm=Gs[6];end;(Ym)[Xj+3]=kj;end;else repeat local vw,Ww,Qw=Cm,Ym,Gs[7];do if not(#vw>0)then else local Bt=({});for Ng,lg in I,vw do for xW,oW in I,lg do if not(oW[1]==Ww and oW[0X2]>=Qw)then else local Pf=(oW[0X02]);if not(not Bt[Pf])then else Bt[Pf]={Ww[Pf]};end;do(oW)[1]=Bt[Pf];end;(oW)[2]=0X1;end;end;end;end;end;until true;end;end;else do if not(Bs>=7)then(Ym)[Gs[0X0007]]=jm[Gs[2]];else do if Bs==0x8 then Ym[0]=jm[Gs[0x2]];do zm=zm+0X1;end;do zm=zm+1;end;do Gs=Sm[zm];end;zm=zm+1;if Ym[0]then zm=Gs[6];end;else local HE=(0);local AE=bm[0];Ym[0X0]=AE[1][AE[2]];Gs=Sm[zm];zm=zm+0x1;local sE=Ym[0];(Ym)[HE+0X00001]=sE;do(Ym)[HE]=sE[Gs[0X005]];end;zm=zm+1;do HE=0X000;end;(Ym[HE])(Ym[HE+1]);Rm=HE-1;zm=zm+0X1;do repeat local D9,E9=Cm,(Ym);if not(#D9>0)then else local my=({});for Qa,Ja in I,D9 do do for am,Mm in I,Ja do if Mm[0x1]==E9 and Mm[0X02]>=0 then local vc=Mm[2];if not(not my[vc])then else my[vc]={E9[vc]};end;Mm[0X1]=my[vc];(Mm)[0x0002]=0x001;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;else if not(Bs>=0x00014)then do if not(Bs<0X10)then if not(Bs<18)then if Bs~=0X13 then(Ym)[Gs[7]]=Gs[2];else Ym[0X0]=jm[Gs[2]];Gs=Sm[zm];do zm=zm+1;end;(Ym)[0X0]=Ym[0][Gs[0x0005]];do Gs=Sm[zm];end;zm=zm+1;if not(not Ym[0X000])then else zm=Gs[6];end;end;else if Bs==0x00011 then do Ym[0]=jm[Gs[2]];end;zm=zm+1;local PY=(0X0);zm=zm+0X1;do Gs=Sm[zm];end;zm=zm+1;Ym[0]=Ym[0x0][Gs[5]];do Gs=Sm[zm];end;zm=zm+1;(Ym)[0X1]=Gs[2];zm=zm+1;(Ym)[PY]=Ym[PY](Ym[PY+1]);do Rm=PY;end;zm=zm+1;zm=zm+0X1;Gs=Sm[zm];zm=zm+1;if not(not Ym[0X0])then else zm=Gs[6];end;else local uQ=Ym[Gs[6]];local oQ=(Gs[0x7]);Ym[oQ+1]=uQ;(Ym)[oQ]=uQ[Gs[5]];end;end;else if Bs<14 then Ym[Gs[0X00007]]=O(Ym[Gs[0x6]],Ym[Gs[1]]);else do if Bs==0X0f then do Ym[Gs[0X7]]=Ym[Gs[0x6]]~=Ym[Gs[1]];end;else Ym[Gs[7]]={f({},1,Gs[0X6])};end;end;end;end;end;else do if Bs<0X17 then if not(Bs<0X15)then if Bs==22 then(Ym)[0]=jm[Gs[2]];do zm=zm+0X1;end;do zm=zm+1;end;do Gs=Sm[zm];end;local Cq=0;zm=zm+1;(Ym)[1]=Gs[0X2];zm=zm+1;Ym[Cq]=Ym[Cq](Ym[Cq+0X01]);do Rm=Cq;end;local gq=nil;Gs=Sm[zm];do zm=zm+1;end;do(Ym)[0X1]=jm[Gs[0X2]];end;do zm=zm+0X1;end;zm=zm+1;do Gs=Sm[zm];end;zm=zm+0X1;local Gq=Zm[Gs[6]];local bq=Gq[0x00003];local Fq=(#bq);if not(Fq>0x0000)then else gq={};for s3=0X1,Fq do local B3=(bq[s3]);if B3[0X01]==0 then(gq)[s3-1]={Ym,B3[2]};else do(gq)[s3-0X1]=bm[B3[2]];end;end;end;M(Cm,gq);end;Ym[0X2]=dH(Gq,gq,jm);zm=zm+1;local yq=0X2;Cq=0x1;local Oq=(0X03);do if yq~=0X0 then do Rm=Cq+yq-0X1;end;end;end;local Hq,wq=nil,(nil);do if yq==1 then Hq,wq=eH(Ym[Cq]());else Hq,wq=eH(Ym[Cq](f(Ym,Cq+1,Rm)));end;end;if Oq~=1 then if Oq==0X0 then do Hq=Hq+Cq-0X00001;end;Rm=Hq;else Hq=Cq+Oq-0X2;Rm=Hq+1;end;local Sj=0;for Cx=Cq,Hq do Sj=Sj+0X0001;(Ym)[Cx]=wq[Sj];end;else Rm=Cq-1;end;Gs=Sm[zm];zm=zm+0X1;if Ym[1]then zm=Gs[0X6];end;else if not(Ym[Gs[0X007]])then else zm=Gs[0x0006];end;end;else do(Ym)[Gs[7]]=Ym[Gs[6]]/Ym[Gs[1]];end;end;else do if not(Bs<25)then do if Bs==0X01A then if not(Ym[Gs[6]]<=Ym[Gs[0X1]])then zm=Gs[0X7];end;else do(Ym)[0X000]=jm[Gs[2]];end;Gs=Sm[zm];zm=zm+1;local ck=(0X0);do Ym[1]=Gs[2];end;zm=zm+1;Ym[ck](Ym[ck+1]);Rm=ck-1;zm=zm+1;zm=zm+1;Gs=Sm[zm];do zm=zm+0x1;end;(Ym)[0]=jm[Gs[2]];zm=zm+0X1;zm=zm+1;zm=zm+0X1;Rm=0X0;(Ym)[Rm]=Ym[Rm]();zm=zm+1;zm=zm+0x1;do Gs=Sm[zm];end;do zm=zm+1;end;if not(not(Gs[2]<=Ym[0]))then else do zm=Gs[0X07];end;end;end;end;else do if Bs~=0X18 then local gi=(bm[0]);do Ym[0]=gi[0X1][gi[0x2]];end;do zm=zm+0X1;end;zm=zm+1;Gs=Sm[zm];local si=(0X0);zm=zm+1;local Pi=(Ym[0X0]);Ym[si+0x1]=Pi;do Ym[si]=Pi[Gs[5]];end;zm=zm+1;si=0;Ym[si]=Ym[si](Ym[si+0x1]);Rm=si;do zm=zm+0X1;end;zm=zm+1;Gs=Sm[zm];zm=zm+0X1;if not Ym[0x0]then zm=Gs[6];end;else do zm=Gs[0X06];end;end;end;end;end;end;end;end;end;end;end);do if not(dm)then if e(em)~="string"then(V)(em,0);else if p(em,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if not(p(em,"\^\.\-\058\%d\+:\ "))then(V)(em,0X0);else V('\L\117\114a\p\h\ \083\c\114\105pt\058'..(Dm[zm-0X1]or'\040in\116\er\110al)')..": "..v(em),0);end;end;end;else do if em then if rm~=1 then return Ym[Wm](f(Ym,Wm+0X1,Rm));else return Ym[Wm]();end;elseif Wm then return f(Ym,Wm,rm);end;end;end;end;end;else if xm~=0X0016 then Km=function(...)local xB={};local UB=0;local HB=(K());local BB,MB=eH(...);local jB=({[1]=Xm,[2]=xB});BB=BB-1;local FB,PB=(HB==g and Qm or HB),(0X0001);for Xo=0,BB do if km>Xo then(xB)[Xo]=MB[Xo+1];else break;end;end;if not Lm then MB=nil;elseif Um then(xB)[km]={n=BB>=km and BB-km+0X0001 or 0,f(MB,km+0X1,BB+1)};end;do if FB==HB then else(w)(Km,FB);end;end;local pB,lB,hB,DB=o(function()do while true do local NY=Sm[PB];local yY=(NY[4]);PB=PB+0x00001;do if yY>=13 then do if not(yY>=19)then if not(yY<16)then if yY>=17 then do if yY~=18 then local Zc=(NY[6]);local Jc=(xB[Zc]);for Gj=Zc+1,NY[1]do Jc=Jc..xB[Gj];end;do(xB)[NY[7]]=Jc;end;else local pD=(bm[0]);xB[0X0]=pD[1][pD[0X2]];NY=Sm[PB];local ND=0X0;PB=PB+0X1;local bD=(xB[0X00000]);(xB)[ND+1]=bD;xB[ND]=bD[NY[5]];PB=PB+1;ND=0X0;do(xB)[ND]=xB[ND](xB[ND+1]);end;UB=ND;PB=PB+0x1;PB=PB+0X1;NY=Sm[PB];PB=PB+0X1;do if not xB[0x00]then PB=NY[6];end;end;end;end;else xB[NY[7]]=S(xB[NY[0X6]],xB[NY[0X1]]);end;else if yY<14 then local ul=(bm[0]);(xB)[0x000]=ul[1][ul[2]];PB=PB+1;PB=PB+1;do NY=Sm[PB];end;local ql=0;do PB=PB+0X1;end;local Yl=xB[0X000];do(xB)[ql+1]=Yl;end;xB[ql]=Yl[NY[5]];PB=PB+0X1;ql=0;(xB[ql])(xB[ql+1]);do UB=ql-0X1;end;PB=PB+0x1;PB=PB+0X1;NY=Sm[PB];PB=PB+0x1;PB=NY[6];else if yY~=0X00F then xB[NY[7]]=xB[NY[6]]*xB[NY[1]];else(xB)[0X0001]=FB[NY[2]];PB=PB+0X1;PB=PB+1;NY=Sm[PB];do PB=PB+0X1;end;local CI=0x1;do xB[2]=FB[NY[0x2]];end;PB=PB+1;PB=PB+0X1;PB=PB+1;xB[0X003]=xB[0X0];NY=Sm[PB];PB=PB+0X1;(xB)[0X4]=NY[2];PB=PB+0X01;UB=CI+4-1;xB[CI](f(xB,CI+1,UB));UB=CI-0X001;NY=Sm[PB];PB=PB+0X01;xB[0X1]=FB[NY[2]];do PB=PB+1;end;do PB=PB+0X1;end;do PB=PB+1;end;UB=0X00001;(xB[UB])();do UB=UB-1;end;do NY=Sm[PB];end;PB=PB+1;do xB[1]=FB[NY[2]];end;PB=PB+1;PB=PB+0X1;NY=Sm[PB];PB=PB+1;(xB)[2]=FB[NY[0X002]];PB=PB+1;xB[0X3]=xB[0];NY=Sm[PB];do PB=PB+0x0001;end;do(xB)[4]=NY[2];end;PB=PB+1;CI=1;UB=CI+0x4-1;(xB[CI])(f(xB,CI+0x001,UB));do UB=CI-1;end;do PB=PB+1;end;PB=PB+0X1;NY=Sm[PB];PB=PB+1;PB=NY[0X6];end;end;end;else if not(yY>=22)then do if not(yY<20)then if yY==0X15 then for C8=NY[7],NY[0X6]do xB[C8]=nil;end;else(xB)[0X0]=FB[NY[2]];do NY=Sm[PB];end;PB=PB+1;xB[0]=xB[0X0][NY[5]];PB=PB+0X1;PB=PB+0X0001;NY=Sm[PB];PB=PB+0X0001;do if not xB[0x0000]then PB=NY[0X6];end;end;end;else xB[0X0000]=FB[NY[0X2]];PB=PB+1;xB[0]=#xB[0];do NY=Sm[PB];end;PB=PB+1;if not(not(NY[2]<xB[0X0]))then else PB=NY[7];end;end;end;else if not(yY>=0x0018)then if yY==23 then do xB[0]=FB[NY[0X002]];end;NY=Sm[PB];PB=PB+1;(xB)[0X000]=xB[0][NY[5]];PB=PB+1;do PB=PB+0X1;end;NY=Sm[PB];PB=PB+0X0001;(xB)[0X1]=FB[NY[0x002]];do PB=PB+1;end;do PB=PB+1;end;do NY=Sm[PB];end;local qB=Zm[NY[0X6]];PB=PB+0X1;local aB=(qB[3]);local RB=(nil);local zB=(#aB);if zB>0X0 then do RB={};end;for KJ=0X1,zB do local EJ=aB[KJ];if EJ[1]==0X00000 then RB[KJ-0X1]={xB,EJ[0x2]};else(RB)[KJ-0X1]=bm[EJ[2]];end;end;M(Cm,RB);end;(xB)[0X00002]=dH(qB,RB,FB);PB=PB+1;local sB=(0);xB[sB](xB[sB+0x1],xB[sB+0X00002]);UB=sB-1;PB=PB+0X01;PB=PB+1;NY=Sm[PB];do PB=PB+0X001;end;do(xB)[0]=FB[NY[0X2]];end;PB=PB+0X1;PB=PB+1;NY=Sm[PB];PB=PB+0X1;(xB)[0]=xB[0X0][NY[0X00005]];NY=Sm[PB];PB=PB+1;xB[0X1]=xB[0][NY[5]];do PB=PB+1;end;do PB=PB+0X1;end;NY=Sm[PB];PB=PB+0X1;do if not xB[1]then PB=NY[6];end;end;else(xB)[0X0000]=FB[NY[2]];local Jl=xB[0];NY=Sm[PB];PB=PB+1;local Tl=0;do xB[Tl+1]=Jl;end;do(xB)[Tl]=Jl[NY[0X5]];end;NY=Sm[PB];do PB=PB+0X001;end;(xB)[0X2]=NY[2];PB=PB+1;Tl=0X0;xB[Tl]=xB[Tl](xB[Tl+0X0001],xB[Tl+2]);UB=Tl;NY=Sm[PB];PB=PB+1;if not(not xB[0])then else PB=NY[0x6];end;end;else if yY~=0X19 then else local Tf=(bm[0X0000]);do(xB)[0]=Tf[1][Tf[2]];end;do PB=PB+1;end;local kf=(xB[0]);do PB=PB+1;end;do NY=Sm[PB];end;PB=PB+0X1;local jf=0x000;xB[jf+0X1]=kf;xB[jf]=kf[NY[5]];do PB=PB+1;end;jf=0;(xB[jf])(xB[jf+0x1]);UB=jf-1;PB=PB+0X01;PB=PB+0X1;do PB=PB+0X1;end;repeat local A3,m3=Cm,xB;if#A3>0X0000 then local Eq=({});for rc,Uc in I,A3 do for Qy,gy in I,Uc do if not(gy[1]==m3 and gy[2]>=0)then else local pI=gy[0X0002];if not Eq[pI]then(Eq)[pI]={m3[pI]};end;gy[1]=Eq[pI];gy[2]=1;end;end;end;end;until true;return;end;end;end;end;end;else if not(yY<6)then if yY<0X0009 then if not(yY>=0X7)then if xB[NY[0X6]]~=xB[NY[1]]then else PB=NY[0X00007];end;else if yY==0x0008 then xB[0]=FB[NY[2]];local id=(0);do NY=Sm[PB];end;PB=PB+0X00001;xB[0]=xB[0x0][NY[5]];NY=Sm[PB];PB=PB+0X1;(xB)[1]=NY[2];do PB=PB+1;end;xB[id]=xB[id](xB[id+1]);UB=id;PB=PB+0x01;PB=PB+0X01;NY=Sm[PB];do PB=PB+1;end;do if not xB[0X0]then PB=NY[0x00006];end;end;else do(xB)[NY[0X7]]={f({},1,NY[0X6])};end;end;end;else if yY>=11 then do if yY~=12 then PB=NY[0x6];else xB[NY[7]]=NY[0X2];end;end;else if yY==0x00a then do xB[0]=FB[NY[2]];end;do PB=PB+1;end;PB=PB+0X1;NY=Sm[PB];PB=PB+0X01;(xB)[0]=xB[0][NY[5]];NY=Sm[PB];do PB=PB+1;end;if not(not xB[0X0])then else do PB=NY[6];end;end;else do(xB)[0x1]=FB[NY[0X2]];end;PB=PB+0X1;local gm=0X001;PB=PB+1;NY=Sm[PB];PB=PB+0x001;(xB)[0X00001]=xB[0X1][NY[5]];PB=PB+1;PB=PB+1;NY=Sm[PB];PB=PB+0X1;xB[2]=FB[NY[0X2]];NY=Sm[PB];PB=PB+0x00001;do xB[0X3]=NY[0x2];end;PB=PB+0X1;(xB[gm])(xB[gm+0X1],xB[gm+2]);UB=gm-0x1;PB=PB+1;PB=PB+0X1;do NY=Sm[PB];end;PB=PB+0X1;PB=NY[6];end;end;end;else if yY>=3 then do if yY<0x004 then local rJ=NY[7];local uJ=NY[0X6];if uJ~=0 then UB=rJ+uJ-1;end;local TJ,oJ=nil,(nil);local BJ=NY[1];if uJ~=1 then TJ,oJ=eH(xB[rJ](f(xB,rJ+0x1,UB)));else do TJ,oJ=eH(xB[rJ]());end;end;do if BJ==1 then UB=rJ-1;else do if BJ~=0x0 then do TJ=rJ+BJ-0x2;end;UB=TJ+0x01;else TJ=TJ+rJ-1;do UB=TJ;end;end;end;local WE=(0X0);for zu=rJ,TJ do WE=WE+0X001;xB[zu]=oJ[WE];end;end;end;else do if yY==0X5 then local Nz=bm[0X0];(xB)[0X1]=Nz[0X01][Nz[2]];local Sz=0x1;do NY=Sm[PB];end;PB=PB+0X1;local lz=xB[0x001];(xB)[Sz+0X1]=lz;local Cz=(nil);(xB)[Sz]=lz[NY[0x005]];PB=PB+0X001;do Sz=0x1;end;xB[Sz](xB[Sz+1]);UB=Sz-1;NY=Sm[PB];PB=PB+0X00001;xB[1]=FB[NY[2]];NY=Sm[PB];PB=PB+1;xB[0X002]=xB[0X0][NY[0X5]];NY=Sm[PB];PB=PB+1;local oz=Zm[NY[0X006]];local Dz=(oz[3]);local Vz=(#Dz);if not(Vz>0X0)then else Cz={};do for cM=0X001,Vz do local nM=(Dz[cM]);if nM[1]~=0 then(Cz)[cM-1]=bm[nM[0x2]];else Cz[cM-0X001]={xB,nM[0X002]};end;end;end;(M)(Cm,Cz);end;(xB)[0x003]=dH(oz,Cz,FB);PB=PB+0X001;xB[0x4]=true;PB=PB+0X1;Sz=0x01;UB=Sz+0x4-0X00001;(xB[Sz])(f(xB,Sz+0X1,UB));do UB=Sz-0X1;end;do NY=Sm[PB];end;do PB=PB+0X1;end;(xB)[1]=FB[NY[0X2]];PB=PB+0X01;PB=PB+1;NY=Sm[PB];PB=PB+0X001;xB[0x2]=xB[0X0][NY[0x05]];PB=PB+1;do PB=PB+1;end;PB=PB+0X1;Sz=1;xB[Sz]=xB[Sz](xB[Sz+1]);do UB=Sz;end;do NY=Sm[PB];end;PB=PB+1;do if not(xB[0x0001]<NY[5])then PB=NY[0x007];end;end;else xB[NY[7]]=FB[NY[0X2]];end;end;end;end;else do if not(yY<1)then do if yY~=0X2 then if not(not xB[NY[7]])then else PB=NY[6];end;else do xB[NY[0x7]]=xB[NY[6]]>xB[NY[0X1]];end;end;end;else local kQ=Zm[NY[0X6]];local UQ=(kQ[3]);local DQ=#UQ;local uQ=(nil);do if DQ>0X0 then uQ={};for Tr=1,DQ do local Nr=(UQ[Tr]);if Nr[1]==0X0 then(uQ)[Tr-1]={xB,Nr[2]};else do(uQ)[Tr-1]=bm[Nr[0X002]];end;end;end;(M)(Cm,uQ);end;end;do xB[NY[7]]=dH(kQ,uQ,FB);end;end;end;end;end;end;end;end;end;end);do if not(pB)then if e(lB)~="s\116\114\i\110\103"then V(lB,0X0);else if not(p(lB,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(p(lB,"\^\.\-\058\037\100\+\:\ "))then V(lB,0X000);else(V)("Luraph Script:"..(Dm[PB-1]or"(internal)")..'\:\032'..v(lB),0);end;end;else if lB then if DB==1 then return xB[hB]();else return xB[hB](f(xB,hB+1,UB));end;elseif not(hB)then else return f(xB,hB,DB);end;end;end;end;else Km=function(...)local sf,ef=1,({});local Wf=K();local pf=({[2]=ef,[1]=Xm});local af=0X00000;local Xf,Pf=eH(...);Xf=Xf-1;local Ef=((Wf==g and Qm or Wf));do for p7=0,Xf do if not(km>p7)then break;else ef[p7]=Pf[p7+0X1];end;end;end;do if not Lm then Pf=nil;elseif Um then do ef[km]={n=Xf>=km and Xf-km+1 or 0,f(Pf,km+0X1,Xf+1)};end;end;end;if Ef~=Wf then(w)(Km,Ef);end;while true do local DD=(Sm[sf]);local yD=(DD[0x4]);sf=sf+1;do return(function(C,k,...)local x=C[0];local Y=x;while true do local H,E=string.gsub(Y,"^(-?%d+)(%d%d%d)","%1,%2");Y=H;if E==0 then break;end;end;return Y;end)(ef,bm,...);end;end;end;end;end;else if xm>=0X012 then if xm==0X000013 then Km=function(...)local QX=({});local NX=(0X1);local rX=(K());local DX,uX=0X00,((rX==g and Qm or rX));local kX,gX=eH(...);local zX={[2]=QX,[1]=Xm};kX=kX-0x1;do for gJ=0x0,kX do if not(km>gJ)then do break;end;else QX[gJ]=gX[gJ+0X0001];end;end;end;if not Lm then gX=nil;elseif not(Um)then else(QX)[km]={n=kX>=km and kX-km+0X1 or 0x0,f(gX,km+1,kX+1)};end;if uX==rX then else(w)(Km,uX);end;local XX,ZX,bX,JX=o(function()do while true do local ck=(Sm[NX]);local bk=(ck[4]);NX=NX+0x1;do if bk<0XF then if not(bk<7)then if not(bk<0Xb)then if bk>=0xd then if bk==0XE then local Nx=(ck[7]);local bx=((ck[0X1]-1)*0X32);local Yx=(QX[Nx]);for rL=0X1,ck[6]do Yx[bx+rL]=QX[Nx+rL];end;else end;else if bk~=0Xc then(QX)[4]=QX[3][ck[0X5]];do NX=NX+1;end;NX=NX+0X001;ck=Sm[NX];NX=NX+0X1;(QX)[0X5]=uX[ck[0X2]];ck=Sm[NX];NX=NX+0X1;(QX)[0X5]=QX[0X5][ck[0x5]];do NX=NX+1;end;do NX=NX+0X1;end;ck=Sm[NX];NX=NX+0x0001;(QX)[6]=ck[0X2];local m7=5;ck=Sm[NX];do NX=NX+1;end;QX[7]=ck[0x2];do ck=Sm[NX];end;NX=NX+0X1;(QX)[0x00008]=ck[2];do NX=NX+0X1;end;DX=m7+0X4-0X1;do(QX)[m7]=QX[m7](f(QX,m7+0X001,DX));end;DX=m7;do ck=Sm[NX];end;do NX=NX+0X1;end;if QX[4]~=QX[5]then NX=ck[7];end;else QX[ck[7]]=ck[0X2];end;end;else if not(bk>=9)then if bk==8 then QX[4]=QX[3][ck[5]];NX=NX+0x00001;NX=NX+0x001;ck=Sm[NX];NX=NX+1;do if QX[4]==ck[5]then else NX=ck[7];end;end;else if QX[ck[6]]~=ck[0X5]then NX=ck[7];end;end;else if bk~=10 then do(QX)[ck[7]]=l(QX[ck[0x006]],QX[ck[0X00001]]);end;else local z2=ck[7];local D2,n2,W2=QX[z2]();if not(D2)then else(QX)[z2+1]=n2;(QX)[z2+2]=W2;NX=ck[0X06];end;end;end;end;else if bk>=3 then do if bk>=5 then do if bk==0x6 then do(QX)[ck[0X7]]=uX[ck[0x2]];end;else do(QX)[ck[7]]=QX[ck[0X6]]~=QX[ck[0X1]];end;end;end;else if bk~=0x4 then repeat local J4,R4=Cm,QX;if#J4>0 then local Kl={};for zl,Cl in I,J4 do for J_,t_ in I,Cl do do if not(t_[0X001]==R4 and t_[2]>=0X0)then else local ZA=t_[0x002];if not Kl[ZA]then do(Kl)[ZA]={R4[ZA]};end;end;(t_)[0X1]=Kl[ZA];t_[0x00002]=0X1;end;end;end;end;end;until true;local oG=ck[7];do return false,oG,oG;end;else for eC=ck[0X7],ck[0x6]do QX[eC]=nil;end;end;end;end;else if bk<1 then do QX[ck[7]]=QX[ck[0X6]]%QX[ck[1]];end;else if bk~=2 then QX[0x6]=QX[3][ck[5]];do NX=NX+1;end;do NX=NX+0X1;end;ck=Sm[NX];NX=NX+0X1;QX[0X006]=QX[0X6][ck[5]];ck=Sm[NX];NX=NX+0x1;if QX[0X6]~=ck[5]then else NX=ck[0X7];end;else do NX=ck[6];end;end;end;end;end;else if not(bk<22)then if bk<26 then if bk>=0x000018 then if bk==0X19 then uX[ck[2]]=QX[ck[7]];else QX[4]=uX[ck[2]];NX=NX+1;NX=NX+1;local Cg=(4);ck=Sm[NX];NX=NX+0X0001;do(QX)[0X0004]=QX[0X4][ck[5]];end;NX=NX+0X1;(QX)[0X5]=QX[0X0];ck=Sm[NX];do NX=NX+1;end;(QX)[6]=QX[0X003][ck[0X0005]];do NX=NX+1;end;NX=NX+1;do ck=Sm[NX];end;NX=NX+0X00001;QX[0X6]=QX[6][ck[0x5]];NX=NX+1;NX=NX+1;NX=NX+0X1;QX[Cg]=QX[Cg](QX[Cg+0x00001],QX[Cg+2]);DX=Cg;ck=Sm[NX];do NX=NX+1;end;if not(QX[4])then else NX=ck[6];end;end;else if bk~=0X0017 then local mQ=ck[0X7];local OQ=r(function(...)C();for IG,cG,AG,NG,XG,LG,DG,EG,VG,sG in...do C(true,{IG,cG,AG,NG,XG,LG,DG,EG,VG,sG});end;end);OQ(QX[mQ],QX[mQ+0x1],QX[mQ+0X2]);DX=mQ;QX[mQ]=OQ;do NX=ck[0x6];end;else if not(QX[ck[7]])then else NX=ck[0X006];end;end;end;else do if not(bk<28)then if bk==0X01d then do QX[ck[7]]=QX[ck[6]];end;else local aP=Zm[ck[6]];local wP=nil;local rP=(aP[0X3]);local SP=#rP;if not(SP>0X0)then else wP={};do for bB=0X0001,SP do local cB=rP[bB];if cB[0x001]==0 then wP[bB-0X0001]={QX,cB[0X002]};else do(wP)[bB-0X1]=bm[cB[2]];end;end;end;end;M(Cm,wP);end;(QX)[ck[0x7]]=dH(aP,wP,uX);end;else if bk~=0X0001B then do repeat local jH,aH,WH=Cm,QX,(ck[7]);do if not(#jH>0X0)then else local gf={};for W7,O7 in I,jH do do for rb,nb in I,O7 do if not(nb[0X1]==aH and nb[0X2]>=WH)then else local A_=(nb[2]);do if not gf[A_]then(gf)[A_]={aH[A_]};end;end;nb[0X1]=gf[A_];nb[0X02]=1;end;end;end;end;end;end;until true;end;else(QX)[4]=uX[ck[0X00002]];NX=NX+1;NX=NX+0X1;do ck=Sm[NX];end;NX=NX+0X00001;(QX)[4]=QX[0X4][ck[5]];do NX=NX+0X001;end;NX=NX+0X1;NX=NX+0X1;do(QX)[0X5]=QX[0X00000];end;ck=Sm[NX];NX=NX+1;(QX)[6]=QX[3][ck[0X00005]];NX=NX+1;NX=NX+1;ck=Sm[NX];local eM=0X4;do NX=NX+0X001;end;(QX)[6]=QX[0X00006][ck[0X5]];NX=NX+1;NX=NX+0x1;do NX=NX+1;end;QX[eM](QX[eM+1],QX[eM+2]);DX=eM-0X1;NX=NX+0X001;NX=NX+1;do ck=Sm[NX];end;NX=NX+1;NX=ck[6];end;end;end;end;else if bk>=18 then if bk>=0X014 then if bk~=21 then(QX)[ck[7]]={f({},1,ck[6])};else do QX[0X00004]=uX[ck[0x00002]];end;do ck=Sm[NX];end;NX=NX+0X1;QX[4]=QX[4][ck[5]];do NX=NX+1;end;do NX=NX+0X00001;end;do NX=NX+0X1;end;(QX)[5]=QX[0X0];ck=Sm[NX];NX=NX+0x00001;QX[6]=QX[0X3][ck[5]];ck=Sm[NX];local Ez=0X00004;do NX=NX+0x1;end;QX[6]=QX[0X6][ck[0X05]];NX=NX+0X00001;NX=NX+1;NX=NX+1;QX[Ez](QX[Ez+0x1],QX[Ez+0X02]);DX=Ez-1;do ck=Sm[NX];end;do NX=NX+1;end;NX=ck[0X0006];end;else do if bk~=0X13 then(QX)[0]={};local Pt=(0x03);ck=Sm[NX];NX=NX+0x1;QX[0x00001]=uX[ck[0X2]];NX=NX+1;do NX=NX+1;end;ck=Sm[NX];NX=NX+0X1;do(QX)[0X02]=uX[ck[0X02]];end;do ck=Sm[NX];end;NX=NX+1;(QX)[0x2]=QX[0X002][ck[5]];NX=NX+0X01;NX=NX+1;ck=Sm[NX];NX=NX+0X1;do QX[0X2]=QX[0x00002][ck[0X5]];end;do NX=NX+1;end;do NX=NX+0X0001;end;ck=Sm[NX];NX=NX+0X1;QX[0X2]=QX[0X2][ck[0x00005]];ck=Sm[NX];do NX=NX+1;end;(QX)[3]=uX[ck[0x2]];ck=Sm[NX];do NX=NX+1;end;do(QX)[0X3]=QX[3][ck[0X5]];end;NX=NX+1;do NX=NX+1;end;ck=Sm[NX];NX=NX+0X1;(QX)[3]=QX[0x0003][ck[5]];do ck=Sm[NX];end;do NX=NX+0X1;end;do QX[0X3]=QX[0X3][ck[5]];end;ck=Sm[NX];NX=NX+1;local qt=QX[0X3];(QX)[Pt+1]=qt;QX[Pt]=qt[ck[0X5]];do ck=Sm[NX];end;NX=NX+0x1;QX[5]=ck[2];NX=NX+1;Pt=0X003;QX[Pt]=QX[Pt](QX[Pt+0X001],QX[Pt+0X0002]);DX=Pt;NX=NX+0X1;NX=NX+0X001;do ck=Sm[NX];end;NX=NX+0X001;do QX[0x3]=QX[3][ck[0X5]];end;do NX=NX+0X1;end;NX=NX+1;local vt=(2);NX=NX+0X00001;do(QX)[0x2]=QX[0X0002][QX[0X0003]];end;ck=Sm[NX];do NX=NX+0X1;end;Pt=0X2;do qt=QX[2];end;(QX)[Pt+0X001]=qt;do QX[Pt]=qt[ck[5]];end;NX=NX+0x001;Pt=0X2;local ft=0;do if vt==0X00000 then else do DX=Pt+vt-1;end;end;end;local rt,zt=nil,nil;do if vt~=1 then do rt,zt=eH(QX[Pt](f(QX,Pt+1,DX)));end;else rt,zt=eH(QX[Pt]());end;end;if ft==1 then DX=Pt-0X01;else if ft~=0 then rt=Pt+ft-0X0002;DX=rt+1;else do rt=rt+Pt-0x0001;end;DX=rt;end;local pQ=(0X00);for LP=Pt,rt do pQ=pQ+0X1;do(QX)[LP]=zt[pQ];end;end;end;do NX=NX+1;end;NX=NX+0X0001;NX=NX+1;Pt=1;vt=0x0;ft=0X4;if vt~=0X0000 then DX=Pt+vt-1;end;rt,zt=nil;do if vt~=1 then do rt,zt=eH(QX[Pt](f(QX,Pt+1,DX)));end;else rt,zt=eH(QX[Pt]());end;end;if ft==0X1 then do DX=Pt-1;end;else do if ft~=0x00000 then rt=Pt+ft-0X2;DX=rt+0x1;else do rt=rt+Pt-1;end;DX=rt;end;end;local pv=0;do for CM=Pt,rt do pv=pv+0X1;QX[CM]=zt[pv];end;end;end;do NX=NX+0X1;end;NX=NX+1;ck=Sm[NX];NX=NX+1;Pt=1;local Dt=r(function(...)C();for Oz,Hz in...do C(true,Oz,Hz);end;end);Dt(QX[Pt],QX[Pt+1],QX[Pt+0X2]);DX=Pt;do QX[Pt]=Dt;end;NX=ck[6];else repeat local RE,pE=Cm,(QX);if not(#RE>0)then else local Yg=({});do for qG,mG in I,RE do for B3,f3 in I,mG do if not(f3[1]==pE and f3[0X2]>=0X00000)then else local Xf=f3[2];if not Yg[Xf]then do Yg[Xf]={pE[Xf]};end;end;f3[1]=Yg[Xf];do(f3)[2]=0X1;end;end;end;end;end;end;until true;return;end;end;end;else if not(bk<0X10)then if bk~=17 then do(QX)[4]=uX[ck[0X2]];end;ck=Sm[NX];NX=NX+0X1;QX[4]=QX[0x4][ck[0X5]];NX=NX+0X1;(QX)[0x5]=QX[0];ck=Sm[NX];local xw=(4);do NX=NX+1;end;do QX[6]=QX[3][ck[5]];end;do NX=NX+1;end;do NX=NX+1;end;ck=Sm[NX];do NX=NX+0X1;end;QX[6]=QX[6][ck[5]];do NX=NX+0X01;end;NX=NX+1;NX=NX+1;(QX)[xw]=QX[xw](QX[xw+0X1],QX[xw+0x002]);do DX=xw;end;ck=Sm[NX];NX=NX+1;do if not(not QX[0X4])then else NX=ck[0X6];end;end;else do(QX)[ck[0X7]]=QX[ck[0X6]][ck[5]];end;end;else(QX)[ck[0X007]]=QX[ck[0x6]]>=QX[ck[0x1]];end;end;end;end;end;end;end;end);do if XX then do if ZX then if JX~=0x01 then return QX[bX](f(QX,bX+0X001,DX));else do return QX[bX]();end;end;elseif not(bX)then else return f(QX,bX,JX);end;end;else if e(ZX)~="string"then V(ZX,0X0);else if not(p(ZX,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(p(ZX,'^\046\-\:\037\100+\:\032'))then V(ZX,0x00);else V('Lura\ph\ S\cr\ip\116\:'..(Dm[NX-1]or"(internal)").."\:\ "..v(ZX),0);end;end;end;end;end;else do Km=function(...)local EG,jG={},0;local fG=(1);local vG=(K());local nG=({[1]=Xm,[2]=EG});local TG=(vG==g and Qm or vG);local wG,dG=eH(...);wG=wG-1;for rr=0,wG do if not(km>rr)then break;else EG[rr]=dG[rr+1];end;end;if not Lm then dG=nil;elseif not(Um)then else do EG[km]={n=wG>=km and wG-km+0x1 or 0x0,f(dG,km+0x1,wG+0X00001)};end;end;if TG~=vG then w(Km,TG);end;local SG,pG,xG,RG=o(function()while true do local uj=Sm[fG];local ij=uj[4];fG=fG+0x0001;do if not(ij>=9)then if ij>=0x4 then if ij<0X6 then if ij==5 then local Td,ad=uj[0X0007],uj[0x6];if ad~=0 then jG=Td+ad-1;end;local Bd,pd,Id=nil,nil,uj[0x01];if ad~=0x01 then Bd,pd=eH(EG[Td](f(EG,Td+1,jG)));else Bd,pd=eH(EG[Td]());end;do if Id~=1 then if Id~=0X000 then do Bd=Td+Id-0x2;end;jG=Bd+0x1;else do Bd=Bd+Td-0X01;end;do jG=Bd;end;end;local DO=0X0;for pK=Td,Bd do DO=DO+0x1;(EG)[pK]=pd[DO];end;else jG=Td-0X1;end;end;else EG[uj[7]]=nG[uj[6]];end;else if ij<7 then local h1=uj[0X6];local m1=(EG[h1]);for Lb=h1+1,uj[1]do m1=m1..EG[Lb];end;EG[uj[0X7]]=m1;else if ij~=0x8 then if not EG[uj[0X7]]then do fG=uj[6];end;end;else do repeat local s6,j6=Cm,EG;if#s6>0X0 then local D7=({});for wy,iy in I,s6 do for Ja,Ya in I,iy do if Ya[1]==j6 and Ya[2]>=0X0 then local aH=(Ya[2]);if not D7[aH]then D7[aH]={j6[aH]};end;(Ya)[0X1]=D7[aH];(Ya)[0X2]=0x00001;end;end;end;end;until true;end;return;end;end;end;else do if ij<0x002 then if ij~=1 then EG[uj[0x7]]=a(EG[uj[6]]);else EG[uj[0X7]]=uj[0X2];end;else if ij~=3 then(EG)[0]=TG[uj[2]];local vR=0;fG=fG+0X1;do fG=fG+1;end;uj=Sm[fG];fG=fG+1;local pR=(EG[0X00000]);EG[vR+1]=pR;EG[vR]=pR[uj[5]];uj=Sm[fG];do fG=fG+1;end;EG[0X002]=uj[0X2];fG=fG+0X0001;do vR=0X000;end;EG[vR]=EG[vR](EG[vR+0X1],EG[vR+0X2]);jG=vR;uj=Sm[fG];fG=fG+1;(EG)[1]=TG[uj[2]];fG=fG+0X1;fG=fG+0X1;uj=Sm[fG];fG=fG+0X1;do EG[0x1]=EG[1][uj[5]];end;fG=fG+1;fG=fG+1;do uj=Sm[fG];end;local lR=Zm[uj[6]];local sR=(lR[0X003]);fG=fG+0x1;local XR,kR=nil,#sR;if kR>0X0 then do XR={};end;for h1=0x001,kR do local B1=sR[h1];if B1[1]==0 then(XR)[h1-1]={EG,B1[2]};else(XR)[h1-0X1]=bm[B1[2]];end;end;M(Cm,XR);end;EG[0X2]=dH(lR,XR,TG);fG=fG+0X0001;vR=0X1;EG[vR](EG[vR+1]);do jG=vR-1;end;do fG=fG+0X1;end;fG=fG+1;do fG=fG+0X1;end;do repeat local rY,FY=Cm,(EG);do if#rY>0X0 then local ta=({});do for PD,kD in I,rY do for kS,jS in I,kD do if not(jS[1]==FY and jS[0x0002]>=0)then else local Ai=jS[2];do if not ta[Ai]then(ta)[Ai]={FY[Ai]};end;end;jS[0X1]=ta[Ai];jS[0X002]=0x1;end;end;end;end;end;end;until true;end;return;else end;end;end;end;else if ij>=0X0D then if not(ij<15)then if not(ij>=0X0010)then local NW=uj[7];local kW=(r(function(...)C();do for a1,j1,M1,W1,l1,x1,T1,F1,g1,U1 in...do(C)(true,{a1,j1,M1,W1,l1,x1,T1,F1,g1,U1});end;end;end));kW(EG[NW],EG[NW+0X1],EG[NW+0x2]);jG=NW;EG[NW]=kW;do fG=uj[0x6];end;else if ij~=17 then do EG[uj[7]]=not EG[uj[6]];end;else EG[uj[0X7]]=TG[uj[2]];end;end;else if ij==14 then fG=uj[6];else for ZJ=uj[7],uj[6]do do EG[ZJ]=nil;end;end;end;end;else if not(ij>=0X00B)then do if ij~=0Xa then local Fj=Zm[uj[6]];local Cj,Yj=Fj[0X3],nil;local Wj=(#Cj);if not(Wj>0)then else do Yj={};end;for Pc=1,Wj do local gc=(Cj[Pc]);do if gc[0x1]~=0X0 then do(Yj)[Pc-1]=bm[gc[2]];end;else do Yj[Pc-1]={EG,gc[0X2]};end;end;end;end;(M)(Cm,Yj);end;do EG[uj[0X7]]=dH(Fj,Yj,TG);end;else EG[uj[0x7]]={f({},0x1,uj[6])};end;end;else do if ij~=12 then if not(EG[uj[7]])then else do fG=uj[0x00006];end;end;else local Wr=uj[7];local qr,Zr=EG[Wr]();if qr then fG=uj[0x6];EG[Wr+3]=Zr;end;end;end;end;end;end;end;end;end);do if SG then if pG then do if RG~=1 then return EG[xG](f(EG,xG+0x1,jG));else return EG[xG]();end;end;elseif not(xG)then else do return f(EG,xG,RG);end;end;else if e(pG)~="\str\105\110\103"then(V)(pG,0);else do if p(pG,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(pG,"^.-:%d+: ")then V("\Lur\097\112\h \083c\114i\p\116\:"..(Dm[fG-1]or"\(\int\e\114na\l)")..": "..v(pG),0);else V(pG,0);end;end;end;end;end;end;end;end;else do Km=function(...)local PE,oE=0X1,({});local qE=(0);local GE={[2]=oE,[1]=Xm};local ME=K();local UE,kE=eH(...);UE=UE-1;for UD=0X0,UE do if not(km>UD)then break;else oE[UD]=kE[UD+1];end;end;local YE=((ME==g and Qm or ME));if not Lm then kE=nil;elseif Um then oE[km]={n=UE>=km and UE-km+0X01 or 0,f(kE,km+0x1,UE+1)};end;if YE~=ME then(w)(Km,YE);end;local gE,DE,yE,XE=o(function()while true do local b0=Sm[PE];local W0=b0[0x4];PE=PE+1;if W0>=28 then if not(W0>=42)then if not(W0>=0X000023)then do if not(W0<0X1F)then if not(W0>=33)then if W0~=0x20 then oE[4]=YE[b0[2]];b0=Sm[PE];PE=PE+1;do oE[0X00005]=YE[b0[0X2]];end;PE=PE+0X1;local RW=(0X4);PE=PE+1;PE=PE+0x01;(oE)[RW]=oE[RW](oE[RW+0X1]);do qE=RW;end;PE=PE+0X1;PE=PE+1;do b0=Sm[PE];end;PE=PE+1;if not(b0[2]<=oE[0X04])then PE=b0[0X007];end;else local H6=(b0[0X00007]);local P6,r6,V6=oE[H6]();if P6 then oE[H6+0X1]=r6;(oE)[H6+2]=V6;PE=b0[6];end;end;else if W0==34 then(oE)[0x03]=YE[b0[2]];PE=PE+0x1;PE=PE+1;b0=Sm[PE];PE=PE+0X001;do if not oE[0x0003]then PE=b0[6];end;end;else oE[0X000f]=YE[b0[2]];PE=PE+1;local ji=0X000F;(oE)[0X10]=oE[0XD];do PE=PE+0x0001;end;(oE)[17]=nil;PE=PE+0X1;(oE)[18]=true;PE=PE+1;qE=ji+4-0X1;(oE)[ji]=oE[ji](f(oE,ji+0X1,qE));do qE=ji;end;PE=PE+0x1;PE=PE+0X01;PE=PE+1;(oE)[8]=oE[15];PE=PE+1;oE[0Xf]=oE[0XE];PE=PE+1;(oE)[16]=oE[12];do PE=PE+1;end;oE[0x0009]=oE[0x10];do PE=PE+0x1;end;do oE[0X6]=oE[15];end;b0=Sm[PE];PE=PE+1;PE=b0[6];end;end;else if W0>=29 then if W0==0x1E then oE[3]=YE[b0[2]];b0=Sm[PE];PE=PE+1;(oE)[0X0003]=oE[3][b0[0X5]];PE=PE+0X1;PE=PE+1;do PE=PE+1;end;qE=3;(oE[qE])();do qE=qE-0X1;end;PE=PE+0X1;PE=PE+1;b0=Sm[PE];PE=PE+0X01;if not(not oE[0X2])then else PE=b0[6];end;else oE[0X0003]=YE[b0[2]];PE=PE+1;qE=0x00003;(oE)[qE]=oE[qE]();do b0=Sm[PE];end;do PE=PE+1;end;do if not(oE[0X3])then else PE=b0[6];end;end;end;else(oE)[0X3]=YE[b0[0X02]];b0=Sm[PE];do PE=PE+0X1;end;do(oE)[4]=YE[b0[0X2]];end;PE=PE+1;do PE=PE+1;end;b0=Sm[PE];PE=PE+1;oE[5]=YE[b0[2]];PE=PE+1;PE=PE+0X1;PE=PE+0X01;local Am=(3);(oE)[0X004]=oE[4][oE[5]];local zm=4;PE=PE+0X0001;PE=PE+1;PE=PE+1;local Hm=0X2;if Hm==0x00000 then else do qE=Am+Hm-1;end;end;local mm,Bm=nil,(nil);if Hm~=1 then mm,Bm=eH(oE[Am](f(oE,Am+1,qE)));else do mm,Bm=eH(oE[Am]());end;end;if zm~=1 then if zm~=0X0 then do mm=Am+zm-2;end;do qE=mm+0X1;end;else do mm=mm+Am-0X1;end;qE=mm;end;local OA=(0X0);for V4=Am,mm do OA=OA+0X00001;oE[V4]=Bm[OA];end;else do qE=Am-0x1;end;end;PE=PE+0x0001;PE=PE+1;b0=Sm[PE];do PE=PE+1;end;do Am=0X3;end;local ym=r(function(...)(C)();do for Uu,Gu in...do C(true,Uu,Gu);end;end;end);ym(oE[Am],oE[Am+1],oE[Am+0x2]);qE=Am;(oE)[Am]=ym;PE=b0[0X6];end;end;end;else if not(W0>=0X26)then if W0>=0X24 then if W0~=0X25 then oE[0X5]=YE[b0[0X2]];do b0=Sm[PE];end;do PE=PE+0X1;end;oE[6]=b0[0X2];PE=PE+1;local mB=5;(oE[mB])(oE[mB+1]);do qE=mB-0x1;end;b0=Sm[PE];PE=PE+0X1;PE=b0[0X6];else(oE)[0X3]=YE[b0[2]];PE=PE+0X0001;local aO=(bm[0X0]);do PE=PE+1;end;PE=PE+1;(oE)[4]=aO[1][aO[0X2]];local oO=(3);b0=Sm[PE];PE=PE+0X01;(oE)[0X5]=YE[b0[0X0002]];PE=PE+1;PE=PE+1;do PE=PE+0X00001;end;(oE)[oO]=oE[oO](oE[oO+1],oE[oO+0X002]);do qE=oO;end;do b0=Sm[PE];end;PE=PE+0X0001;if not(oE[3]<b0[0x005])then else PE=b0[0X00007];end;end;else oE[b0[0X007]]={f({},1,b0[6])};end;else if not(W0<0x28)then if W0==0X29 then oE[b0[7]]=oE[b0[0X6]]/oE[b0[0X1]];else do(oE)[0x00003]=YE[b0[2]];end;PE=PE+0X1;PE=PE+1;do b0=Sm[PE];end;PE=PE+1;(oE)[3]=oE[3][b0[0X0005]];PE=PE+1;PE=PE+1;do PE=PE+0x1;end;qE=3;oE[qE]();qE=qE-0x1;PE=PE+1;PE=PE+0X00001;b0=Sm[PE];do PE=PE+1;end;PE=b0[6];end;else if W0~=0X000027 then oE[10]=YE[b0[0X00002]];b0=Sm[PE];do PE=PE+1;end;(oE)[10]=oE[0XA][b0[0X005]];PE=PE+0X001;local pp=10;PE=PE+1;b0=Sm[PE];PE=PE+1;local sp=(oE[0XA]);oE[pp+1]=sp;oE[pp]=sp[b0[0X5]];b0=Sm[PE];PE=PE+1;do oE[12]=b0[0X2];end;PE=PE+0X1;pp=10;oE[pp]=oE[pp](oE[pp+0X1],oE[pp+2]);qE=pp;b0=Sm[PE];PE=PE+1;if not(not oE[10])then else PE=b0[0X0006];end;else do oE[3]=YE[b0[0x2]];end;PE=PE+0X1;do PE=PE+1;end;PE=PE+1;qE=3;(oE)[qE]=oE[qE]();b0=Sm[PE];PE=PE+1;if not(oE[0X3])then else PE=b0[6];end;end;end;end;end;else do if W0>=49 then do if W0<53 then if W0>=0X000033 then if W0==0X34 then if not(b0[0X0002]<=oE[b0[1]])then PE=b0[0x7];end;else(oE)[10]=YE[b0[0X02]];do b0=Sm[PE];end;local NZ=(0xA);PE=PE+0x00001;local AZ=(oE[10]);do oE[NZ+0X001]=AZ;end;(oE)[NZ]=AZ[b0[0x5]];b0=Sm[PE];PE=PE+0X00001;(oE)[12]=b0[2];PE=PE+1;do NZ=0X000a;end;(oE)[NZ]=oE[NZ](oE[NZ+0X00001],oE[NZ+2]);qE=NZ;do PE=PE+0X0001;end;PE=PE+0x1;do b0=Sm[PE];end;PE=PE+1;if not(oE[0Xa])then else PE=b0[6];end;end;else if W0~=50 then if not(oE[b0[6]]<=b0[0x005])then PE=b0[7];end;else(oE)[10]=YE[b0[2]];PE=PE+1;do qE=0X0a;end;oE[qE]();qE=qE-1;PE=PE+0X01;PE=PE+0X01;do b0=Sm[PE];end;PE=PE+1;do(oE)[10]=YE[b0[0X2]];end;b0=Sm[PE];do PE=PE+1;end;(oE)[0X000B]=YE[b0[0X0002]];b0=Sm[PE];PE=PE+1;do(oE)[11]=oE[0XB][b0[0x5]];end;b0=Sm[PE];do PE=PE+0X0001;end;do oE[0XC]=YE[b0[0X02]];end;PE=PE+1;PE=PE+0X1;local nB=10;b0=Sm[PE];PE=PE+1;oE[13]=b0[0X2];b0=Sm[PE];PE=PE+1;(oE)[0Xe]=oE[0X9][b0[0X005]];PE=PE+1;qE=nB+5-0X1;(oE[nB])(f(oE,nB+1,qE));qE=nB-1;b0=Sm[PE];PE=PE+1;do(oE)[0x0a]=YE[b0[0X2]];end;PE=PE+0x1;do PE=PE+1;end;b0=Sm[PE];PE=PE+1;(oE)[0X00A]=oE[0Xa][b0[5]];b0=Sm[PE];PE=PE+0X1;oE[0X0000A]=oE[10][b0[5]];b0=Sm[PE];PE=PE+0x00001;oE[11]=oE[0X00009][b0[5]];PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+0X1;if oE[0X0A]~=oE[0xb]then PE=b0[7];end;end;end;else if W0<55 then do if W0==0X0036 then local QA=(0X00D);local OA=oE[0XC];oE[QA+1]=OA;(oE)[QA]=OA[b0[0x5]];PE=PE+1;QA=13;oE[QA]=oE[QA](oE[QA+1]);do qE=QA;end;PE=PE+0x1;PE=PE+0x001;b0=Sm[PE];do PE=PE+1;end;(oE)[0XD]=oE[0XD][b0[5]];PE=PE+0x1;do PE=PE+1;end;do b0=Sm[PE];end;PE=PE+0X001;oE[0X0000e]=YE[b0[2]];do PE=PE+0X1;end;do PE=PE+0X00001;end;local LA=(bm[0]);PE=PE+1;do oE[0X00f]=LA[1][LA[0X002]];end;b0=Sm[PE];PE=PE+0X1;(oE)[15]=oE[0X000f][b0[5]];PE=PE+1;(oE)[0X10]=oE[0XD];PE=PE+1;do oE[17]=true;end;PE=PE+0X00001;do QA=14;end;qE=QA+0X4-0x0001;(oE)[QA]=oE[QA](f(oE,QA+0x1,qE));do qE=QA;end;do b0=Sm[PE];end;do PE=PE+0X1;end;if not(oE[0X0000e]<=oE[0X0006])then do PE=b0[7];end;end;else oE[0X3]=YE[b0[2]];PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+1;if not(oE[3])then else PE=b0[6];end;end;end;else if W0==56 then for uv=b0[7],b0[6]do oE[uv]=nil;end;else(oE)[0X00003]=YE[b0[2]];b0=Sm[PE];PE=PE+1;do(oE)[0x3]=oE[0X3][b0[0X5]];end;b0=Sm[PE];PE=PE+1;if not oE[0X3]then PE=b0[0x6];end;end;end;end;end;else if W0>=45 then do if W0<0X002f then do if W0==0X02e then oE[b0[0x00007]]=#oE[b0[6]];else end;end;else if W0==0X30 then oE[b0[7]]=oE[b0[0x0006]]<oE[b0[0X0001]];else oE[10]=YE[b0[0X2]];PE=PE+0x0001;PE=PE+0X00001;b0=Sm[PE];local Pv=(0X0a);PE=PE+1;local Ev=(oE[10]);do(oE)[Pv+1]=Ev;end;oE[Pv]=Ev[b0[5]];b0=Sm[PE];do PE=PE+1;end;oE[0X0000C]=b0[0X2];PE=PE+1;Pv=10;oE[Pv]=oE[Pv](oE[Pv+1],oE[Pv+2]);qE=Pv;do PE=PE+0X1;end;PE=PE+1;b0=Sm[PE];PE=PE+1;do if not(oE[0XA])then else PE=b0[6];end;end;end;end;end;else if not(W0>=0x2b)then do(oE)[0x0000A]=YE[b0[2]];end;b0=Sm[PE];local LO=Zm[b0[6]];PE=PE+1;local jO=nil;local hO=(LO[0X003]);local RO,cO=#hO,10;do if not(RO>0)then else do jO={};end;for I8=1,RO do local k8=hO[I8];do if k8[0x1]==0X0 then do jO[I8-0X00001]={oE,k8[0x2]};end;else do(jO)[I8-1]=bm[k8[0X2]];end;end;end;end;(M)(Cm,jO);end;end;(oE)[11]=dH(LO,jO,YE);PE=PE+1;(oE[cO])(oE[cO+1]);qE=cO-0x1;b0=Sm[PE];PE=PE+1;PE=b0[0X6];else do if W0~=0X00002c then do oE[b0[0x0007]]=YE[b0[0X2]];end;else oE[0XA]=YE[b0[2]];b0=Sm[PE];PE=PE+1;oE[0Xb]=b0[0X2];PE=PE+1;local qg=(0XA);(oE[qg])(oE[qg+0X001]);qE=qg-1;PE=PE+1;do PE=PE+1;end;do b0=Sm[PE];end;PE=PE+1;do oE[0X0000A]=YE[b0[2]];end;PE=PE+0X0001;do PE=PE+1;end;b0=Sm[PE];PE=PE+0X0001;oE[10]=oE[10][b0[5]];PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+0X001;if not oE[0Xa]then PE=b0[6];end;end;end;end;end;end;end;end;else if W0>=0Xe then if W0<0x00015 then if W0>=17 then if not(W0<19)then if W0~=20 then do if not(not(oE[b0[0X6]]<oE[b0[0X1]]))then else PE=b0[0x7];end;end;else if not(not oE[b0[0x007]])then else PE=b0[6];end;end;else do if W0~=18 then oE[3]=YE[b0[2]];PE=PE+1;PE=PE+1;do b0=Sm[PE];end;PE=PE+1;if oE[0X3]then PE=b0[6];end;else do(oE)[3]=YE[b0[0X002]];end;do PE=PE+0x1;end;do qE=0x3;end;do oE[qE]=oE[qE]();end;b0=Sm[PE];PE=PE+0x1;if not(oE[3])then else PE=b0[6];end;end;end;end;else if not(W0<0X0F)then if W0~=16 then oE[0x6]=YE[b0[0X02]];local xu=(bm[0]);PE=PE+0X1;local ju=(6);(oE)[7]=oE[5];PE=PE+1;(oE)[0X8]=xu[1][xu[2]];PE=PE+1;PE=PE+0X001;do PE=PE+0X1;end;(oE)[9]=true;do PE=PE+0X00001;end;qE=ju+0x4-0x0001;(oE)[ju]=oE[ju](f(oE,ju+1,qE));qE=ju;b0=Sm[PE];PE=PE+0X001;oE[7]=YE[b0[0X2]];do PE=PE+1;end;PE=PE+0X1;PE=PE+0x1;xu=bm[0X0000];(oE)[0x8]=xu[0X01][xu[0X002]];PE=PE+0X01;oE[9]=nil;PE=PE+0x1;(oE)[10]=true;PE=PE+0x1;ju=7;qE=ju+0X4-0X1;(oE)[ju]=oE[ju](f(oE,ju+0X00001,qE));qE=ju;b0=Sm[PE];PE=PE+0x1;if not(not(oE[0X6]<oE[0X7]))then else PE=b0[0X7];end;else(oE)[0x0003]=YE[b0[0x2]];local lG=bm[0];PE=PE+1;do PE=PE+0X1;end;PE=PE+0x00001;(oE)[0x00004]=lG[0x1][lG[2]];do PE=PE+0X1;end;PE=PE+1;b0=Sm[PE];do PE=PE+0X1;end;local xG=3;oE[0X4]=oE[0X4][b0[0X00005]];PE=PE+0X1;PE=PE+0X1;do PE=PE+0X1;end;do(oE)[xG]=oE[xG](oE[xG+0X1]);end;qE=xG;b0=Sm[PE];PE=PE+0X001;do oE[4]=YE[b0[0X002]];end;b0=Sm[PE];PE=PE+0X1;do oE[0X00005]=YE[b0[0X02]];end;b0=Sm[PE];PE=PE+1;(oE)[5]=oE[5][b0[0x5]];b0=Sm[PE];PE=PE+0X1;oE[0x00005]=oE[0x5][b0[5]];do PE=PE+0X1;end;xG=0x4;(oE)[xG]=oE[xG](oE[xG+1]);qE=xG;PE=PE+1;PE=PE+1;b0=Sm[PE];do PE=PE+0X1;end;(oE)[5]=YE[b0[0x2]];b0=Sm[PE];PE=PE+1;do(oE)[0x05]=oE[5][b0[0x5]];end;PE=PE+0X00001;PE=PE+1;b0=Sm[PE];PE=PE+0X1;do(oE)[5]=oE[0x00005][b0[5]];end;PE=PE+0X1;do PE=PE+1;end;b0=Sm[PE];PE=PE+0x01;do(oE)[0x6]=YE[b0[2]];end;PE=PE+1;do PE=PE+1;end;b0=Sm[PE];PE=PE+1;oE[6]=oE[0X0006][b0[0x5]];PE=PE+0x0001;PE=PE+1;b0=Sm[PE];do PE=PE+0X01;end;oE[6]=oE[6][b0[5]];PE=PE+1;PE=PE+0X00001;PE=PE+1;local TG=2;(oE)[0X5]=oE[5][oE[6]];local RG=(oE[0X005]);do b0=Sm[PE];end;PE=PE+1;xG=5;oE[xG+1]=RG;do oE[xG]=RG[b0[0x005]];end;PE=PE+1;xG=0x05;oE[xG]=oE[xG](oE[xG+0X1]);qE=xG;PE=PE+0x1;PE=PE+1;do b0=Sm[PE];end;PE=PE+0X001;oE[6]=b0[2];b0=Sm[PE];PE=PE+1;do(oE)[7]=b0[0x2];end;do PE=PE+0X1;end;for iq=8,9 do do(oE)[iq]=nil;end;end;b0=Sm[PE];PE=PE+1;oE[0X000A]=YE[b0[0x2]];PE=PE+0x1;PE=PE+1;PE=PE+1;(oE)[11]=oE[0X5];PE=PE+0X1;xG=10;local zG=(4);do if TG~=0x0 then qE=xG+TG-0x1;end;end;local EG,AG=nil,(nil);if TG==0X1 then do EG,AG=eH(oE[xG]());end;else EG,AG=eH(oE[xG](f(oE,xG+1,qE)));end;if zG==0x1 then qE=xG-0x1;else if zG==0 then EG=EG+xG-1;qE=EG;else EG=xG+zG-0X2;do qE=EG+0x1;end;end;local mC=0;for Kc=xG,EG do mC=mC+1;oE[Kc]=AG[mC];end;end;PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+1;xG=0Xa;local tG=r(function(...)(C)();for Gj,Rj in...do C(true,Gj,Rj);end;end);(tG)(oE[xG],oE[xG+1],oE[xG+2]);qE=xG;do(oE)[xG]=tG;end;PE=b0[0x6];end;else oE[b0[7]]=b0[2];end;end;else if not(W0>=24)then do if not(W0>=0X00016)then do oE[3]=YE[b0[0X2]];end;local vn=0X3;do b0=Sm[PE];end;PE=PE+0X0001;(oE)[0x04]=b0[2];do PE=PE+0x1;end;oE[0X5]=oE[0x2];PE=PE+0X1;(oE[vn])(oE[vn+0X001],oE[vn+0X00002]);qE=vn-1;PE=PE+0X1;do PE=PE+0X1;end;b0=Sm[PE];PE=PE+0X1;PE=b0[0X6];else if W0~=23 then(oE)[0X0003]=YE[b0[2]];PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+0x1;(oE)[4]=YE[b0[0X2]];b0=Sm[PE];PE=PE+1;local Cs=0X3;(oE)[4]=oE[4][b0[0X00005]];PE=PE+0X00001;do oE[Cs]=oE[Cs](oE[Cs+0X1]);end;qE=Cs;PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+0X1;oE[0X004]=YE[b0[2]];PE=PE+0X1;(oE)[5]=oE[0X2];PE=PE+1;Cs=0X4;(oE)[Cs]=oE[Cs](oE[Cs+0X1]);qE=Cs;PE=PE+1;PE=PE+0X1;do b0=Sm[PE];end;do PE=PE+0x0001;end;if oE[0X3]~=oE[0X004]then else PE=b0[0x7];end;else oE[3]=YE[b0[0x00002]];do PE=PE+0X1;end;do PE=PE+1;end;b0=Sm[PE];PE=PE+0x1;do if not oE[0X3]then do PE=b0[0X6];end;end;end;end;end;end;else if not(W0>=26)then if W0~=25 then do(oE)[0X0000A]=YE[b0[2]];end;PE=PE+0x00001;PE=PE+1;b0=Sm[PE];PE=PE+1;oE[0Xa]=oE[10][b0[0X5]];do b0=Sm[PE];end;do PE=PE+1;end;do(oE)[0X0000A]=oE[10][b0[0X5]];end;do PE=PE+1;end;do PE=PE+1;end;local RD=10;b0=Sm[PE];PE=PE+0X01;local yD=oE[0X0000a];do(oE)[RD+0x1]=yD;end;(oE)[RD]=yD[b0[5]];PE=PE+0x1;do RD=0Xa;end;(oE[RD])(oE[RD+0X1]);qE=RD-0X1;do PE=PE+0X0001;end;do PE=PE+1;end;b0=Sm[PE];PE=PE+0X1;PE=b0[0x06];else PE=b0[6];end;else if W0~=27 then oE[b0[7]]=W(oE[b0[0x6]],oE[b0[1]]);else(oE)[3]=oE[0X3]+b0[5];b0=Sm[PE];local ZF=bm[0];PE=PE+1;YE[b0[2]]=oE[3];PE=PE+1;do(oE)[3]=ZF[1][ZF[2]];end;b0=Sm[PE];PE=PE+0X001;YE[b0[0X2]]=oE[3];do PE=PE+1;end;ZF=bm[0X00002];oE[0X3]=ZF[0X00001][ZF[2]];PE=PE+1;do PE=PE+0X0001;end;do b0=Sm[PE];end;PE=PE+0X01;do if not(oE[3])then else PE=b0[0X00006];end;end;end;end;end;end;else do if W0>=7 then if W0<0xA then if W0<0x00008 then do(oE)[0X007]=oE[0X6];end;PE=PE+1;do(oE)[8]=oE[5];end;do PE=PE+0X0001;end;oE[0X2]=oE[0x8];PE=PE+0X1;(oE)[1]=oE[0X7];b0=Sm[PE];PE=PE+1;PE=b0[0X006];else do if W0==0X9 then(oE)[b0[7]]=a(oE[b0[0X06]]);else oE[0X3]=YE[b0[0X2]];PE=PE+0x1;qE=0X3;(oE)[qE]=oE[qE]();b0=Sm[PE];PE=PE+0X1;(oE)[4]=YE[b0[0X02]];PE=PE+0X1;(oE)[3]=oE[0X3]-oE[4];b0=Sm[PE];PE=PE+0X1;if not(b0[0X2]<oE[3])then do PE=b0[0X007];end;end;end;end;end;else if W0>=12 then do if W0==0XD then local xD=(Zm[b0[0X6]]);local fD=(nil);local ID=(xD[3]);local bD=(#ID);if bD>0 then fD={};for Kc=0X01,bD do local Ac=(ID[Kc]);if Ac[0X1]==0 then(fD)[Kc-0X01]={oE,Ac[0X2]};else fD[Kc-0x1]=bm[Ac[0X2]];end;end;M(Cm,fD);end;do(oE)[b0[7]]=dH(xD,fD,YE);end;else do oE[0X3]=YE[b0[0X002]];end;PE=PE+0x1;PE=PE+0x1;PE=PE+0X01;qE=0X3;oE[qE]=oE[qE]();b0=Sm[PE];PE=PE+0x1;do if oE[3]then PE=b0[0X0006];end;end;end;end;else if W0~=11 then do oE[0x3]=YE[b0[2]];end;PE=PE+1;PE=PE+1;PE=PE+1;do qE=3;end;(oE)[qE]=oE[qE]();do PE=PE+1;end;PE=PE+0x1;b0=Sm[PE];do PE=PE+0X1;end;if not(oE[0x03])then else PE=b0[6];end;else local zb=(bm[2]);(zb[0x1])[zb[2]]=oE[3];do b0=Sm[PE];end;PE=PE+1;oE[0X3]=YE[b0[2]];b0=Sm[PE];do PE=PE+1;end;(oE)[3]=oE[0X0003][b0[5]];do PE=PE+0x1;end;PE=PE+0X001;do b0=Sm[PE];end;PE=PE+1;do(oE)[0X004]=oE[3][b0[5]];end;b0=Sm[PE];do PE=PE+1;end;(oE)[5]=YE[b0[2]];PE=PE+1;PE=PE+0X1;PE=PE+1;do zb=bm[0x03];end;zb[0X01][zb[2]]=oE[5];b0=Sm[PE];PE=PE+0X001;oE[0x5]=YE[b0[2]];b0=Sm[PE];PE=PE+1;do oE[0X005]=oE[0X5][b0[0x05]];end;PE=PE+1;do PE=PE+0x1;end;b0=Sm[PE];do PE=PE+0X1;end;do(oE)[0x00005]=oE[5][b0[0X5]];end;PE=PE+0X1;PE=PE+0X01;do b0=Sm[PE];end;PE=PE+1;if not(not(b0[2]<oE[0X0005]))then else PE=b0[0X07];end;end;end;end;else do if W0<0X003 then if not(W0<1)then if W0~=0X2 then do repeat local Lv,rv=Cm,(oE);if not(#Lv>0X00)then else local UA=({});for xw,Aw in I,Lv do for f7,W7 in I,Aw do if W7[0X1]==rv and W7[2]>=0X000 then local Gk=W7[0X02];if not UA[Gk]then UA[Gk]={rv[Gk]};end;(W7)[1]=UA[Gk];W7[0x2]=0x001;end;end;end;end;until true;end;return;else oE[5]=YE[b0[0x2]];PE=PE+0X00001;PE=PE+0X0001;do PE=PE+0X01;end;qE=5;oE[qE]=oE[qE]();PE=PE+0X1;PE=PE+0X1;do b0=Sm[PE];end;do PE=PE+0x00001;end;do if not(oE[0X5])then else PE=b0[6];end;end;end;else local qF=(bm[0x00001]);oE[3]=qF[0X1][qF[0x2]];do PE=PE+1;end;PE=PE+0X01;b0=Sm[PE];PE=PE+1;if not(oE[0X3])then else PE=b0[6];end;end;else do if not(W0<5)then if W0==6 then local eb=(oE[b0[6]]/oE[b0[1]]);do oE[b0[0x7]]=eb-eb%1;end;else oE[3]=YE[b0[0X2]];PE=PE+0X1;PE=PE+0x01;b0=Sm[PE];PE=PE+1;if not(not oE[0X3])then else PE=b0[6];end;end;else if W0==0X4 then do oE[0X00000]=YE[b0[0x00002]];end;local Hn=bm[0];PE=PE+1;(oE)[1]=Hn[1][Hn[0X02]];do PE=PE+0X1;end;local Mn=(0X0000);(oE)[0X2]=nil;PE=PE+1;do oE[0X3]=true;end;PE=PE+0X1;qE=Mn+4-1;(oE)[Mn]=oE[Mn](f(oE,Mn+1,qE));do qE=Mn;end;PE=PE+1;PE=PE+1;b0=Sm[PE];PE=PE+0X1;oE[0x01]=b0[0X2]/b0[5];PE=PE+0x00001;(oE)[2]=nil;b0=Sm[PE];PE=PE+1;(oE)[0X003]=YE[b0[0x00002]];PE=PE+0X00001;do PE=PE+0X0001;end;b0=Sm[PE];PE=PE+1;do if not oE[3]then PE=b0[0x06];end;end;else(oE)[5]=YE[b0[2]];b0=Sm[PE];PE=PE+0X1;do(oE)[5]=oE[5][b0[0x5]];end;b0=Sm[PE];PE=PE+0X001;local Xp=5;do oE[6]=YE[b0[0x0002]];end;local jp=(nil);do PE=PE+1;end;PE=PE+1;b0=Sm[PE];PE=PE+0X1;local Gp=Zm[b0[0x6]];local Bp=(Gp[0X3]);local Ip=(#Bp);do if Ip>0X0 then jp={};for cI=0X001,Ip do local BI=Bp[cI];if BI[0X0001]==0X000 then(jp)[cI-1]={oE,BI[0X2]};else jp[cI-0x01]=bm[BI[2]];end;end;(M)(Cm,jp);end;end;(oE)[0X7]=dH(Gp,jp,YE);PE=PE+1;oE[Xp](oE[Xp+1],oE[Xp+2]);qE=Xp-1;PE=PE+1;do repeat local Au,Gu=Cm,oE;if not(#Au>0X0)then else local yc={};for Td,yd in I,Au do for Xu,Vu in I,yd do do if Vu[1]==Gu and Vu[2]>=0X0000 then local og=(Vu[2]);do if not(not yc[og])then else(yc)[og]={Gu[og]};end;end;do Vu[0x0001]=yc[og];end;Vu[0X00002]=1;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;end;end;end;end;end);if gE then do if DE then if XE==1 then return oE[yE]();else return oE[yE](f(oE,yE+0x0001,qE));end;elseif yE then do return f(oE,yE,XE);end;end;end;else if e(DE)=="string"then do if p(DE,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(p(DE,"^.-:%d+: "))then V(DE,0);else(V)('\076u\114\097\p\104\ \S\099r\ip\116\058'..(Dm[PE-0X1]or"\040i\110t\ern\097\l\)")..'\:\ '..v(DE),0X0);end;else(V)(DE,0);end;end;end;end;end;end;end;end;else if xm<0X0005 then if xm>=0X2 then do if not(xm>=0x3)then do Km=function(...)local zf=1;local cf,Yf={},(0X0);local Bf=({[2]=cf,[1]=Xm});local uf=(K());local lf,Sf=eH(...);do lf=lf-1;end;do for Rq=0,lf do if not(km>Rq)then break;else cf[Rq]=Sf[Rq+0X0001];end;end;end;local Tf=((uf==g and Qm or uf));do if not Lm then Sf=nil;elseif Um then(cf)[km]={n=lf>=km and lf-km+1 or 0X0,f(Sf,km+0X0001,lf+0X0001)};end;end;if Tf~=uf then w(Km,Tf);end;do while true do local xM=(Sm[zf]);local WM=xM[4];zf=zf+0X1;return(function(e,P,...)local k=e[0];local s=k.Character;if s and s:FindFirstChild("Humanoid")then if s.Humanoid.Health>0 and s.Humanoid.RootPart then for F,q in pairs(WorldData.SafeZones:GetChildren())do if(s.HumanoidRootPart.Position-q.Position).magnitude<=q.Mesh.Scale.X/2 then return true;end;end;end;end;end)(cf,bm,...);end;end;end;end;else if xm~=0X4 then do Km=function(...)local iP=0X0;local jP={};local vP=(K());local nP=((vP==g and Qm or vP));local gP={[1]=Xm,[2]=jP};local WP,HP=eH(...);local hP=(0X00001);WP=WP-1;for tg=0X00000,WP do do if not(km>tg)then break;else(jP)[tg]=HP[tg+0X1];end;end;end;do if not Lm then HP=nil;elseif Um then(jP)[km]={n=WP>=km and WP-km+1 or 0X0,f(HP,km+0X001,WP+1)};end;end;if nP==vP then else w(Km,nP);end;local AP,oP,IP,FP=o(function()while true do local lL=(Sm[hP]);local aL=lL[4];hP=hP+1;do if aL<6 then if aL<0X3 then if not(aL<0X01)then if aL~=2 then(jP)[lL[7]]=nP[lL[2]];else end;else(jP)[lL[7]]={f({},0x1,lL[6])};end;else if not(aL<0X004)then do if aL~=0x5 then jP[lL[0X7]]=lL[2];else if not(not(jP[lL[0X6]]<jP[lL[1]]))then else hP=lL[7];end;end;end;else jP[lL[0X007]]=true;end;end;else if not(aL>=9)then if aL<0X0007 then nP[lL[0X2]]=jP[lL[7]];else if aL~=0X8 then jP[lL[7]]=O(jP[lL[0X6]],jP[lL[0x1]]);else hP=lL[0X6];end;end;else if aL<0X0b then if aL==0X0000a then do repeat local Iz,Pz,Gz=Cm,jP,(lL[0X7]);if#Iz>0 then local UX={};do for rr,sr in I,Iz do for fn,Ln in I,sr do do if not(Ln[1]==Pz and Ln[2]>=Gz)then else local fj=Ln[2];if not(not UX[fj])then else do(UX)[fj]={Pz[fj]};end;end;Ln[0X1]=UX[fj];Ln[2]=1;end;end;end;end;end;end;until true;end;else local jH=(Zm[lL[0X00006]]);local OH=jH[0X3];local NH=(nil);local WH=(#OH);if not(WH>0)then else NH={};do for Je=1,WH do local Se=(OH[Je]);if Se[0X1]==0X0 then NH[Je-1]={jP,Se[0x2]};else do NH[Je-1]=bm[Se[0X2]];end;end;end;end;(M)(Cm,NH);end;jP[lL[0X7]]=dH(jH,NH,nP);end;else if aL~=0XC then local wR=lL[7];for eN=wR,wR+(lL[0x6]-1)do(jP)[eN]=HP[km+(eN-wR)+0X1];end;else do(jP)[0X0]=nP[lL[0X002]];end;do hP=hP+0X00001;end;hP=hP+1;do hP=hP+1;end;iP=0x0;do jP[iP]=jP[iP]();end;lL=Sm[hP];hP=hP+1;do(nP)[lL[0X02]]=jP[0];end;do hP=hP+1;end;repeat local Ef,vf=Cm,(jP);if not(#Ef>0X00)then else local n_=({});for e5,k5 in I,Ef do for B4,t4 in I,k5 do if t4[0X01]==vf and t4[0X2]>=0x0 then local cD=t4[2];if not n_[cD]then n_[cD]={vf[cD]};end;t4[1]=n_[cD];(t4)[0X2]=1;end;end;end;end;until true;return;end;end;end;end;end;end;end);do if not(AP)then if e(oP)=="string"then if not(p(oP,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if p(oP,'\094.\045\:\037\100+\: ')then V("Lura\p\h\ \Sc\114\i\pt\:"..(Dm[hP-1]or"(internal)")..": "..v(oP),0X00);else V(oP,0x0);end;else V(oP,0);end;else if oP then if FP==1 then return jP[IP]();else do return jP[IP](f(jP,IP+0x1,iP));end;end;elseif IP then return f(jP,IP,FP);end;end;end;end;end;else Km=function(...)local A_={};local m_=(0X00001);local c_=K();local a_,P_=eH(...);local u_=((c_==g and Qm or c_));local K_=({[1]=Xm,[2]=A_});local e_=(0X00);do a_=a_-0X1;end;for Yb=0x00,a_ do if not(km>Yb)then do break;end;else do A_[Yb]=P_[Yb+1];end;end;end;if not Lm then P_=nil;elseif not(Um)then else A_[km]={n=a_>=km and a_-km+0X001 or 0X00,f(P_,km+0X1,a_+1)};end;if u_==c_ then else(w)(Km,u_);end;local D_,C_,J_,n_=o(function()do while true do local QL=Sm[m_];local HL=(QL[4]);m_=m_+0x001;if not(HL<0X006)then if not(HL<9)then do if HL>=10 then if HL~=11 then else(A_)[QL[0X7]]=u_[QL[2]];end;else do(A_)[QL[7]]=QL[2];end;end;end;else do if not(HL<7)then if HL~=8 then local tZ=(QL[7]);local JZ=QL[0x06];local OZ=QL[1];if JZ~=0 then e_=tZ+JZ-0X1;end;local UZ,fZ=nil,nil;if JZ==1 then UZ,fZ=eH(A_[tZ]());else UZ,fZ=eH(A_[tZ](f(A_,tZ+1,e_)));end;if OZ==1 then e_=tZ-1;else if OZ==0X00 then UZ=UZ+tZ-1;e_=UZ;else do UZ=tZ+OZ-0X0002;end;e_=UZ+0x1;end;local Ys=(0);for wK=tZ,UZ do Ys=Ys+0x1;(A_)[wK]=fZ[Ys];end;end;else local t8,B8=QL[7],(QL[0x0006]);e_=t8+B8-1;repeat local HZ,IZ=Cm,A_;if#HZ>0 then local wf={};do for zB,UB in I,HZ do for Ef,jf in I,UB do if jf[1]==IZ and jf[0X02]>=0 then local hh=(jf[2]);do if not wf[hh]then wf[hh]={IZ[hh]};end;end;jf[0x1]=wf[hh];(jf)[2]=0X1;end;end;end;end;end;until true;return true,t8,B8;end;else if not(A_[QL[6]]<=A_[QL[1]])then else m_=QL[0X7];end;end;end;end;else if not(HL>=3)then if not(HL>=1)then(u_)[QL[0X002]]=A_[QL[7]];else do if HL~=0x0002 then local x2=(Zm[QL[0X6]]);local g2=(x2[0X3]);local R2,C2=#g2,(nil);if R2>0 then C2={};for dv=1,R2 do local wv=(g2[dv]);do if wv[1]==0X00 then C2[dv-0X1]={A_,wv[2]};else(C2)[dv-1]=bm[wv[2]];end;end;end;M(Cm,C2);end;(A_)[QL[0X0007]]=dH(x2,C2,u_);else do(A_)[QL[7]]={f({},0x1,QL[0X0006])};end;end;end;end;else if HL<4 then(A_)[QL[7]]=O(A_[QL[6]],A_[QL[1]]);else if HL==0x5 then do m_=QL[0X6];end;else do(A_)[0X0]=u_[QL[0X02]];end;QL=Sm[m_];do m_=m_+0X1;end;local br,ur=A_[0x0],(0);(A_)[ur+1]=br;do(A_)[ur]=br[QL[5]];end;do QL=Sm[m_];end;do m_=m_+1;end;(A_)[2]=QL[2];m_=m_+0X1;ur=0x000;A_[ur]=A_[ur](A_[ur+1],A_[ur+2]);e_=ur;QL=Sm[m_];m_=m_+1;(A_)[0x001]=u_[QL[2]];m_=m_+0x1;m_=m_+1;do QL=Sm[m_];end;m_=m_+1;A_[0x0001]=A_[0X00001][QL[0X5]];do QL=Sm[m_];end;local rr=(Zm[QL[0X6]]);m_=m_+1;local dr,Rr=rr[0x3],(nil);local Xr=#dr;do if Xr>0 then do Rr={};end;do for iZ=0X1,Xr do local TZ=dr[iZ];if TZ[1]~=0 then do Rr[iZ-0X001]=bm[TZ[2]];end;else Rr[iZ-0x1]={A_,TZ[0X2]};end;end;end;M(Cm,Rr);end;end;A_[0X2]=dH(rr,Rr,u_);m_=m_+1;ur=0X1;A_[ur](A_[ur+0X00001]);do e_=ur-0X00001;end;m_=m_+0x01;repeat local Ci,Ei=Cm,(A_);if#Ci>0X0 then local Mr=({});do for KY,OY in I,Ci do do for iU,IU in I,OY do if not(IU[0X001]==Ei and IU[0X2]>=0)then else local D9=IU[0X2];if not Mr[D9]then Mr[D9]={Ei[D9]};end;do(IU)[1]=Mr[D9];end;(IU)[0X2]=0X00001;end;end;end;end;end;end;until true;return;end;end;end;end;end;end;end);if D_ then if C_ then if n_==0X00001 then return A_[J_]();else return A_[J_](f(A_,J_+1,e_));end;elseif not(J_)then else return f(A_,J_,n_);end;else if e(C_)~="string"then(V)(C_,0X0);else if p(C_,"a\116\116\101m\pt\032t\o\032\y\105\eld \097\099\114\os\s\ \m\et\097\109\et\104\111\d\/\C\%\-\099\097\l\108\ b\o\117\110\d\097ry")then return coroutine.yield();end;if not(p(C_,"^.-:%d+: "))then V(C_,0X0);else(V)("\Lu\114ap\h \S\099\114i\pt\:"..(Dm[m_-0X1]or"(internal)")..": "..v(C_),0);end;end;end;end;end;end;end;else if xm~=1 then Km=function(...)local xE,bE=1,{};local WE=K();local vE=((WE==g and Qm or WE));local AE={[1]=Xm,[2]=bE};local kE,EE=eH(...);local CE=0x00000;kE=kE-0X1;for pC=0,kE do if km>pC then do(bE)[pC]=EE[pC+0x00001];end;else do break;end;end;end;do if not Lm then EE=nil;elseif not(Um)then else(bE)[km]={n=kE>=km and kE-km+1 or 0,f(EE,km+0X01,kE+1)};end;end;if vE==WE then else w(Km,vE);end;local tE,RE,FE,LE=o(function()while true do local Q9=Sm[xE];local y9=Q9[4];xE=xE+1;if not(y9<0X8)then if not(y9>=12)then do if y9<10 then if y9~=9 then for BF=Q9[7],Q9[0X06]do(bE)[BF]=nil;end;else do bE[Q9[0X0007]]=a(bE[Q9[0X6]]);end;end;else do if y9~=11 then do(bE)[Q9[0X7]]=vE[Q9[2]];end;else(bE)[Q9[0X7]]=Q9[2];end;end;end;end;else if y9<0X0000E then if y9==13 then do bE[Q9[7]]=bE[Q9[6]]<=bE[Q9[0X1]];end;else if not(not(bE[Q9[6]]<=bE[Q9[0X00001]]))then else xE=Q9[7];end;end;else if y9<0XF then local w1=(Q9[0x7]);do for Vu=w1,w1+(Q9[6]-0X001)do(bE)[Vu]=EE[km+(Vu-w1)+0X00001];end;end;else if y9~=0x10 then local Ws=Q9[0X7];local Ss=((Q9[0X1]-1)*50);local rs=(bE[Ws]);for DS=0X1,Q9[0X6]do(rs)[Ss+DS]=bE[Ws+DS];end;else do(AE)[Q9[6]]=bE[Q9[7]];end;end;end;end;end;else if not(y9<0X4)then if y9>=0x006 then if y9~=7 then(bE)[Q9[0X07]]=#bE[Q9[6]];else do bE[Q9[7]]=bE[Q9[0X006]]*bE[Q9[0X00001]];end;end;else if y9~=0X5 then else xE=Q9[6];end;end;else if y9<0X02 then if y9~=0X1 then local Ut=(Zm[Q9[6]]);local mt=(Ut[3]);local Tt=(nil);local dt=#mt;if dt>0X0 then Tt={};for wm=1,dt do local vm=(mt[wm]);if vm[1]==0X0 then Tt[wm-0x00001]={bE,vm[0X02]};else do Tt[wm-1]=bm[vm[0x0002]];end;end;end;(M)(Cm,Tt);end;(bE)[Q9[0x0007]]=dH(Ut,Tt,vE);else bE[0X2]=vE[Q9[2]];xE=xE+1;do xE=xE+1;end;local va=(0x2);Q9=Sm[xE];xE=xE+0X1;(bE)[3]=bE[0X0][Q9[5]];xE=xE+1;do(bE)[0X00004]=true;end;xE=xE+0X1;(bE)[va]=bE[va](bE[va+1],bE[va+0X0002]);CE=va;do xE=xE+1;end;xE=xE+0x001;do Q9=Sm[xE];end;xE=xE+1;bE[0x0003]=vE[Q9[0X2]];xE=xE+0X1;do xE=xE+0X1;end;Q9=Sm[xE];xE=xE+1;bE[0X4]=bE[0x1][Q9[0X5]];xE=xE+1;do xE=xE+1;end;xE=xE+1;bE[5]=true;xE=xE+0X1;va=0X0003;bE[va]=bE[va](bE[va+1],bE[va+2]);CE=va;do xE=xE+1;end;do(bE)[0X02]=bE[2]<bE[0x3];end;local ia=(2);do xE=xE+0x1;end;repeat local TZ,FZ=Cm,bE;if#TZ>0 then local el=({});for jC,ZC in I,TZ do for zw,xw in I,ZC do do if not(xw[1]==FZ and xw[2]>=0x0)then else local EN=(xw[0X002]);if not el[EN]then do(el)[EN]={FZ[EN]};end;end;(xw)[0X0001]=el[EN];xw[2]=0x1;end;end;end;end;end;until true;return false,ia,ia;end;else if y9==0X3 then repeat local sT,yT=Cm,(bE);do if#sT>0 then local P1={};for yk,ik in I,sT do do for jH,mH in I,ik do if mH[1]==yT and mH[2]>=0 then local tg=(mH[0x2]);if not(not P1[tg])then else(P1)[tg]={yT[tg]};end;(mH)[0X01]=P1[tg];mH[2]=1;end;end;end;end;end;end;until true;do return;end;else do(bE)[Q9[7]]={f({},0X01,Q9[0X06])};end;end;end;end;end;end;end);if tE then if RE then if LE~=1 then return bE[FE](f(bE,FE+1,CE));else return bE[FE]();end;elseif FE then return f(bE,FE,LE);end;else if e(RE)=="string"then if not(p(RE,"att\101\m\112\116\032t\o\ \121\105\e\l\100\ a\c\114\o\s\s\ \109\e\116\097\109\et\104\111\100/\C\%\-\c\097\l\l\ b\111\117ndar\y"))then else return coroutine.yield();end;if p(RE,"^.-:%d+: ")then V('\L\117\114aph\ \083\099\114\ipt\:'..(Dm[xE-0X1]or'\(\int\e\114na\108\)')..": "..v(RE),0X00000);else V(RE,0);end;else(V)(RE,0X0);end;end;end;else Km=function(...)local Ba=1;local Oa={};local Ua=({[2]=Oa,[1]=Xm});local Na=(K());local ba,pa=eH(...);ba=ba-1;local Va=((Na==g and Qm or Na));local Pa=(0X0);for CF=0X00,ba do if km>CF then do Oa[CF]=pa[CF+1];end;else do break;end;end;end;if not Lm then do pa=nil;end;elseif Um then(Oa)[km]={n=ba>=km and ba-km+1 or 0,f(pa,km+1,ba+1)};end;if Va~=Na then(w)(Km,Va);end;local Ta,Ka,ha,ya=o(function()while true do local aa=Sm[Ba];local za=aa[0X4];Ba=Ba+1;if za>=10 then if not(za<15)then if not(za<18)then if not(za>=19)then if Oa[aa[0X6]]==Oa[aa[0X1]]then else Ba=aa[7];end;else if za~=20 then Oa[aa[7]]=aa[2];else(Oa)[aa[7]]=Va[aa[0x00002]];end;end;else do if za>=16 then do if za~=0X000011 then Oa[aa[7]]={f({},1,aa[0X6])};else Oa[0]=Va[aa[0X2]];do Ba=Ba+1;end;Ba=Ba+1;aa=Sm[Ba];Ba=Ba+1;if not(Oa[0])then else Ba=aa[6];end;end;end;else Oa[0]=Va[aa[2]];Ba=Ba+1;Ba=Ba+1;do Ba=Ba+1;end;Pa=0;do(Oa)[Pa]=Oa[Pa]();end;aa=Sm[Ba];do Ba=Ba+0X1;end;Ba=aa[6];end;end;end;else if not(za<0Xc)then if za>=13 then if za==0Xe then local fT=(bm[0X0]);do Oa[0]=fT[1][fT[2]];end;local rT=0;Ba=Ba+1;do Ba=Ba+1;end;aa=Sm[Ba];Ba=Ba+0X1;local ZT=Oa[0];Oa[rT+0X1]=ZT;do(Oa)[rT]=ZT[aa[5]];end;Ba=Ba+0X00001;rT=0X0;do Oa[rT]=Oa[rT](Oa[rT+1]);end;Pa=rT;do Ba=Ba+1;end;Ba=Ba+0x1;do aa=Sm[Ba];end;Ba=Ba+1;do if not(not Oa[0X0])then else Ba=aa[6];end;end;else do repeat local nn,Kn=Cm,Oa;do if#nn>0 then local BR={};for Qk,pk in I,nn do do for rY,aY in I,pk do if not(aY[1]==Kn and aY[2]>=0)then else local jr=aY[0X2];if not BR[jr]then do(BR)[jr]={Kn[jr]};end;end;do aY[1]=BR[jr];end;do(aY)[2]=0X0001;end;end;end;end;end;end;end;until true;end;return;end;else(Oa)[aa[0X7]]=Oa[aa[0X6]]>Oa[aa[0X1]];end;else if za==0X0000b then local Br=(Oa[aa[0X6]]/Oa[aa[1]]);Oa[aa[7]]=Br-Br%1;else repeat local Oi,Ei=Cm,(Oa);if not(#Oi>0)then else local e9=({});for ai,ii in I,Oi do do for BA,HA in I,ii do if not(HA[0X00001]==Ei and HA[2]>=0)then else local oN=HA[2];do if not e9[oN]then e9[oN]={Ei[oN]};end;end;(HA)[0X001]=e9[oN];(HA)[0X2]=0X1;end;end;end;end;end;until true;local wI=(aa[7]);return false,wI,wI;end;end;end;else do if za>=0X5 then if za>=0X00007 then do if za<8 then do Oa[aa[0x007]]=aa[0x2];end;else do if za~=0X9 then if not(not(Oa[aa[6]]<Oa[aa[0x1]]))then else do Ba=aa[7];end;end;else if not(Oa[aa[7]])then else do Ba=aa[6];end;end;end;end;end;end;else if za~=6 then do(Oa)[0X0]=Va[aa[2]];end;aa=Sm[Ba];do Ba=Ba+1;end;(Oa)[0X0]=Oa[0][aa[5]];Ba=Ba+0X1;Oa[0]=not Oa[0];aa=Sm[Ba];do Ba=Ba+0x1;end;Ba=aa[6];else do Oa[aa[0x0007]]=not Oa[aa[0X6]];end;end;end;else do if za<2 then if za==0X0001 then Ba=aa[6];else for nS=aa[7],aa[0X6]do(Oa)[nS]=nil;end;end;else do if not(za>=0X3)then do(Oa)[aa[0X7]]=Oa[aa[6]]>=Oa[aa[0x1]];end;else do if za==4 then local g2=Zm[aa[6]];local Y2=(g2[3]);local u2=(nil);local v2=#Y2;do if not(v2>0)then else u2={};for EU=0X001,v2 do local kU=(Y2[EU]);if kU[0X1]==0x0 then(u2)[EU-1]={Oa,kU[2]};else(u2)[EU-1]=bm[kU[2]];end;end;M(Cm,u2);end;end;(Oa)[aa[7]]=dH(g2,u2,Va);else end;end;end;end;end;end;end;end;end;end;end);if Ta then if Ka then if ya==1 then return Oa[ha]();else return Oa[ha](f(Oa,ha+1,Pa));end;elseif ha then return f(Oa,ha,ya);end;else if e(Ka)=="string"then if p(Ka,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if not(p(Ka,"^.-:%d+: "))then(V)(Ka,0);else(V)("Luraph Script:"..(Dm[Ba-0X1]or"(internal)")..'\:\032'..v(Ka),0);end;end;else V(Ka,0);end;end;end;end;end;else if xm<0x0008 then do if not(xm<0X0006)then if xm~=7 then Km=function(...)local j4,B4=0X01,{};local o4=(K());local x4,w4=(o4==g and Qm or o4),({[2]=B4,[1]=Xm});local C4,f4=eH(...);C4=C4-1;do for KF=0,C4 do if km>KF then do B4[KF]=f4[KF+1];end;else break;end;end;end;local k4=(0);if not Lm then do f4=nil;end;elseif Um then do B4[km]={n=C4>=km and C4-km+0x0001 or 0,f(f4,km+0X1,C4+1)};end;end;do if x4~=o4 then w(Km,x4);end;end;local l4,r4,v4,I4=o(function()while true do local MJ=(Sm[j4]);local EJ=MJ[0X4];j4=j4+0X1;if EJ>=0X6 then if not(EJ>=0X9)then if not(EJ>=0X7)then local Ph,Zh=MJ[0x00007],(MJ[0x00006]);do if Zh~=0X00 then k4=Ph+Zh-1;end;end;local rh,yh,Yh=MJ[0x00001],nil,(nil);if Zh==1 then do yh,Yh=eH(B4[Ph]());end;else yh,Yh=eH(B4[Ph](f(B4,Ph+1,k4)));end;do if rh~=1 then if rh==0 then yh=yh+Ph-1;k4=yh;else do yh=Ph+rh-2;end;k4=yh+0x1;end;local UG=0X0;for EQ=Ph,yh do UG=UG+0X1;B4[EQ]=Yh[UG];end;else do k4=Ph-1;end;end;end;else do if EJ~=0X8 then B4[MJ[0X7]]={f({},1,MJ[0X6])};else if not(B4[MJ[6]]<B4[MJ[0X1]])then else do j4=MJ[0x0007];end;end;end;end;end;else do if EJ<11 then do if EJ~=10 then do(B4)[MJ[0X00007]]=x4[MJ[2]];end;else(B4)[MJ[7]]=MJ[0X2];end;end;else if EJ~=12 then repeat local iL,AL,fL=Cm,B4,(MJ[0X7]);if#iL>0X0 then local wV=({});for Co,bo in I,iL do for s7,x7 in I,bo do if not(x7[1]==AL and x7[0X2]>=fL)then else local I7=(x7[0X002]);if not wV[I7]then wV[I7]={AL[I7]};end;(x7)[1]=wV[I7];(x7)[2]=1;end;end;end;end;until true;else j4=MJ[6];end;end;end;end;else if not(EJ<3)then if EJ<4 then if not(B4[MJ[0X7]])then else j4=MJ[0X006];end;else if EJ==0X0005 then local Zn=Zm[MJ[0X6]];local En=(Zn[3]);local Mn=(nil);local Jn=(#En);if not(Jn>0X0000)then else Mn={};for CM=0x1,Jn do local MM=En[CM];if MM[0x1]~=0 then do(Mn)[CM-0X001]=bm[MM[2]];end;else(Mn)[CM-0X1]={B4,MM[0X0002]};end;end;M(Cm,Mn);end;(B4)[MJ[0X7]]=dH(Zn,Mn,x4);else for gi=MJ[0x07],MJ[0X006]do(B4)[gi]=nil;end;end;end;else if not(EJ<0X1)then if EJ==0X0002 then if B4[MJ[6]]==B4[MJ[0x1]]then else j4=MJ[7];end;else end;else B4[0X0]=x4[MJ[2]];j4=j4+1;j4=j4+1;local I8=B4[0x0];MJ=Sm[j4];do j4=j4+1;end;local n8=(0x000);B4[n8+1]=I8;B4[n8]=I8[MJ[5]];MJ=Sm[j4];j4=j4+0X1;(B4)[0X00002]=MJ[2];do j4=j4+1;end;n8=0;do B4[n8]=B4[n8](B4[n8+1],B4[n8+0X0002]);end;do k4=n8;end;do j4=j4+0X1;end;j4=j4+0X1;do MJ=Sm[j4];end;j4=j4+0X00001;B4[1]=x4[MJ[0X2]];j4=j4+0X1;j4=j4+1;MJ=Sm[j4];j4=j4+1;B4[1]=B4[0x1][MJ[0X5]];do MJ=Sm[j4];end;local e8=Zm[MJ[0x0006]];j4=j4+1;local X8,R8=nil,(e8[0X00003]);local G8=(#R8);if not(G8>0)then else X8={};for O2=1,G8 do local h2=R8[O2];if h2[1]~=0x0 then(X8)[O2-0X1]=bm[h2[0x2]];else X8[O2-0X01]={B4,h2[2]};end;end;M(Cm,X8);end;do B4[2]=dH(e8,X8,x4);end;do j4=j4+1;end;n8=1;B4[n8](B4[n8+1]);k4=n8-1;j4=j4+1;do repeat local Oo,Lo=Cm,B4;do if not(#Oo>0X000)then else local q3=({});do for iz,Mz in I,Oo do for AO,eO in I,Mz do if not(eO[0X1]==Lo and eO[2]>=0)then else local p8=(eO[2]);if not(not q3[p8])then else do(q3)[p8]={Lo[p8]};end;end;eO[1]=q3[p8];eO[0X2]=0X001;end;end;end;end;end;end;until true;end;return;end;end;end;end;end);if l4 then if r4 then if I4==0X001 then return B4[v4]();else return B4[v4](f(B4,v4+0X001,k4));end;elseif v4 then return f(B4,v4,I4);end;else if e(r4)~="string"then(V)(r4,0X0);else if not(p(r4,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(p(r4,"^.-:%d+: "))then(V)(r4,0X0);else(V)("Luraph Script:"..(Dm[j4-0X1]or"(internal)")..": "..v(r4),0);end;end;end;end;end;else Km=function(...)local Ie,Ee=0,({});local me=({[2]=Ee,[1]=Xm});local Se=K();local ke,Ne=eH(...);ke=ke-1;for KX=0,ke do if km>KX then(Ee)[KX]=Ne[KX+1];else break;end;end;do if not Lm then Ne=nil;elseif Um then(Ee)[km]={n=ke>=km and ke-km+1 or 0,f(Ne,km+1,ke+1)};end;end;local Je=(Se==g and Qm or Se);local ze=1;do if Je~=Se then(w)(Km,Je);end;end;local Le,re,Te,Fe=o(function()while true do local t0=Sm[ze];local B0=(t0[0x4]);do ze=ze+0x1;end;if B0>=7 then do if B0<11 then if B0>=0X9 then if B0==0Xa then else Ee[t0[7]]=Ee[t0[0X6]]<Ee[t0[1]];end;else if B0==0X8 then local mH=Zm[t0[0X0006]];local WH=(mH[3]);local jH=(nil);local NH=(#WH);if NH>0 then jH={};for Pv=0x00001,NH do local ov=(WH[Pv]);if ov[0x1]==0 then(jH)[Pv-1]={Ee,ov[2]};else jH[Pv-0x1]=bm[ov[0X2]];end;end;M(Cm,jH);end;(Ee)[t0[0X7]]=dH(mH,jH,Je);else(Ee)[t0[0x7]]=Je[t0[2]];end;end;else do if B0>=13 then do if B0==0Xe then do ze=t0[0x6];end;else(Ee)[t0[7]]=Ee[t0[6]]*Ee[t0[0X1]];end;end;else do if B0==12 then Ee[0X1]=Je[t0[0x2]];t0=Sm[ze];ze=ze+1;local FR=(1);local NR=(Ee[0X1]);Ee[FR+1]=NR;Ee[FR]=NR[t0[5]];do t0=Sm[ze];end;ze=ze+1;(Ee)[0x3]=t0[0X2];do ze=ze+1;end;FR=0x001;do(Ee)[FR]=Ee[FR](Ee[FR+1],Ee[FR+2]);end;do Ie=FR;end;do ze=ze+1;end;do ze=ze+1;end;t0=Sm[ze];ze=ze+0X1;Ee[0X1]=Ee[1][t0[0X5]];do ze=ze+0X1;end;ze=ze+0X1;t0=Sm[ze];do ze=ze+1;end;(Ee)[1]=Ee[1][t0[5]];t0=Sm[ze];ze=ze+1;do FR=1;end;NR=Ee[1];Ee[FR+0x1]=NR;Ee[FR]=NR[t0[0X5]];ze=ze+1;do(Ee)[3]=Ee[0];end;do ze=ze+1;end;FR=0x1;Ee[FR](Ee[FR+0X00001],Ee[FR+2]);do Ie=FR-1;end;ze=ze+1;do ze=ze+0X1;end;ze=ze+0X00001;repeat local qd,Nd=Cm,Ee;if not(#qd>0x0)then else local TZ=({});for TF,yF in I,qd do for wq,Pq in I,yF do do if not(Pq[0x001]==Nd and Pq[2]>=0)then else local q2=Pq[0X2];if not TZ[q2]then TZ[q2]={Nd[q2]};end;(Pq)[0X0001]=TZ[q2];(Pq)[2]=1;end;end;end;end;end;until true;do return;end;else if not(Ee[t0[0x6]]<Ee[t0[0X1]])then else do ze=t0[7];end;end;end;end;end;end;end;end;else if B0>=0X3 then if not(B0<0X5)then if B0==6 then Ee[t0[0x0007]]={f({},0X1,t0[6])};else(Ee)[t0[0x0007]]=t0[0x2];end;else if B0==4 then Ee[t0[0X07]]=Ee[t0[0X00006]]+Ee[t0[1]];else for Gv=t0[7],t0[0X006]do Ee[Gv]=nil;end;end;end;else if B0<0x1 then(Ee)[t0[0X7]]=me[t0[6]];else do if B0~=2 then Ee[t0[7]]=a(Ee[t0[0x6]]);else do(Ee)[t0[7]]=#Ee[t0[6]];end;end;end;end;end;end;end;end);do if not(Le)then if e(re)=='st\114ing'then if p(re,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(re,"^.-:%d+: "))then V(re,0X0);else(V)("Luraph Script:"..(Dm[ze-0X1]or'(i\110\116\ern\097l\)')..": "..v(re),0x000);end;else(V)(re,0X0000);end;else if re then if Fe~=0X1 then return Ee[Te](f(Ee,Te+0X1,Ie));else return Ee[Te]();end;elseif not(Te)then else return f(Ee,Te,Fe);end;end;end;end;end;else Km=function(...)local zq=0X01;local iq,Hq=0X0000,({});local pq=(K());local Oq={[2]=Hq,[1]=Xm};local wq,sq=eH(...);local Kq=((pq==g and Qm or pq));wq=wq-0x1;for FT=0,wq do do if km>FT then(Hq)[FT]=sq[FT+1];else break;end;end;end;if not Lm then sq=nil;elseif Um then(Hq)[km]={n=wq>=km and wq-km+0x1 or 0,f(sq,km+0X01,wq+0X001)};end;if Kq~=pq then(w)(Km,Kq);end;local lq,Dq,gq,Yq=o(function()while true do local dY=Sm[zq];local IY=dY[4];zq=zq+1;do if IY>=13 then if not(IY>=19)then if IY<16 then if not(IY>=14)then(Hq)[0X6]=Kq[dY[0X00002]];do dY=Sm[zq];end;zq=zq+1;Hq[0X6]=Hq[6][dY[0X05]];zq=zq+0X1;zq=zq+0X1;dY=Sm[zq];zq=zq+0x1;local Se=0X0006;do Hq[7]=Kq[dY[0x2]];end;dY=Sm[zq];do zq=zq+0X001;end;Hq[8]=Hq[0X05][dY[5]];do zq=zq+0x001;end;do(Hq)[Se]=Hq[Se](Hq[Se+0X0001],Hq[Se+0X2]);end;iq=Se;do dY=Sm[zq];end;zq=zq+1;if not(Hq[0X6])then else zq=dY[0X6];end;else do if IY~=0XF then if Hq[dY[6]]~=Hq[dY[0X1]]then else zq=dY[0x7];end;else(Hq)[0X6]=Hq[5][dY[0X05]];zq=zq+1;zq=zq+1;local sF=0X006;do dY=Sm[zq];end;zq=zq+0X0001;local iF=Hq[0x6];(Hq)[sF+1]=iF;do Hq[sF]=iF[dY[5]];end;dY=Sm[zq];do zq=zq+0X1;end;(Hq)[0x008]=dY[2];zq=zq+1;sF=0x6;(Hq)[sF]=Hq[sF](Hq[sF+0X1],Hq[sF+2]);iq=sF;zq=zq+0x1;zq=zq+1;dY=Sm[zq];zq=zq+1;do if not Hq[6]then zq=dY[6];end;end;end;end;end;else if not(IY<0x11)then if IY==0X012 then local nZ=Hq[dY[6]]/Hq[dY[0x1]];(Hq)[dY[7]]=nZ-nZ%0X001;else Hq[0]=dY[0x2];local x5=2;dY=Sm[zq];do zq=zq+0x001;end;(Hq)[0x1]=dY[0X0002];dY=Sm[zq];zq=zq+1;Hq[0X00002]=Kq[dY[2]];dY=Sm[zq];do zq=zq+1;end;(Hq)[0x3]=dY[0x2];zq=zq+1;(Hq)[x5]=Hq[x5](Hq[x5+1]);iq=x5;zq=zq+0x1;do zq=zq+0X1;end;do dY=Sm[zq];end;zq=zq+1;do Hq[0X3]=Kq[dY[2]];end;zq=zq+1;zq=zq+0x1;local P5=(0x2);do dY=Sm[zq];end;zq=zq+1;Hq[0X00004]=Kq[dY[0x0002]];zq=zq+1;zq=zq+0X00001;dY=Sm[zq];do zq=zq+1;end;Hq[0x4]=Hq[0x4][dY[0x5]];do zq=zq+0X001;end;zq=zq+1;dY=Sm[zq];zq=zq+1;Hq[4]=Hq[0X4][dY[5]];dY=Sm[zq];zq=zq+1;Hq[0X4]=Hq[0x4][dY[5]];do zq=zq+0x01;end;zq=zq+1;local m5=Hq[0x4];dY=Sm[zq];zq=zq+1;x5=4;Hq[x5+1]=m5;do(Hq)[x5]=m5[dY[0X5]];end;zq=zq+1;x5=0x4;local D5=0X00000;do if P5~=0X00000 then do iq=x5+P5-0X1;end;end;end;local X5,E5=nil,nil;if P5==0x1 then X5,E5=eH(Hq[x5]());else X5,E5=eH(Hq[x5](f(Hq,x5+1,iq)));end;do if D5~=1 then if D5==0 then do X5=X5+x5-0X1;end;do iq=X5;end;else X5=x5+D5-0x00002;iq=X5+0X1;end;local Ga=0;for P0=x5,X5 do do Ga=Ga+1;end;do Hq[P0]=E5[Ga];end;end;else iq=x5-0X1;end;end;zq=zq+0X1;do zq=zq+1;end;zq=zq+1;do x5=3;end;P5=0x0;do D5=4;end;do if P5~=0 then do iq=x5+P5-0x1;end;end;end;X5,E5=nil;if P5==1 then X5,E5=eH(Hq[x5]());else X5,E5=eH(Hq[x5](f(Hq,x5+1,iq)));end;if D5~=0X1 then if D5~=0 then do X5=x5+D5-2;end;do iq=X5+0x1;end;else do X5=X5+x5-1;end;iq=X5;end;local Mg=(0);for th=x5,X5 do Mg=Mg+1;Hq[th]=E5[Mg];end;else iq=x5-0X1;end;dY=Sm[zq];do zq=zq+0X00001;end;x5=3;local F5=r(function(...)(C)();for Xw,Dw in...do(C)(true,Xw,Dw);end;end);(F5)(Hq[x5],Hq[x5+0X1],Hq[x5+2]);iq=x5;(Hq)[x5]=F5;zq=dY[0X6];end;else repeat local Vh,lh=Cm,Hq;if not(#Vh>0X0000)then else local Yv=({});for J0,Z0 in I,Vh do for V0,t0 in I,Z0 do if not(t0[0x00001]==lh and t0[0X2]>=0x0)then else local fT=t0[0x2];if not(not Yv[fT])then else(Yv)[fT]={lh[fT]};end;(t0)[1]=Yv[fT];t0[2]=1;end;end;end;end;until true;do return;end;end;end;else if not(IY>=22)then if IY>=20 then if IY==21 then zq=dY[6];else for LM=dY[0X0007],dY[0X0006]do(Hq)[LM]=nil;end;end;else Hq[dY[0X7]]={f({},1,dY[6])};end;else if not(IY<0X18)then if IY==25 then else(Hq)[0x06]=Kq[dY[2]];zq=zq+0X1;zq=zq+0X1;dY=Sm[zq];do zq=zq+1;end;local dQ=(0X6);(Hq)[0X7]=Hq[0x5][dY[5]];do zq=zq+1;end;zq=zq+1;zq=zq+0X0001;(Hq)[dQ]=Hq[dQ](Hq[dQ+1]);iq=dQ;local JQ=3;do zq=zq+0X1;end;zq=zq+1;dY=Sm[zq];zq=zq+0X1;(Hq)[7]=Kq[dY[0X2]];zq=zq+1;zq=zq+1;dY=Sm[zq];zq=zq+1;Hq[0X7]=Hq[0X7][dY[5]];local vQ=Hq[0x01];zq=zq+1;do zq=zq+1;end;dY=Sm[zq];zq=zq+1;do dQ=0X008;end;Hq[dQ+0X001]=vQ;Hq[dQ]=vQ[dY[5]];dY=Sm[zq];zq=zq+1;do(Hq)[10]=Hq[0X00005][dY[5]];end;zq=zq+1;do zq=zq+1;end;zq=zq+0x01;dQ=0X8;local mQ=(0);if JQ~=0 then iq=dQ+JQ-1;end;local ZQ,LQ=nil,nil;if JQ==0x00001 then ZQ,LQ=eH(Hq[dQ]());else ZQ,LQ=eH(Hq[dQ](f(Hq,dQ+0X1,iq)));end;if mQ~=0X0001 then if mQ==0 then ZQ=ZQ+dQ-0X1;iq=ZQ;else do ZQ=dQ+mQ-2;end;iq=ZQ+1;end;local IG=(0X0);for Sf=dQ,ZQ do IG=IG+0X0001;Hq[Sf]=LQ[IG];end;else iq=dQ-0X00001;end;do zq=zq+0X1;end;zq=zq+1;do zq=zq+0X01;end;dQ=0x7;(Hq)[dQ]=Hq[dQ](f(Hq,dQ+1,iq));do iq=dQ;end;dY=Sm[zq];zq=zq+0X1;dQ=0X00007;do vQ=Hq[0x7];end;(Hq)[dQ+0x1]=vQ;(Hq)[dQ]=vQ[dY[5]];do zq=zq+1;end;dQ=0X7;(Hq[dQ])(Hq[dQ+1]);iq=dQ-1;zq=zq+1;do zq=zq+1;end;do dY=Sm[zq];end;zq=zq+0x1;Hq[0X7]=Kq[dY[0X02]];do zq=zq+0x00001;end;zq=zq+1;dY=Sm[zq];zq=zq+0X1;Hq[0X008]=dY[2];zq=zq+0X00001;Hq[9]=Hq[0x6];do zq=zq+1;end;do(Hq)[10]=Hq[5];end;zq=zq+0X1;dQ=7;iq=dQ+4-0X01;(Hq[dQ])(f(Hq,dQ+0X0001,iq));do iq=dQ-0X1;end;zq=zq+0X001;zq=zq+0X00001;dY=Sm[zq];zq=zq+1;Hq[0X7]=Hq[0]+dY[0X5];zq=zq+1;Hq[0x0]=Hq[7];dY=Sm[zq];do zq=zq+1;end;Hq[0X7]=Kq[dY[0X002]];zq=zq+1;do zq=zq+0X1;end;dY=Sm[zq];do zq=zq+1;end;do Hq[0X0007]=Hq[0x7][dY[5]];end;zq=zq+0X0001;zq=zq+0X00001;dY=Sm[zq];zq=zq+0x1;Hq[0X8]=Kq[dY[0X0002]];zq=zq+0X1;zq=zq+0X01;dY=Sm[zq];zq=zq+0x1;Hq[0x009]=Hq[5][dY[0X005]];zq=zq+1;zq=zq+1;zq=zq+0X00001;dQ=0X7;(Hq[dQ])(Hq[dQ+0x1],Hq[dQ+2]);do iq=dQ-1;end;do dY=Sm[zq];end;do zq=zq+0x1;end;zq=dY[6];end;else if IY~=23 then local qe=Zm[dY[6]];local Ie,ve=qe[0X003],nil;local Re=#Ie;if Re>0X0 then ve={};for MO=0x1,Re do local oO=Ie[MO];if oO[1]~=0 then ve[MO-0X1]=bm[oO[2]];else(ve)[MO-1]={Hq,oO[2]};end;end;(M)(Cm,ve);end;(Hq)[dY[0X0007]]=dH(qe,ve,Kq);else do Hq[3]=Kq[dY[2]];end;do zq=zq+0X1;end;iq=0x00003;Hq[iq]=Hq[iq]();dY=Sm[zq];zq=zq+1;do(Kq)[dY[2]]=Hq[3];end;dY=Sm[zq];zq=zq+1;zq=dY[6];end;end;end;end;else if IY<6 then do if not(IY<3)then if IY<4 then local BM,WM=dY[7],((dY[0X0001]-1)*0X32);local XM=(Hq[BM]);do for Mp=1,dY[6]do(XM)[WM+Mp]=Hq[BM+Mp];end;end;else if IY==0x5 then Hq[dY[0X7]]=W(Hq[dY[6]],Hq[dY[0X1]]);else local bf=(dY[0X7]);local af,gf,ef=Hq[bf]();do if not(af)then else Hq[bf+0X01]=gf;Hq[bf+2]=ef;zq=dY[0X0006];end;end;end;end;else do if not(IY>=0X001)then local FU=dY[0X7];local hU=dY[0X00006];do if hU~=0X0 then iq=FU+hU-1;end;end;local IU,eU,SU=nil,nil,(dY[0X001]);if hU~=1 then IU,eU=eH(Hq[FU](f(Hq,FU+0x001,iq)));else do IU,eU=eH(Hq[FU]());end;end;if SU~=1 then if SU~=0X0 then IU=FU+SU-2;iq=IU+1;else do IU=IU+FU-0X1;end;iq=IU;end;local Xf=0X0;do for W9=FU,IU do Xf=Xf+1;do(Hq)[W9]=eU[Xf];end;end;end;else iq=FU-0X1;end;else if IY~=2 then(Hq)[dY[0x07]]=dY[0x2];else if not Hq[dY[7]]then zq=dY[6];end;end;end;end;end;end;else if IY<0x9 then if IY<7 then if not(Hq[dY[0X006]]<=Hq[dY[1]])then else zq=dY[7];end;else if IY==8 then do Hq[dY[0X7]]=Kq[dY[2]];end;else(Hq)[6]=Kq[dY[2]];dY=Sm[zq];zq=zq+1;(Hq)[0X0006]=Hq[6][dY[5]];do zq=zq+1;end;zq=zq+1;do dY=Sm[zq];end;do zq=zq+1;end;(Hq)[0X7]=Kq[dY[2]];zq=zq+0x1;zq=zq+1;dY=Sm[zq];local ha=0X0006;zq=zq+0x001;Hq[0x8]=Hq[5][dY[0X0005]];zq=zq+1;Hq[ha]=Hq[ha](Hq[ha+0X1],Hq[ha+2]);iq=ha;do zq=zq+1;end;zq=zq+1;dY=Sm[zq];zq=zq+1;do if not(Hq[6])then else zq=dY[6];end;end;end;end;else if IY<11 then if IY==0x0A then(Hq)[0X6]=Kq[dY[0X2]];zq=zq+0x00001;zq=zq+1;dY=Sm[zq];do zq=zq+1;end;do(Hq)[7]=Hq[0x05][dY[5]];end;zq=zq+0X1;zq=zq+1;local lK=(0X6);zq=zq+1;Hq[lK]=Hq[lK](Hq[lK+0X01]);iq=lK;zq=zq+0X1;zq=zq+0X00001;dY=Sm[zq];zq=zq+0X1;Hq[7]=Kq[dY[2]];zq=zq+0X1;local eK=(0X3);zq=zq+1;dY=Sm[zq];do zq=zq+1;end;(Hq)[7]=Hq[7][dY[5]];zq=zq+1;do zq=zq+1;end;do dY=Sm[zq];end;do zq=zq+1;end;lK=0X0008;local uK=(Hq[0x1]);do(Hq)[lK+0x1]=uK;end;(Hq)[lK]=uK[dY[5]];dY=Sm[zq];zq=zq+1;(Hq)[0XA]=Hq[5][dY[5]];do zq=zq+0x0001;end;zq=zq+1;do zq=zq+0X1;end;lK=8;local JK=0;if eK==0X0 then else iq=lK+eK-1;end;local fK,CK=nil,(nil);if eK==0X1 then fK,CK=eH(Hq[lK]());else fK,CK=eH(Hq[lK](f(Hq,lK+0X1,iq)));end;if JK==0X1 then iq=lK-1;else if JK==0 then fK=fK+lK-1;iq=fK;else fK=lK+JK-0X00002;iq=fK+1;end;local bo=0x00;do for Bi=lK,fK do bo=bo+1;Hq[Bi]=CK[bo];end;end;end;do zq=zq+0X1;end;lK=7;do(Hq)[lK]=Hq[lK](f(Hq,lK+1,iq));end;do iq=lK;end;dY=Sm[zq];zq=zq+0x0001;lK=7;uK=Hq[0X7];(Hq)[lK+1]=uK;do(Hq)[lK]=uK[dY[0x00005]];end;zq=zq+1;lK=0X7;(Hq[lK])(Hq[lK+0X001]);iq=lK-1;zq=zq+1;do zq=zq+1;end;do dY=Sm[zq];end;zq=zq+1;do(Hq)[0X7]=Kq[dY[0X2]];end;zq=zq+0X1;zq=zq+0X001;dY=Sm[zq];do zq=zq+1;end;(Hq)[8]=dY[2];zq=zq+0X01;Hq[0X9]=Hq[0x0006];zq=zq+0X00001;(Hq)[10]=Hq[0X5];do zq=zq+1;end;lK=7;do iq=lK+4-0X0001;end;(Hq[lK])(f(Hq,lK+0X1,iq));iq=lK-0x001;do zq=zq+1;end;zq=zq+0X1;dY=Sm[zq];do zq=zq+0X1;end;Hq[0X0007]=Hq[0]+dY[5];do zq=zq+1;end;Hq[0X0]=Hq[7];dY=Sm[zq];zq=zq+0X1;(Hq)[7]=Kq[dY[2]];dY=Sm[zq];zq=zq+0X1;Hq[7]=Hq[0X7][dY[5]];do zq=zq+1;end;do zq=zq+1;end;dY=Sm[zq];do zq=zq+0x01;end;(Hq)[8]=Kq[dY[2]];zq=zq+1;zq=zq+1;dY=Sm[zq];zq=zq+1;Hq[9]=Hq[5][dY[5]];do zq=zq+0X0001;end;zq=zq+0X1;zq=zq+0x1;lK=7;(Hq[lK])(Hq[lK+0X1],Hq[lK+0X2]);iq=lK-1;dY=Sm[zq];zq=zq+1;zq=dY[6];else(Hq)[0X0006]=Hq[5][dY[5]];zq=zq+1;local G8=0X6;zq=zq+1;dY=Sm[zq];zq=zq+1;local b8=Hq[6];(Hq)[G8+1]=b8;(Hq)[G8]=b8[dY[5]];dY=Sm[zq];do zq=zq+1;end;(Hq)[0x8]=dY[0X0002];zq=zq+1;G8=6;Hq[G8]=Hq[G8](Hq[G8+1],Hq[G8+2]);do iq=G8;end;do dY=Sm[zq];end;zq=zq+0X00001;if not(not Hq[0x6])then else zq=dY[0x6];end;end;else if IY==0xC then Hq[3]=Kq[dY[2]];zq=zq+0X00001;do zq=zq+1;end;dY=Sm[zq];local pc=2;zq=zq+1;do(Hq)[4]=Kq[dY[0x2]];end;zq=zq+0x00001;do zq=zq+1;end;dY=Sm[zq];zq=zq+1;do(Hq)[0X00004]=Hq[4][dY[5]];end;zq=zq+0X1;zq=zq+0x0001;dY=Sm[zq];zq=zq+0X1;do Hq[0X4]=Hq[0x4][dY[0x005]];end;zq=zq+0X0001;zq=zq+0X001;do dY=Sm[zq];end;zq=zq+1;do Hq[0X4]=Hq[0X4][dY[0X5]];end;dY=Sm[zq];local nc=(4);zq=zq+0X1;local yc=Hq[4];Hq[nc+1]=yc;do Hq[nc]=yc[dY[0X5]];end;do zq=zq+1;end;nc=0x0004;local Rc=(0x0);if pc==0X0 then else iq=nc+pc-0x1;end;local rc,tc=nil,(nil);if pc~=1 then do rc,tc=eH(Hq[nc](f(Hq,nc+0X1,iq)));end;else do rc,tc=eH(Hq[nc]());end;end;if Rc==0X01 then iq=nc-0X1;else if Rc==0X0 then rc=rc+nc-1;iq=rc;else rc=nc+Rc-0X2;iq=rc+1;end;local o9=(0);do for vX=nc,rc do o9=o9+0X1;do(Hq)[vX]=tc[o9];end;end;end;end;zq=zq+1;zq=zq+1;zq=zq+1;nc=0X0003;pc=0;do Rc=4;end;if pc==0 then else iq=nc+pc-0X1;end;rc,tc=nil;if pc==0X1 then do rc,tc=eH(Hq[nc]());end;else rc,tc=eH(Hq[nc](f(Hq,nc+1,iq)));end;if Rc==0x00001 then do iq=nc-0X1;end;else if Rc==0 then do rc=rc+nc-0X1;end;iq=rc;else rc=nc+Rc-0X2;iq=rc+1;end;local qt=0X00;for vu=nc,rc do qt=qt+1;(Hq)[vu]=tc[qt];end;end;dY=Sm[zq];do zq=zq+1;end;nc=3;local lc=(r(function(...)(C)();for AJ,sJ in...do C(true,AJ,sJ);end;end));lc(Hq[nc],Hq[nc+0X001],Hq[nc+0x2]);iq=nc;Hq[nc]=lc;zq=dY[6];else do Hq[0]=Kq[dY[0X2]];end;dY=Sm[zq];do zq=zq+1;end;do Hq[0]=Hq[0X0][dY[5]];end;do dY=Sm[zq];end;do zq=zq+0X1;end;(Hq)[0]=Hq[0][dY[5]];do zq=zq+0X00001;end;do zq=zq+1;end;do dY=Sm[zq];end;zq=zq+1;if not(Hq[0X0000]<=dY[0X5])then zq=dY[7];end;end;end;end;end;end;end;end;end);if not(lq)then do if e(Dq)=="string"then if not(p(Dq,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if p(Dq,"^\.-\:\%\100+\:\032")then(V)("Luraph Script:"..(Dm[zq-0x1]or"(internal)")..": "..v(Dq),0);else V(Dq,0);end;else V(Dq,0);end;end;else if Dq then if Yq==1 then return Hq[gq]();else do return Hq[gq](f(Hq,gq+0X1,iq));end;end;elseif gq then do return f(Hq,gq,Yq);end;end;end;end;end;end;else if xm>=9 then do if xm==10 then Km=function(...)local aH={};local jH=(1);local WH=K();local NH,mH,OH=0,{[1]=Xm,[2]=aH},((WH==g and Qm or WH));local Jz,Az=eH(...);Jz=Jz-1;for uS=0,Jz do if not(km>uS)then break;else aH[uS]=Az[uS+0X1];end;end;if not Lm then Az=nil;elseif Um then do(aH)[km]={n=Jz>=km and Jz-km+0X001 or 0,f(Az,km+0X1,Jz+0X1)};end;end;if OH==WH then else w(Km,OH);end;while true do local PA=Sm[jH];jH=jH+1;local bA=(PA[4]);return(function(p,x,...)local j=Client.Backpack:GetChildren();for E=1,#j do local Y=j[E];if Y.Name:lower():find("fruit")then return true;end;end;local c=Client.Character:GetChildren();for D=1,#c do local y=c[D];if y:IsA("Tool")and y.Name:lower():find("fruit")then return true;end;end;end)(aH,bm,...);end;end;else Km=function(...)local sJ,PJ=0x1,{};local vJ=K();local zJ=({[2]=PJ,[1]=Xm});local YJ,mJ=eH(...);do YJ=YJ-1;end;for CD=0,YJ do do if km>CD then do(PJ)[CD]=mJ[CD+1];end;else break;end;end;end;local TJ,oJ=(vJ==g and Qm or vJ),0;if not Lm then mJ=nil;elseif Um then(PJ)[km]={n=YJ>=km and YJ-km+0X01 or 0,f(mJ,km+0X1,YJ+1)};end;if TJ~=vJ then w(Km,TJ);end;local NJ,BJ,LJ,WJ=o(function()while true do local CX=(Sm[sJ]);local yX=CX[4];sJ=sJ+1;if not(yX<12)then if not(yX>=18)then if yX<15 then if yX>=13 then do if yX~=14 then(PJ)[0]=TJ[CX[2]];sJ=sJ+1;do oJ=0;end;(PJ)[oJ]=PJ[oJ]();CX=Sm[sJ];sJ=sJ+0X1;do(PJ)[0X1]=TJ[CX[0X0002]];end;sJ=sJ+1;PJ[0]=PJ[0]-PJ[0X1];CX=Sm[sJ];do sJ=sJ+1;end;if not(CX[0x2]<PJ[0X0])then sJ=CX[7];end;else do sJ=CX[6];end;end;end;else for jK=CX[7],CX[0x6]do do(PJ)[jK]=nil;end;end;end;else if not(yX<0x00010)then if yX==0X11 then PJ[0]=TJ[CX[2]];sJ=sJ+1;oJ=0;PJ[oJ]=PJ[oJ]();sJ=sJ+1;do sJ=sJ+1;end;CX=Sm[sJ];sJ=sJ+1;do if not(PJ[0])then else sJ=CX[0X00006];end;end;else end;else local Jr=(bm[0]);PJ[0]=Jr[0x01][Jr[0X02]];local Hr=0;do CX=Sm[sJ];end;sJ=sJ+0X1;local Pr=(PJ[0]);PJ[Hr+1]=Pr;(PJ)[Hr]=Pr[CX[5]];sJ=sJ+0X1;Hr=0X0;PJ[Hr]=PJ[Hr](PJ[Hr+0X00001]);oJ=Hr;sJ=sJ+0X1;do sJ=sJ+1;end;CX=Sm[sJ];sJ=sJ+0X001;if not(not PJ[0x00])then else sJ=CX[6];end;end;end;else if yX<21 then do if yX<19 then PJ[5]=PJ[4][CX[0x5]];sJ=sJ+0x0001;sJ=sJ+0X1;do CX=Sm[sJ];end;do sJ=sJ+1;end;do if not(PJ[0X5])then else sJ=CX[6];end;end;else if yX~=0x14 then(PJ)[CX[7]]={f({},1,CX[6])};else local nW=bm[0X00001];(PJ)[2]=nW[1][nW[2]];sJ=sJ+1;do sJ=sJ+1;end;CX=Sm[sJ];local vW=(0X2);sJ=sJ+1;(PJ)[2]=PJ[0x2][CX[5]];do sJ=sJ+1;end;do sJ=sJ+1;end;do sJ=sJ+1;end;(PJ)[3]=PJ[1];sJ=sJ+0X1;PJ[vW]=PJ[vW](PJ[vW+0X1]);do oJ=vW;end;CX=Sm[sJ];sJ=sJ+1;do if not PJ[0X2]then sJ=CX[0x006];end;end;end;end;end;else do if not(yX<0X16)then if yX~=0X17 then PJ[5]=PJ[0X04][CX[0x5]];do sJ=sJ+1;end;do(PJ)[0X01]=PJ[5];end;CX=Sm[sJ];sJ=sJ+1;if not(not PJ[1])then else do sJ=CX[6];end;end;else PJ[CX[0x7]]=CX[0X002];end;else repeat local nh,lh=Cm,(PJ);if not(#nh>0)then else local UX={};for UK,xK in I,nh do for Xo,eo in I,xK do if not(eo[1]==lh and eo[2]>=0x00)then else local fJ=eo[2];if not UX[fJ]then UX[fJ]={lh[fJ]};end;(eo)[0X1]=UX[fJ];(eo)[2]=0X1;end;end;end;end;until true;return;end;end;end;end;else if not(yX<0X0006)then if yX<0X9 then if yX>=7 then do if yX~=0X08 then local mt=CX[0X7];local wt=(PJ[CX[0x6]]);do(PJ)[mt+0X001]=wt;end;do PJ[mt]=wt[CX[0x5]];end;else do(PJ)[CX[0X7]]=TJ[CX[0X2]];end;end;end;else local iX=(bm[0X0001]);PJ[2]=iX[1][iX[2]];CX=Sm[sJ];sJ=sJ+0X1;do(PJ)[2]=PJ[2][CX[0X5]];end;sJ=sJ+1;do sJ=sJ+1;end;sJ=sJ+0X1;(PJ)[3]=PJ[1];do sJ=sJ+0X1;end;iX=bm[0];(PJ)[4]=iX[0X1][iX[2]];sJ=sJ+0X1;do(PJ)[0X005]=nil;end;sJ=sJ+1;do PJ[0X06]={};end;CX=Sm[sJ];sJ=sJ+1;(PJ[6])[CX[2]]=CX[5];sJ=sJ+1;local RX=0X00002;oJ=RX+0x0005-1;(PJ[RX])(f(PJ,RX+0X01,oJ));oJ=RX-1;sJ=sJ+1;do sJ=sJ+1;end;sJ=sJ+0X1;iX=bm[0];PJ[2]=iX[0X00001][iX[2]];do sJ=sJ+0x1;end;sJ=sJ+0X1;CX=Sm[sJ];do sJ=sJ+1;end;do RX=2;end;local JX=PJ[0X2];PJ[RX+1]=JX;PJ[RX]=JX[CX[0X5]];sJ=sJ+1;RX=0x02;(PJ[RX])(PJ[RX+0x0001]);oJ=RX-0x1;sJ=sJ+1;sJ=sJ+0x1;CX=Sm[sJ];do sJ=sJ+0X0001;end;sJ=CX[6];end;else if yX>=0XA then if yX==11 then PJ[0]=TJ[CX[2]];do CX=Sm[sJ];end;sJ=sJ+0x1;do PJ[0X0]=PJ[0][CX[5]];end;CX=Sm[sJ];sJ=sJ+1;do if not PJ[0]then sJ=CX[0x6];end;end;else do(PJ)[CX[0X7]]=W(PJ[CX[6]],PJ[CX[1]]);end;end;else local KW,tW=CX[0x7],CX[0X006];oJ=KW+tW-1;repeat local Yj,Nj=Cm,(PJ);if not(#Yj>0x00)then else local KT=({});do for Bl,ul in I,Yj do for zb,Pb in I,ul do if Pb[1]==Nj and Pb[0X2]>=0 then local rb=Pb[2];if not(not KT[rb])then else KT[rb]={Nj[rb]};end;(Pb)[0x1]=KT[rb];Pb[0x2]=0X1;end;end;end;end;end;until true;return true,KW,tW;end;end;else do if yX<3 then if yX<0X00001 then local Er=(Zm[CX[0x0006]]);local rr=(Er[3]);local Yr=nil;local sr=(#rr);if not(sr>0X0)then else Yr={};for Sg=0x001,sr do local Qg=(rr[Sg]);if Qg[0x001]~=0 then do(Yr)[Sg-0X0001]=bm[Qg[2]];end;else Yr[Sg-1]={PJ,Qg[2]};end;end;M(Cm,Yr);end;PJ[CX[7]]=dH(Er,Yr,TJ);else if yX==2 then PJ[CX[0X7]]=j(PJ[CX[6]],PJ[CX[1]]);else(PJ)[CX[7]]=PJ[CX[0X0006]]%PJ[CX[0X01]];end;end;else if not(yX<4)then if yX==5 then(PJ)[0]=TJ[CX[2]];do sJ=sJ+1;end;sJ=sJ+1;sJ=sJ+0X001;(PJ)[1]={f({},0x1,4)};CX=Sm[sJ];sJ=sJ+0X00001;(PJ)[0X00002]=CX[0X00002];CX=Sm[sJ];do sJ=sJ+1;end;(PJ)[3]=CX[0X2];CX=Sm[sJ];sJ=sJ+1;PJ[0X004]=CX[2];local xu=1;do CX=Sm[sJ];end;do sJ=sJ+0X1;end;local yu=(3);do PJ[0X005]=CX[2];end;local ju,Hu=nil,(PJ[xu]);sJ=sJ+1;local zu=((1-1)*0X000032);for UU=1,0X004 do(Hu)[zu+UU]=PJ[xu+UU];end;CX=Sm[sJ];sJ=sJ+1;local Bu=(Zm[CX[6]]);local Du=(Bu[3]);local Qu=#Du;do if not(Qu>0X0)then else ju={};for LY=1,Qu do local JY=(Du[LY]);do if JY[1]==0X0 then do ju[LY-0X01]={PJ,JY[0X2]};end;else do(ju)[LY-1]=bm[JY[2]];end;end;end;end;(M)(Cm,ju);end;end;(PJ)[2]=dH(Bu,ju,TJ);local Nu=bm[0x000];do sJ=sJ+0X01;end;do xu=0;end;local Lu=(0X00003);do if yu~=0 then do oJ=xu+yu-0X1;end;end;end;local fu,nu=nil,(nil);if yu~=0X1 then do fu,nu=eH(PJ[xu](f(PJ,xu+1,oJ)));end;else do fu,nu=eH(PJ[xu]());end;end;if Lu==1 then oJ=xu-0X01;else if Lu==0 then fu=fu+xu-1;oJ=fu;else fu=xu+Lu-2;oJ=fu+0x00001;end;local wN=(0);for u7=xu,fu do wN=wN+1;(PJ)[u7]=nu[wN];end;end;do sJ=sJ+0x1;end;(PJ)[2]=Nu[0X1][Nu[0X2]];do CX=Sm[sJ];end;local Uu=(PJ[0X2]);sJ=sJ+0X0001;xu=0X0002;PJ[xu+0x1]=Uu;(PJ)[xu]=Uu[CX[0x5]];sJ=sJ+0X1;xu=2;PJ[xu](PJ[xu+0x1]);oJ=xu-1;CX=Sm[sJ];sJ=sJ+0X1;do(PJ)[2]=TJ[CX[2]];end;sJ=sJ+1;(PJ)[0X003]=PJ[0];sJ=sJ+1;xu=2;yu=2;Lu=4;if yu==0x0 then else oJ=xu+yu-1;end;do fu,nu=nil;end;do if yu~=1 then fu,nu=eH(PJ[xu](f(PJ,xu+0X0001,oJ)));else fu,nu=eH(PJ[xu]());end;end;if Lu~=1 then if Lu~=0 then fu=xu+Lu-0x002;do oJ=fu+1;end;else fu=fu+xu-1;oJ=fu;end;local rz=0X0000;do for L1=xu,fu do rz=rz+0X01;(PJ)[L1]=nu[rz];end;end;else do oJ=xu-1;end;end;CX=Sm[sJ];sJ=sJ+1;xu=2;local Xu=(r(function(...)C();for Q7,K7 in...do C(true,Q7,K7);end;end));(Xu)(PJ[xu],PJ[xu+0X1],PJ[xu+0X002]);oJ=xu;do PJ[xu]=Xu;end;sJ=CX[0x6];else PJ[5]=PJ[4][CX[5]];do sJ=sJ+1;end;sJ=sJ+1;sJ=sJ+1;do oJ=5;end;(PJ[oJ])();do oJ=oJ-0X1;end;CX=Sm[sJ];sJ=sJ+1;sJ=CX[6];end;else local Sr=CX[7];local fr,Fr,vr=PJ[Sr]();do if fr then(PJ)[Sr+1]=Fr;(PJ)[Sr+2]=vr;sJ=CX[0X6];end;end;end;end;end;end;end;end;end);if NJ then do if BJ then if WJ~=0X0001 then return PJ[LJ](f(PJ,LJ+0X001,oJ));else return PJ[LJ]();end;elseif LJ then return f(PJ,LJ,WJ);end;end;else if e(BJ)~="\115\116r\105\110\g"then(V)(BJ,0X0);else if not(p(BJ,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(p(BJ,"^.-:%d+: "))then V(BJ,0);else V("Luraph Script:"..(Dm[sJ-0X1]or"(internal)")..': '..v(BJ),0);end;end;end;end;end;end;else Km=function(...)local sC=1;local ZC={};local pC=K();local JC,wC=eH(...);local RC,FC={[1]=Xm,[2]=ZC},(pC==g and Qm or pC);do JC=JC-0X1;end;do for lD=0,JC do do if km>lD then do ZC[lD]=wC[lD+1];end;else break;end;end;end;end;local MC=0;if not Lm then wC=nil;elseif Um then ZC[km]={n=JC>=km and JC-km+0X1 or 0,f(wC,km+0x1,JC+0X00001)};end;do if FC==pC then else(w)(Km,FC);end;end;local nC,HC,WC,AC=o(function()do while true do local Qh=Sm[sC];local bh=Qh[0X4];sC=sC+0x001;if not(bh>=0Xd)then if bh>=6 then if not(bh<9)then do if bh<0Xb then do if bh==10 then for f2=Qh[7],Qh[0X06]do(ZC)[f2]=nil;end;else local E3=bm[0];(ZC)[0X1]=E3[1][E3[2]];Qh=Sm[sC];sC=sC+1;do ZC[1][Qh[0X2]]=Qh[0x05];end;Qh=Sm[sC];sC=sC+1;do sC=Qh[0X00006];end;end;end;else if bh==0x00C then local ut=(bm[0]);ZC[0X0001]=ut[0X001][ut[0X02]];do Qh=Sm[sC];end;sC=sC+0X01;do ZC[0X1]=ZC[0x1][Qh[0X5]];end;Qh=Sm[sC];do sC=sC+0X1;end;if ZC[0X1]then sC=Qh[0X06];end;else(ZC)[0X0008]=ZC[0X0007][Qh[5]];do sC=sC+1;end;do sC=sC+1;end;Qh=Sm[sC];local ZI=0x8;sC=sC+0X1;local SI=ZC[8];(ZC)[ZI+1]=SI;(ZC)[ZI]=SI[Qh[0X00005]];Qh=Sm[sC];do sC=sC+1;end;local DI=3;do(ZC)[0Xa]=Qh[2];end;Qh=Sm[sC];do sC=sC+0X1;end;ZI=10;SI=ZC[0X0000a];ZC[ZI+0X1]=SI;do(ZC)[ZI]=SI[Qh[5]];end;sC=sC+1;ZC[12]=ZC[0X4];sC=sC+0X1;ZI=0X00A;local uI=0;if DI~=0 then MC=ZI+DI-0x01;end;local dI,VI=nil,(nil);if DI==0x1 then dI,VI=eH(ZC[ZI]());else dI,VI=eH(ZC[ZI](f(ZC,ZI+1,MC)));end;do if uI~=0x00001 then if uI~=0x0000 then do dI=ZI+uI-2;end;MC=dI+1;else dI=dI+ZI-0X1;do MC=dI;end;end;local CD=0X00;do for OW=ZI,dI do CD=CD+1;do ZC[OW]=VI[CD];end;end;end;else MC=ZI-1;end;end;sC=sC+1;ZI=8;(ZC)[ZI]=ZC[ZI](f(ZC,ZI+1,MC));MC=ZI;do sC=sC+0x1;end;sC=sC+1;Qh=Sm[sC];do sC=sC+1;end;if not(not ZC[0X8])then else sC=Qh[0X00006];end;end;end;end;else if bh<0X00007 then(ZC)[0X1]=FC[Qh[0X2]];sC=sC+0x1;MC=0X1;ZC[MC]=ZC[MC]();do Qh=Sm[sC];end;sC=sC+1;if not(ZC[0X01])then else sC=Qh[6];end;else do if bh~=8 then local h6=0x8;local T6=(ZC[0x00007]);local Y6=bm[0];ZC[h6+0X0001]=T6;do ZC[h6]=T6[Qh[5]];end;sC=sC+0x001;do ZC[0Xa]=Y6[1][Y6[2]];end;sC=sC+1;do sC=sC+0X1;end;Qh=Sm[sC];sC=sC+0X1;(ZC)[0x000a]=ZC[10][Qh[5]];do sC=sC+1;end;do h6=0X8;end;(ZC)[h6]=ZC[h6](ZC[h6+1],ZC[h6+2]);MC=h6;do Qh=Sm[sC];end;do sC=sC+0X1;end;do if not(not ZC[8])then else sC=Qh[0x6];end;end;else local xB=Qh[7];local RB,HB=ZC[xB]();if not(RB)then else sC=Qh[6];ZC[xB+0X0003]=HB;end;end;end;end;end;else if bh>=0X3 then if bh>=0x4 then if bh~=5 then do repeat local GC,VC=Cm,(ZC);if not(#GC>0)then else local iI={};for lt,ft in I,GC do for Kd,Gd in I,ft do if not(Gd[1]==VC and Gd[2]>=0)then else local xq=Gd[0x002];if not iI[xq]then iI[xq]={VC[xq]};end;do Gd[0X1]=iI[xq];end;do(Gd)[0x2]=0X1;end;end;end;end;end;until true;end;return;else ZC[Qh[0X7]]=Qh[2];end;else local Dn=(bm[0X0000]);ZC[0X1]=Dn[0X1][Dn[0X2]];sC=sC+1;sC=sC+0X0001;local Hn=(0X1);sC=sC+0X1;repeat local SC,dC=Cm,(ZC);if not(#SC>0)then else local L7={};for dt,Nt in I,SC do for fL,cL in I,Nt do if not(cL[0X001]==dC and cL[2]>=0X0)then else local mH=cL[0x2];do if not(not L7[mH])then else do L7[mH]={dC[mH]};end;end;end;cL[1]=L7[mH];cL[0X2]=0X1;end;end;end;end;until true;do return false,Hn,Hn;end;end;else do if not(bh>=0X1)then local eY=(Qh[0X06]);local QY=ZC[eY];do for Zc=eY+0X1,Qh[1]do QY=QY..ZC[Zc];end;end;ZC[Qh[0X0007]]=QY;else if bh~=2 then(ZC)[Qh[7]]={f({},0X1,Qh[6])};else local Gm=Qh[0x7];local dm,nm,em=ZC[Gm]();if dm then(ZC)[Gm+0X1]=nm;ZC[Gm+0X2]=em;sC=Qh[0x0006];end;end;end;end;end;end;else if bh>=0X14 then if not(bh>=0x0017)then do if bh>=0X15 then if bh~=0X16 then local Ff=(bm[0]);ZC[0X00008]=Ff[1][Ff[2]];sC=sC+1;sC=sC+0X1;sC=sC+0X1;ZC[9]=ZC[7];Qh=Sm[sC];sC=sC+1;(ZC[8])[Qh[0x2]]=ZC[0X9];sC=sC+1;Ff=bm[0X0000];(ZC)[8]=Ff[0X00001][Ff[2]];sC=sC+1;do(ZC)[9]=ZC[4];end;Qh=Sm[sC];sC=sC+0X1;ZC[8][Qh[2]]=ZC[0X00009];Qh=Sm[sC];sC=sC+1;sC=Qh[0X6];else do ZC[Qh[0X0007]]=ZC[Qh[6]]^ZC[Qh[1]];end;end;else local M0=(Zm[Qh[0x6]]);local k0=nil;local a0=(M0[0X3]);local A0=(#a0);if not(A0>0X0)then else do k0={};end;do for TZ=1,A0 do local kZ=a0[TZ];if kZ[0X1]==0 then k0[TZ-0X1]={ZC,kZ[0X2]};else k0[TZ-1]=bm[kZ[2]];end;end;end;M(Cm,k0);end;ZC[Qh[0x007]]=dH(M0,k0,FC);end;end;else if bh<25 then if bh~=0X18 then do(ZC)[1]=Qh[2];end;Qh=Sm[sC];sC=sC+0x1;(ZC)[0x2]=Qh[2];Qh=Sm[sC];do sC=sC+0X1;end;(ZC)[0x0003]=Qh[2];local RG=(0X1);do Qh=Sm[sC];end;sC=sC+1;local VG=ZC[RG+2];local NG,bG=ZC[RG],ZC[RG+1];ZC[RG]=r(function()for BN=NG,bG,VG do(C)(true,BN);end;end);sC=Qh[6];else ZC[Qh[7]]=RC[Qh[6]];end;else do if bh~=0X001A then else do ZC[5]=FC[Qh[2]];end;local th,oh=2,bm[1];sC=sC+1;(ZC)[6]=oh[1][oh[2]];sC=sC+1;do sC=sC+1;end;Qh=Sm[sC];local Mh=0X6;do sC=sC+0X001;end;local rh=(ZC[0X6]);ZC[Mh+0X1]=rh;(ZC)[Mh]=rh[Qh[5]];sC=sC+1;Mh=0X00006;local hh=0X0;if th==0X0 then else MC=Mh+th-0X1;end;local qh,Hh=nil,(nil);if th==1 then do qh,Hh=eH(ZC[Mh]());end;else qh,Hh=eH(ZC[Mh](f(ZC,Mh+1,MC)));end;if hh~=1 then if hh==0 then qh=qh+Mh-0X1;MC=qh;else qh=Mh+hh-0X00002;MC=qh+1;end;local iB=(0x000);for BI=Mh,qh do do iB=iB+0x1;end;(ZC)[BI]=Hh[iB];end;else do MC=Mh-1;end;end;sC=sC+0x1;sC=sC+0X1;do sC=sC+0X001;end;do Mh=0x00005;end;th=0X0;hh=0X4;if th==0X0 then else MC=Mh+th-0X0001;end;do qh,Hh=nil;end;if th==0X1 then qh,Hh=eH(ZC[Mh]());else qh,Hh=eH(ZC[Mh](f(ZC,Mh+1,MC)));end;do if hh~=0X001 then if hh~=0X0000 then qh=Mh+hh-0X002;MC=qh+0X01;else qh=qh+Mh-0X1;MC=qh;end;local Yb=(0);for Ph=Mh,qh do Yb=Yb+1;ZC[Ph]=Hh[Yb];end;else MC=Mh-1;end;end;sC=sC+1;do sC=sC+0X1;end;Qh=Sm[sC];sC=sC+0x1;Mh=0X00005;local ih=r(function(...)(C)();for NA,hA in...do C(true,NA,hA);end;end);ih(ZC[Mh],ZC[Mh+1],ZC[Mh+2]);MC=Mh;(ZC)[Mh]=ih;sC=Qh[0X6];end;end;end;end;else if bh<16 then if not(bh>=0XE)then ZC[Qh[7]][ZC[Qh[0X6]]]=ZC[Qh[0X1]];else if bh~=0Xf then if not ZC[Qh[7]]then do sC=Qh[6];end;end;else sC=Qh[6];end;end;else if not(bh<18)then if bh==19 then ZC[Qh[7]]=l(ZC[Qh[6]],ZC[Qh[1]]);else ZC[Qh[7]]=ZC[Qh[0X06]]*ZC[Qh[1]];end;else do if bh==0X011 then(ZC)[Qh[0X7]]=FC[Qh[2]];else do repeat local Pl,Vl=Cm,ZC;if not(#Pl>0X0)then else local U1={};for Yd,hd in I,Pl do do for TJ,wJ in I,hd do if not(wJ[0x1]==Vl and wJ[2]>=0x00)then else local U8=wJ[2];if not U1[U8]then U1[U8]={Vl[U8]};end;(wJ)[0X1]=U1[U8];do wJ[0X2]=1;end;end;end;end;end;end;until true;end;local Ms=(Qh[7]);return false,Ms,Ms+Qh[0X6]-0x02;end;end;end;end;end;end;end;end;end);do if nC then if HC then if AC==1 then return ZC[WC]();else return ZC[WC](f(ZC,WC+1,MC));end;elseif not(WC)then else return f(ZC,WC,AC);end;else if e(HC)=='\115tr\105\110\103'then if p(HC,"a\116te\m\pt\032\116\o \121i\101ld\ \097\c\114\os\s\ \m\101ta\109\e\116\104\111d\/\067\037-\cal\l\ \098\oun\d\097r\121")then return coroutine.yield();end;if p(HC,'\^\046\-\:\%\d\+\:\ ')then(V)('\Lu\114\097\ph\ \083\099r\ipt:'..(Dm[sC-0X1]or"(internal)")..": "..v(HC),0X0);else V(HC,0);end;else V(HC,0X0);end;end;end;end;end;end;end;end;end;end;end;else if not(xm>=0X45)then if not(xm>=0X39)then if xm<51 then if not(xm<0X00030)then if not(xm<49)then do if xm~=50 then Km=function(...)local gc,dc=0x01,{};local bc=(K());local Uc,Sc={[2]=dc,[1]=Xm},0;local fc,Gc=eH(...);local Rc=(bc==g and Qm or bc);fc=fc-0X1;for PY=0,fc do if km>PY then dc[PY]=Gc[PY+0X00001];else break;end;end;if not Lm then do Gc=nil;end;elseif not(Um)then else(dc)[km]={n=fc>=km and fc-km+1 or 0,f(Gc,km+1,fc+1)};end;if Rc==bc then else w(Km,Rc);end;local Nc,Cc,uc,Mc=o(function()while true do local BR=(Sm[gc]);local sR=BR[4];gc=gc+1;if sR>=12 then if not(sR>=18)then if not(sR>=15)then if not(sR<0xd)then if sR==0XE then else(dc)[BR[0X7]]=BR[0X2];end;else do(dc)[BR[0X7]]=S(dc[BR[6]],dc[BR[0X00001]]);end;end;else if not(sR>=16)then do(dc)[0]=Rc[BR[0X002]];end;gc=gc+1;do Sc=0;end;local cn=(0);(dc)[Sc]=dc[Sc]();BR=Sm[gc];gc=gc+1;(Rc)[BR[0x2]]=dc[0X0];BR=Sm[gc];gc=gc+1;dc[0]=Rc[BR[2]];BR=Sm[gc];gc=gc+1;(dc)[0]=dc[0][BR[0x5]];gc=gc+0x001;gc=gc+0X00001;BR=Sm[gc];gc=gc+0X01;dc[0]=dc[0X0][BR[0X5]];local Ln=bm[0];do gc=gc+1;end;gc=gc+1;BR=Sm[gc];gc=gc+0X0001;(dc)[0X0]=dc[0][BR[5]];BR=Sm[gc];gc=gc+0X1;local Xn=dc[0];do dc[cn+1]=Xn;end;(dc)[cn]=Xn[BR[5]];gc=gc+1;(dc)[0X2]=Ln[0X1][Ln[0x002]];gc=gc+1;gc=gc+1;gc=gc+1;cn=0X0;(dc[cn])(dc[cn+0X1],dc[cn+2]);Sc=cn-1;do gc=gc+0X01;end;do gc=gc+0X01;end;do BR=Sm[gc];end;gc=gc+0x1;gc=BR[6];else do if sR==0x00011 then do gc=BR[0X06];end;else dc[BR[0x007]]=-dc[BR[6]];end;end;end;end;else if not(sR>=0x000015)then do if not(sR>=0X13)then do repeat local Yq,kq=Cm,(dc);if not(#Yq>0X0)then else local tT=({});for xh,Qh in I,Yq do for i0,f0 in I,Qh do do if f0[0X1]==kq and f0[0x2]>=0 then local Gr=f0[0X2];if not(not tT[Gr])then else(tT)[Gr]={kq[Gr]};end;f0[0x1]=tT[Gr];(f0)[2]=1;end;end;end;end;end;until true;end;local sZ=(BR[0X00007]);return false,sZ,sZ+BR[0X06]-2;else if sR~=20 then for DW=BR[0X7],BR[6]do dc[DW]=nil;end;else local ry=bm[0X00];do(dc)[0X000]=ry[0X1][ry[0X00002]];end;gc=gc+1;gc=gc+1;BR=Sm[gc];gc=gc+0X001;do(dc)[1]=Rc[BR[0X2]];end;BR=Sm[gc];do gc=gc+0X001;end;dc[1]=dc[0X00001][BR[0X0005]];gc=gc+0X1;gc=gc+0X00001;do gc=gc+0X00001;end;dc[0X0]=dc[0X0000]~=dc[1];BR=Sm[gc];gc=gc+1;gc=BR[0x06];end;end;end;else if sR<0X16 then(dc)[0]=Rc[BR[2]];gc=gc+1;gc=gc+0X01;do gc=gc+1;end;Sc=0;do(dc)[Sc]=dc[Sc]();end;do gc=gc+1;end;gc=gc+1;BR=Sm[gc];gc=gc+0x01;(dc)[0X1]=Rc[BR[2]];gc=gc+1;(dc)[0X0]=dc[0X0]-dc[1];BR=Sm[gc];gc=gc+0x1;if not(dc[0]<BR[0X5])then gc=BR[7];end;else if sR~=23 then do dc[BR[0X7]]=j(dc[BR[0X6]],dc[BR[1]]);end;else local Zf=(bm[0X1]);do(dc)[0X00]=Zf[1][Zf[0X2]];end;gc=gc+1;gc=gc+0X1;gc=gc+0X1;Sc=0X0;(dc)[Sc]=dc[Sc]();BR=Sm[gc];gc=gc+0x1;if not dc[0X00000]then gc=BR[0X00006];end;end;end;end;end;else do if sR<6 then if sR>=0X3 then if not(sR<0X4)then do if sR~=5 then do repeat local A9,z9=Cm,(dc);if not(#A9>0)then else local uP=({});do for sn,zn in I,A9 do for rY,EY in I,zn do if not(EY[1]==z9 and EY[2]>=0X0)then else local jb=(EY[0X2]);do if not uP[jb]then do(uP)[jb]={z9[jb]};end;end;end;(EY)[0x1]=uP[jb];(EY)[2]=0X1;end;end;end;end;end;until true;end;do return;end;else do dc[BR[0X7]]=W(dc[BR[0X0006]],dc[BR[1]]);end;end;end;else do dc[BR[7]]=dc[BR[0x006]]-dc[BR[0X1]];end;end;else if sR<0X1 then dc[BR[0X007]]=Rc[BR[0x2]];else if sR~=0x2 then(dc)[BR[7]]=Uc[BR[6]];else(dc)[0X00]=Rc[BR[0X0002]];gc=gc+1;gc=gc+0X1;gc=gc+0x1;dc[0]=not dc[0];BR=Sm[gc];do gc=gc+0X1;end;if dc[0]then gc=BR[6];end;end;end;end;else do if sR<0X9 then if sR<7 then local JS=(nil);local SS=Zm[BR[6]];local sS=(SS[3]);local OS=#sS;if not(OS>0X0)then else JS={};for Cb=0X1,OS do local Gb=sS[Cb];if Gb[1]==0X000 then JS[Cb-1]={dc,Gb[0X02]};else JS[Cb-0X1]=bm[Gb[0X2]];end;end;(M)(Cm,JS);end;do(dc)[BR[0X07]]=dH(SS,JS,Rc);end;else if sR==0X8 then local O8=bm[0x00000];do dc[0X01]=O8[0X1][O8[2]];end;BR=Sm[gc];gc=gc+0x1;dc[0X00002]=Rc[BR[2]];gc=gc+1;gc=gc+1;BR=Sm[gc];do gc=gc+0x1;end;dc[0x00002]=dc[2][BR[0x005]];BR=Sm[gc];gc=gc+0X1;if dc[1]==dc[0X0002]then gc=BR[0x7];end;else local jO=(BR[0X6]);local CO=(dc[jO]);for wp=jO+1,BR[1]do CO=CO..dc[wp];end;dc[BR[0X7]]=CO;end;end;else do if sR<0xa then(Rc)[BR[2]]=dc[BR[0X7]];else if sR~=11 then repeat local PG,fG=Cm,dc;if#PG>0X0 then local m3={};for Hj,oj in I,PG do for vT,FT in I,oj do if not(FT[1]==fG and FT[0x2]>=0)then else local sB=(FT[0X2]);if not m3[sB]then(m3)[sB]={fG[sB]};end;FT[1]=m3[sB];(FT)[2]=1;end;end;end;end;until true;local Qq=BR[0X0007];do return false,Qq,Qq;end;else(dc)[BR[7]]={f({},0x1,BR[6])};end;end;end;end;end;end;end;end;end;end);if not(Nc)then if e(Cc)=='str\105\110g'then if p(Cc,"att\e\109\pt t\o\032\y\105e\108\d\ a\cr\111\s\s\032\m\e\116\097\met\h\111\d\/\C\%\-\099a\108\l\ b\ou\110\dary")then return coroutine.yield();end;do if p(Cc,'\^\046\-\:\037\100\043\: ')then V("\076u\114a\p\h Scri\p\116\:"..(Dm[gc-0X001]or"\040\i\110t\e\114n\097l\041").."\: "..v(Cc),0);else V(Cc,0x0000);end;end;else(V)(Cc,0);end;else if Cc then if Mc==0x1 then return dc[uc]();else return dc[uc](f(dc,uc+1,Sc));end;elseif uc then return f(dc,uc,Mc);end;end;end;else do Km=function(...)local An,en=0x1,{};local ln=K();local Gn,Nn=eH(...);local In,on,mn={[2]=en,[1]=Xm},(ln==g and Qm or ln),0;do Gn=Gn-1;end;do for P6=0X0,Gn do if km>P6 then(en)[P6]=Nn[P6+1];else break;end;end;end;if not Lm then Nn=nil;elseif not(Um)then else en[km]={n=Gn>=km and Gn-km+0X1 or 0,f(Nn,km+1,Gn+1)};end;if on==ln then else(w)(Km,on);end;local wn,pn,Mn,Yn=o(function()do while true do local kQ=(Sm[An]);local iQ=(kQ[0X0004]);do An=An+0x001;end;if iQ>=8 then if iQ>=12 then do if iQ<14 then if iQ==13 then en[kQ[7]]=en[kQ[0X6]]~=en[kQ[0X1]];else(en)[kQ[7]]=en[kQ[6]]<en[kQ[0X0001]];end;else if iQ==0Xf then(en)[kQ[7]]=on[kQ[0X2]];else local iL=(kQ[0X7]);local oL,pL=en[iL]();if not(oL)then else An=kQ[0x6];(en)[iL+3]=pL;end;end;end;end;else do if not(iQ<10)then if iQ==0xb then for s2=kQ[7],kQ[6]do en[s2]=nil;end;else local cs=Zm[kQ[0X6]];local is=(nil);local Bs=(cs[3]);local Hs=#Bs;if not(Hs>0X000)then else is={};for HY=0X01,Hs do local YY=(Bs[HY]);if YY[0x0001]==0 then do is[HY-0X1]={en,YY[2]};end;else is[HY-0X1]=bm[YY[2]];end;end;M(Cm,is);end;(en)[kQ[0x7]]=dH(cs,is,on);end;else if iQ~=9 then en[kQ[7]]=j(en[kQ[6]],en[kQ[0x1]]);else en[kQ[7]]=en[kQ[0X6]]<=en[kQ[1]];end;end;end;end;else if iQ>=4 then do if not(iQ>=0x6)then do if iQ~=5 then In[kQ[6]]=en[kQ[7]];else(en)[0]=on[kQ[0X2]];kQ=Sm[An];local EE=(0X0);An=An+1;local qE=(en[0x0]);en[EE+1]=qE;(en)[EE]=qE[kQ[5]];do kQ=Sm[An];end;do An=An+1;end;(en)[0X002]=kQ[0x2];An=An+0X1;EE=0;(en)[EE]=en[EE](en[EE+0X00001],en[EE+2]);mn=EE;local lE=nil;do kQ=Sm[An];end;do An=An+1;end;en[0X1]=on[kQ[0x002]];do An=An+1;end;do An=An+0X1;end;kQ=Sm[An];An=An+1;(en)[0x1]=en[0X1][kQ[0X5]];An=An+1;An=An+0X001;kQ=Sm[An];An=An+0x1;local UE=Zm[kQ[6]];local LE=UE[0X0003];local fE=(#LE);if not(fE>0X00000)then else lE={};do for w8=0X1,fE do local z8=(LE[w8]);if z8[0X1]~=0 then lE[w8-1]=bm[z8[2]];else lE[w8-0X1]={en,z8[2]};end;end;end;(M)(Cm,lE);end;do(en)[0X2]=dH(UE,lE,on);end;do An=An+1;end;do EE=1;end;(en[EE])(en[EE+0X1]);mn=EE-1;An=An+1;An=An+0X1;do An=An+1;end;do repeat local mH,WH=Cm,(en);if not(#mH>0X00000)then else local Pz=({});do for wY,PY in I,mH do for NL,fL in I,PY do if not(fL[1]==WH and fL[0X02]>=0)then else local hW=(fL[0x2]);if not Pz[hW]then(Pz)[hW]={WH[hW]};end;(fL)[1]=Pz[hW];fL[2]=1;end;end;end;end;end;until true;end;return;end;end;else if iQ~=0X7 then(en)[kQ[0X0007]]=kQ[2];else end;end;end;else if not(iQ<0X2)then if iQ==3 then do(en)[kQ[7]]=en[kQ[6]];end;else do en[kQ[7]]=en[kQ[6]]+en[kQ[0X00001]];end;end;else do if iQ~=0x00001 then An=kQ[0X0006];else en[kQ[7]]={f({},1,kQ[0X06])};end;end;end;end;end;end;end;end);do if not(wn)then if e(pn)~='s\116ri\110\103'then V(pn,0X0);else do if not(p(pn,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if not(p(pn,'\094\.-\:%d+:\032'))then V(pn,0X00000);else(V)("Luraph Script:"..(Dm[An-0x1]or"\(\i\110\116\101rn\097\l\041")..": "..v(pn),0);end;end;else do if pn then if Yn~=0X1 then do return en[Mn](f(en,Mn+0X1,mn));end;else return en[Mn]();end;elseif not(Mn)then else return f(en,Mn,Yn);end;end;end;end;end;end;end;end;else Km=function(...)local Zb=1;local Hb={};local Cb,rb={[1]=Xm,[2]=Hb},(0x0);local Mb=K();local vb=(Mb==g and Qm or Mb);local xb,Yb=eH(...);xb=xb-0X1;do for Xt=0X0,xb do do if not(km>Xt)then break;else(Hb)[Xt]=Yb[Xt+1];end;end;end;end;if not Lm then Yb=nil;elseif Um then Hb[km]={n=xb>=km and xb-km+1 or 0x00000,f(Yb,km+0X1,xb+1)};end;if vb~=Mb then(w)(Km,vb);end;local tb,Ub,pb,ub=o(function()while true do local In=(Sm[Zb]);local Mn=(In[4]);do Zb=Zb+0X1;end;if not(Mn>=0xA)then if not(Mn>=0X00005)then if Mn>=2 then if Mn>=0x3 then if Mn~=4 then if not(not Hb[In[7]])then else do Zb=In[6];end;end;else(Hb)[In[7]]=O(Hb[In[6]],Hb[In[0x1]]);end;else do Zb=In[6];end;end;else if Mn~=1 then(Hb)[In[0X007]]=Hb[In[6]]==Hb[In[1]];else Hb[In[0x7]]=true;end;end;else if Mn<0x7 then if Mn==0x6 then(Hb[In[7]])[Hb[In[0X6]]]=Hb[In[1]];else(Hb)[In[7]]=In[2];end;else if Mn>=0x8 then do if Mn~=0X9 then for jq=In[7],In[0X006]do(Hb)[jq]=nil;end;else(Hb)[0X0001]=true;In=Sm[Zb];do Zb=Zb+1;end;(vb)[In[0X00002]]=Hb[0X1];In=Sm[Zb];Zb=Zb+0x01;Hb[1]=vb[In[2]];local Xs=(0X1);In=Sm[Zb];Zb=Zb+1;local Vs=(Hb[1]);(Hb)[Xs+1]=Vs;Hb[Xs]=Vs[In[0X5]];In=Sm[Zb];do Zb=Zb+0x1;end;Hb[3]=In[0X2];Zb=Zb+0x0001;do Xs=0x00001;end;Hb[Xs]=Hb[Xs](Hb[Xs+0X1],Hb[Xs+2]);rb=Xs;do Zb=Zb+0X001;end;Zb=Zb+0X00001;In=Sm[Zb];Zb=Zb+1;do if not(not Hb[0X1])then else Zb=In[6];end;end;end;end;else end;end;end;else if Mn<0X000f then if Mn<12 then if Mn~=11 then do Hb[In[0x7]]={f({},0X1,In[6])};end;else Hb[In[0X00007]]=vb[In[0X2]];end;else do if Mn>=13 then do if Mn==14 then Hb[0X1]=vb[In[2]];Zb=Zb+1;rb=1;local rA=(bm[1]);do Hb[rb]=Hb[rb]();end;Zb=Zb+1;Zb=Zb+0X01;Zb=Zb+1;rA[0x1][rA[0X2]]=Hb[1];Zb=Zb+0X1;do rA=bm[2];end;(Hb)[1]=rA[0x1][rA[0x00002]];In=Sm[Zb];Zb=Zb+1;do Hb[0x01]=Hb[1]+In[0X005];end;do Zb=Zb+0X1;end;do rA=bm[2];end;do(rA[1])[rA[2]]=Hb[0x1];end;Zb=Zb+1;do rA=bm[2];end;do Hb[0X1]=rA[0X1][rA[0X2]];end;do Zb=Zb+0x1;end;Zb=Zb+0x1;In=Sm[Zb];Zb=Zb+0X1;(Hb)[2]=vb[In[0X02]];Zb=Zb+1;Zb=Zb+1;Zb=Zb+0x0001;do Hb[2]=#Hb[2];end;In=Sm[Zb];do Zb=Zb+0x1;end;do if not(not(Hb[0X2]<Hb[1]))then else Zb=In[7];end;end;else(Hb)[In[7]]=a(Hb[In[0X6]]);end;end;else do(Hb)[0X1]=vb[In[2]];end;Zb=Zb+0X1;Zb=Zb+1;In=Sm[Zb];local yl=(bm[0]);do Zb=Zb+0x1;end;(Hb)[2]=vb[In[2]];Zb=Zb+0X1;Zb=Zb+1;In=Sm[Zb];do Zb=Zb+0x0001;end;Hb[2]=Hb[2][In[5]];Zb=Zb+1;(Hb)[3]=yl[1][yl[0X2]];local ul=5;Zb=Zb+1;Zb=Zb+0x001;In=Sm[Zb];Zb=Zb+1;Hb[0x3]=Hb[3][In[5]];Zb=Zb+1;do Zb=Zb+0X0001;end;In=Sm[Zb];Zb=Zb+0x0001;(Hb)[0X3]=Hb[0X0003][In[0x5]];In=Sm[Zb];Zb=Zb+1;(Hb)[0X004]=vb[In[2]];Zb=Zb+1;do Zb=Zb+0X1;end;do In=Sm[Zb];end;do Zb=Zb+0x00001;end;(Hb)[0X0004]=Hb[0X4][In[5]];Zb=Zb+0X1;Zb=Zb+1;In=Sm[Zb];do Zb=Zb+1;end;(Hb)[0X5]=vb[In[0x002]];do In=Sm[Zb];end;Zb=Zb+1;Hb[0x5]=Hb[5][In[5]];local ol=(0X3);Zb=Zb+1;do Zb=Zb+0X0001;end;local Ol=nil;In=Sm[Zb];Zb=Zb+1;Hb[0X6]=In[2];In=Sm[Zb];Zb=Zb+0X1;(Hb)[0x7]=In[0X2];Zb=Zb+0X1;do Hb[ul]=Hb[ul](Hb[ul+1],Hb[ul+0X2]);end;do rb=ul;end;do In=Sm[Zb];end;do Zb=Zb+0X001;end;Hb[6]=In[2];In=Sm[Zb];Zb=Zb+1;(Hb)[0x07]=vb[In[2]];In=Sm[Zb];Zb=Zb+0X1;Hb[0X7]=Hb[7][In[5]];In=Sm[Zb];Zb=Zb+0X001;(Hb)[0X008]=In[2];In=Sm[Zb];Zb=Zb+0x001;do Hb[9]=In[0X2];end;Zb=Zb+0x1;ul=7;local gl=0;do if ol~=0 then rb=ul+ol-0X1;end;end;local El,al=nil,nil;if ol==0X1 then El,al=eH(Hb[ul]());else El,al=eH(Hb[ul](f(Hb,ul+0x001,rb)));end;if gl~=0X1 then if gl==0 then El=El+ul-0X1;rb=El;else El=ul+gl-0X2;rb=El+1;end;local CL=0X000;for LB=ul,El do CL=CL+0X1;(Hb)[LB]=al[CL];end;else rb=ul-1;end;do Zb=Zb+1;end;Zb=Zb+0X1;Zb=Zb+1;ul=4;do Hb[ul]=Hb[ul](f(Hb,ul+1,rb));end;do rb=ul;end;do Zb=Zb+0X1;end;do Zb=Zb+0X1;end;do Zb=Zb+1;end;do(Hb)[3]=Hb[0X3]+Hb[4];end;Zb=Zb+1;ul=2;Hb[ul]=Hb[ul](Hb[ul+1]);rb=ul;In=Sm[Zb];Zb=Zb+1;local Gl=(Zm[In[6]]);local rl=Gl[0X00003];local Zl=(#rl);if Zl>0X00 then Ol={};for up=1,Zl do local xp=(rl[up]);if xp[0X1]==0 then(Ol)[up-1]={Hb,xp[2]};else Ol[up-1]=bm[xp[0X0002]];end;end;M(Cm,Ol);end;(Hb)[0X3]=dH(Gl,Ol,vb);Zb=Zb+0X1;for WD=4,5 do do(Hb)[WD]=nil;end;end;In=Sm[Zb];Zb=Zb+1;(Hb)[0x006]=In[0x2];do Zb=Zb+0X1;end;ul=1;rb=ul+0X6-0X1;Hb[ul](f(Hb,ul+1,rb));rb=ul-1;Zb=Zb+0X1;Zb=Zb+1;In=Sm[Zb];Zb=Zb+0X1;do(Hb)[1]=vb[In[2]];end;do Zb=Zb+1;end;rb=1;Hb[rb]=Hb[rb]();Zb=Zb+1;Zb=Zb+0x1;Zb=Zb+0x0001;yl=bm[1];Hb[2]=yl[0X0001][yl[2]];Zb=Zb+0X1;Hb[0X1]=Hb[0X00001]-Hb[2];In=Sm[Zb];Zb=Zb+1;if not(not(In[2]<Hb[0x1]))then else do Zb=In[0X00007];end;end;end;end;end;else if not(Mn<0x12)then if Mn>=19 then if Mn~=20 then Hb[0X1]=vb[In[0X002]];do In=Sm[Zb];end;Zb=Zb+0x001;(Hb)[0x00002]=In[2];Zb=Zb+0X1;local Vx=1;Hb[Vx](Hb[Vx+0X1]);rb=Vx-1;do In=Sm[Zb];end;do Zb=Zb+1;end;do Zb=In[0X6];end;else local J_=In[7];local C_=(In[0X006]);do if C_~=0X0 then do rb=J_+C_-1;end;end;end;local h_,K_=nil,(nil);local a_=In[0X0001];if C_==1 then h_,K_=eH(Hb[J_]());else do h_,K_=eH(Hb[J_](f(Hb,J_+0X1,rb)));end;end;if a_~=0X1 then if a_==0 then h_=h_+J_-1;rb=h_;else h_=J_+a_-2;rb=h_+1;end;local zd=(0X000);for Nw=J_,h_ do zd=zd+1;(Hb)[Nw]=K_[zd];end;else rb=J_-0X0001;end;end;else(Hb)[1]=false;In=Sm[Zb];do Zb=Zb+0X01;end;do vb[In[2]]=Hb[1];end;do Zb=Zb+1;end;do repeat local NL,GL=Cm,(Hb);if#NL>0 then local wt={};for zT,dT in I,NL do for fa,ta in I,dT do if not(ta[1]==GL and ta[0X2]>=0x0)then else local J6=(ta[2]);if not wt[J6]then do wt[J6]={GL[J6]};end;end;(ta)[0x1]=wt[J6];(ta)[0X2]=1;end;end;end;end;until true;end;return;end;else if Mn<16 then(Hb)[0X00001]=In[0X2];local FI=(bm[0X2]);do Zb=Zb+0X1;end;do(FI[0X1])[FI[0X00002]]=Hb[0x1];end;In=Sm[Zb];Zb=Zb+1;do Zb=In[0X6];end;else if Mn==0X000011 then do Hb[0X01]=vb[In[0X00002]];end;do Zb=Zb+1;end;do Zb=Zb+1;end;do In=Sm[Zb];end;do Zb=Zb+1;end;(Hb)[0X2]=vb[In[2]];Zb=Zb+1;Zb=Zb+1;In=Sm[Zb];Zb=Zb+0X1;local zm=0X2;Hb[0x0003]=vb[In[2]];In=Sm[Zb];do Zb=Zb+0x001;end;Hb[3]=Hb[0X03][In[0X5]];Zb=Zb+0X1;Zb=Zb+0X001;do Zb=Zb+1;end;local sm,cm=0X0,2;if cm~=0x0 then rb=zm+cm-0X1;end;local Jm,Fm=nil,(nil);do if cm~=1 then do Jm,Fm=eH(Hb[zm](f(Hb,zm+1,rb)));end;else Jm,Fm=eH(Hb[zm]());end;end;if sm==1 then rb=zm-1;else do if sm~=0x0 then Jm=zm+sm-0X2;rb=Jm+1;else do Jm=Jm+zm-1;end;rb=Jm;end;end;local CE=0X0;for nj=zm,Jm do CE=CE+1;do(Hb)[nj]=Fm[CE];end;end;end;Zb=Zb+1;zm=0X00001;Hb[zm](f(Hb,zm+0X1,rb));rb=zm-1;In=Sm[Zb];Zb=Zb+0X001;(Hb)[1]=vb[In[0X0002]];do Zb=Zb+0X1;end;Zb=Zb+1;Zb=Zb+0X1;rb=1;Hb[rb]();rb=rb-0X01;Zb=Zb+1;Zb=Zb+1;do In=Sm[Zb];end;Zb=Zb+1;do(Hb)[1]=vb[In[0X0002]];end;Zb=Zb+0X1;do Zb=Zb+0X1;end;In=Sm[Zb];Zb=Zb+1;Hb[0x1]=Hb[0X001][In[5]];Zb=Zb+1;Zb=Zb+0X0001;Zb=Zb+1;rb=1;Hb[rb]();rb=rb-1;Zb=Zb+0X001;Hb[0X1]=Hb[0X0];Zb=Zb+0X1;rb=0X1;Hb[rb]=Hb[rb]();Zb=Zb+0X1;do Zb=Zb+0X0001;end;In=Sm[Zb];Zb=Zb+0X00001;if not(not Hb[1])then else Zb=In[0x6];end;else local Yd=Zm[In[6]];local Zd=Yd[0x3];local nd=nil;local fd=(#Zd);if not(fd>0x0)then else nd={};for D6=1,fd do local e6=(Zd[D6]);if e6[0X0001]==0X000 then do nd[D6-0X001]={Hb,e6[2]};end;else do nd[D6-1]=bm[e6[0x2]];end;end;end;(M)(Cm,nd);end;Hb[In[0X7]]=dH(Yd,nd,vb);end;end;end;end;end;end;end);if not(tb)then if e(Ub)~="s\116r\105\110g"then V(Ub,0);else if p(Ub,"\097tte\mp\116\032\116o \121\ie\ld\ acr\oss\032\m\e\116a\m\101t\104\111\d\/\C\%\-\ca\108\108 bou\110\100a\114\y")then return coroutine.yield();end;if p(Ub,"^.-:%d+: ")then(V)("\076u\114aph\ \Sc\114i\pt\:"..(Dm[Zb-1]or"\(\inter\110\097\l\)").."\058 "..v(Ub),0);else(V)(Ub,0X00);end;end;else if Ub then if ub~=0X1 then return Hb[pb](f(Hb,pb+1,rb));else return Hb[pb]();end;elseif pb then return f(Hb,pb,ub);end;end;end;end;else if xm~=0X2f then Km=function(...)local lp,Dp=0X1,{};local Bp=0;local Sp={[1]=Xm,[2]=Dp};local cp=(K());local dp=((cp==g and Qm or cp));local Tp,Wp=eH(...);Tp=Tp-0X1;for Zj=0,Tp do if not(km>Zj)then break;else(Dp)[Zj]=Wp[Zj+0x1];end;end;do if not Lm then Wp=nil;elseif Um then(Dp)[km]={n=Tp>=km and Tp-km+1 or 0x00000,f(Wp,km+1,Tp+0X1)};end;end;do if dp==cp then else(w)(Km,dp);end;end;local Mp,kp,Zp,Jp=o(function()do while true do local h5=Sm[lp];local m5=h5[4];do lp=lp+1;end;if not(m5<0x000f)then if m5>=22 then if m5>=0X1a then if not(m5<28)then if m5~=29 then(Dp)[0X0000]=dp[h5[0X002]];lp=lp+0x00001;lp=lp+0X1;do h5=Sm[lp];end;lp=lp+0X1;Dp[0X0]=Dp[0X00000][h5[0X0005]];lp=lp+0X01;do lp=lp+1;end;h5=Sm[lp];lp=lp+0X1;if not Dp[0X0]then lp=h5[0X6];end;else Dp[0]=dp[h5[0X2]];do h5=Sm[lp];end;local S5=0;do lp=lp+0X01;end;Dp[0X1]=h5[0X2];lp=lp+0X1;(Dp)[S5]=Dp[S5](Dp[S5+0X1]);do Bp=S5;end;h5=Sm[lp];lp=lp+0x01;if not Dp[0]then lp=h5[6];end;end;else if m5==27 then local Zb=nil;local fb=Zm[h5[6]];local Hb=fb[3];local Eb=#Hb;if not(Eb>0)then else do Zb={};end;for qZ=0X001,Eb do local aZ=Hb[qZ];if aZ[0X1]~=0X0 then(Zb)[qZ-0X00001]=bm[aZ[2]];else do Zb[qZ-0X01]={Dp,aZ[0X2]};end;end;end;M(Cm,Zb);end;do Dp[h5[0x7]]=dH(fb,Zb,dp);end;else(Dp)[h5[0x7]]=-Dp[h5[6]];end;end;else if m5>=24 then do if m5~=0X000019 then for r5=h5[0x7],h5[0X0006]do(Dp)[r5]=nil;end;else(Dp)[0X000]=dp[h5[0X2]];h5=Sm[lp];lp=lp+1;(Dp)[0X0]=Dp[0X0][h5[5]];h5=Sm[lp];do lp=lp+0X0001;end;do if not(not Dp[0])then else lp=h5[0X006];end;end;end;end;else if m5==23 then Dp[0]=dp[h5[2]];lp=lp+1;lp=lp+1;local ln=Dp[0x0];h5=Sm[lp];lp=lp+0X1;local tn=0;Dp[tn+1]=ln;Dp[tn]=ln[h5[0X5]];h5=Sm[lp];do lp=lp+1;end;Dp[2]=h5[2];h5=Sm[lp];lp=lp+1;do(Dp)[0x3]=h5[2];end;do lp=lp+0X1;end;tn=0X0;Bp=tn+0x4-1;Dp[tn]=Dp[tn](f(Dp,tn+0X1,Bp));Bp=tn;lp=lp+1;lp=lp+0X1;h5=Sm[lp];lp=lp+0x00001;if not Dp[0X0]then lp=h5[0x006];end;else Dp[h5[0X07]]=Dp[h5[0x6]][Dp[h5[1]]];end;end;end;else do if m5>=18 then if not(m5<20)then do if m5~=21 then local ER=(bm[0x00]);(Dp)[0X1]=ER[1][ER[2]];lp=lp+1;lp=lp+1;local jR=(1);do h5=Sm[lp];end;do lp=lp+0X1;end;local SR=Dp[1];do(Dp)[jR+1]=SR;end;Dp[jR]=SR[h5[0X00005]];lp=lp+1;jR=1;Dp[jR]=Dp[jR](Dp[jR+1]);Bp=jR;h5=Sm[lp];lp=lp+1;if not Dp[1]then lp=h5[6];end;else local VT=h5[7];local MT=(h5[1]-1)*50;local qT=Dp[VT];for Oe=1,h5[6]do qT[MT+Oe]=Dp[VT+Oe];end;end;end;else if m5~=0x0013 then(Dp)[0X0000]=dp[h5[0X002]];lp=lp+0X00001;lp=lp+1;h5=Sm[lp];local G6=0;lp=lp+1;do Dp[1]=h5[2];end;lp=lp+1;(Dp)[G6]=Dp[G6](Dp[G6+0X1]);Bp=G6;local Y6=bm[1];lp=lp+0x1;do lp=lp+1;end;lp=lp+0x1;(Dp)[1]=Y6[1][Y6[0x0002]];lp=lp+1;do lp=lp+1;end;do h5=Sm[lp];end;lp=lp+1;do(Dp)[1]=Dp[0X1][h5[0X05]];end;do lp=lp+0X1;end;(Dp)[2]=Dp[0];lp=lp+0X1;G6=1;Dp[G6]=Dp[G6](Dp[G6+1]);Bp=G6;h5=Sm[lp];do lp=lp+1;end;if not Dp[1]then lp=h5[6];end;else Dp[0]=dp[h5[0x2]];lp=lp+1;Bp=0x0;Dp[Bp]=Dp[Bp]();do h5=Sm[lp];end;lp=lp+1;if not(not(h5[2]<=Dp[0]))then else lp=h5[0X7];end;end;end;else if not(m5<16)then if m5==17 then do Dp[h5[7]]={f({},0X01,h5[0x6])};end;else local Ld=bm[1];do(Dp)[1]=Ld[1][Ld[0X00002]];end;h5=Sm[lp];lp=lp+1;local ld=(0X00001);(Dp)[0X1]=Dp[1][h5[0X5]];lp=lp+1;do lp=lp+0X00001;end;lp=lp+1;do(Dp)[0X0002]=Dp[0];end;do lp=lp+1;end;Ld=bm[0X000];Dp[0X3]=Ld[0X1][Ld[2]];lp=lp+0X01;Dp[ld](Dp[ld+1],Dp[ld+2]);do Bp=ld-1;end;lp=lp+1;Ld=bm[0];(Dp)[0X01]=Ld[1][Ld[0X002]];local Sd=Dp[1];h5=Sm[lp];lp=lp+1;ld=1;do(Dp)[ld+0X001]=Sd;end;(Dp)[ld]=Sd[h5[0X0005]];do lp=lp+1;end;do ld=0X1;end;Dp[ld](Dp[ld+1]);Bp=ld-1;lp=lp+0x1;lp=lp+1;h5=Sm[lp];lp=lp+1;lp=h5[0X6];end;else(Dp)[h5[0X0007]]=Dp[h5[0x006]]+Dp[h5[1]];end;end;end;end;else if m5>=0x7 then do if not(m5<0XB)then do if not(m5>=0XD)then if m5==0XC then do Dp[0X000]=dp[h5[0x2]];end;h5=Sm[lp];lp=lp+0X001;local L9=(0);Dp[1]=h5[0x2];do lp=lp+0X01;end;(Dp)[L9]=Dp[L9](Dp[L9+0x0001]);do Bp=L9;end;lp=lp+1;lp=lp+1;do h5=Sm[lp];end;do lp=lp+1;end;if not Dp[0]then lp=h5[6];end;else do Dp[0]=dp[h5[0x2]];end;lp=lp+1;lp=lp+0X1;do h5=Sm[lp];end;do lp=lp+0x1;end;(Dp)[0]=Dp[0][h5[0X05]];h5=Sm[lp];do lp=lp+1;end;if not Dp[0X0]then lp=h5[0X06];end;end;else do if m5==14 then do(Dp)[h5[0X7]]=a(Dp[h5[0X6]]);end;else repeat local dK,RK=Cm,(Dp);if not(#dK>0X0000)then else local Ag=({});for V5,Z5 in I,dK do for WH,OH in I,Z5 do do if not(OH[1]==RK and OH[0X2]>=0x0000)then else local fS=(OH[2]);if not(not Ag[fS])then else(Ag)[fS]={RK[fS]};end;do OH[1]=Ag[fS];end;(OH)[0x002]=0X1;end;end;end;end;end;until true;do return;end;end;end;end;end;else if not(m5>=9)then if m5==0X00008 then do Dp[h5[7]]=h5[2];end;else do lp=h5[6];end;end;else if m5==0Xa then if Dp[h5[6]]~=h5[5]then lp=h5[0x07];end;else end;end;end;end;else if not(m5>=0X00003)then if not(m5>=1)then if Dp[h5[0x0007]]then lp=h5[6];end;else if m5~=2 then do(Dp)[0X000]=dp[h5[2]];end;lp=lp+1;Bp=0;do Dp[Bp]=Dp[Bp]();end;do lp=lp+1;end;lp=lp+1;do h5=Sm[lp];end;lp=lp+0X1;(Dp)[1]=dp[h5[2]];lp=lp+1;Dp[0]=Dp[0X0]-Dp[1];h5=Sm[lp];lp=lp+1;if not(h5[0X0002]<Dp[0X000])then else lp=h5[7];end;else(Dp)[0X0]=dp[h5[0X2]];lp=lp+1;do lp=lp+0X1;end;h5=Sm[lp];lp=lp+1;do Dp[0X01]=h5[0X2];end;local Kr=(0X00);lp=lp+0X1;do Dp[Kr]=Dp[Kr](Dp[Kr+1]);end;Bp=Kr;h5=Sm[lp];lp=lp+0X0001;if not Dp[0x0]then lp=h5[6];end;end;end;else if m5>=5 then if m5==6 then Dp[h5[0X7]]=W(Dp[h5[0X06]],Dp[h5[1]]);else Dp[h5[7]]=dp[h5[0x2]];end;else if m5~=0X4 then do Dp[0]=dp[h5[2]];end;lp=lp+0x1;lp=lp+1;h5=Sm[lp];lp=lp+0X1;local JO=(0);do(Dp)[1]=h5[2];end;lp=lp+1;(Dp[JO])(Dp[JO+1]);Bp=JO-1;do h5=Sm[lp];end;lp=lp+0X01;do lp=h5[6];end;else repeat local lX,kX=Cm,(Dp);if not(#lX>0)then else local Z5=({});for fs,Bs in I,lX do for s3,K3 in I,Bs do if not(K3[1]==kX and K3[0X2]>=0X0000)then else local f6=K3[0X0002];do if not(not Z5[f6])then else(Z5)[f6]={kX[f6]};end;end;do K3[1]=Z5[f6];end;(K3)[0X2]=0X1;end;end;end;end;until true;local Jh=(h5[7]);do return false,Jh,Jh+h5[6]-2;end;end;end;end;end;end;end;end;end);if Mp then do if kp then if Jp~=0X1 then return Dp[Zp](f(Dp,Zp+0X1,Bp));else return Dp[Zp]();end;elseif not(Zp)then else return f(Dp,Zp,Jp);end;end;else if e(kp)~="st\114\in\g"then(V)(kp,0X0);else if p(kp,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if p(kp,"^.-:%d+: ")then(V)('\L\117\114\097\p\h\ \Sc\114\105\112t\:'..(Dm[lp-0x001]or'\040in\116\e\114na\l\041')..':\ '..v(kp),0);else(V)(kp,0);end;end;end;end;end;else do Km=function(...)local QD={};local AD=0X0001;local uD=K();local HD,bD={[1]=Xm,[2]=QD},0X0;local sD=(uD==g and Qm or uD);local BD,aD=eH(...);BD=BD-0X1;for uE=0X0000,BD do if km>uE then(QD)[uE]=aD[uE+1];else break;end;end;if not Lm then do aD=nil;end;elseif not(Um)then else(QD)[km]={n=BD>=km and BD-km+0X0001 or 0,f(aD,km+1,BD+0X001)};end;do if sD==uD then else(w)(Km,sD);end;end;while true do local IC=Sm[AD];AD=AD+1;local cC=(IC[4]);return(function(Y,H,...)_C("AbandonQuest");end)(QD,bm,...);end;end;end;end;end;else if not(xm>=54)then do if not(xm>=52)then Km=function(...)local PE=(1);local LE=({});local zE=(K());local rE,oE=eH(...);local eE={[1]=Xm,[2]=LE};rE=rE-1;local FE=(zE==g and Qm or zE);for yf=0,rE do if not(km>yf)then break;else do(LE)[yf]=oE[yf+1];end;end;end;if not Lm then do oE=nil;end;elseif Um then do(LE)[km]={n=rE>=km and rE-km+0X1 or 0X00000,f(oE,km+1,rE+1)};end;end;do if FE==zE then else w(Km,FE);end;end;local TE=0X0;while true do local d7=(Sm[PE]);local A7=d7[4];PE=PE+1;do return(function(r,e,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(LE,bm,...);end;end;end;else do if xm==0X35 then do Km=function(...)local Hg,Yg=1,({});local Fg=({[1]=Xm,[2]=Yg});local Ug=(K());local Lg,eg=0X00000,(Ug==g and Qm or Ug);local Jg,Sg=eH(...);Jg=Jg-0X1;do for Ao=0X0,Jg do if km>Ao then do Yg[Ao]=Sg[Ao+0x1];end;else break;end;end;end;do if not Lm then do Sg=nil;end;elseif Um then(Yg)[km]={n=Jg>=km and Jg-km+0X1 or 0X0,f(Sg,km+1,Jg+1)};end;end;do if eg~=Ug then w(Km,eg);end;end;local Xg,Pg,Bg,Rg=o(function()do while true do local o5=(Sm[Hg]);local d5=(o5[4]);Hg=Hg+1;if not(d5<10)then if not(d5<15)then if not(d5>=17)then if d5~=0X00010 then local Mv=(bm[0X0000]);do(Yg)[0]=Mv[0x00001][Mv[0X2]];end;local Hv=(0);Hg=Hg+0X00001;do Hg=Hg+1;end;do o5=Sm[Hg];end;do Hg=Hg+0X1;end;local xv=Yg[0];Yg[Hv+0X1]=xv;Yg[Hv]=xv[o5[5]];do Hg=Hg+0X1;end;Hv=0X0;Yg[Hv]=Yg[Hv](Yg[Hv+1]);Lg=Hv;do o5=Sm[Hg];end;Hg=Hg+1;do if not Yg[0X00]then do Hg=o5[0X6];end;end;end;else do(Yg)[o5[7]]=l(Yg[o5[0X6]],Yg[o5[1]]);end;end;else if not(d5>=0X12)then(Yg)[o5[0X7]]=eg[o5[0x02]];else if d5==0X13 then if not(Yg[o5[6]]<=Yg[o5[1]])then do Hg=o5[7];end;end;else do(Yg)[o5[7]]=o5[0X2];end;end;end;end;else do if not(d5<0XC)then if not(d5>=0x00d)then local pe=(o5[0X7]);local Ne=(r(function(...)(C)();do for Mm,fm,Nm,em,Jm,Hm,Bm,Ym,jm,tm in...do C(true,{Mm,fm,Nm,em,Jm,Hm,Bm,Ym,jm,tm});end;end;end));(Ne)(Yg[pe],Yg[pe+1],Yg[pe+0X00002]);do Lg=pe;end;do(Yg)[pe]=Ne;end;Hg=o5[6];else do if d5~=14 then(Yg)[o5[7]]=O(Yg[o5[6]],Yg[o5[1]]);else do Yg[o5[7]]={f({},1,o5[6])};end;end;end;end;else if d5~=11 then for Xr=o5[0X7],o5[6]do Yg[Xr]=nil;end;else repeat local x5,L5=Cm,Yg;if#x5>0 then local qU={};for rY,kY in I,x5 do for Cs,gs in I,kY do do if not(gs[1]==L5 and gs[2]>=0)then else local YC=(gs[0X02]);if not qU[YC]then qU[YC]={L5[YC]};end;gs[1]=qU[YC];gs[2]=1;end;end;end;end;end;until true;local o0=(o5[0X07]);do return false,o0,o0;end;end;end;end;end;else do if d5>=0X5 then if not(d5>=7)then if d5==6 then do Yg[0]=eg[o5[0X2]];end;Hg=Hg+0X1;do Hg=Hg+1;end;o5=Sm[Hg];Hg=Hg+0X1;do(Yg)[0X00000]=Yg[0X00000][o5[5]];end;o5=Sm[Hg];Hg=Hg+1;Hg=o5[6];else local SM,EM=Zm[o5[0x006]],(nil);local DM=(SM[0X03]);local KM=(#DM);if not(KM>0)then else EM={};for QW=0X1,KM do local kW=(DM[QW]);if kW[0X1]==0x0 then do EM[QW-1]={Yg,kW[0x2]};end;else EM[QW-1]=bm[kW[0X2]];end;end;(M)(Cm,EM);end;Yg[o5[0X07]]=dH(SM,EM,eg);end;else if not(d5>=0X8)then Hg=o5[6];else if d5==0x9 then do if not Yg[o5[0X7]]then Hg=o5[0x6];end;end;else end;end;end;else if not(d5<0X2)then do if d5<3 then repeat local IK,rK=Cm,Yg;if not(#IK>0)then else local g4={};for Nc,Ec in I,IK do for q1,u1 in I,Ec do if not(u1[0x1]==rK and u1[0X002]>=0)then else local SW=u1[0X02];if not(not g4[SW])then else g4[SW]={rK[SW]};end;(u1)[1]=g4[SW];do(u1)[0X2]=1;end;end;end;end;end;until true;return;else if d5==4 then(Yg)[0x000]=eg[o5[0x2]];do Hg=Hg+0x01;end;Lg=0;(Yg)[Lg]=Yg[Lg]();Hg=Hg+1;do Hg=Hg+1;end;Hg=Hg+0x1;do(Yg)[0]=not Yg[0];end;o5=Sm[Hg];do Hg=Hg+0x1;end;do Hg=o5[0X06];end;else(Yg)[o5[7]]=true;end;end;end;else if d5==0X1 then do Yg[o5[0X0007]]=Yg[o5[6]]>Yg[o5[0X001]];end;else(eg)[o5[2]]=Yg[o5[0x7]];end;end;end;end;end;end;end;end);if Xg then if Pg then do if Rg~=0X01 then do return Yg[Bg](f(Yg,Bg+1,Lg));end;else return Yg[Bg]();end;end;elseif Bg then return f(Yg,Bg,Rg);end;else if e(Pg)~='s\116ring'then(V)(Pg,0X0);else if not(p(Pg,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if p(Pg,"^.-:%d+: ")then(V)('Lur\097\p\104 \Sc\114i\p\116\058'..(Dm[Hg-0X1]or"(internal)")..':\ '..v(Pg),0);else(V)(Pg,0);end;end;end;end;end;end;else Km=function(...)local vi,Di=0X1,({});local yi=({[2]=Di,[1]=Xm});local li=K();local gi,ni=eH(...);local Ii=(0);do gi=gi-0X1;end;for iM=0X000,gi do if not(km>iM)then break;else Di[iM]=ni[iM+0x1];end;end;local Ai=(li==g and Qm or li);if not Lm then ni=nil;elseif not(Um)then else(Di)[km]={n=gi>=km and gi-km+1 or 0x0,f(ni,km+0x00001,gi+1)};end;if Ai==li then else(w)(Km,Ai);end;local xi,Wi,Oi,Ni=o(function()while true do local yJ=(Sm[vi]);local MJ=(yJ[0X4]);vi=vi+1;if MJ<6 then if MJ>=3 then if MJ<4 then(Di)[yJ[7]]=true;else if MJ==5 then do for Ha=yJ[7],yJ[0X00006]do Di[Ha]=nil;end;end;else if Di[yJ[6]]==Di[yJ[1]]then vi=yJ[7];end;end;end;else if MJ<0x01 then Di[yJ[0x7]]=yJ[2];else if MJ==0X00002 then else local Mg,Wg=Zm[yJ[6]],nil;local xg=(Mg[3]);local Xg=#xg;if not(Xg>0x000)then else Wg={};for hD=1,Xg do local qD=(xg[hD]);if qD[0x00001]~=0 then Wg[hD-0x1]=bm[qD[0X2]];else(Wg)[hD-0X1]={Di,qD[0X02]};end;end;M(Cm,Wg);end;(Di)[yJ[7]]=dH(Mg,Wg,Ai);end;end;end;else do if not(MJ<9)then if not(MJ>=0X0A)then Di[yJ[7]]=not Di[yJ[0X6]];else if MJ==11 then(Di)[0X00000]=Ai[yJ[2]];local GD=0X0;do yJ=Sm[vi];end;vi=vi+1;local vD=(Di[0x0]);(Di)[GD+1]=vD;do Di[GD]=vD[yJ[0X5]];end;yJ=Sm[vi];do vi=vi+1;end;Di[0X2]=yJ[0X2];do vi=vi+1;end;do GD=0X00;end;do(Di)[GD]=Di[GD](Di[GD+0X00001],Di[GD+0X02]);end;Ii=GD;vi=vi+0x001;vi=vi+0X1;yJ=Sm[vi];vi=vi+0X1;(Di)[0x1]=Ai[yJ[2]];vi=vi+1;vi=vi+0x1;yJ=Sm[vi];vi=vi+1;(Di)[0X1]=Di[0X001][yJ[5]];vi=vi+0X01;do vi=vi+1;end;yJ=Sm[vi];local sD=(Zm[yJ[0X6]]);local ID=(sD[0x3]);vi=vi+1;local eD=#ID;local cD=(nil);do if not(eD>0)then else cD={};for WM=1,eD do local LM=(ID[WM]);if LM[0X1]==0X0 then(cD)[WM-1]={Di,LM[0X002]};else cD[WM-0X1]=bm[LM[0X2]];end;end;(M)(Cm,cD);end;end;(Di)[2]=dH(sD,cD,Ai);vi=vi+0x1;GD=0X1;Di[GD](Di[GD+1]);Ii=GD-0X001;vi=vi+1;vi=vi+1;vi=vi+0x1;do repeat local yb,gb=Cm,Di;if not(#yb>0x0)then else local mN=({});for Hn,Rn in I,yb do for BW,SW in I,Rn do do if SW[1]==gb and SW[2]>=0 then local vc=(SW[0X02]);if not(not mN[vc])then else(mN)[vc]={gb[vc]};end;SW[1]=mN[vc];do(SW)[2]=0X0001;end;end;end;end;end;end;until true;end;do return;end;else(Di)[yJ[7]]={f({},1,yJ[0X6])};end;end;else do if MJ>=0X07 then if MJ~=0x8 then if not(Di[yJ[0X6]]<=Di[yJ[0X01]])then vi=yJ[7];end;else Di[yJ[7]]=Ai[yJ[2]];end;else vi=yJ[0X06];end;end;end;end;end;end;end);do if not(xi)then if e(Wi)~="\115\116\114i\110g"then(V)(Wi,0X0);else if p(Wi,'att\101\mpt t\o \121\105\el\d\ ac\114o\115\115\ met\097\109et\h\o\100\/\067%\045\ca\l\l \098\oun\100a\114\y')then return coroutine.yield();end;if not(p(Wi,"^.-:%d+: "))then(V)(Wi,0);else V("Luraph Script:"..(Dm[vi-1]or"(internal)")..": "..v(Wi),0);end;end;else if Wi then if Ni==0X1 then do return Di[Oi]();end;else do return Di[Oi](f(Di,Oi+0X001,Ii));end;end;elseif Oi then return f(Di,Oi,Ni);end;end;end;end;end;end;end;end;else if xm>=55 then if xm==56 then Km=function(...)local dI=0X1;local gI=({});local PI=(K());local UI,TI=eH(...);local tI=({[1]=Xm,[2]=gI});UI=UI-0X1;local iI=((PI==g and Qm or PI));for Tz=0X0,UI do if not(km>Tz)then break;else(gI)[Tz]=TI[Tz+1];end;end;do if not Lm then do TI=nil;end;elseif not(Um)then else gI[km]={n=UI>=km and UI-km+1 or 0,f(TI,km+1,UI+0X1)};end;end;local zI=(0X0);if iI~=PI then(w)(Km,iI);end;local xI,fI,YI,aI=o(function()while true do local Kk=Sm[dI];local Yk=Kk[0x4];dI=dI+0X1;if not(Yk<56)then if not(Yk>=0X054)then if not(Yk<70)then if Yk<77 then if not(Yk<73)then if Yk>=0X4b then if Yk==76 then tI[Kk[6]]=gI[Kk[0X0007]];else gI[Kk[7]][gI[Kk[0X6]]]=Kk[5];end;else if Yk==0x4a then local fg=(Kk[7]);gI[fg](gI[fg+1]);zI=fg-0X1;else(JH)[Kk[6]]=gI[Kk[7]];end;end;else if not(Yk<0X47)then if Yk==72 then(gI)[Kk[0x00007]]=a(gI[Kk[0x6]]);else local bq=(Kk[7]);local uq,yq=gI[bq]();do if not(uq)then else dI=Kk[0X6];(gI)[bq+0x3]=yq;end;end;end;else(gI)[Kk[7]]=gI[Kk[0X6]]/gI[Kk[1]];end;end;else do if not(Yk>=80)then if not(Yk>=0X0004e)then do if Kk[1]~=237 then repeat local Qw,Cw=Cm,gI;if#Qw>0 then local pj=({});do for oq,qq in I,Qw do for aB,ZB in I,qq do if ZB[0X1]==Cw and ZB[2]>=0 then local HY=(ZB[2]);if not(not pj[HY])then else pj[HY]={Cw[HY]};end;do(ZB)[1]=pj[HY];end;(ZB)[0X2]=1;end;end;end;end;end;until true;local yO=(Kk[7]);return false,yO,yO;else dI=dI-0X1;Sm[dI]={[4]=0X5,[0X006]=(Kk[6]-0X04),[7]=(Kk[0X0007]-4)};end;end;else if Yk==79 then(gI)[Kk[0x7]]=iI[Kk[2]];else do if Kk[1]==0x2b then dI=dI-0X1;Sm[dI]={[0X4]=0x4D,[6]=(Kk[6]-220),[7]=(Kk[0x07]-0X0DC)};else if not(not gI[Kk[7]])then else dI=Kk[6];end;end;end;end;end;else if not(Yk<82)then if Yk==0x000053 then if gI[Kk[6]]~=Kk[5]then else dI=Kk[7];end;else local Eu=(Kk[0X7]);zI=Eu+Kk[0X06]-1;do(gI)[Eu]=gI[Eu](f(gI,Eu+1,zI));end;zI=Eu;end;else if Yk==81 then local zs=((Kk[0X1]-1)*50);local ws=(Kk[0X7]);local Is=(gI[ws]);for u0=1,zI-ws do Is[zs+u0]=gI[ws+u0];end;else do gI[Kk[0X007]]=gI[Kk[6]]>=gI[Kk[0X1]];end;end;end;end;end;end;else if not(Yk<63)then if Yk>=66 then if not(Yk<68)then if Yk==0X00045 then local zd=Kk[6];(gI)[Kk[7]]=gI[zd]..gI[zd+1];else local LO=Kk[0x0007];local mO,EO=gI[LO+1],(gI[LO+2]);local NO=gI[LO];gI[LO]=r(function()for wj=NO,mO,EO do(C)(true,wj);end;end);dI=Kk[0X6];end;else if Yk==0x043 then(gI)[Kk[7]]={f({},0X1,Kk[0x00006])};else(gI)[Kk[0x7]]=gI[Kk[6]]==gI[Kk[1]];end;end;else if Yk>=64 then do if Yk~=0x00041 then for NE=Kk[7],Kk[6]do(gI)[NE]=nil;end;else(gI)[Kk[7]]=Kk[2];end;end;else if Kk[0x1]==0x97 then dI=dI-1;Sm[dI]={[4]=0X0027,[7]=(Kk[0x7]-208),[6]=(Kk[0x6]-208)};else local wl=Kk[7];for mm=wl,wl+(Kk[0x006]-1)do gI[mm]=TI[km+(mm-wl)+1];end;end;end;end;else if Yk<0X3B then if Yk<57 then do if not(gI[Kk[0X6]]<=Kk[5])then dI=Kk[7];end;end;else if Yk~=58 then(gI)[Kk[7]]=gI[Kk[0X06]]^gI[Kk[0X1]];else gI[Kk[0X7]]=Kk[0x2]/gI[Kk[0X1]];end;end;else do if Yk>=0X3D then if Yk~=0X03E then do(gI)[Kk[0X007]]=W(gI[Kk[6]],gI[Kk[0X00001]]);end;else do(gI)[Kk[0X007]]=gI[Kk[6]]/Kk[5];end;end;else if Yk==60 then do(gI)[Kk[7]]=gI[Kk[0X6]]~=Kk[5];end;else do(gI)[Kk[0X7]]=j(gI[Kk[6]],gI[Kk[0x1]]);end;end;end;end;end;end;end;else if not(Yk<0X0062)then do if not(Yk<0X69)then if not(Yk<108)then if not(Yk>=110)then do if Yk==109 then(gI)[Kk[0X00007]]=#gI[Kk[6]];else local CQ=(Kk[0X007]);local RQ=r(function(...)(C)();for Mm,Gm in...do(C)(true,Mm,Gm);end;end);RQ(gI[CQ],gI[CQ+0X1],gI[CQ+2]);zI=CQ;(gI)[CQ]=RQ;dI=Kk[6];end;end;else if Yk~=0x6f then do gI[Kk[0X7]]=gI[Kk[6]]<=gI[Kk[1]];end;else do if not(not(Kk[0X0002]<=gI[Kk[1]]))then else do dI=Kk[7];end;end;end;end;end;else if not(Yk>=0x0006A)then do dI=Kk[0X6];end;else if Yk==107 then local bV=(Kk[0x7]);local vV,AV,sV=gI[bV]();if not(vV)then else(gI)[bV+0X01]=AV;(gI)[bV+0X02]=sV;dI=Kk[0X6];end;else gI[Kk[0X00007]]=Kk[0X0002]+gI[Kk[1]];end;end;end;else if not(Yk>=101)then if Yk<0X0063 then(gI[Kk[7]])[gI[Kk[0X006]]]=gI[Kk[0X1]];else if Yk~=0x064 then local mH,aH=Kk[7],(Kk[0X6]);if aH==0 then else zI=mH+aH-1;end;local OH=(Kk[1]);local jH,NH=nil,(nil);if aH==0x1 then jH,NH=eH(gI[mH]());else jH,NH=eH(gI[mH](f(gI,mH+1,zI)));end;if OH~=0X00001 then if OH~=0X0 then jH=mH+OH-2;zI=jH+1;else do jH=jH+mH-1;end;zI=jH;end;local Es=(0X0);for OC=mH,jH do Es=Es+0X1;(gI)[OC]=NH[Es];end;else zI=mH-1;end;else local hn=Kk[0X0007];(gI)[hn]=gI[hn](gI[hn+0X1],gI[hn+2]);do zI=hn;end;end;end;else do if not(Yk<103)then if Yk~=0x0068 then local Vj=Kk[7];local hj=r(function(...)C();for sS,PS,TS,ZS,fS,uS,qS,oS,RS,US in...do(C)(true,{sS,PS,TS,ZS,fS,uS,qS,oS,RS,US});end;end);hj(gI[Vj],gI[Vj+1],gI[Vj+2]);zI=Vj;gI[Vj]=hj;dI=Kk[6];else if gI[Kk[6]]<Kk[5]then dI=Kk[0X7];end;end;else do if Yk~=0X00066 then if not(not(gI[Kk[6]]<Kk[0X005]))then else do dI=Kk[0X007];end;end;else gI[Kk[7]]=Kk[2]-gI[Kk[1]];end;end;end;end;end;end;end;else if not(Yk>=91)then if not(Yk<0X57)then if not(Yk>=0X59)then if Yk==0X00058 then gI[Kk[0X7]]=gI[Kk[0X6]]%gI[Kk[0x1]];else local yj,kj=Kk[7],Kk[6];do zI=yj+kj-0x001;end;repeat local Cs,vs=Cm,(gI);if not(#Cs>0X0)then else local qF=({});for RZ,oZ in I,Cs do for mv,Pv in I,oZ do if Pv[0X1]==vs and Pv[2]>=0X0 then local f6=(Pv[2]);do if not qF[f6]then(qF)[f6]={vs[f6]};end;end;Pv[1]=qF[f6];(Pv)[2]=0X1;end;end;end;end;until true;return true,yj,kj;end;else if Yk==0X05a then do if Kk[1]==130 then dI=dI-1;Sm[dI]={[7]=(Kk[0x7]-0X0),[6]=(Kk[6]-0X0),[0X0004]=0X5};elseif Kk[0X1]==103 then do dI=dI-1;end;(Sm)[dI]={[0X00007]=(Kk[0X7]-100),[4]=0X0003f,[0X6]=(Kk[6]-100)};elseif Kk[1]~=186 then repeat local FP,jP,HP=Cm,gI,(Kk[0X0007]);if#FP>0X0 then local WX={};for NH,aH in I,FP do for gM,RM in I,aH do if not(RM[1]==jP and RM[2]>=HP)then else local rL=RM[0X2];if not WX[rL]then(WX)[rL]={jP[rL]};end;RM[0x0001]=WX[rL];(RM)[0x2]=1;end;end;end;end;until true;else dI=dI-0x00001;do(Sm)[dI]={[0x004]=0X00006d,[6]=(Kk[6]-192),[7]=(Kk[7]-192)};end;end;end;else(gI)[Kk[7]]=gI[Kk[6]][gI[Kk[0X1]]];end;end;else if Yk>=85 then if Yk==86 then local Oe=(Kk[6]);local Ze=gI[Oe];for fV=Oe+1,Kk[0X00001]do Ze=Ze..gI[fV];end;(gI)[Kk[7]]=Ze;else local nm,am=Kk[0X7],gI[Kk[6]];gI[nm+1]=am;gI[nm]=am[Kk[5]];end;else if not(gI[Kk[6]]<gI[Kk[1]])then dI=Kk[0x7];end;end;end;else if not(Yk<94)then if not(Yk>=0x60)then if Yk~=0X00005f then gI[Kk[7]]=gI[Kk[0x6]]%Kk[0x00005];else do(gI)[Kk[7]]=tI[Kk[0X006]];end;end;else do if Yk==97 then local Yt,vt=UI-km,(Kk[7]);if not(Yt<0x0000)then else Yt=-0X0001;end;for W3=vt,vt+Yt do(gI)[W3]=TI[km+(W3-vt)+1];end;zI=vt+Yt;else do(gI)[Kk[7]]=l(gI[Kk[0X06]],gI[Kk[0x1]]);end;end;end;end;else if Yk<0x5C then gI[Kk[0X7]]=gI[Kk[6]]<gI[Kk[0x001]];else if Yk==93 then do repeat local Wr,Ir=Cm,(gI);do if not(#Wr>0x000)then else local j8={};for xE,ME in I,Wr do for v5,p5 in I,ME do do if p5[1]==Ir and p5[0X2]>=0 then local Kt=(p5[0x00002]);if not j8[Kt]then j8[Kt]={Ir[Kt]};end;(p5)[0X1]=j8[Kt];do p5[0X2]=0X1;end;end;end;end;end;end;end;until true;end;local UE=(Kk[0X007]);zI=UE+0X001;return true,UE,0X2;else local BV=Kk[7];(gI)[BV]=gI[BV](gI[BV+0X00001]);do zI=BV;end;end;end;end;end;end;end;else do if Yk>=28 then do if Yk<0X2a then if Yk<35 then if Yk>=0x0001f then if Yk>=0X00021 then if Yk~=34 then local PZ=(bm[Kk[0X6]]);gI[Kk[0X7]]=PZ[1][PZ[0X2]];else gI[Kk[7]]=S(gI[Kk[0X0006]],gI[Kk[1]]);end;else if Yk~=32 then gI[Kk[0X7]]=gI[Kk[6]]*gI[Kk[0X01]];else gI[Kk[7]]=Kk[0X2]^gI[Kk[0X1]];end;end;else if not(Yk>=0x00001d)then(gI)[Kk[0x7]]=gI[Kk[6]]>Kk[5];else if Yk==30 then gI[Kk[7]]=true;else local LL=(Kk[0X7]);local EL,JL=gI[LL]();if EL then for pY=0X00001,Kk[1]do do(gI)[LL+pY]=JL[pY];end;end;do dI=Kk[6];end;end;end;end;end;else if Yk>=0X26 then if Yk>=0X28 then if Yk==0X29 then do repeat local R_,A_=Cm,(gI);if not(#R_>0)then else local l4=({});do for tX,KX in I,R_ do do for Tm,Rm in I,KX do if not(Rm[0X1]==A_ and Rm[2]>=0X0000)then else local FW=Rm[0X0002];if not(not l4[FW])then else(l4)[FW]={A_[FW]};end;Rm[0X1]=l4[FW];do Rm[0X0002]=0X0001;end;end;end;end;end;end;end;until true;end;return false,Kk[0x7],zI;else do if gI[Kk[6]]<gI[Kk[1]]then dI=Kk[0X0007];end;end;end;else if Yk~=0X27 then local IY=(Kk[7]);local xY,UY=gI[IY]();if xY then do gI[IY+1]=UY;end;dI=Kk[6];end;else if Kk[0x1]==197 then dI=dI-0X1;do Sm[dI]={[6]=(Kk[6]-141),[0X4]=19,[7]=(Kk[7]-0X8D)};end;elseif Kk[1]~=67 then gI[Kk[7]]=gI[Kk[0x00006]];else dI=dI-1;do Sm[dI]={[0X6]=(Kk[0x6]-0xB5),[7]=(Kk[7]-0xB5),[4]=0X5a};end;end;end;end;else if not(Yk>=36)then local lF=Kk[7];local OF=(Kk[0X1]-0X1)*50;local KF=(gI[lF]);for yL=1,Kk[0X00006]do KF[OF+yL]=gI[lF+yL];end;else if Yk~=0X000025 then local SE=(gI[Kk[0X06]]/gI[Kk[0X01]]);gI[Kk[7]]=SE-SE%0X1;else do gI[Kk[0x7]][Kk[2]]=gI[Kk[0X1]];end;end;end;end;end;else if Yk>=49 then if not(Yk>=52)then do if not(Yk<50)then if Yk~=51 then gI[Kk[7]]=O(gI[Kk[6]],gI[Kk[0X1]]);else local tP=(Kk[7]);gI[tP](gI[tP+1],gI[tP+0x2]);do zI=tP-1;end;end;else if gI[Kk[6]]==Kk[0X5]then else do dI=Kk[7];end;end;end;end;else if not(Yk>=0X36)then if Yk==0x035 then do gI[Kk[7]]=JH[Kk[0X06]];end;else zI=Kk[0x7];(gI[zI])();zI=zI-1;end;else if Yk==55 then gI[Kk[7]]=gI[Kk[6]]~=gI[Kk[0X1]];else(gI)[Kk[0X07]]=gI[Kk[6]][Kk[0X5]];end;end;end;else if not(Yk>=0X2D)then do if Yk>=0X02b then if Yk==0X002C then do if Kk[1]==0x13 then dI=dI-1;(Sm)[dI]={[0X6]=(Kk[6]-76),[0X7]=(Kk[0X7]-76),[0x4]=0X61};else(gI)[Kk[7]]=TI[km+0X1];end;end;else local N6=Kk[7];zI=N6+Kk[0X6]-0X1;(gI[N6])(f(gI,N6+0x1,zI));zI=N6-0x1;end;else local of=Zm[Kk[0X6]];local ff=(nil);local sf=(of[3]);local Pf=#sf;if Pf>0 then ff={};do for vs=1,Pf do local is=sf[vs];if is[0x01]==0 then do(ff)[vs-1]={gI,is[2]};end;else ff[vs-1]=bm[is[0X2]];end;end;end;M(Cm,ff);end;(gI)[Kk[0x7]]=dH(of,ff,iI);end;end;else do if Yk<47 then do if Yk==46 then gI[Kk[7]]=gI[Kk[0X6]]*Kk[5];else do gI[Kk[0X7]]=gI[Kk[6]]-Kk[5];end;end;end;else do if Yk==48 then do if gI[Kk[6]]~=gI[Kk[0x001]]then else dI=Kk[7];end;end;else if not(gI[Kk[0X6]]<=gI[Kk[0X1]])then dI=Kk[7];end;end;end;end;end;end;end;end;end;else do if Yk<14 then if not(Yk<0X7)then if not(Yk<10)then do if not(Yk>=12)then if Yk==11 then if Kk[0x0001]==0X54 then dI=dI-0X1;do(Sm)[dI]={[0x04]=0X40,[0x7]=(Kk[7]-0XA8),[6]=(Kk[6]-168)};end;elseif Kk[0X1]~=0X38 then if not(gI[Kk[0X7]])then else dI=Kk[0X6];end;else dI=dI-1;(Sm)[dI]={[4]=0X4D,[6]=(Kk[6]-192),[0x00007]=(Kk[0X007]-0Xc0)};end;else do(gI)[Kk[0x07]]=gI[Kk[6]]>gI[Kk[0x1]];end;end;else if Yk==0XD then gI[Kk[0X7]]=Kk[0X0002];else gI[Kk[0X7]]=false;end;end;end;else do if not(Yk<8)then if Yk~=0x9 then zI=Kk[0X7];do gI[zI]=gI[zI]();end;else if not(Kk[0X2]<gI[Kk[1]])then else do dI=Kk[7];end;end;end;else do(gI)[Kk[7]]=gI[Kk[0X06]]+gI[Kk[0x0001]];end;end;end;end;else do if not(Yk>=3)then if not(Yk<1)then if Yk~=2 then local ti=Kk[7];local Qi=(r(function(...)C();for w3 in...do C(true,w3);end;end));Qi(gI[ti],gI[ti+0X01],gI[ti+2]);zI=ti;do gI[ti]=Qi;end;dI=Kk[0X06];else do if Kk[0X1]==74 then dI=dI-0x1;do Sm[dI]={[4]=97,[6]=(Kk[0x6]-79),[7]=(Kk[0X007]-0X4F)};end;else repeat local gf,uf=Cm,(gI);if#gf>0 then local vx=({});for Ww,iw in I,gf do for US,CS in I,iw do if CS[1]==uf and CS[0X2]>=0X00 then local WY=CS[0x2];if not(not vx[WY])then else(vx)[WY]={uf[WY]};end;(CS)[0x0001]=vx[WY];do CS[0X2]=0x1;end;end;end;end;end;until true;do return;end;end;end;end;else gI[Kk[7]]=Kk[0X2]*gI[Kk[1]];end;else if not(Yk>=0X5)then if Yk==4 then if Kk[1]==0X91 then dI=dI-0x1;(Sm)[dI]={[4]=0X0005a,[6]=(Kk[0X6]-0x73),[0X7]=(Kk[0X7]-0x73)};else gI[Kk[0X07]]=not gI[Kk[6]];end;else local B9=bm[Kk[0X6]];do B9[1][B9[0X2]]=gI[Kk[7]];end;end;else if Yk==6 then(gI)[Kk[0X7]]=gI[Kk[0X6]]-gI[Kk[0X1]];else do if Kk[0X1]==0X8E then dI=dI-0X1;Sm[dI]={[4]=0X00003F,[0x7]=(Kk[7]-192),[6]=(Kk[0X006]-0X0000C0)};elseif Kk[0X01]==57 then do dI=dI-0X1;end;do Sm[dI]={[0X7]=(Kk[7]-42),[4]=4,[0X006]=(Kk[0x6]-42)};end;else repeat local zU,fU=Cm,(gI);if#zU>0 then local An={};for sR,nR in I,zU do for rO,jO in I,nR do if jO[0X00001]==fU and jO[2]>=0X000 then local VP=jO[2];do if not An[VP]then(An)[VP]={fU[VP]};end;end;jO[1]=An[VP];do(jO)[2]=0X1;end;end;end;end;end;until true;local vQ=Kk[7];return false,vQ,vQ+Kk[0X6]-0X2;end;end;end;end;end;end;end;else if not(Yk>=21)then if Yk<17 then do if not(Yk<15)then if Yk~=16 then if not(gI[Kk[6]]<=gI[Kk[0X00001]])then else dI=Kk[7];end;else gI[Kk[0X007]]={};end;else local G4=Kk[0X7];gI[G4]=gI[G4](f(gI,G4+1,zI));zI=G4;end;end;else if Yk<19 then if Yk~=18 then repeat local Lo,Ho=Cm,(gI);if#Lo>0X00000 then local sb=({});for GN,wN in I,Lo do do for HU,zU in I,wN do if not(zU[0X1]==Ho and zU[2]>=0)then else local dk=(zU[2]);if not sb[dk]then sb[dk]={Ho[dk]};end;zU[1]=sb[dk];do(zU)[2]=1;end;end;end;end;end;end;until true;return true,Kk[7],0X1;else do(gI)[Kk[7]]=gI[Kk[6]]==Kk[5];end;end;else if Yk==20 then repeat local Yd,Pd=Cm,gI;if#Yd>0X0 then local hU={};do for zm,Jm in I,Yd do for s2,W2 in I,Jm do if W2[0X1]==Pd and W2[2]>=0 then local rd=W2[2];if not(not hU[rd])then else hU[rd]={Pd[rd]};end;do(W2)[0X1]=hU[rd];end;W2[0X2]=0X0001;end;end;end;end;end;until true;return true,Kk[0X00007],0X0;else if Kk[1]==176 then dI=dI-1;Sm[dI]={[4]=90,[6]=(Kk[0X006]-245),[7]=(Kk[7]-0X0000f5)};else(gI)[Kk[0X0007]]=nil;end;end;end;end;else if Yk>=24 then if not(Yk>=26)then do if Yk==0X00019 then if not(not(Kk[0X2]<gI[Kk[0x1]]))then else dI=Kk[0X7];end;else do gI[Kk[7]][Kk[2]]=Kk[5];end;end;end;else if Yk~=0x1B then if gI[Kk[0X6]]~=gI[Kk[1]]then dI=Kk[7];end;else local re=Kk[0X7];(gI[re])(f(gI,re+0X0001,zI));zI=re-0x0001;end;end;else do if not(Yk<22)then if Yk~=23 then iI[Kk[0x2]]=gI[Kk[0x0007]];else gI[Kk[7]]=gI[Kk[0X00006]]+Kk[0X5];end;else if Kk[1]~=0xfe then gI[Kk[0X07]]=-gI[Kk[6]];else do dI=dI-0X1;end;Sm[dI]={[0X0007]=(Kk[0X7]-29),[0X6]=(Kk[0x6]-29),[4]=4};end;end;end;end;end;end;end;end;end;end;end;end);do if not(xI)then if e(fI)~="string"then V(fI,0X0);else if not(p(fI,"\097\116t\e\m\p\116\ to\032\y\ie\108d\032\097\099\114\os\115\ m\e\116a\109\et\104\111\100\/\067\037\-\099a\108\l\ bo\117n\100\097r\121"))then else do return coroutine.yield();end;end;if not(p(fI,'\^\.\-:\%\100\043\: '))then(V)(fI,0X0);else V("Luraph Script:"..(Dm[dI-1]or'\(\i\110\116\ern\097\108\041')..": "..v(fI),0);end;end;else if fI then if aI~=0X0001 then return gI[YI](f(gI,YI+0X001,zI));else return gI[YI]();end;elseif YI then return f(gI,YI,aI);end;end;end;end;else Km=function(...)local JM,AM=0X01,({});local dM=(0);local QM=(K());local EM,uM={[2]=AM,[1]=Xm},(QM==g and Qm or QM);local mM,GM=eH(...);do mM=mM-0X01;end;for pD=0,mM do if not(km>pD)then break;else AM[pD]=GM[pD+1];end;end;if not Lm then do GM=nil;end;elseif not(Um)then else do(AM)[km]={n=mM>=km and mM-km+0X1 or 0,f(GM,km+0X1,mM+0x0001)};end;end;if uM~=QM then(w)(Km,uM);end;local ZM,BM,FM,WM=o(function()while true do local XM=Sm[JM];local UM=(XM[0X4]);JM=JM+0x1;if not(UM<14)then if UM>=21 then do if UM>=24 then do if UM>=26 then do if UM~=0X1B then do(AM)[XM[0X7]]=AM[XM[0x6]]*AM[XM[1]];end;else local ka=XM[7];local Ba=XM[0X00006];dM=ka+Ba-0X1;repeat local gG,OG=Cm,AM;if not(#gG>0)then else local P7={};for NH,mH in I,gG do for yi,li in I,mH do if li[1]==OG and li[0x2]>=0 then local NY=(li[2]);if not(not P7[NY])then else(P7)[NY]={OG[NY]};end;do(li)[1]=P7[NY];end;do(li)[2]=0X1;end;end;end;end;end;until true;do return true,ka,Ba;end;end;end;else if UM==0X0019 then JM=XM[6];else do(AM)[0x0]=uM[XM[0X2]];end;do XM=Sm[JM];end;JM=JM+0X1;AM[0]=AM[0][XM[0X5]];XM=Sm[JM];JM=JM+0X1;do if not(not AM[0])then else do JM=XM[6];end;end;end;end;end;end;else if not(UM<0x16)then do if UM~=0X000017 then(AM)[1]=uM[XM[2]];do JM=JM+1;end;do JM=JM+1;end;XM=Sm[JM];JM=JM+0X1;if not(not AM[0x1])then else JM=XM[6];end;else do AM[XM[7]][AM[XM[0x6]]]=AM[XM[1]];end;end;end;else do AM[XM[0X7]]={f({},0X0001,XM[0x6])};end;end;end;end;else if not(UM<17)then if UM>=19 then if UM~=20 then(AM)[XM[7]]=AM[XM[0X6]]==AM[XM[0X001]];else local tX=XM[0x007];local sX=(r(function(...)C();do for nU,qU,fU,aU,TU,QU,kU,FU,oU,cU in...do(C)(true,{nU,qU,fU,aU,TU,QU,kU,FU,oU,cU});end;end;end));(sX)(AM[tX],AM[tX+1],AM[tX+0X0002]);dM=tX;(AM)[tX]=sX;JM=XM[0X6];end;else if UM~=0x12 then(AM)[XM[7]]=EM[XM[0X6]];else AM[0]=uM[XM[0X2]];JM=JM+1;dM=0;(AM)[dM]=AM[dM]();do JM=JM+0X1;end;do JM=JM+0X1;end;XM=Sm[JM];do JM=JM+1;end;if not(AM[0])then else do JM=XM[6];end;end;end;end;else if UM>=15 then if UM==16 then do(AM)[0X0]=uM[XM[2]];end;do JM=JM+0X00001;end;JM=JM+1;local Qi=(0x0);XM=Sm[JM];do JM=JM+1;end;(AM)[0x00]=AM[0X00000][XM[5]];do XM=Sm[JM];end;JM=JM+0x1;(AM)[1]=XM[2];JM=JM+0X001;(AM)[Qi]=AM[Qi](AM[Qi+1]);do dM=Qi;end;JM=JM+0X1;JM=JM+0X1;do XM=Sm[JM];end;JM=JM+0X01;if not AM[0]then do JM=XM[6];end;end;else if not(AM[XM[0x7]])then else JM=XM[0X6];end;end;else do AM[XM[7]]=uM[XM[2]];end;end;end;end;else if UM>=7 then if not(UM>=10)then do if UM>=8 then if UM==9 then AM[0x0]=uM[XM[2]];XM=Sm[JM];JM=JM+0x1;do AM[0]=AM[0][XM[5]];end;XM=Sm[JM];JM=JM+1;do if not AM[0]then JM=XM[6];end;end;else(AM)[0X00]=uM[XM[0X2]];do JM=JM+0x001;end;JM=JM+0X1;do JM=JM+1;end;dM=0X0;do AM[dM]=AM[dM]();end;do XM=Sm[JM];end;JM=JM+1;do if AM[0X0]<XM[0X005]then JM=XM[7];end;end;end;else local pn=(bm[0]);do AM[0]=pn[0X1][pn[2]];end;XM=Sm[JM];local En=(AM[0]);JM=JM+1;local Hn=(0);AM[Hn+0X1]=En;do(AM)[Hn]=En[XM[5]];end;JM=JM+0X001;Hn=0x0;AM[Hn](AM[Hn+0x01]);dM=Hn-1;JM=JM+1;repeat local nS,LS=Cm,(AM);if not(#nS>0X00000)then else local qk={};for ib,pb in I,nS do do for Cg,og in I,pb do if og[0X1]==LS and og[2]>=0 then local DM=og[0X0002];do if not(not qk[DM])then else qk[DM]={LS[DM]};end;end;(og)[0X01]=qk[DM];og[2]=1;end;end;end;end;end;until true;return;end;end;else do if UM>=12 then do if UM==0XD then local oo=(Zm[XM[6]]);local eo=(oo[0X03]);local xo=(#eo);local zo=(nil);if xo>0 then zo={};for L6=0X1,xo do local l6=eo[L6];do if l6[1]~=0 then(zo)[L6-0X1]=bm[l6[2]];else(zo)[L6-0X1]={AM,l6[0X02]};end;end;end;(M)(Cm,zo);end;(AM)[XM[7]]=dH(oo,zo,uM);else if AM[XM[6]]~=AM[XM[0X1]]then JM=XM[0X07];end;end;end;else if UM~=0XB then AM[XM[7]]=XM[2];else local As=bm[0];local os=0X000;AM[0x0000]=As[0X1][As[2]];do XM=Sm[JM];end;JM=JM+0X1;local Os=AM[0X0];do(AM)[os+0X00001]=Os;end;do AM[os]=Os[XM[5]];end;JM=JM+1;os=0;do(AM)[os]=AM[os](AM[os+1]);end;dM=os;do XM=Sm[JM];end;JM=JM+1;if not AM[0]then do JM=XM[6];end;end;end;end;end;end;else do if not(UM>=0x0003)then if not(UM<1)then if UM==0X2 then(AM)[0]=uM[XM[2]];JM=JM+1;do JM=JM+0X1;end;XM=Sm[JM];local C7=nil;JM=JM+1;local t7=Zm[XM[6]];local u7=t7[0X003];local n7=(#u7);do if not(n7>0)then else do C7={};end;for T4=1,n7 do local N4=u7[T4];do if N4[1]==0X00000 then C7[T4-0X1]={AM,N4[2]};else do C7[T4-1]=bm[N4[2]];end;end;end;end;(M)(Cm,C7);end;end;AM[1]=dH(t7,C7,uM);local z7=0x0;do JM=JM+0X001;end;AM[z7](AM[z7+0X1]);dM=z7-0X0001;XM=Sm[JM];do JM=JM+0x00001;end;(AM)[0]=uM[XM[0x2]];do JM=JM+0x00001;end;JM=JM+1;XM=Sm[JM];do JM=JM+1;end;(AM)[1]=XM[2];JM=JM+0X1;z7=0;do AM[z7]=AM[z7](AM[z7+0X0001]);end;do dM=z7;end;do XM=Sm[JM];end;JM=JM+0X00001;if not AM[0X0000]then JM=XM[0X6];end;else end;else(AM)[XM[0X7]]=AM[XM[6]]<=AM[XM[0X0001]];end;else do if UM<5 then do if UM~=0X4 then for l0=XM[7],XM[0x00006]do(AM)[l0]=nil;end;else(AM)[0]=uM[XM[2]];XM=Sm[JM];do JM=JM+0X00001;end;(AM)[1]=XM[0X002];local tc=0X000;do JM=JM+1;end;do(AM)[tc]=AM[tc](AM[tc+0X1]);end;dM=tc;XM=Sm[JM];JM=JM+0X1;if not AM[0X0]then JM=XM[6];end;end;end;else do if UM==6 then(AM)[XM[0x00007]]=AM[XM[0X0006]][AM[XM[1]]];else repeat local eY,BY=Cm,AM;if#eY>0 then local fP={};do for ho,to in I,eY do for WK,ZK in I,to do do if not(ZK[0X1]==BY and ZK[0X2]>=0X0)then else local K9=(ZK[0X0002]);if not fP[K9]then fP[K9]={BY[K9]};end;do ZK[1]=fP[K9];end;(ZK)[2]=1;end;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end;end;end);if not(ZM)then do if e(BM)~="string"then(V)(BM,0X00);else do if p(BM,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(p(BM,"^.-:%d+: "))then V(BM,0x0);else(V)("\L\117\114\097\p\h S\c\114\i\112\116\:"..(Dm[JM-1]or'\(\i\110\116\e\114\110a\l)')..": "..v(BM),0x0);end;end;end;else if BM then do if WM==0X1 then return AM[FM]();else return AM[FM](f(AM,FM+1,dM));end;end;elseif FM then return f(AM,FM,WM);end;end;end;end;else Km=function(...)local oL=0X1;local xL={};local TL=(K());local LL=({[2]=xL,[1]=Xm});local YL=(0);local HL,gL=eH(...);local PL=((TL==g and Qm or TL));HL=HL-0X1;for Co=0,HL do if km>Co then xL[Co]=gL[Co+0X1];else break;end;end;if not Lm then do gL=nil;end;elseif Um then xL[km]={n=HL>=km and HL-km+0x1 or 0,f(gL,km+0x1,HL+0x1)};end;if PL==TL then else w(Km,PL);end;local cL,tL,GL,QL=o(function()while true do local Bl=(Sm[oL]);local Ql=(Bl[4]);oL=oL+0X1;if Ql<24 then if not(Ql>=0X000c)then if Ql<6 then do if Ql<3 then if not(Ql>=0x01)then xL[0X2]=PL[Bl[0x2]];oL=oL+1;oL=oL+1;Bl=Sm[oL];oL=oL+1;(xL)[0X0002]=xL[0X2][Bl[0x0005]];do oL=oL+0X1;end;oL=oL+0X001;Bl=Sm[oL];oL=oL+0X1;if not xL[2]then do oL=Bl[0X00006];end;end;else if Ql~=0X2 then(xL)[0X0002]=PL[Bl[0x02]];Bl=Sm[oL];oL=oL+1;(xL)[2]=xL[0X2][Bl[5]];Bl=Sm[oL];oL=oL+0x01;do if xL[2]then oL=Bl[6];end;end;else xL[Bl[0X7]]={f({},1,Bl[0x006])};end;end;else if Ql>=0X4 then if Ql~=0x005 then if not(not(Bl[0x00002]<=xL[Bl[0X00001]]))then else do oL=Bl[7];end;end;else(xL)[Bl[7]]=W(xL[Bl[6]],xL[Bl[1]]);end;else xL[Bl[7]]=xL[Bl[0X006]]*xL[Bl[1]];end;end;end;else if not(Ql>=9)then if not(Ql>=7)then do for JY=0X02,3 do(xL)[JY]=nil;end;end;do Bl=Sm[oL];end;oL=oL+0x01;(xL)[4]=PL[Bl[2]];do oL=oL+0x1;end;oL=oL+0X1;Bl=Sm[oL];oL=oL+1;(xL)[4]=xL[0X4][Bl[0x0005]];do oL=oL+0x00001;end;do oL=oL+1;end;Bl=Sm[oL];do oL=oL+0x1;end;if not(xL[0X00004])then else oL=Bl[0X0006];end;else if Ql~=0x8 then(xL)[Bl[7]]=xL[Bl[6]];else end;end;else do if not(Ql<10)then if Ql~=11 then do if not(Bl[0X2]<xL[Bl[1]])then do oL=Bl[0X07];end;end;end;else(xL)[2]=PL[Bl[2]];oL=oL+0X1;do oL=oL+1;end;oL=oL+0X001;do YL=0x2;end;(xL[YL])();YL=YL-1;do oL=oL+1;end;oL=oL+1;do Bl=Sm[oL];end;oL=oL+1;(xL)[2]=PL[Bl[2]];oL=oL+1;oL=oL+1;Bl=Sm[oL];oL=oL+1;xL[2][Bl[2]]=Bl[5];do oL=oL+0X1;end;repeat local Md,Wd=Cm,xL;if not(#Md>0X0)then else local mH={};for Qf,sf in I,Md do for dP,wP in I,sf do do if not(wP[0X00001]==Wd and wP[0X2]>=0)then else local qw=wP[2];do if not mH[qw]then do mH[qw]={Wd[qw]};end;end;end;(wP)[0X1]=mH[qw];do(wP)[2]=1;end;end;end;end;end;end;until true;return;end;else do xL[0X004]=PL[Bl[0x002]];end;Bl=Sm[oL];oL=oL+1;xL[5]=Bl[2];oL=oL+0X001;local uh=(4);(xL[uh])(xL[uh+1]);do YL=uh-1;end;Bl=Sm[oL];oL=oL+1;(xL)[0X0004]=PL[Bl[2]];Bl=Sm[oL];oL=oL+1;xL[0X4][Bl[2]]=Bl[0X5];Bl=Sm[oL];oL=oL+0X1;xL[4]=PL[Bl[2]];oL=oL+1;do YL=4;end;(xL[YL])();YL=YL-0X00001;do Bl=Sm[oL];end;oL=oL+0X1;xL[0X00004]=PL[Bl[2]];oL=oL+1;oL=oL+0X1;Bl=Sm[oL];do oL=oL+1;end;xL[5]=PL[Bl[2]];do oL=oL+1;end;oL=oL+1;oL=oL+1;do uh=0X0004;end;xL[uh](xL[uh+0x1]);do YL=uh-1;end;Bl=Sm[oL];oL=oL+0X001;oL=Bl[6];end;end;end;end;else if not(Ql>=18)then if Ql<0xF then if not(Ql>=0X00D)then if xL[Bl[6]]<=xL[Bl[1]]then do oL=Bl[0x007];end;end;else if Ql==0xE then xL[0X4]=true;Bl=Sm[oL];do oL=oL+1;end;(PL)[Bl[2]]=xL[4];Bl=Sm[oL];oL=oL+0X01;oL=Bl[0X6];else(xL)[4]=PL[Bl[2]];oL=oL+0X1;oL=oL+1;do Bl=Sm[oL];end;oL=oL+0x00001;(xL)[5]=Bl[0X002];Bl=Sm[oL];oL=oL+0X1;local FE=4;xL[0X6]=Bl[2];do oL=oL+0X1;end;(xL[FE])(xL[FE+0X00001],xL[FE+2]);YL=FE-0X1;oL=oL+0X00001;oL=oL+0X1;Bl=Sm[oL];do oL=oL+1;end;(xL)[4]=PL[Bl[2]];oL=oL+0x1;oL=oL+0X1;Bl=Sm[oL];oL=oL+1;(xL)[5]=Bl[2];oL=oL+0X1;FE=4;xL[FE]=xL[FE](xL[FE+0x1]);YL=FE;Bl=Sm[oL];oL=oL+1;if xL[4]~=Bl[0X5]then else oL=Bl[7];end;end;end;else do if not(Ql>=16)then xL[0X2]=PL[Bl[0x0002]];do oL=oL+1;end;oL=oL+0X1;Bl=Sm[oL];oL=oL+1;(xL)[0X2]=xL[2][Bl[5]];do Bl=Sm[oL];end;oL=oL+0x1;if xL[0X2]then do oL=Bl[0X006];end;end;else if Ql~=0X000011 then xL[6]=PL[Bl[0X002]];Bl=Sm[oL];local W8=6;oL=oL+0x1;(xL)[0X7]=Bl[0X2];oL=oL+0X1;(xL)[0X008]=true;oL=oL+0X1;do(xL)[W8]=xL[W8](xL[W8+1],xL[W8+2]);end;YL=W8;local R8=(xL[6]);do oL=oL+0x1;end;oL=oL+1;Bl=Sm[oL];oL=oL+1;W8=6;xL[W8+1]=R8;xL[W8]=R8[Bl[0X00005]];Bl=Sm[oL];do oL=oL+1;end;(xL)[0x8]=Bl[0x2];oL=oL+1;do W8=0X6;end;(xL)[W8]=xL[W8](xL[W8+0X01],xL[W8+0X0002]);do YL=W8;end;oL=oL+0X001;oL=oL+0X00001;do Bl=Sm[oL];end;oL=oL+1;xL[0x6]=xL[6][Bl[5]];do oL=oL+1;end;oL=oL+0X1;do Bl=Sm[oL];end;oL=oL+1;oL=Bl[0x6];else(xL)[4]=false;Bl=Sm[oL];do oL=oL+1;end;PL[Bl[2]]=xL[4];Bl=Sm[oL];do oL=oL+1;end;do(xL)[4]=PL[Bl[2]];end;Bl=Sm[oL];oL=oL+1;if not(not xL[0X00004])then else do oL=Bl[6];end;end;end;end;end;end;else if not(Ql<21)then if not(Ql>=22)then oL=Bl[0x6];else if Ql~=23 then if not(xL[Bl[7]])then else oL=Bl[6];end;else(xL)[0x002]=PL[Bl[2]];oL=oL+0X00001;oL=oL+0X01;do Bl=Sm[oL];end;oL=oL+0X1;(xL)[0X2]=xL[2][Bl[5]];Bl=Sm[oL];oL=oL+1;if not(xL[2])then else oL=Bl[0X6];end;end;end;else do if Ql>=19 then do if Ql==20 then(xL)[4]=PL[Bl[0X02]];local DY=4;Bl=Sm[oL];do oL=oL+0X001;end;(xL)[0x0005]=PL[Bl[2]];oL=oL+0X00001;oL=oL+1;Bl=Sm[oL];oL=oL+0x01;do(xL)[0X0006]=Bl[0X002];end;Bl=Sm[oL];oL=oL+0X1;local IY=(3);(xL)[0X7]=Bl[0x2];do Bl=Sm[oL];end;oL=oL+0x00001;(xL)[8]=Bl[0X2];do oL=oL+0X1;end;local VY=(5);do if VY~=0X0 then YL=DY+VY-1;end;end;local jY,XY=nil,(nil);if VY~=0X00001 then jY,XY=eH(xL[DY](f(xL,DY+1,YL)));else jY,XY=eH(xL[DY]());end;if IY~=0x0001 then if IY==0 then jY=jY+DY-1;YL=jY;else jY=DY+IY-0X2;YL=jY+0X1;end;local EU=(0x00000);for R9=DY,jY do do EU=EU+1;end;(xL)[R9]=XY[EU];end;else YL=DY-0x1;end;oL=oL+1;xL[0X3]=xL[0X5];do oL=oL+1;end;xL[2]=xL[0X004];Bl=Sm[oL];oL=oL+1;oL=Bl[0x06];else xL[0X00002]=PL[Bl[2]];do oL=oL+0X001;end;oL=oL+1;do Bl=Sm[oL];end;oL=oL+0x1;(xL)[2]=xL[0X00002][Bl[5]];do oL=oL+0X1;end;oL=oL+1;Bl=Sm[oL];oL=oL+0X1;if xL[2]then oL=Bl[6];end;end;end;else if not(not xL[Bl[0X7]])then else do oL=Bl[6];end;end;end;end;end;end;end;else if Ql>=0X24 then if Ql<42 then if Ql>=39 then if not(Ql>=40)then for Oh=Bl[0X7],Bl[6]do xL[Oh]=nil;end;else if Ql~=41 then(PL)[Bl[0X2]]=xL[Bl[0X7]];else(xL)[0X0004]=PL[Bl[2]];oL=oL+1;oL=oL+1;Bl=Sm[oL];oL=oL+0x0001;(xL)[5]=Bl[0X02];Bl=Sm[oL];oL=oL+1;xL[0X6]=Bl[2];local sk=(4);Bl=Sm[oL];oL=oL+1;do xL[0X7]=Bl[0X00002];end;Bl=Sm[oL];oL=oL+0x01;xL[0X8]=Bl[0X2];oL=oL+0X1;YL=sk+0X0005-1;xL[sk](f(xL,sk+0X1,YL));YL=sk-1;oL=oL+1;oL=oL+1;do Bl=Sm[oL];end;do oL=oL+0X1;end;xL[4]=PL[Bl[0X2]];oL=oL+1;oL=oL+1;Bl=Sm[oL];oL=oL+0x1;xL[0X00004]=xL[4]+Bl[0x5];Bl=Sm[oL];oL=oL+0X1;PL[Bl[2]]=xL[4];do Bl=Sm[oL];end;oL=oL+1;oL=Bl[0X6];end;end;else do if Ql<37 then xL[0X004]=PL[Bl[2]];oL=oL+0X1;oL=oL+1;Bl=Sm[oL];local BD=(4);oL=oL+0X001;(xL)[0x5]=Bl[2];do oL=oL+0X0001;end;xL[0X06]=true;oL=oL+1;(xL)[BD]=xL[BD](xL[BD+0X1],xL[BD+0X00002]);do YL=BD;end;Bl=Sm[oL];do oL=oL+0X01;end;if xL[4]then do oL=Bl[0x6];end;end;else if Ql~=0x26 then do if xL[Bl[0x006]]==Bl[0x5]then else oL=Bl[0X07];end;end;else(xL)[0X2]=PL[Bl[0X2]];oL=oL+1;oL=oL+0X1;Bl=Sm[oL];do oL=oL+0X001;end;local Fm=2;xL[3]=Bl[0X0002];oL=oL+0X00001;(xL)[Fm]=xL[Fm](xL[Fm+1]);YL=Fm;oL=oL+0x1;oL=oL+0X1;Bl=Sm[oL];do oL=oL+1;end;if not xL[2]then do oL=Bl[6];end;end;end;end;end;end;else if not(Ql<45)then do if Ql<0x2f then do if Ql==0X2e then xL[Bl[7]]=Bl[2];else(xL)[0X00005]=PL[Bl[0X2]];oL=oL+0X1;do YL=0X5;end;xL[YL]=xL[YL]();Bl=Sm[oL];do oL=oL+0X01;end;if not(xL[5])then else oL=Bl[0X6];end;end;end;else do if Ql==48 then repeat local af,yf=Cm,xL;if#af>0 then local lz=({});for Xd,Td in I,af do do for ic,Jc in I,Td do if not(Jc[0x01]==yf and Jc[0X2]>=0)then else local Jz=(Jc[2]);do if not(not lz[Jz])then else(lz)[Jz]={yf[Jz]};end;end;Jc[0x1]=lz[Jz];Jc[2]=1;end;end;end;end;end;until true;return;else if xL[Bl[6]]==Bl[5]then do oL=Bl[7];end;end;end;end;end;end;else if not(Ql<43)then do if Ql==0X002c then local U6=(Zm[Bl[6]]);local G6=(U6[3]);local z6=(nil);local P6=#G6;if not(P6>0)then else z6={};for RY=1,P6 do local nY=G6[RY];if nY[0x1]~=0 then z6[RY-0x00001]=bm[nY[2]];else z6[RY-0x01]={xL,nY[2]};end;end;M(Cm,z6);end;do xL[Bl[7]]=dH(U6,z6,PL);end;else xL[Bl[0X007]]=xL[Bl[0X06]][xL[Bl[1]]];end;end;else(xL)[0]=Bl[0X00002];Bl=Sm[oL];oL=oL+0X1;do PL[Bl[2]]=xL[0];end;Bl=Sm[oL];do oL=oL+0X001;end;do xL[0X0]=PL[Bl[2]];end;Bl=Sm[oL];oL=oL+1;do xL[0X1]=PL[Bl[2]];end;local VW,RW=3,0;do Bl=Sm[oL];end;oL=oL+0x00001;xL[0X2]=Bl[0X002];Bl=Sm[oL];oL=oL+0x1;(xL)[3]=PL[Bl[0X0002]];oL=oL+1;oL=oL+0X1;Bl=Sm[oL];oL=oL+0X001;(xL)[0x3]=xL[0X3][Bl[0x5]];do oL=oL+0X1;end;local pW=(4);if pW==0X0 then else do YL=RW+pW-1;end;end;local sW,ZW=nil,(nil);if pW==1 then sW,ZW=eH(xL[RW]());else sW,ZW=eH(xL[RW](f(xL,RW+1,YL)));end;do if VW~=1 then do if VW~=0x0 then do sW=RW+VW-0x0002;end;YL=sW+0X1;else sW=sW+RW-1;YL=sW;end;end;local mK=(0);for Qu=RW,sW do mK=mK+0X0001;do(xL)[Qu]=ZW[mK];end;end;else YL=RW-1;end;end;oL=oL+0X1;oL=oL+1;Bl=Sm[oL];do oL=oL+1;end;if xL[0X01]==Bl[5]then oL=Bl[7];end;end;end;end;else if not(Ql>=0x1E)then if Ql<27 then if not(Ql>=25)then(xL)[0x02]=PL[Bl[0X02]];do Bl=Sm[oL];end;do oL=oL+1;end;do(xL)[0X2]=xL[2][Bl[0X5]];end;oL=oL+1;oL=oL+1;Bl=Sm[oL];do oL=oL+1;end;if not(xL[2])then else oL=Bl[0X0006];end;else do if Ql~=26 then(xL)[Bl[7]]=xL[Bl[6]]==xL[Bl[1]];else xL[4]=PL[Bl[0X2]];oL=oL+0x01;oL=oL+1;Bl=Sm[oL];do oL=oL+1;end;xL[4][Bl[2]]=Bl[0X5];Bl=Sm[oL];oL=oL+1;(xL)[4]=PL[Bl[0x2]];Bl=Sm[oL];oL=oL+1;xL[4]=xL[4][Bl[5]];Bl=Sm[oL];do oL=oL+0X1;end;(xL)[4]=xL[0X0004][Bl[0x5]];Bl=Sm[oL];oL=oL+0X1;do(xL)[4]=xL[4][Bl[5]];end;oL=oL+0X1;do oL=oL+1;end;do Bl=Sm[oL];end;oL=oL+0X1;if not(not(Bl[2]<=xL[4]))then else do oL=Bl[7];end;end;end;end;end;else if Ql>=0X1c then if Ql~=0X00001d then xL[0X0002]=PL[Bl[0x2]];do oL=oL+1;end;oL=oL+1;Bl=Sm[oL];oL=oL+0X1;(xL)[0X2]=xL[0X2][Bl[0X5]];do Bl=Sm[oL];end;oL=oL+1;do if not(xL[2])then else oL=Bl[6];end;end;else do(xL)[Bl[7]]=PL[Bl[2]];end;end;else do xL[2]=PL[Bl[0x2]];end;oL=oL+0X1;oL=oL+0x1;Bl=Sm[oL];oL=oL+0X00001;xL[0x0002]=xL[2][Bl[0X5]];Bl=Sm[oL];oL=oL+1;do if not(xL[0X002])then else do oL=Bl[0X6];end;end;end;end;end;else if not(Ql>=0X21)then if not(Ql<0X1f)then if Ql==32 then(xL)[6]=PL[Bl[2]];do Bl=Sm[oL];end;oL=oL+0X0001;xL[0X6]=xL[6][Bl[0X00005]];do oL=oL+0X1;end;do oL=oL+1;end;Bl=Sm[oL];oL=oL+1;if xL[6]then oL=Bl[0X6];end;else(xL)[0X4]=PL[Bl[2]];do oL=oL+1;end;xL[0X5]=xL[3];local Tm=0x0004;do oL=oL+0X001;end;xL[Tm]=xL[Tm](xL[Tm+0x001]);do YL=Tm;end;Bl=Sm[oL];do oL=oL+0X1;end;do if xL[4]~=Bl[0X5]then do oL=Bl[7];end;end;end;end;else do(xL)[0x2]=PL[Bl[2]];end;Bl=Sm[oL];oL=oL+1;do xL[2]=xL[0X2][Bl[0x0005]];end;oL=oL+0X00001;oL=oL+1;Bl=Sm[oL];do oL=oL+0x1;end;if xL[2]then do oL=Bl[0x6];end;end;end;else if Ql>=34 then if Ql==0x23 then(xL)[2]=PL[Bl[0x2]];Bl=Sm[oL];oL=oL+1;xL[0X002]=xL[2][Bl[5]];oL=oL+0X1;oL=oL+1;do Bl=Sm[oL];end;do oL=oL+0X1;end;do if not xL[2]then oL=Bl[0x6];end;end;else do xL[5]=PL[Bl[2]];end;do oL=oL+1;end;local OD=5;oL=oL+0X1;Bl=Sm[oL];do oL=oL+0x1;end;(xL)[0X6]=Bl[0x2];oL=oL+1;(xL)[OD]=xL[OD](xL[OD+0X001]);YL=OD;Bl=Sm[oL];do oL=oL+0x00001;end;do if xL[5]==Bl[5]then else oL=Bl[0X7];end;end;end;else(xL)[0X0004]=true;oL=oL+1;xL[2]=xL[0X004];do Bl=Sm[oL];end;oL=oL+1;(xL)[4]=Bl[2];do oL=oL+0X1;end;(xL)[3]=xL[4];Bl=Sm[oL];do oL=oL+1;end;oL=Bl[6];end;end;end;end;end;end;end);if cL then if tL then if QL==1 then return xL[GL]();else return xL[GL](f(xL,GL+0X1,YL));end;elseif GL then return f(xL,GL,QL);end;else if e(tL)~="string"then V(tL,0);else if not(p(tL,"\097ttem\pt\ t\111\032\y\105\101\l\d\032\097\c\114o\s\s \109eta\109\e\116\ho\100\047\C%\-\099a\l\l \098o\117\110\d\097\114\y"))then else return coroutine.yield();end;if p(tL,"^.-:%d+: ")then V("Lur\097\p\h\ \S\crip\116\058"..(Dm[oL-1]or"\040in\116\e\114nal\)")..": "..v(tL),0X0);else(V)(tL,0X000);end;end;end;end;end;end;end;else if xm<63 then if not(xm>=0X3C)then do if xm<0X003a then Km=function(...)local ms,Ps=1,{};local Js=K();local as,gs=(Js==g and Qm or Js),({[2]=Ps,[1]=Xm});local Hs,Ys=eH(...);Hs=Hs-1;local bs=(0X0);for gg=0X0,Hs do if km>gg then(Ps)[gg]=Ys[gg+0X1];else break;end;end;if not Lm then do Ys=nil;end;elseif Um then(Ps)[km]={n=Hs>=km and Hs-km+1 or 0X0,f(Ys,km+1,Hs+1)};end;if as==Js then else w(Km,as);end;local Ls,qs,Us,Ns=o(function()while true do local AW=(Sm[ms]);local UW=AW[0X0004];ms=ms+1;if not(UW>=16)then if UW<0X008 then if UW<4 then if UW<0x2 then if UW~=0x1 then local F4=AW[7];for kc=F4,F4+(AW[6]-1)do(Ps)[kc]=Ys[km+(kc-F4)+0X1];end;else Ps[0]=as[AW[0X00002]];AW=Sm[ms];local j8=(0X0);ms=ms+1;do(Ps)[1]=AW[0X2];end;do AW=Sm[ms];end;do ms=ms+0X1;end;(Ps)[2]=AW[0X2];do ms=ms+0X001;end;Ps[j8](Ps[j8+1],Ps[j8+2]);bs=j8-1;ms=ms+1;ms=ms+1;AW=Sm[ms];do ms=ms+0X1;end;Ps[0]=as[AW[2]];ms=ms+1;bs=0x0;(Ps[bs])();bs=bs-0X1;AW=Sm[ms];ms=ms+0X1;(Ps)[0]=as[AW[2]];do AW=Sm[ms];end;ms=ms+1;do Ps[0X0]=Ps[0][AW[5]];end;AW=Sm[ms];local k8=(Ps[0x000]);ms=ms+0x1;j8=0;(Ps)[j8+0X001]=k8;do Ps[j8]=k8[AW[5]];end;AW=Sm[ms];do ms=ms+1;end;do Ps[2]=AW[0X0002];end;ms=ms+0X01;j8=0X0;Ps[j8]=Ps[j8](Ps[j8+1],Ps[j8+2]);do bs=j8;end;do ms=ms+1;end;ms=ms+0X1;do AW=Sm[ms];end;do ms=ms+1;end;if not Ps[0]then ms=AW[0X0006];end;end;else if UW==0X3 then(Ps)[AW[0X07]]=Ps[AW[6]]<=Ps[AW[1]];else Ps[AW[0X7]]=AW[0X2];end;end;else if UW<0x6 then if UW==5 then for m9=AW[0X7],AW[0X00006]do Ps[m9]=nil;end;else if not(Ps[AW[6]]<Ps[AW[1]])then ms=AW[7];end;end;else if UW~=0X07 then repeat local Lu,Fu=Cm,(Ps);if not(#Lu>0)then else local mO=({});for Sk,zk in I,Lu do do for O7,t7 in I,zk do if not(t7[1]==Fu and t7[2]>=0X000)then else local BO=(t7[2]);if not mO[BO]then(mO)[BO]={Fu[BO]};end;t7[0x1]=mO[BO];t7[2]=0X1;end;end;end;end;end;until true;return;else local xc=(bm[0X0]);Ps[0X0]=xc[0X00001][xc[0X2]];ms=ms+1;ms=ms+0x001;AW=Sm[ms];ms=ms+0X1;(Ps)[0]=Ps[0x00][AW[0X05]];do ms=ms+1;end;ms=ms+1;AW=Sm[ms];ms=ms+0X1;do if Ps[0X00]then ms=AW[6];end;end;end;end;end;else if UW<0XC then if not(UW<0xA)then if UW~=0x0000b then if not(Ps[AW[0X6]]<=Ps[AW[1]])then ms=AW[0x7];end;else(Ps)[AW[0X007]]=Ps[AW[0X006]]>Ps[AW[0X1]];end;else if UW~=0x9 then(Ps)[0]=as[AW[0X2]];do ms=ms+0X1;end;ms=ms+0x1;do AW=Sm[ms];end;do ms=ms+1;end;local uI=(0X0);do(Ps)[1]=AW[2];end;local WI=(bm[0X1]);ms=ms+0X1;Ps[uI]=Ps[uI](Ps[uI+0x1]);do bs=uI;end;do ms=ms+0X1;end;ms=ms+1;ms=ms+0x1;Ps[0X1]=WI[1][WI[2]];do ms=ms+0X001;end;ms=ms+0x1;do AW=Sm[ms];end;do ms=ms+0X1;end;Ps[0X1]=Ps[0X001][AW[0X0005]];ms=ms+1;ms=ms+0X00001;ms=ms+0X001;do Ps[0X2]=Ps[0];end;do ms=ms+1;end;uI=1;(Ps)[uI]=Ps[uI](Ps[uI+0X0001]);bs=uI;ms=ms+0X0001;ms=ms+1;AW=Sm[ms];do ms=ms+0X1;end;do if not Ps[1]then ms=AW[0x00006];end;end;else(Ps)[0]=as[AW[2]];do ms=ms+0x1;end;local gf=0;ms=ms+0X1;AW=Sm[ms];ms=ms+1;Ps[1]=AW[0X0002];AW=Sm[ms];do ms=ms+0x1;end;do Ps[0x2]=AW[2];end;ms=ms+0X1;Ps[gf](Ps[gf+0x01],Ps[gf+0X2]);bs=gf-1;AW=Sm[ms];ms=ms+0X00001;(Ps)[0X0]=as[AW[0X00002]];ms=ms+1;bs=0X0;Ps[bs]();bs=bs-1;do AW=Sm[ms];end;ms=ms+0X1;Ps[0]=as[AW[0X00002]];ms=ms+1;ms=ms+0x00001;AW=Sm[ms];ms=ms+1;do(Ps)[0X0]=Ps[0X00][AW[5]];end;local rf=(Ps[0x00000]);do ms=ms+1;end;ms=ms+1;AW=Sm[ms];ms=ms+0X1;gf=0;Ps[gf+1]=rf;Ps[gf]=rf[AW[5]];do AW=Sm[ms];end;ms=ms+0X00001;(Ps)[2]=AW[0x002];ms=ms+1;gf=0;do Ps[gf]=Ps[gf](Ps[gf+0X1],Ps[gf+0X2]);end;bs=gf;AW=Sm[ms];ms=ms+0X1;do if Ps[0]then ms=AW[0X6];end;end;end;end;else do if not(UW>=14)then if UW==13 then Ps[0X0]=as[AW[2]];do ms=ms+1;end;ms=ms+1;local UX=0;AW=Sm[ms];ms=ms+1;Ps[1]=AW[2];do ms=ms+1;end;(Ps[UX])(Ps[UX+0X1]);bs=UX-1;AW=Sm[ms];ms=ms+1;do ms=AW[0X0006];end;else do Ps[AW[7]]=as[AW[2]];end;end;else if UW==15 then local oy=(bm[0X00]);do Ps[0]=oy[1][oy[0x00002]];end;do AW=Sm[ms];end;ms=ms+0X1;(Ps)[0X00000]=Ps[0X0][AW[5]];AW=Sm[ms];ms=ms+0X1;if not(not Ps[0x0])then else ms=AW[0X06];end;else Ps[AW[7]]={f({},0X1,AW[0X6])};end;end;end;end;end;else if UW>=24 then if not(UW<0X1C)then if UW<0X1e then if UW~=29 then(Ps)[0X0]=as[AW[2]];ms=ms+0X1;bs=0;(Ps[bs])();do bs=bs-0X1;end;do ms=ms+1;end;ms=ms+1;AW=Sm[ms];ms=ms+1;do ms=AW[6];end;else(Ps)[0]=as[AW[2]];AW=Sm[ms];ms=ms+0X1;(Ps)[0]=Ps[0][AW[0X5]];ms=ms+1;ms=ms+0X001;AW=Sm[ms];do ms=ms+1;end;if not Ps[0]then do ms=AW[6];end;end;end;else if UW==0X1F then ms=AW[6];else(Ps)[0]=as[AW[0x002]];do AW=Sm[ms];end;local D_=0X00000;do ms=ms+1;end;Ps[1]=AW[0X2];ms=ms+0X1;(Ps[D_])(Ps[D_+0X00001]);bs=D_-0X0001;do AW=Sm[ms];end;do ms=ms+0X1;end;ms=AW[0x6];end;end;else if UW<26 then do if UW==0X19 then local NH=bm[0X1];do Ps[0X01]=NH[0X1][NH[2]];end;do ms=ms+0x1;end;ms=ms+1;local OH=0X1;AW=Sm[ms];ms=ms+0X1;(Ps)[1]=Ps[1][AW[5]];ms=ms+0X1;(Ps)[2]=Ps[0];do ms=ms+1;end;do NH=bm[0X02];end;(Ps)[0X00003]=NH[0X0001][NH[0x2]];ms=ms+1;ms=ms+0X1;do ms=ms+1;end;(Ps[OH])(Ps[OH+1],Ps[OH+2]);do bs=OH-0x001;end;ms=ms+0X00001;NH=bm[2];Ps[0X1]=NH[0X1][NH[0x2]];local WH=(Ps[1]);AW=Sm[ms];do ms=ms+0X001;end;OH=0X1;(Ps)[OH+0X00001]=WH;Ps[OH]=WH[AW[0x0005]];do ms=ms+1;end;OH=1;Ps[OH](Ps[OH+1]);bs=OH-0X1;ms=ms+0X1;do ms=ms+1;end;AW=Sm[ms];do ms=ms+0X00001;end;ms=AW[0X6];else local ct=bm[0X0];(Ps)[0]=ct[1][ct[2]];ms=ms+0X1;ms=ms+1;AW=Sm[ms];ms=ms+1;Ps[0]=Ps[0X00][AW[0X5]];AW=Sm[ms];ms=ms+0x001;if Ps[0]then ms=AW[0x06];end;end;end;else if UW==0x00001B then local N8=(AW[0x00007]);local b8,g8=Ps[N8]();if b8 then ms=AW[6];Ps[N8+3]=g8;end;else do(Ps)[AW[7]]=Ps[AW[0X006]]<Ps[AW[1]];end;end;end;end;else if UW<20 then if UW<0X0012 then if UW~=0x11 then local IC=Zm[AW[6]];local uC=(IC[3]);local bC,pC=#uC,(nil);if not(bC>0)then else pC={};for AS=0X0001,bC do local fS=uC[AS];if fS[0X01]==0 then do(pC)[AS-1]={Ps,fS[0x2]};end;else pC[AS-0x1]=bm[fS[0X02]];end;end;(M)(Cm,pC);end;Ps[AW[7]]=dH(IC,pC,as);else(Ps)[0]=as[AW[2]];AW=Sm[ms];local ki=0;ms=ms+0X00001;(Ps)[0x00001]=AW[0X00002];ms=ms+0x0001;do(Ps)[ki]=Ps[ki](Ps[ki+0X00001]);end;bs=ki;do ms=ms+1;end;do ms=ms+1;end;AW=Sm[ms];ms=ms+1;(Ps)[0]=Ps[0X0][AW[0X005]];ms=ms+0x1;ms=ms+0x1;AW=Sm[ms];do ms=ms+1;end;if not(Ps[0x000])then else ms=AW[0X00006];end;end;else if UW==19 then else do(Ps)[0]=as[AW[2]];end;local W0=(0X00000);ms=ms+1;ms=ms+1;AW=Sm[ms];ms=ms+0X1;Ps[1]=AW[2];AW=Sm[ms];ms=ms+1;(Ps)[2]=AW[2];ms=ms+1;Ps[W0](Ps[W0+0X1],Ps[W0+0X002]);bs=W0-0X00001;ms=ms+0x1;ms=ms+0X1;AW=Sm[ms];ms=ms+1;(Ps)[0x0000]=as[AW[2]];ms=ms+0X1;bs=0X00;Ps[bs]();bs=bs-1;do AW=Sm[ms];end;ms=ms+1;Ps[0]=as[AW[0X2]];do AW=Sm[ms];end;ms=ms+1;(Ps)[0]=Ps[0][AW[5]];do ms=ms+0X1;end;ms=ms+1;AW=Sm[ms];ms=ms+0X1;W0=0;local y0=Ps[0x0];(Ps)[W0+0X1]=y0;Ps[W0]=y0[AW[0X0005]];AW=Sm[ms];do ms=ms+0X1;end;Ps[0X2]=AW[0x2];ms=ms+1;W0=0x0000;(Ps)[W0]=Ps[W0](Ps[W0+1],Ps[W0+0x2]);bs=W0;AW=Sm[ms];ms=ms+1;do if not Ps[0]then ms=AW[6];end;end;end;end;else if UW<0X16 then do if UW==21 then Ps[AW[7]]=#Ps[AW[0X06]];else local xl=bm[0x0];do(Ps)[0]=xl[0x1][xl[0X002]];end;AW=Sm[ms];ms=ms+1;do(Ps)[0X0]=Ps[0][AW[5]];end;ms=ms+1;ms=ms+0X1;AW=Sm[ms];do ms=ms+0X1;end;if not(Ps[0X0000])then else ms=AW[0X6];end;end;end;else if UW~=23 then(Ps)[0]=as[AW[2]];ms=ms+1;ms=ms+1;AW=Sm[ms];local XA=(0X000);do ms=ms+1;end;Ps[0x01]=AW[2];ms=ms+1;do Ps[XA]=Ps[XA](Ps[XA+0X1]);end;bs=XA;ms=ms+0X00001;ms=ms+0x0001;AW=Sm[ms];ms=ms+0X1;Ps[0X00]=Ps[0][AW[5]];ms=ms+1;ms=ms+0X1;AW=Sm[ms];ms=ms+1;if not Ps[0X00]then ms=AW[6];end;else if Ps[AW[6]]~=Ps[AW[0X00001]]then ms=AW[7];end;end;end;end;end;end;end;end);if Ls then if qs then do if Ns==1 then return Ps[Us]();else do return Ps[Us](f(Ps,Us+1,bs));end;end;end;elseif Us then return f(Ps,Us,Ns);end;else if e(qs)=="string"then do if not(p(qs,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if p(qs,'\^.-\058\037\100\043\058 ')then(V)("Luraph Script:"..(Dm[ms-0X1]or'\(\105\110\116\ernal\)').."\:\032"..v(qs),0X0);else V(qs,0);end;else V(qs,0X0);end;end;end;else if xm~=0X03B then do Km=function(...)local G7=({});local h7=(0X000);local d7=(K());local W7,J7=eH(...);local y7={[2]=G7,[1]=Xm};W7=W7-0X1;local H7,r7=0x0001,((d7==g and Qm or d7));for Fa=0,W7 do if km>Fa then do G7[Fa]=J7[Fa+0X00001];end;else break;end;end;do if not Lm then J7=nil;elseif not(Um)then else G7[km]={n=W7>=km and W7-km+1 or 0X0,f(J7,km+1,W7+1)};end;end;if r7~=d7 then(w)(Km,r7);end;local A7,t7,z7,f7=o(function()while true do local Ho=(Sm[H7]);local lo=Ho[4];H7=H7+0X00001;if not(lo<0x12)then if lo>=27 then if lo>=0X1f then do if lo>=0X021 then if lo<34 then(G7)[Ho[7]]=G7[Ho[6]]/Ho[5];else if lo~=35 then G7[Ho[0X07]]=G7[Ho[6]]%G7[Ho[1]];else(G7)[0x00]={f({},0X1,2)};do Ho=Sm[H7];end;H7=H7+1;G7[1]=r7[Ho[0x2]];local LT=0;do H7=H7+0X1;end;h7=1;G7[h7]=G7[h7]();H7=H7+1;local KT=bm[0X0];(G7)[0x002]=KT[1][KT[0X0002]];H7=H7+0X1;do H7=H7+1;end;do H7=H7+0X1;end;local GT,oT=(1-1)*0x00032,G7[LT];do for im=0X1,0X2 do oT[GT+im]=G7[LT+im];end;end;Ho=Sm[H7];H7=H7+1;do r7[Ho[2]]=G7[0];end;Ho=Sm[H7];do H7=H7+0X1;end;G7[0X00]=r7[Ho[0X02]];Ho=Sm[H7];H7=H7+0X0001;(G7)[0]=G7[0X0][Ho[0X5]];H7=H7+0X00001;H7=H7+1;H7=H7+1;do h7=0X000;end;(G7[h7])();h7=h7-1;H7=H7+0x1;KT=bm[1];(G7)[0X0000]=KT[1][KT[0X2]];H7=H7+0X1;h7=0;G7[h7]=G7[h7]();H7=H7+0X1;H7=H7+1;Ho=Sm[H7];H7=H7+1;do(G7)[0X1]=r7[Ho[0X2]];end;H7=H7+1;KT=bm[2];do(G7)[2]=KT[0X0001][KT[0x2]];end;Ho=Sm[H7];H7=H7+0X1;(G7)[0X2]=G7[0X2][Ho[5]];H7=H7+0X1;do KT=bm[0X0];end;(G7)[3]=KT[1][KT[0X2]];do H7=H7+0X1;end;H7=H7+1;H7=H7+0X1;(G7)[4]=true;H7=H7+1;LT=0X1;h7=LT+0x4-1;(G7)[LT]=G7[LT](f(G7,LT+1,h7));do h7=LT;end;H7=H7+1;(G7)[2]=G7[1];H7=H7+1;KT=bm[0X3];(G7)[3]=KT[1][KT[0X2]];Ho=Sm[H7];do H7=H7+1;end;G7[0X003]=G7[3][Ho[0X5]];Ho=Sm[H7];H7=H7+0X00001;LT=3;local DT=G7[0X3];(G7)[LT+0X1]=DT;(G7)[LT]=DT[Ho[5]];Ho=Sm[H7];do H7=H7+1;end;G7[5]=Ho[0X2];do H7=H7+0X001;end;do G7[6]=false;end;H7=H7+1;do LT=3;end;h7=LT+0X00004-1;(G7[LT])(f(G7,LT+0X1,h7));h7=LT-0X1;Ho=Sm[H7];do H7=H7+1;end;H7=Ho[6];end;end;else if lo==32 then(G7)[Ho[0X00007]]=G7[Ho[6]][Ho[5]];else(G7)[0X00008]=G7[0X0008]*G7[4];Ho=Sm[H7];H7=H7+1;do G7[9]=r7[Ho[2]];end;do H7=H7+0x00001;end;H7=H7+0X0001;do Ho=Sm[H7];end;do H7=H7+0X0001;end;G7[0X9]=G7[0X9][Ho[5]];do Ho=Sm[H7];end;H7=H7+1;(G7)[10]=G7[0X006][Ho[0X5]];H7=H7+1;local IM=0X00009;(G7)[IM]=G7[IM](G7[IM+0X1]);h7=IM;H7=H7+0x001;(G7)[9]=G7[9]<G7[0x00007];Ho=Sm[H7];H7=H7+1;if not(not G7[0X9])then else H7=Ho[6];end;end;end;end;else if lo>=0X1d then if lo~=0X1E then if not(G7[Ho[6]]<G7[Ho[1]])then H7=Ho[7];end;else(G7)[10]=r7[Ho[2]];Ho=Sm[H7];do H7=H7+0X1;end;G7[10]=G7[0Xa][Ho[0x0005]];Ho=Sm[H7];H7=H7+0X1;do G7[11]=G7[6][Ho[5]];end;do H7=H7+0X1;end;H7=H7+1;local M2=10;H7=H7+1;(G7)[M2]=G7[M2](G7[M2+0x001]);do h7=M2;end;H7=H7+0x1;H7=H7+0X1;H7=H7+1;(G7)[0X0A]=G7[10]<G7[8];Ho=Sm[H7];do H7=H7+0X1;end;do if not(not G7[10])then else H7=Ho[6];end;end;end;else if lo~=28 then if not(G7[Ho[7]])then else H7=Ho[0X6];end;else local tk=(bm[4]);do G7[3]=tk[1][tk[0X0002]];end;do Ho=Sm[H7];end;H7=H7+1;(G7)[4]=r7[Ho[0X2]];do Ho=Sm[H7];end;H7=H7+0X01;if G7[3]==G7[4]then else H7=Ho[7];end;end;end;end;else if not(lo<0X16)then if not(lo<24)then do if not(lo>=25)then G7[0Xb]=r7[Ho[0x00002]];H7=H7+0X001;H7=H7+1;Ho=Sm[H7];do H7=H7+0X1;end;G7[0xb]=G7[11][Ho[0X5]];H7=H7+0X1;H7=H7+0X1;Ho=Sm[H7];local NY=(Zm[Ho[0X0006]]);do H7=H7+0x1;end;local kY=(NY[0x3]);local sY=11;local EY=(nil);local lY=#kY;do if lY>0X000 then EY={};for qb=1,lY do local Pb=(kY[qb]);if Pb[1]~=0x0 then do EY[qb-0X1]=bm[Pb[2]];end;else EY[qb-0X1]={G7,Pb[2]};end;end;(M)(Cm,EY);end;end;(G7)[0X000C]=dH(NY,EY,r7);H7=H7+0X01;G7[sY](G7[sY+0X1]);do h7=sY-0X1;end;H7=H7+0x001;H7=H7+0X1;local DY=bm[0X00002];H7=H7+0x0001;G7[11]=DY[0X1][DY[0X02]];H7=H7+1;do H7=H7+1;end;do H7=H7+1;end;DY=bm[2];G7[0X000C]=DY[1][DY[0X2]];Ho=Sm[H7];H7=H7+0X1;do(G7)[0XC]=G7[0Xc][Ho[0x5]];end;do H7=H7+1;end;H7=H7+1;Ho=Sm[H7];H7=H7+1;do(G7)[13]=r7[Ho[0X2]];end;Ho=Sm[H7];H7=H7+0X01;do(G7)[0X000D]=G7[0Xd][Ho[0X5]];end;H7=H7+1;H7=H7+0x1;do Ho=Sm[H7];end;do H7=H7+1;end;G7[0Xe]=r7[Ho[2]];Ho=Sm[H7];do H7=H7+1;end;(G7)[0X0E]=G7[14][Ho[5]];H7=H7+0X1;G7[0Xf]=G7[10];H7=H7+1;sY=0xE;G7[sY]=G7[sY](G7[sY+1]);do h7=sY;end;H7=H7+0X1;do H7=H7+1;end;Ho=Sm[H7];H7=H7+0X1;(G7)[0X000F]=Ho[0X0002]*G7[0x3];H7=H7+1;(G7)[14]=G7[0Xe]<G7[15];Ho=Sm[H7];do H7=H7+0X1;end;do if not(not G7[0Xe])then else do H7=Ho[6];end;end;end;else if lo==26 then G7[3]=true;Ho=Sm[H7];do H7=H7+1;end;do r7[Ho[0X002]]=G7[0X3];end;Ho=Sm[H7];do H7=H7+0X1;end;(G7)[3]=r7[Ho[0X002]];H7=H7+0X1;local gi=0X3;do H7=H7+0X1;end;Ho=Sm[H7];H7=H7+1;G7[0X03]=G7[3][Ho[5]];Ho=Sm[H7];H7=H7+1;G7[0X0004]=r7[Ho[2]];H7=H7+0X1;H7=H7+0X1;Ho=Sm[H7];H7=H7+1;(G7)[4]=G7[4][Ho[0X05]];local Ri=(bm[0X2]);H7=H7+0X01;H7=H7+0X01;Ho=Sm[H7];H7=H7+0X0001;do G7[0X00004]=G7[4][Ho[5]];end;H7=H7+0X01;H7=H7+1;Ho=Sm[H7];H7=H7+0x1;(G7)[0X5]=Ho[0X2];Ho=Sm[H7];H7=H7+0X1;do G7[6]=Ho[0X2];end;H7=H7+0X001;h7=gi+4-0X1;(G7)[gi]=G7[gi](f(G7,gi+1,h7));h7=gi;H7=H7+1;do H7=H7+0X1;end;do Ho=Sm[H7];end;H7=H7+0X001;G7[3]=Ho[2]/G7[3];Ho=Sm[H7];H7=H7+0X1;(G7)[4]=Ho[0X00002]*G7[3];do H7=H7+0X01;end;G7[5]=Ri[0x1][Ri[2]];H7=H7+1;H7=H7+1;do Ho=Sm[H7];end;H7=H7+0X1;G7[5]=G7[5][Ho[5]];do H7=H7+0X001;end;H7=H7+0X1;Ho=Sm[H7];do H7=H7+1;end;(G7)[6]=r7[Ho[0x002]];H7=H7+0x01;H7=H7+0X1;Ho=Sm[H7];H7=H7+1;do G7[0X6]=G7[0X6][Ho[5]];end;do H7=H7+0X001;end;do Ri=bm[0x0];end;do G7[7]=Ri[1][Ri[0X2]];end;Ho=Sm[H7];H7=H7+0X0001;G7[0x7]=G7[7][Ho[0X0005]];do H7=H7+0X1;end;H7=H7+1;do Ho=Sm[H7];end;do H7=H7+1;end;G7[0x8]=Ho[2];H7=H7+0X0001;Ri=bm[0X0];G7[0x00009]=Ri[0x1][Ri[2]];Ho=Sm[H7];H7=H7+0X00001;(G7)[0X9]=G7[9][Ho[0X00005]];H7=H7+1;gi=6;h7=gi+0x0004-0X1;(G7)[gi]=G7[gi](f(G7,gi+0X0001,h7));do h7=gi;end;H7=H7+0X1;do H7=H7+1;end;Ho=Sm[H7];do H7=H7+0x1;end;(G7)[7]=r7[Ho[0X2]];Ho=Sm[H7];H7=H7+1;(G7)[7]=G7[7][Ho[0x5]];Ho=Sm[H7];H7=H7+1;(G7)[0X00008]=G7[5][Ho[5]];Ho=Sm[H7];H7=H7+0X00001;(G7)[9]=Ho[0X002];Ho=Sm[H7];H7=H7+0X1;G7[0X000a]=G7[5][Ho[5]];H7=H7+1;gi=7;h7=gi+4-1;(G7)[gi]=G7[gi](f(G7,gi+0x0001,h7));h7=gi;H7=H7+1;do H7=H7+0X01;end;do H7=H7+1;end;(G7)[0X6]=G7[0x006]-G7[0X7];do Ho=Sm[H7];end;H7=H7+1;do G7[0X7]=G7[0X6][Ho[5]];end;Ho=Sm[H7];do H7=H7+1;end;G7[0X007]=G7[0x7]<Ho[0X05];Ho=Sm[H7];do H7=H7+0X00001;end;if not(not G7[7])then else H7=Ho[0x6];end;else G7[Ho[7]]=r7[Ho[2]];end;end;end;else if lo~=0X17 then for yN=Ho[0X7],Ho[0X006]do G7[yN]=nil;end;else local HB=(bm[Ho[6]]);do(G7)[Ho[0X07]]=HB[1][HB[2]];end;end;end;else if not(lo<0X14)then do if lo~=21 then if not(not(Ho[0X2]<G7[Ho[0X01]]))then else H7=Ho[7];end;else if not G7[Ho[7]]then do H7=Ho[0x00006];end;end;end;end;else if lo==0X13 then local TF=(Zm[Ho[0x0006]]);local oF=nil;local sF=TF[3];local fF=#sF;if fF>0x000 then oF={};for c9=1,fF do local T9=(sF[c9]);if T9[0X1]~=0 then do(oF)[c9-0X1]=bm[T9[0X2]];end;else(oF)[c9-0x01]={G7,T9[0X2]};end;end;(M)(Cm,oF);end;(G7)[Ho[7]]=dH(TF,oF,r7);else local rx=bm[0X3];do G7[5]=rx[0X1][rx[2]];end;Ho=Sm[H7];H7=H7+0X1;(G7)[5]=G7[0X00005][Ho[5]];Ho=Sm[H7];H7=H7+0x1;(G7)[0X5]=G7[5][Ho[5]];Ho=Sm[H7];do H7=H7+1;end;if not(Ho[0X2]<G7[5])then H7=Ho[0X7];end;end;end;end;end;else if not(lo<9)then if lo>=0XD then do if lo>=15 then if lo<16 then do G7[0X000F]=Ho[0x2];end;do Ho=Sm[H7];end;do H7=H7+0x01;end;G7[16]=r7[Ho[2]];Ho=Sm[H7];H7=H7+1;local Fe=0X00010;do(G7)[16]=G7[0x10][Ho[5]];end;H7=H7+0x00001;G7[0X11]=G7[9];H7=H7+1;G7[Fe]=G7[Fe](G7[Fe+1]);do h7=Fe;end;H7=H7+0X1;do H7=H7+0x1;end;Ho=Sm[H7];H7=H7+1;(G7)[0X00011]=Ho[2]*G7[0x3];H7=H7+0X1;do G7[16]=G7[16]<G7[0X11];end;Ho=Sm[H7];H7=H7+1;do if not(not G7[16])then else H7=Ho[0X6];end;end;else if lo==0X00011 then if G7[Ho[0X0006]]~=G7[Ho[0X00001]]then H7=Ho[7];end;else(G7)[Ho[7]]=Ho[0X00002];end;end;else if lo~=14 then do(G7)[0X3]=false;end;Ho=Sm[H7];local gq=bm[0X003];H7=H7+1;do(r7)[Ho[2]]=G7[0x3];end;do H7=H7+1;end;do(G7)[3]=gq[0X1][gq[2]];end;local Wq=(3);Ho=Sm[H7];H7=H7+0x1;(G7)[3]=G7[3][Ho[5]];H7=H7+0x0001;H7=H7+0X001;Ho=Sm[H7];H7=H7+1;local hq=(G7[0X3]);do G7[Wq+0x01]=hq;end;(G7)[Wq]=hq[Ho[0X00005]];Ho=Sm[H7];H7=H7+1;G7[5]=Ho[2];H7=H7+1;G7[6]=true;do H7=H7+1;end;do Wq=0X3;end;h7=Wq+4-0X1;G7[Wq](f(G7,Wq+1,h7));h7=Wq-0x1;H7=H7+0X1;do(G7)[0X3]=false;end;Ho=Sm[H7];H7=H7+1;(r7)[Ho[2]]=G7[3];Ho=Sm[H7];do H7=H7+1;end;if not(G7[1]<=Ho[5])then H7=Ho[0X7];end;else do(G7)[Ho[0X7]]={f({},0X1,Ho[0X6])};end;end;end;end;else if lo>=11 then if lo==12 then else G7[9]=G7[0X6][Ho[5]];H7=H7+1;H7=H7+0X1;Ho=Sm[H7];H7=H7+0X01;H7=Ho[0X00006];end;else if lo==0X0A then repeat local va,ka,ba=Cm,G7,(Ho[7]);do if#va>0X00 then local jH=({});for ev,mv in I,va do do for Kr,Qr in I,mv do if Qr[1]==ka and Qr[0X02]>=ba then local XO=Qr[0X2];if not(not jH[XO])then else do jH[XO]={ka[XO]};end;end;do Qr[0X001]=jH[XO];end;(Qr)[2]=0x1;end;end;end;end;end;end;until true;else local xB=Ho[0x7];local CB=G7[xB];local wB,LB=G7[xB+1],G7[xB+0x02];G7[xB]=r(function()for Jz=CB,wB,LB do(C)(true,Jz);end;end);H7=Ho[6];end;end;end;else if not(lo<4)then if lo<6 then if lo==5 then local g3=bm[4];G7[0x3]=g3[1][g3[2]];H7=H7+1;H7=H7+0X1;Ho=Sm[H7];H7=H7+1;G7[4]=r7[Ho[0x2]];H7=H7+1;H7=H7+1;Ho=Sm[H7];H7=H7+1;if G7[3]==G7[4]then else H7=Ho[0X007];end;else local vD=0Xd;do h7=vD+0X0004-0X1;end;(G7)[vD]=G7[vD](f(G7,vD+0X1,h7));local cD=bm[0x00002];h7=vD;do H7=H7+1;end;H7=H7+1;H7=H7+1;(G7)[0Xc]=G7[12]+G7[0XD];do Ho=Sm[H7];end;H7=H7+0x0001;(G7[0Xb])[Ho[0X00002]]=G7[0X0C];H7=H7+1;(G7)[11]=cD[0X01][cD[0X2]];H7=H7+0X001;H7=H7+1;Ho=Sm[H7];H7=H7+0X1;(G7)[0X000C]=r7[Ho[0x2]];Ho=Sm[H7];H7=H7+1;(G7)[0xC]=G7[12][Ho[0X5]];do H7=H7+1;end;H7=H7+0X001;H7=H7+0x001;cD=bm[0x2];(G7)[13]=cD[0X1][cD[0X2]];Ho=Sm[H7];H7=H7+1;do(G7)[0Xd]=G7[0Xd][Ho[0x00005]];end;H7=H7+1;do H7=H7+1;end;Ho=Sm[H7];H7=H7+1;(G7)[0xd]=G7[13][Ho[0X5]];do H7=H7+1;end;H7=H7+1;do H7=H7+0x0001;end;do cD=bm[0x0];end;do(G7)[0X0e]=cD[0X1][cD[2]];end;H7=H7+0X1;H7=H7+1;do Ho=Sm[H7];end;H7=H7+0X1;G7[0X0e]=G7[14][Ho[5]];H7=H7+1;H7=H7+1;H7=H7+1;cD=bm[0X2];do G7[0Xf]=cD[1][cD[0X002]];end;do Ho=Sm[H7];end;do H7=H7+1;end;G7[15]=G7[15][Ho[0x5]];H7=H7+0X00001;H7=H7+0X001;Ho=Sm[H7];H7=H7+0X1;do G7[15]=G7[0xf][Ho[0X5]];end;H7=H7+1;H7=H7+1;do H7=H7+1;end;do vD=12;end;h7=vD+4-1;(G7)[vD]=G7[vD](f(G7,vD+1,h7));h7=vD;Ho=Sm[H7];do H7=H7+1;end;G7[11][Ho[2]]=G7[12];do H7=H7+0X1;end;cD=bm[3];G7[11]=cD[0x1][cD[0x2]];do H7=H7+0X1;end;do H7=H7+1;end;Ho=Sm[H7];H7=H7+0X1;(G7)[0xb]=G7[0x0000b][Ho[5]];H7=H7+0X1;H7=H7+1;do Ho=Sm[H7];end;H7=H7+1;do vD=0Xb;end;local bD=(G7[0X0000b]);do G7[vD+1]=bD;end;do(G7)[vD]=bD[Ho[0x0005]];end;do Ho=Sm[H7];end;H7=H7+1;do G7[13]=Ho[2];end;do H7=H7+0X01;end;vD=11;(G7[vD])(G7[vD+1],G7[vD+0x02]);h7=vD-1;H7=H7+1;H7=H7+0X1;H7=H7+1;do G7[0X00b]=true;end;Ho=Sm[H7];H7=H7+0X0001;(r7)[Ho[2]]=G7[0Xb];do Ho=Sm[H7];end;do H7=H7+0X1;end;(G7)[0Xb]=r7[Ho[2]];Ho=Sm[H7];H7=H7+1;(G7)[0X0b]=G7[11][Ho[0X5]];H7=H7+0X1;do H7=H7+1;end;Ho=Sm[H7];do H7=H7+0x01;end;(G7)[0X0000C]=Ho[2];H7=H7+1;vD=0X00b;(G7[vD])(G7[vD+0x1]);h7=vD-0x1;Ho=Sm[H7];H7=H7+1;H7=Ho[0x6];end;else if lo>=0X7 then if lo~=8 then(G7)[Ho[0X7]]=G7[Ho[0X0006]]<=G7[Ho[1]];else repeat local EZ,BZ=Cm,G7;do if not(#EZ>0)then else local BV=({});do for V_,d_ in I,EZ do do for VB,TB in I,d_ do if TB[0X1]==BZ and TB[2]>=0x0 then local Fx=(TB[0x02]);if not BV[Fx]then do(BV)[Fx]={BZ[Fx]};end;end;do TB[0X1]=BV[Fx];end;(TB)[2]=1;end;end;end;end;end;end;end;until true;return;end;else(G7)[0x7]=G7[0X00007]*G7[0X4];do Ho=Sm[H7];end;H7=H7+1;(G7)[0X008]=G7[6][Ho[5]];do Ho=Sm[H7];end;H7=H7+1;(G7)[8]=G7[8]<Ho[5];do Ho=Sm[H7];end;H7=H7+0X1;if not(not G7[0X08])then else H7=Ho[0x6];end;end;end;else do if not(lo<2)then if lo==0x03 then do H7=Ho[6];end;else G7[Ho[7]]=G7[Ho[0x00006]]>=G7[Ho[1]];end;else if lo~=1 then local x4=(bm[0X2]);G7[3]=x4[1][x4[2]];do H7=H7+1;end;x4=bm[0X0];do(G7)[0X4]=x4[1][x4[0x2]];end;H7=H7+0X001;do H7=H7+1;end;Ho=Sm[H7];H7=H7+0X0001;do G7[3][Ho[0X0002]]=G7[4];end;Ho=Sm[H7];H7=H7+1;H7=Ho[6];else G7[Ho[0X7]]=G7[Ho[6]];end;end;end;end;end;end;end;end);if not(A7)then if e(t7)=="string"then if not(p(t7,'a\116\116\e\109\112\116\ to\032y\i\eld\ acr\os\115 m\e\116a\m\e\116\104o\100\047\C\%\-\099a\108\l\032b\o\117\110\100\097ry'))then else return coroutine.yield();end;if p(t7,"^.-:%d+: ")then V("Luraph Script:"..(Dm[H7-0x1]or"(\105\110te\114na\108\041")..": "..v(t7),0);else V(t7,0X0);end;else(V)(t7,0X000);end;else if t7 then if f7~=0x0001 then do return G7[z7](f(G7,z7+0X1,h7));end;else return G7[z7]();end;elseif not(z7)then else return f(G7,z7,f7);end;end;end;end;else Km=function(...)local kk,Sk={},0;local nk=1;local Ak=K();local Pk,Vk=(Ak==g and Qm or Ak),({[1]=Xm,[2]=kk});local Fk,Ek=eH(...);Fk=Fk-0X1;for N6=0X0,Fk do do if km>N6 then(kk)[N6]=Ek[N6+1];else break;end;end;end;if not Lm then do Ek=nil;end;elseif not(Um)then else kk[km]={n=Fk>=km and Fk-km+1 or 0,f(Ek,km+0X1,Fk+1)};end;if Pk~=Ak then w(Km,Pk);end;local hk,tk,Jk,Uk=o(function()while true do local Kk=Sm[nk];local qk=Kk[4];nk=nk+0X1;if qk>=0X8 then do if not(qk>=12)then if not(qk<0XA)then do if qk==0XB then(kk)[0]=Pk[Kk[2]];Kk=Sm[nk];local pi=(0X00000);nk=nk+1;local bi=kk[0X000];(kk)[pi+0X1]=bi;do kk[pi]=bi[Kk[0X5]];end;Kk=Sm[nk];nk=nk+0X00001;kk[0X0002]=Kk[2];nk=nk+0X1;pi=0;kk[pi]=kk[pi](kk[pi+1],kk[pi+0x2]);Sk=pi;nk=nk+0X001;nk=nk+1;Kk=Sm[nk];nk=nk+0X1;local ci=(nil);do(kk)[0x0001]=Pk[Kk[0X2]];end;do nk=nk+0X00001;end;nk=nk+1;Kk=Sm[nk];do nk=nk+1;end;kk[1]=kk[1][Kk[0X5]];do Kk=Sm[nk];end;nk=nk+1;local Vi=(Zm[Kk[6]]);local qi=Vi[3];local Ki=#qi;if Ki>0 then ci={};do for FB=0X1,Ki do local GB=(qi[FB]);if GB[0X001]~=0 then ci[FB-1]=bm[GB[2]];else ci[FB-1]={kk,GB[0x00002]};end;end;end;M(Cm,ci);end;do kk[2]=dH(Vi,ci,Pk);end;nk=nk+1;do pi=1;end;kk[pi](kk[pi+0x1]);Sk=pi-0X1;do nk=nk+1;end;nk=nk+1;nk=nk+0X1;repeat local KB,wB=Cm,kk;if#KB>0 then local UQ={};for U7,z7 in I,KB do for PP,jP in I,z7 do if not(jP[1]==wB and jP[0X2]>=0)then else local is=(jP[2]);do if not(not UQ[is])then else(UQ)[is]={wB[is]};end;end;(jP)[0x001]=UQ[is];jP[0X0002]=1;end;end;end;end;until true;return;else(kk)[Kk[0X0007]]=kk[Kk[6]]<kk[Kk[1]];end;end;else if qk==0x0009 then(kk)[Kk[7]]=Pk[Kk[0X2]];else kk[Kk[0x0007]]=Kk[2];end;end;else if not(qk>=14)then do if qk==13 then if not(kk[Kk[6]]<kk[Kk[0x1]])then else do nk=Kk[7];end;end;else end;end;else if qk==15 then local iG=(Zm[Kk[0x6]]);local tG=(iG[3]);local eG=(#tG);local hG=(nil);do if eG>0x0 then do hG={};end;do for p9=0X1,eG do local u9=tG[p9];if u9[1]~=0X000 then do(hG)[p9-1]=bm[u9[0x2]];end;else hG[p9-0X1]={kk,u9[0X02]};end;end;end;(M)(Cm,hG);end;end;(kk)[Kk[7]]=dH(iG,hG,Pk);else(kk)[Kk[7]]=kk[Kk[0X6]]==kk[Kk[0X1]];end;end;end;end;else if not(qk<4)then if qk>=6 then do if qk==7 then local VJ=Kk[0X7];for Ja=VJ,VJ+(Kk[0X6]-1)do(kk)[Ja]=Ek[km+(Ja-VJ)+1];end;else local p2,V2=Kk[7],(kk[Kk[6]]);(kk)[p2+1]=V2;do(kk)[p2]=V2[Kk[0X5]];end;end;end;else if qk==5 then kk[Kk[7]]=kk[Kk[6]]^kk[Kk[1]];else kk[Kk[0x7]]=l(kk[Kk[0X6]],kk[Kk[1]]);end;end;else if qk>=2 then if qk~=0X003 then do nk=Kk[0X00006];end;else kk[Kk[7]]=#kk[Kk[6]];end;else do if qk==1 then(kk)[Kk[0X7]]={f({},0X00001,Kk[0X006])};else do for ei=Kk[7],Kk[0X06]do kk[ei]=nil;end;end;end;end;end;end;end;end;end);do if not(hk)then do if e(tk)=="string"then if p(tk,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(tk,"^.-:%d+: "))then(V)(tk,0);else V("Luraph Script:"..(Dm[nk-1]or"(internal)")..": "..v(tk),0);end;else(V)(tk,0);end;end;else do if tk then if Uk==1 then return kk[Jk]();else return kk[Jk](f(kk,Jk+0X1,Sk));end;elseif Jk then do return f(kk,Jk,Uk);end;end;end;end;end;end;end;end;end;else if xm>=0x0003d then do if xm==0X03E then Km=function(...)local cW=({});local GW=0X1;local UW={[2]=cW,[1]=Xm};local VW=(K());local iW=0x0;local gW,nW=eH(...);gW=gW-1;for NM=0,gW do do if not(km>NM)then break;else do(cW)[NM]=nW[NM+0X1];end;end;end;end;local DW=((VW==g and Qm or VW));if not Lm then nW=nil;elseif Um then(cW)[km]={n=gW>=km and gW-km+0X1 or 0,f(nW,km+0x1,gW+1)};end;do if DW~=VW then w(Km,DW);end;end;local QW,HW,BW,EW=o(function()while true do local t4=(Sm[GW]);local q4=(t4[0x4]);GW=GW+1;if q4>=11 then if not(q4>=0x11)then if q4>=14 then if q4>=15 then do if q4==16 then local ZT=bm[0];cW[0]=ZT[1][ZT[0x0002]];do t4=Sm[GW];end;do GW=GW+1;end;cW[0]=cW[0][t4[5]];do GW=GW+0X0001;end;do GW=GW+0X1;end;t4=Sm[GW];GW=GW+0x1;(cW)[0X0]=cW[0]<t4[5];t4=Sm[GW];do GW=GW+1;end;do GW=t4[6];end;else local ek=(t4[0X6]);local Wk=cW[ek];for iz=ek+1,t4[0X01]do Wk=Wk..cW[iz];end;cW[t4[7]]=Wk;end;end;else local jJ=(bm[0X01]);(cW)[0X0]=jJ[0X1][jJ[0x2]];GW=GW+1;GW=GW+0X1;local dJ=(0x0);t4=Sm[GW];GW=GW+0x001;local xJ=(cW[0x0]);cW[dJ+1]=xJ;cW[dJ]=xJ[t4[5]];do GW=GW+1;end;dJ=0X000;do cW[dJ]=cW[dJ](cW[dJ+0X00001]);end;do iW=dJ;end;GW=GW+0X0001;do GW=GW+1;end;t4=Sm[GW];GW=GW+0X001;GW=t4[6];end;else if q4>=0XC then if q4==0X0d then repeat local NW,mW=Cm,cW;do if#NW>0X0 then local IP=({});for b4,i4 in I,NW do do for Oa,Ka in I,i4 do if not(Ka[0X1]==mW and Ka[2]>=0)then else local e3=Ka[2];do if not(not IP[e3])then else(IP)[e3]={mW[e3]};end;end;(Ka)[1]=IP[e3];do(Ka)[0x2]=1;end;end;end;end;end;end;end;until true;local U3=(t4[0X007]);do return false,U3,U3;end;else local qM=(Zm[t4[0X6]]);local TM=nil;local HM=qM[3];local mM=(#HM);do if not(mM>0x0)then else TM={};for cv=1,mM do local rv=HM[cv];do if rv[1]~=0 then(TM)[cv-1]=bm[rv[2]];else do TM[cv-1]={cW,rv[0X002]};end;end;end;end;(M)(Cm,TM);end;end;(cW)[t4[7]]=dH(qM,TM,DW);end;else if not(cW[t4[7]])then else GW=t4[0X006];end;end;end;else if not(q4<20)then do if q4>=21 then if q4~=22 then do if not(cW[t4[6]]<cW[t4[1]])then else GW=t4[7];end;end;else(cW)[t4[7]]=DW[t4[2]];end;else local AI=t4[7];local BI,sI=cW[AI]();if BI then for zy=1,t4[0X1]do cW[AI+zy]=sI[zy];end;GW=t4[0X6];end;end;end;else do if not(q4<0X000012)then if q4~=0X13 then cW[t4[7]]={f({},1,t4[6])};else local Px=cW[t4[6]]/cW[t4[1]];(cW)[t4[7]]=Px-Px%1;end;else cW[t4[0x07]]=not cW[t4[6]];end;end;end;end;else if q4>=5 then if q4>=8 then if q4<9 then cW[t4[7]]=a(cW[t4[0X0006]]);else do if q4~=10 then local nr=bm[0];cW[0]=nr[1][nr[2]];do GW=GW+1;end;(cW)[0]=not cW[0X0];t4=Sm[GW];do GW=GW+0X1;end;if not(cW[0])then else do GW=t4[0X6];end;end;else repeat local fJ,wJ=Cm,(cW);if not(#fJ>0X0)then else local uZ=({});for CC,cC in I,fJ do for NZ,nZ in I,cC do if not(nZ[1]==wJ and nZ[0X2]>=0)then else local mn=nZ[2];do if not(not uZ[mn])then else do uZ[mn]={wJ[mn]};end;end;end;(nZ)[0X1]=uZ[mn];do nZ[0x2]=0x01;end;end;end;end;end;until true;local E5=(t4[0X0007]);return false,E5,E5+t4[6]-0X02;end;end;end;else if not(q4>=0X6)then do(cW)[0]=DW[t4[2]];end;GW=GW+1;GW=GW+0X00001;t4=Sm[GW];GW=GW+1;cW[0X000]=cW[0X000][t4[5]];GW=GW+1;(cW)[0X0000]=not cW[0x00];t4=Sm[GW];GW=GW+1;GW=t4[6];else if q4==7 then if not(not cW[t4[7]])then else GW=t4[6];end;else repeat local hE,jE=Cm,cW;if not(#hE>0x0)then else local xl={};for jW,IW in I,hE do do for RF,SF in I,IW do if SF[0X1]==jE and SF[2]>=0 then local xu=(SF[2]);if not xl[xu]then do xl[xu]={jE[xu]};end;end;(SF)[0X1]=xl[xu];SF[2]=0X1;end;end;end;end;end;until true;return;end;end;end;else if q4>=2 then if q4>=3 then if q4~=0x4 then else for nT=t4[7],t4[6]do do(cW)[nT]=nil;end;end;end;else do if not(cW[t4[0X006]]<=cW[t4[1]])then do GW=t4[0X007];end;end;end;end;else if q4==0X01 then cW[t4[7]]=t4[2];else GW=t4[0X6];end;end;end;end;end;end);if QW then if HW then do if EW~=0x00001 then return cW[BW](f(cW,BW+1,iW));else do return cW[BW]();end;end;end;elseif BW then do return f(cW,BW,EW);end;end;else if e(HW)~="st\114\105ng"then(V)(HW,0X000);else if not(p(HW,"\097t\116\e\m\112\116\ \116\o\032\y\i\e\l\d\032\097\099r\o\115\s\032\m\e\116a\109\e\116\ho\100\/C%\-\099\097l\l \098\111\117\110d\097\114\121"))then else return coroutine.yield();end;if not(p(HW,"^\.\045:\%d\043: "))then(V)(HW,0);else(V)("Lura\p\h\032\083\cr\i\112\116\:"..(Dm[GW-1]or"(\105\110t\er\110\097\108\)")..": "..v(HW),0X0000);end;end;end;end;else do Km=function(...)local kj,vj=0x01,{};local jj=(K());local Wj=({[2]=vj,[1]=Xm});local Jj,nj=eH(...);Jj=Jj-0X00001;local uj=(jj==g and Qm or jj);for VJ=0,Jj do do if not(km>VJ)then break;else do(vj)[VJ]=nj[VJ+0X1];end;end;end;end;if not Lm then nj=nil;elseif Um then vj[km]={n=Jj>=km and Jj-km+1 or 0X0,f(nj,km+1,Jj+1)};end;local yj=(0);if uj~=jj then w(Km,uj);end;local Sj,Nj,Dj,Yj=o(function()while true do local Ik=Sm[kj];local Hk=Ik[4];kj=kj+1;if Hk>=11 then if Hk<17 then if Hk>=0Xe then if not(Hk<15)then if Hk==16 then(uj)[Ik[0x00002]]=vj[Ik[7]];else if not(vj[Ik[0X0007]])then else kj=Ik[6];end;end;else vj[Ik[0X7]]=uj[Ik[0X2]];end;else do if Hk<0XC then do if vj[Ik[0X6]]~=vj[Ik[1]]then do kj=Ik[7];end;end;end;else if Hk==13 then(Wj)[Ik[6]]=vj[Ik[7]];else do vj[0x00]=uj[Ik[2]];end;do kj=kj+0X1;end;kj=kj+0X1;kj=kj+0x1;do yj=0X00000;end;vj[yj]=vj[yj]();Ik=Sm[kj];kj=kj+1;do if not(vj[0])then else kj=Ik[0X6];end;end;end;end;end;end;else do if Hk<20 then if not(Hk<18)then do if Hk==19 then vj[Ik[0X7]]=vj[Ik[0x0006]]<vj[Ik[1]];else local vs=(Zm[Ik[6]]);local Es=(vs[3]);local bs=#Es;local gs=(nil);if bs>0X000 then gs={};for CG=0x1,bs do local JG=Es[CG];if JG[0X1]~=0X0000 then do gs[CG-0x1]=bm[JG[2]];end;else do(gs)[CG-1]={vj,JG[0X02]};end;end;end;(M)(Cm,gs);end;do vj[Ik[7]]=dH(vs,gs,uj);end;end;end;else repeat local vf,df=Cm,vj;do if not(#vf>0)then else local xv={};for Sb,Yb in I,vf do do for TW,HW in I,Yb do if not(HW[1]==df and HW[2]>=0X0)then else local WM=HW[0X00002];do if not(not xv[WM])then else(xv)[WM]={df[WM]};end;end;(HW)[0X1]=xv[WM];do HW[2]=0X01;end;end;end;end;end;end;end;until true;do return;end;end;else if Hk<21 then(vj)[Ik[7]]=not vj[Ik[0X6]];else do if Hk==22 then vj[0]=uj[Ik[2]];kj=kj+0X1;kj=kj+1;Ik=Sm[kj];do kj=kj+0X1;end;vj[0X0]=vj[0][Ik[0X5]];Ik=Sm[kj];kj=kj+0X00001;if not(not vj[0X000])then else kj=Ik[6];end;else do if not(not(vj[Ik[6]]<=vj[Ik[1]]))then else kj=Ik[7];end;end;end;end;end;end;end;end;else do if not(Hk>=0X005)then if Hk>=0X2 then do if not(Hk>=0x3)then(vj)[Ik[0X7]]=j(vj[Ik[6]],vj[Ik[0x1]]);else do if Hk~=4 then(vj)[Ik[0x07]]=Ik[2];else vj[Ik[0x7]]={f({},0X1,Ik[0X6])};end;end;end;end;else do if Hk~=1 then do kj=Ik[0X6];end;else for u7=Ik[7],Ik[0X6]do(vj)[u7]=nil;end;end;end;end;else do if Hk<0X08 then do if Hk<6 then(vj)[Ik[0X7]]=vj[Ik[6]]^vj[Ik[0X0001]];else if Hk~=0X0007 then else(vj)[0]=uj[Ik[2]];kj=kj+0X1;kj=kj+1;Ik=Sm[kj];kj=kj+0X0001;(vj)[1]=Ik[0X2];local Sg=(0);kj=kj+1;(vj)[Sg]=vj[Sg](vj[Sg+0X1]);do yj=Sg;end;kj=kj+0X001;kj=kj+1;do Ik=Sm[kj];end;do kj=kj+1;end;if not vj[0X0]then kj=Ik[0X00006];end;end;end;end;else if not(Hk>=0x9)then vj[0]=uj[Ik[0X2]];do kj=kj+0X1;end;kj=kj+1;Ik=Sm[kj];kj=kj+0X001;(vj)[0X0000]=vj[0X0][Ik[0x05]];do kj=kj+0X1;end;kj=kj+1;Ik=Sm[kj];do kj=kj+0X0001;end;if not vj[0X0]then kj=Ik[6];end;else if Hk==10 then(vj)[0]=uj[Ik[0X2]];kj=kj+0x001;kj=kj+1;do Ik=Sm[kj];end;local jx=(0);kj=kj+0X001;do(vj)[0X001]=uj[Ik[0X2]];end;do Ik=Sm[kj];end;kj=kj+0X1;vj[0X1]=vj[0X00001][Ik[5]];kj=kj+0X0001;(vj[jx])(vj[jx+1]);do yj=jx-1;end;Ik=Sm[kj];do kj=kj+0X001;end;kj=Ik[6];else(vj)[0X0000]=uj[Ik[0X2]];kj=kj+1;kj=kj+1;Ik=Sm[kj];kj=kj+0X1;if vj[0]then kj=Ik[0x06];end;end;end;end;end;end;end;end;end;end);if Sj then if Nj then if Yj~=0X01 then return vj[Dj](f(vj,Dj+1,yj));else return vj[Dj]();end;elseif not(Dj)then else return f(vj,Dj,Yj);end;else if e(Nj)~="\st\114\i\110\g"then(V)(Nj,0X000);else if p(Nj,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(Nj,"^.-:%d+: "))then V(Nj,0X0);else V("\Lura\p\104 \S\c\114\105\pt\:"..(Dm[kj-1]or"(internal)")..'\:\ '..v(Nj),0);end;end;end;end;end;end;end;else Km=function(...)local Io=(0X1);local Lo={};local no=K();local No=(no==g and Qm or no);local ao={[1]=Xm,[2]=Lo};local uo,So=eH(...);uo=uo-1;do for Ap=0X0000,uo do do if km>Ap then Lo[Ap]=So[Ap+1];else break;end;end;end;end;if not Lm then do So=nil;end;elseif Um then Lo[km]={n=uo>=km and uo-km+0x1 or 0x0,f(So,km+0X1,uo+1)};end;local vo=(0X0);if No==no then else w(Km,No);end;local fo,yo,To,mo=o(function()do while true do local FO=(Sm[Io]);local LO=FO[4];Io=Io+0X1;if not(LO>=0X00D)then if not(LO>=0X6)then if LO>=3 then if LO<0X4 then(Lo)[0x0]=No[FO[2]];do Io=Io+0X1;end;Io=Io+0x1;Io=Io+0X1;vo=0X0;do Lo[vo]=Lo[vo]();end;Io=Io+1;Io=Io+1;FO=Sm[Io];Io=Io+0X1;if not(not(FO[0X2]<=Lo[0]))then else do Io=FO[7];end;end;else if LO==5 then Lo[0]=No[FO[0X002]];FO=Sm[Io];local bS=Zm[FO[0x6]];Io=Io+1;local oS=(0);local US=nil;local OS=(bS[0X3]);local pS=#OS;do if pS>0 then US={};for JJ=1,pS do local OJ=(OS[JJ]);if OJ[0X1]==0X0 then(US)[JJ-1]={Lo,OJ[0X00002]};else do US[JJ-0x1]=bm[OJ[0X2]];end;end;end;(M)(Cm,US);end;end;Lo[0X1]=dH(bS,US,No);Io=Io+1;(Lo[oS])(Lo[oS+1]);vo=oS-0x1;FO=Sm[Io];Io=Io+0X1;Io=FO[6];else do Lo[FO[0X7]]=Lo[FO[0x6]]>Lo[FO[1]];end;end;end;else if LO>=0X1 then if LO~=2 then if Lo[FO[0X6]]<Lo[FO[1]]then Io=FO[0X7];end;else for zR=FO[0X0007],FO[6]do do Lo[zR]=nil;end;end;end;else Lo[0x0]=No[FO[2]];Io=Io+1;Io=Io+1;FO=Sm[Io];Io=Io+0X1;(Lo)[0X1]=FO[0X2];Io=Io+0x01;local C9=(0X00);(Lo)[C9]=Lo[C9](Lo[C9+1]);vo=C9;FO=Sm[Io];Io=Io+0X1;if not Lo[0]then Io=FO[0X6];end;end;end;else if not(LO<9)then if not(LO<11)then if LO~=12 then Lo[FO[0X7]]=FO[2];else Lo[0X00000]=No[FO[2]];Io=Io+1;Io=Io+0X1;FO=Sm[Io];Io=Io+1;local dF=0X0;Lo[0X00001]=FO[2];do Io=Io+1;end;Lo[dF]=Lo[dF](Lo[dF+0X01]);vo=dF;Io=Io+0X00001;Io=Io+1;FO=Sm[Io];Io=Io+0X001;if not(not Lo[0x0])then else Io=FO[6];end;end;else do if LO==10 then else Lo[FO[7]]=#Lo[FO[0X006]];end;end;end;else if LO<7 then if not(Lo[FO[0X0007]])then else do Io=FO[6];end;end;else do if LO~=0X8 then(Lo)[1]=No[FO[2]];Io=Io+0X0001;Io=Io+1;FO=Sm[Io];Io=Io+1;if not(Lo[1])then else Io=FO[6];end;else(Lo)[0]=No[FO[0X0002]];FO=Sm[Io];Io=Io+0X1;local vL=(0X000);do(Lo)[1]=FO[0X2];end;do Io=Io+0X001;end;(Lo)[vL]=Lo[vL](Lo[vL+1]);vo=vL;Io=Io+0x001;Io=Io+1;FO=Sm[Io];do Io=Io+1;end;if not(not Lo[0])then else Io=FO[0X0006];end;end;end;end;end;end;else if not(LO>=0X014)then do if LO<16 then if not(LO>=0x0000E)then do Lo[FO[7]]=Lo[FO[0x0006]]+Lo[FO[0x001]];end;else if LO~=15 then local po=bm[0X0];(Lo)[1]=po[1][po[2]];local eo=1;FO=Sm[Io];Io=Io+1;local Ho=(Lo[0x001]);Lo[eo+0x1]=Ho;do Lo[eo]=Ho[FO[0X5]];end;Io=Io+0X1;eo=0X00001;Lo[eo]=Lo[eo](Lo[eo+0X1]);vo=eo;do FO=Sm[Io];end;Io=Io+1;do if not(not Lo[1])then else Io=FO[6];end;end;else Lo[FO[7]]={f({},1,FO[6])};end;end;else if not(LO>=0x12)then if LO==0X00011 then(Lo)[FO[0X7]]=No[FO[0X00002]];else local W4=FO[7];local D4=Lo[FO[0X6]];do Lo[W4+0X1]=D4;end;(Lo)[W4]=D4[FO[0X5]];end;else if LO==0X0013 then do repeat local kn,Hn=Cm,Lo;if not(#kn>0)then else local rb={};for Ys,Ps in I,kn do do for DE,bE in I,Ps do if bE[0X1]==Hn and bE[2]>=0 then local Hq=bE[2];if not rb[Hq]then rb[Hq]={Hn[Hq]};end;do(bE)[1]=rb[Hq];end;(bE)[0x2]=1;end;end;end;end;end;until true;end;return;else do(Lo)[0X0]=No[FO[0X002]];end;Io=Io+0X1;Io=Io+0X001;FO=Sm[Io];Io=Io+0x1;(Lo)[0]=Lo[0X0][FO[0x0005]];FO=Sm[Io];do Io=Io+1;end;if not(not Lo[0])then else Io=FO[0X6];end;end;end;end;end;else do if not(LO<23)then if not(LO<25)then do if LO~=0X0001A then local HJ=nil;local wJ=Zm[FO[6]];local PJ=(wJ[0X3]);local IJ=(#PJ);do if IJ>0x000 then do HJ={};end;for Er=1,IJ do local nr=(PJ[Er]);if nr[1]==0 then do HJ[Er-0X1]={Lo,nr[0X2]};end;else HJ[Er-0X1]=bm[nr[0x02]];end;end;(M)(Cm,HJ);end;end;Lo[FO[7]]=dH(wJ,HJ,No);else local f0=FO[0x007];local u0=(r(function(...)C();for Gj,yj,tj,dj,nj,rj,Uj,ej,vj,fj in...do(C)(true,{Gj,yj,tj,dj,nj,rj,Uj,ej,vj,fj});end;end));u0(Lo[f0],Lo[f0+1],Lo[f0+2]);do vo=f0;end;do(Lo)[f0]=u0;end;Io=FO[0X6];end;end;else if LO~=0X18 then do Lo[0]=No[FO[0X2]];end;FO=Sm[Io];do Io=Io+1;end;(Lo)[0]=Lo[0][FO[0X005]];FO=Sm[Io];Io=Io+0X1;do if not(not Lo[0X00])then else Io=FO[6];end;end;else Io=FO[0x6];end;end;else if LO>=21 then if LO~=0x016 then No[FO[2]]=Lo[FO[7]];else Lo[FO[0X7]]=Lo[FO[0X0006]]<=Lo[FO[0X1]];end;else do Lo[0X00]=No[FO[0X002]];end;Io=Io+0x1;vo=0X0;(Lo)[vo]=Lo[vo]();FO=Sm[Io];Io=Io+1;do if not(Lo[0])then else Io=FO[0X006];end;end;end;end;end;end;end;end;end;end);if fo then do if yo then do if mo==1 then return Lo[To]();else return Lo[To](f(Lo,To+1,vo));end;end;elseif To then do return f(Lo,To,mo);end;end;end;else if e(yo)~="string"then V(yo,0X0);else if p(yo,'\097t\116em\pt t\o\ y\i\e\l\d\032a\cr\111s\s\ m\101\116\097\m\101\116\ho\d/C%-\099a\108l b\oundar\y')then return coroutine.yield();end;do if not(p(yo,'\094.\-:\%\100\043\:\ '))then(V)(yo,0x000);else(V)("\076\117\114ap\h\032S\099\114\i\pt\058"..(Dm[Io-0X1]or"\(\i\110t\e\114\110\097\108\)").."\: "..v(yo),0);end;end;end;end;end;end;end;else if xm>=0x42 then if xm>=67 then do if xm~=68 then Km=function(...)local EF,rF=1,{};local KF=(K());local TF,IF=eH(...);local mF,FF,CF=(KF==g and Qm or KF),{[1]=Xm,[2]=rF},(0);TF=TF-0X1;for bK=0X0,TF do if km>bK then rF[bK]=IF[bK+1];else do break;end;end;end;if not Lm then IF=nil;elseif not(Um)then else do(rF)[km]={n=TF>=km and TF-km+1 or 0,f(IF,km+1,TF+0x1)};end;end;if mF~=KF then(w)(Km,mF);end;local eF,vF,BF,ZF=o(function()while true do local pn=Sm[EF];local Cn=pn[0X4];EF=EF+0X001;if not(Cn<17)then do if Cn<0x1A then if Cn>=0X00015 then if Cn>=23 then if not(Cn<0X18)then do if Cn==25 then local FT=pn[0x7];local mT,aT=rF[FT+1],(rF[FT+2]);local fT=rF[FT];(rF)[FT]=r(function()for Rl=fT,mT,aT do C(true,Rl);end;end);EF=pn[0X06];else local qZ=bm[0];do rF[0]=qZ[0x1][qZ[0x2]];end;EF=EF+0X001;do EF=EF+1;end;pn=Sm[EF];local WZ=(0);do EF=EF+0x1;end;local wZ=rF[0];rF[WZ+0X0001]=wZ;(rF)[WZ]=wZ[pn[0x5]];do EF=EF+1;end;do WZ=0X0;end;rF[WZ](rF[WZ+1]);do CF=WZ-0X01;end;EF=EF+0x1;repeat local uq,wq=Cm,rF;if not(#uq>0X0)then else local zv=({});do for d5,c5 in I,uq do for af,Yf in I,c5 do if Yf[1]==wq and Yf[2]>=0 then local B6=Yf[2];if not(not zv[B6])then else(zv)[B6]={wq[B6]};end;do(Yf)[1]=zv[B6];end;Yf[0X2]=0x0001;end;end;end;end;end;until true;do return;end;end;end;else for NH=pn[7],pn[6]do rF[NH]=nil;end;end;else do if Cn==0X16 then(rF)[0x0]=mF[pn[2]];local sU=(3);EF=EF+0X1;EF=EF+1;pn=Sm[EF];local tU=nil;EF=EF+1;local BU=Zm[pn[6]];local CU=BU[0X003];local mU=(#CU);if mU>0 then tU={};for yT=1,mU do local uT=CU[yT];do if uT[1]~=0 then(tU)[yT-0X1]=bm[uT[0x02]];else tU[yT-0X1]={rF,uT[0X2]};end;end;end;(M)(Cm,tU);end;(rF)[1]=dH(BU,tU,mF);local AU=0x00000;do EF=EF+0X1;end;local MU=0x02;if MU==0X0 then else CF=AU+MU-0X1;end;local JU,QU=nil,(nil);do if MU~=0X00001 then do JU,QU=eH(rF[AU](f(rF,AU+0X1,CF)));end;else do JU,QU=eH(rF[AU]());end;end;end;if sU==1 then CF=AU-0X1;else if sU~=0X0 then JU=AU+sU-2;do CF=JU+1;end;else JU=JU+AU-0X01;CF=JU;end;local c6=(0X00);for aB=AU,JU do c6=c6+0X0001;(rF)[aB]=QU[c6];end;end;pn=Sm[EF];EF=EF+1;if not(rF[0X0])then else EF=pn[6];end;else(rF)[0]=mF[pn[0X02]];EF=EF+1;do EF=EF+1;end;local Un=(0X0);pn=Sm[EF];EF=EF+1;rF[0X00001]=pn[0X00002];do EF=EF+1;end;rF[Un]=rF[Un](rF[Un+1]);CF=Un;EF=EF+0X1;EF=EF+0X01;pn=Sm[EF];EF=EF+1;if not(not rF[0X0])then else do EF=pn[6];end;end;end;end;end;else if not(Cn>=19)then if Cn==18 then rF[pn[7]]={f({},1,pn[6])};else rF[pn[7]]=a(rF[pn[6]]);end;else if Cn==20 then do rF[0X000]=mF[pn[0X002]];end;EF=EF+0x0001;EF=EF+1;do pn=Sm[EF];end;do EF=EF+1;end;do rF[0X00001]=mF[pn[2]];end;pn=Sm[EF];EF=EF+0X1;rF[2]=pn[0X2];do pn=Sm[EF];end;local NR=0;EF=EF+1;(rF)[0X03]=pn[0X2];EF=EF+0x1;CF=NR+0x4-0x0001;rF[NR](f(rF,NR+1,CF));CF=NR-0x1;EF=EF+1;EF=EF+0X1;pn=Sm[EF];do EF=EF+0X1;end;do EF=pn[6];end;else rF[2]=mF[pn[0X0002]];local zl=0x2;EF=EF+1;EF=EF+0X1;pn=Sm[EF];EF=EF+0X1;do(rF)[3]=pn[2];end;EF=EF+0X001;(rF)[4]=rF[1];EF=EF+0X1;rF[zl](rF[zl+0x1],rF[zl+0x2]);do CF=zl-0X1;end;do EF=EF+0X1;end;EF=EF+1;pn=Sm[EF];EF=EF+0x01;EF=pn[0X6];end;end;end;else do if Cn>=0X1e then do if Cn>=0X20 then if Cn>=0X21 then if Cn==34 then(rF)[pn[0X7]]=W(rF[pn[6]],rF[pn[1]]);else(rF)[0X0]=mF[pn[0X00002]];pn=Sm[EF];EF=EF+1;rF[0]=rF[0][pn[5]];EF=EF+1;EF=EF+0X1;pn=Sm[EF];EF=EF+1;if not rF[0X000]then EF=pn[0X6];end;end;else(rF)[0]=mF[pn[2]];EF=EF+1;EF=EF+1;pn=Sm[EF];local gU=(0);EF=EF+1;do(rF)[0x1]=mF[pn[0X2]];end;pn=Sm[EF];EF=EF+1;do(rF)[0X2]=pn[2];end;do pn=Sm[EF];end;EF=EF+1;(rF)[0X3]=pn[0x2];do EF=EF+0X1;end;CF=gU+4-1;rF[gU](f(rF,gU+1,CF));do CF=gU-1;end;pn=Sm[EF];EF=EF+1;do EF=pn[6];end;end;else do if Cn==31 then rF[pn[0x007]]=l(rF[pn[0X6]],rF[pn[1]]);else rF[0x000]=mF[pn[2]];do EF=EF+0X001;end;EF=EF+1;pn=Sm[EF];local AY=0X0;do EF=EF+1;end;do(rF)[0X0001]=pn[0X2];end;do EF=EF+0x0001;end;(rF)[AY]=rF[AY](rF[AY+1]);do CF=AY;end;pn=Sm[EF];EF=EF+1;if not(not rF[0])then else EF=pn[6];end;end;end;end;end;else do if Cn<0X00001C then if Cn~=0x1b then do rF[0]=mF[pn[2]];end;pn=Sm[EF];do EF=EF+1;end;rF[0X0]=rF[0][pn[5]];EF=EF+1;EF=EF+0X01;pn=Sm[EF];EF=EF+1;(rF)[0]=rF[0X0][pn[5]];EF=EF+1;do EF=EF+0X01;end;pn=Sm[EF];EF=EF+1;do(rF)[0]=rF[0X0000][pn[0X5]];end;do pn=Sm[EF];end;EF=EF+1;if not(rF[0X0]<pn[0X5])then EF=pn[0x07];end;else(rF)[pn[0X7]]=mF[pn[0X2]];end;else if Cn==0X1d then EF=pn[6];else local In=Zm[pn[6]];local dn=In[3];local Fn=(nil);local xn=#dn;if xn>0X0 then Fn={};for Wc=0X00001,xn do local Pc=dn[Wc];do if Pc[0x1]~=0 then Fn[Wc-0X1]=bm[Pc[0X00002]];else Fn[Wc-0x1]={rF,Pc[2]};end;end;end;M(Cm,Fn);end;do(rF)[pn[0x07]]=dH(In,Fn,mF);end;end;end;end;end;end;end;end;else if Cn<8 then if Cn<0x4 then do if not(Cn>=0X002)then do if Cn~=0X00001 then rF[0]=mF[pn[0X2]];EF=EF+0X1;do EF=EF+1;end;pn=Sm[EF];EF=EF+1;rF[0]=rF[0x000][pn[0x5]];EF=EF+0X01;EF=EF+1;pn=Sm[EF];EF=EF+1;do(rF)[0X0]=rF[0][pn[0X05]];end;EF=EF+1;do EF=EF+0x01;end;pn=Sm[EF];EF=EF+1;rF[0X0]=rF[0x0][pn[0x5]];EF=EF+0X01;do EF=EF+0x1;end;pn=Sm[EF];EF=EF+1;do if not(rF[0]<pn[0x5])then do EF=pn[0X7];end;end;end;else if not rF[pn[0X07]]then do EF=pn[6];end;end;end;end;else if Cn==3 then(rF)[0]=mF[pn[2]];do EF=EF+1;end;EF=EF+0X00001;pn=Sm[EF];do EF=EF+1;end;do rF[0X00000]=rF[0x0][pn[0X05]];end;do pn=Sm[EF];end;EF=EF+1;do rF[0]=rF[0][pn[0X00005]];end;pn=Sm[EF];EF=EF+1;rF[0X0]=rF[0X0][pn[5]];EF=EF+0x1;do EF=EF+0X00001;end;pn=Sm[EF];EF=EF+0x1;if not(rF[0])then else EF=pn[0X6];end;else end;end;end;else do if Cn>=0X6 then do if Cn==0X7 then rF[0]=mF[pn[2]];EF=EF+1;EF=EF+0X1;do pn=Sm[EF];end;EF=EF+0x1;local w3=0;rF[0X1]=pn[2];EF=EF+0X1;do rF[w3]=rF[w3](rF[w3+1]);end;CF=w3;do EF=EF+0X1;end;EF=EF+1;pn=Sm[EF];do EF=EF+0X1;end;if rF[0X0000]then do EF=pn[6];end;end;else rF[0x0]=mF[pn[0X02]];EF=EF+1;EF=EF+1;do pn=Sm[EF];end;do EF=EF+1;end;(rF)[0X0000]=rF[0X00][pn[5]];pn=Sm[EF];EF=EF+0X1;(rF)[0]=rF[0X00][pn[0X5]];pn=Sm[EF];do EF=EF+1;end;(rF)[0]=rF[0X00][pn[0X5]];EF=EF+0x1;EF=EF+0x001;pn=Sm[EF];EF=EF+1;if rF[0X0]then EF=pn[6];end;end;end;else if Cn==5 then repeat local rN,EN=Cm,(rF);if#rN>0 then local F9=({});do for FM,zM in I,rN do do for c6,U6 in I,zM do if U6[1]==EN and U6[0X0002]>=0 then local SR=U6[2];if not(not F9[SR])then else do(F9)[SR]={EN[SR]};end;end;do(U6)[1]=F9[SR];end;U6[0X2]=1;end;end;end;end;end;end;until true;return;else(rF)[0x0]=mF[pn[0X2]];pn=Sm[EF];do EF=EF+1;end;do(rF)[0]=rF[0X0][pn[0X00005]];end;do EF=EF+0x0001;end;local M1=0x0;do EF=EF+1;end;do pn=Sm[EF];end;EF=EF+1;rF[1]=pn[2];EF=EF+1;rF[M1]=rF[M1](rF[M1+0X1]);CF=M1;EF=EF+1;EF=EF+1;pn=Sm[EF];EF=EF+1;do if not rF[0]then do EF=pn[0X6];end;end;end;end;end;end;end;else if not(Cn<0XC)then do if not(Cn>=14)then do if Cn~=0x00d then repeat local nY,bY,mY=Cm,rF,(pn[7]);if#nY>0 then local Jq=({});for Za,ea in I,nY do for J3,I3 in I,ea do if I3[1]==bY and I3[2]>=mY then local rQ=I3[2];if not(not Jq[rQ])then else do Jq[rQ]={bY[rQ]};end;end;I3[1]=Jq[rQ];do I3[2]=0X1;end;end;end;end;end;until true;else(rF)[0X0]=mF[pn[0X02]];EF=EF+0x1;EF=EF+1;pn=Sm[EF];EF=EF+1;do rF[1]=pn[2];end;do EF=EF+1;end;local P6=0;(rF[P6])(rF[P6+1]);CF=P6-0X1;do pn=Sm[EF];end;do EF=EF+1;end;rF[0]=pn[0x2];pn=Sm[EF];do EF=EF+0X1;end;do(mF)[pn[2]]=rF[0];end;do pn=Sm[EF];end;EF=EF+1;EF=pn[0X6];end;end;else do if Cn<0X0000f then rF[pn[0x7]]=-rF[pn[6]];else do if Cn==0X10 then(rF)[pn[0X00007]]=rF[pn[6]]~=rF[pn[0X1]];else do rF[pn[0X07]]=pn[2];end;end;end;end;end;end;end;else if Cn>=10 then do if Cn~=0xb then rF[pn[7]]=O(rF[pn[6]],rF[pn[1]]);else(rF)[0X0]=nil;pn=Sm[EF];local HE=(0x0);local BE=(bm[0]);do EF=EF+0X1;end;(mF)[pn[2]]=rF[0];EF=EF+0x1;(rF)[0X0]=BE[1][BE[0X2]];pn=Sm[EF];EF=EF+0X1;local ME=(rF[0X00000]);rF[HE+0X1]=ME;do rF[HE]=ME[pn[5]];end;do EF=EF+0x1;end;do HE=0;end;rF[HE]=rF[HE](rF[HE+0X00001]);do CF=HE;end;pn=Sm[EF];EF=EF+1;if rF[0]then EF=pn[6];end;end;end;else if Cn==0X9 then local J3=0X2;local w3=(bm[0]);rF[2]=w3[1][w3[0x02]];do pn=Sm[EF];end;do EF=EF+0X1;end;local D3=rF[0X2];do(rF)[J3+0X1]=D3;end;rF[J3]=D3[pn[0x5]];EF=EF+1;J3=0X002;(rF[J3])(rF[J3+0X0001]);CF=J3-0X001;do EF=EF+0X1;end;EF=EF+0X1;pn=Sm[EF];EF=EF+0x1;EF=pn[0X6];else rF[0X0]=mF[pn[2]];do pn=Sm[EF];end;EF=EF+1;do(rF)[0X1]=pn[0X2];end;do EF=EF+1;end;local XN=0;(rF[XN])(rF[XN+1]);CF=XN-0x1;pn=Sm[EF];EF=EF+1;rF[0X0]=pn[0X2];pn=Sm[EF];do EF=EF+1;end;mF[pn[0X02]]=rF[0X0];pn=Sm[EF];EF=EF+1;EF=pn[0X0006];end;end;end;end;end;end;end);if not(eF)then if e(vF)~="string"then(V)(vF,0);else do if p(vF,'\097tt\e\109pt\ to\032\yi\e\l\d\ a\c\114oss\ \109e\116\097m\101\116\ho\d\/\C%-\099al\108\ \098\ou\110\d\097\114y')then return coroutine.yield();end;end;if not(p(vF,"\^\046-\:\037d\+:\ "))then(V)(vF,0);else V('\L\117\114a\p\h\ \083\c\114\i\pt\:'..(Dm[EF-1]or'(\i\110\116e\114\110al\)')..": "..v(vF),0);end;end;else if vF then if ZF==0x1 then do return rF[BF]();end;else return rF[BF](f(rF,BF+0X1,CF));end;elseif BF then return f(rF,BF,ZF);end;end;end;else Km=function(...)local M2={};local A2=0X01;local Z2={[2]=M2,[1]=Xm};local g2=(K());local O2=(g2==g and Qm or g2);local G2,B2=eH(...);local f2=0;G2=G2-0X1;for qO=0X0,G2 do if not(km>qO)then do break;end;else M2[qO]=B2[qO+1];end;end;if not Lm then B2=nil;elseif not(Um)then else do M2[km]={n=G2>=km and G2-km+1 or 0,f(B2,km+0x00001,G2+1)};end;end;do if O2~=g2 then w(Km,O2);end;end;local m2,s2,H2,t2=o(function()while true do local Q0=(Sm[A2]);local H0=Q0[0X4];A2=A2+0X01;if H0>=9 then if not(H0>=0XE)then if H0>=11 then if not(H0>=0X0c)then M2[Q0[0X7]]=j(M2[Q0[0X00006]],M2[Q0[1]]);else if H0~=13 then M2[0X0]=O2[Q0[2]];A2=A2+0X1;A2=A2+1;Q0=Sm[A2];A2=A2+1;(M2[0])[Q0[2]]=Q0[5];Q0=Sm[A2];A2=A2+0X0001;A2=Q0[6];else(M2)[Q0[7]]=Q0[0x2];end;end;else do if H0==0XA then repeat local MK,TK=Cm,M2;do if#MK>0 then local pC={};for mr,Tr in I,MK do for rG,bG in I,Tr do if not(bG[1]==TK and bG[0X2]>=0)then else local h1=(bG[0X2]);if not(not pC[h1])then else(pC)[h1]={TK[h1]};end;do bG[1]=pC[h1];end;(bG)[2]=1;end;end;end;end;end;until true;return;else M2[Q0[0X007]]=M2[Q0[0X006]]<=M2[Q0[1]];end;end;end;else do if H0>=0X10 then if not(H0<0x11)then if H0~=18 then M2[0]=O2[Q0[2]];A2=A2+0x001;do A2=A2+0X001;end;Q0=Sm[A2];local ij=(0);A2=A2+1;local Ij=M2[0X0000];M2[ij+0X1]=Ij;(M2)[ij]=Ij[Q0[5]];do Q0=Sm[A2];end;A2=A2+1;M2[2]=Q0[0X002];A2=A2+0X1;ij=0X0;M2[ij]=M2[ij](M2[ij+1],M2[ij+2]);do f2=ij;end;A2=A2+0x1;A2=A2+1;do Q0=Sm[A2];end;A2=A2+0X1;(M2)[0]=M2[0][Q0[0x5]];Q0=Sm[A2];A2=A2+1;ij=0X00;Ij=M2[0];M2[ij+0X001]=Ij;M2[ij]=Ij[Q0[0X5]];do A2=A2+0X1;end;ij=0;M2[ij]=M2[ij](M2[ij+0X1]);f2=ij;do Q0=Sm[A2];end;A2=A2+0X00001;do if not(not M2[0])then else A2=Q0[6];end;end;else A2=Q0[0x6];end;else(M2)[Q0[7]]=M2[Q0[0X06]]~=M2[Q0[1]];end;else if H0~=15 then(M2)[Q0[7]]={f({},1,Q0[6])};else do(M2)[Q0[7]]=not M2[Q0[6]];end;end;end;end;end;else if H0<4 then do if H0>=2 then if H0~=0X03 then repeat local Tk,Bk,gk=Cm,M2,(Q0[7]);if#Tk>0X0 then local g5={};for CX,yX in I,Tk do do for IC,KC in I,yX do if not(KC[1]==Bk and KC[2]>=gk)then else local B6=KC[2];if not g5[B6]then g5[B6]={Bk[B6]};end;KC[0X01]=g5[B6];(KC)[0x02]=1;end;end;end;end;end;until true;else local r0=M2[Q0[6]]/M2[Q0[1]];do(M2)[Q0[7]]=r0-r0%1;end;end;else do if H0==0x0001 then(M2)[Q0[0x7]]=#M2[Q0[0x06]];else for va=Q0[7],Q0[0X6]do(M2)[va]=nil;end;end;end;end;end;else if not(H0<6)then if not(H0>=7)then local oF=Zm[Q0[6]];local HF,TF=oF[0X3],(nil);local NF=(#HF);if not(NF>0X00000)then else TF={};for pe=1,NF do local Me=HF[pe];if Me[0x1]~=0 then(TF)[pe-0X01]=bm[Me[0X0002]];else do(TF)[pe-0x1]={M2,Me[0X2]};end;end;end;(M)(Cm,TF);end;do M2[Q0[7]]=dH(oF,TF,O2);end;else if H0~=8 then else if not M2[Q0[0X7]]then A2=Q0[0x6];end;end;end;else if H0~=5 then(M2)[0]=O2[Q0[2]];A2=A2+1;do A2=A2+1;end;Q0=Sm[A2];A2=A2+1;do M2[1]=O2[Q0[2]];end;do Q0=Sm[A2];end;do A2=A2+1;end;(M2)[0x00002]=Q0[0X2];Q0=Sm[A2];A2=A2+0X00001;(M2)[3]=Q0[0X2];A2=A2+0X00001;local mB=(0);f2=mB+4-0X1;M2[mB](f(M2,mB+1,f2));f2=mB-1;A2=A2+0x1;A2=A2+1;do Q0=Sm[A2];end;do A2=A2+1;end;do A2=Q0[6];end;else(M2)[Q0[0x7]]=O2[Q0[2]];end;end;end;end;end;end);if m2 then if s2 then if t2==1 then do return M2[H2]();end;else return M2[H2](f(M2,H2+0X1,f2));end;elseif not(H2)then else return f(M2,H2,t2);end;else if e(s2)~='\st\114\105\110\g'then(V)(s2,0);else if p(s2,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(s2,"^.-:%d+: "))then(V)(s2,0X0);else(V)('\Lu\114a\p\h\ \S\099ri\pt\:'..(Dm[A2-0X1]or"(internal)").."\:\032"..v(s2),0);end;end;end;end;end;end;else do Km=function(...)local bL,fL=0x1,({});local rL=({[1]=Xm,[2]=fL});local XL=(K());local QL,IL=eH(...);local uL,WL=0X0,(XL==g and Qm or XL);QL=QL-0x1;for vf=0,QL do if not(km>vf)then break;else(fL)[vf]=IL[vf+1];end;end;if not Lm then do IL=nil;end;elseif not(Um)then else(fL)[km]={n=QL>=km and QL-km+0X1 or 0X000,f(IL,km+1,QL+0X1)};end;if WL==XL then else(w)(Km,WL);end;local nL,gL,YL,vL=o(function()while true do local jN=(Sm[bL]);local QN=jN[0X4];bL=bL+0X1;do if not(QN>=0X0B)then if QN>=0X5 then if QN>=0X8 then if QN<0X0009 then fL[0x7]=fL[0X00006][jN[5]];bL=bL+1;local as=0x7;do bL=bL+1;end;do jN=Sm[bL];end;bL=bL+1;local us=fL[0X00007];(fL)[as+1]=us;fL[as]=us[jN[0X05]];jN=Sm[bL];bL=bL+1;do(fL)[0x9]=jN[2];end;jN=Sm[bL];bL=bL+0x01;fL[10]=jN[0x00002];bL=bL+1;do as=7;end;uL=as+4-1;fL[as]=fL[as](f(fL,as+1,uL));uL=as;do bL=bL+0X0001;end;bL=bL+1;jN=Sm[bL];do bL=bL+0X1;end;do if fL[7]==jN[5]then else bL=jN[0X7];end;end;else if QN==0X0000A then local nI=(Zm[jN[0X6]]);local XI=nI[3];local ZI=nil;local BI=#XI;do if not(BI>0X0)then else ZI={};for mJ=1,BI do local yJ=(XI[mJ]);if yJ[0X001]==0X000 then ZI[mJ-0x01]={fL,yJ[2]};else ZI[mJ-1]=bm[yJ[0X002]];end;end;(M)(Cm,ZI);end;end;(fL)[jN[0X7]]=dH(nI,ZI,WL);else fL[0X7]=WL[jN[0X2]];bL=bL+0x1;bL=bL+0X0001;jN=Sm[bL];bL=bL+1;fL[7]=fL[0x7][jN[5]];jN=Sm[bL];do bL=bL+1;end;(fL)[8]=fL[6][jN[0x05]];jN=Sm[bL];bL=bL+0x1;local r7=(7);fL[8]=fL[8][jN[5]];bL=bL+1;bL=bL+1;jN=Sm[bL];bL=bL+1;(fL)[0x09]=jN[0X2];jN=Sm[bL];bL=bL+0X01;do fL[10]=fL[0x00006][jN[5]];end;jN=Sm[bL];bL=bL+1;do fL[0xA]=fL[10][jN[5]];end;bL=bL+0X1;uL=r7+0X4-0X1;fL[r7]=fL[r7](f(fL,r7+1,uL));uL=r7;bL=bL+1;bL=bL+1;do jN=Sm[bL];end;bL=bL+0X1;do(fL)[0x08]=WL[jN[0X002]];end;jN=Sm[bL];bL=bL+0X1;fL[8]=fL[8][jN[5]];jN=Sm[bL];bL=bL+0x1;(fL)[0x9]=WL[jN[0x2]];jN=Sm[bL];do bL=bL+0X00001;end;fL[9]=fL[0X09][jN[5]];bL=bL+0x0001;bL=bL+0X1;jN=Sm[bL];bL=bL+0x1;(fL)[0x09]=fL[9][jN[5]];bL=bL+0X01;bL=bL+0X1;jN=Sm[bL];bL=bL+0X001;fL[0X9]=fL[0X00009][jN[0X5]];bL=bL+1;bL=bL+1;do jN=Sm[bL];end;bL=bL+0X0001;(fL)[10]=jN[0X2];jN=Sm[bL];bL=bL+1;fL[11]=WL[jN[0X02]];bL=bL+1;bL=bL+0x1;jN=Sm[bL];do bL=bL+0x1;end;do(fL)[11]=fL[11][jN[5]];end;bL=bL+0X001;do bL=bL+0X00001;end;jN=Sm[bL];bL=bL+1;fL[11]=fL[11][jN[0X5]];do jN=Sm[bL];end;do bL=bL+0x0001;end;fL[0Xb]=fL[0XB][jN[0x005]];bL=bL+1;r7=8;uL=r7+0X4-1;(fL)[r7]=fL[r7](f(fL,r7+1,uL));uL=r7;bL=bL+0X0001;do(fL)[7]=fL[0X7]-fL[8];end;jN=Sm[bL];bL=bL+1;do fL[0X007]=fL[7][jN[5]];end;do bL=bL+0X0001;end;bL=bL+0X1;jN=Sm[bL];do bL=bL+1;end;if not(fL[0X00007]<=jN[5])then do bL=jN[7];end;end;end;end;else if QN<0X006 then do(fL)[jN[7]]={f({},0X00001,jN[6])};end;else if QN==7 then if fL[jN[0X6]]~=fL[jN[0X0001]]then bL=jN[7];end;else local oI=jN[7];local aI,xI=fL[oI],((jN[1]-0X1)*50);do for h6=1,jN[0X6]do aI[xI+h6]=fL[oI+h6];end;end;end;end;end;else if QN>=2 then if QN>=0X0003 then if QN==4 then local SF=0X8;local NF=fL[6];do(fL)[SF+1]=NF;end;(fL)[SF]=NF[jN[0X5]];jN=Sm[bL];bL=bL+1;do(fL)[10]=jN[2];end;bL=bL+1;do SF=8;end;do fL[SF]=fL[SF](fL[SF+1],fL[SF+0x2]);end;uL=SF;bL=bL+1;bL=bL+1;jN=Sm[bL];bL=bL+0X0001;do fL[0X8]=fL[0X0008][jN[0X005]];end;bL=bL+1;bL=bL+1;do jN=Sm[bL];end;bL=bL+1;(fL[0x0])[jN[2]]=fL[8];jN=Sm[bL];bL=bL+0x00001;SF=0X8;NF=fL[0x06];fL[SF+1]=NF;fL[SF]=NF[jN[0X5]];do jN=Sm[bL];end;do bL=bL+0x1;end;(fL)[0X000a]=jN[2];bL=bL+0X1;do SF=8;end;(fL)[SF]=fL[SF](fL[SF+0X1],fL[SF+2]);uL=SF;do jN=Sm[bL];end;do bL=bL+1;end;fL[0][jN[2]]=fL[8];bL=bL+0X1;fL[0X0008]=fL[6];jN=Sm[bL];bL=bL+0x1;fL[0][jN[0X2]]=fL[8];jN=Sm[bL];bL=bL+1;fL[0][jN[2]]=jN[5];do jN=Sm[bL];end;bL=bL+1;bL=jN[0X6];else for JK=jN[7],jN[0X6]do(fL)[JK]=nil;end;end;else bL=jN[6];end;else do if QN==0X1 then do(fL)[jN[0x07]]=WL[jN[2]];end;else fL[jN[0X7]]=a(fL[jN[6]]);end;end;end;end;else if not(QN>=17)then if QN>=14 then if not(QN>=15)then if not(fL[jN[0X6]]<=fL[jN[0x1]])then bL=jN[0X7];end;else if QN~=16 then fL[0X4]=jN[2];local eP=(0X4);do jN=Sm[bL];end;local HP=(Zm[jN[0X6]]);do bL=bL+0X1;end;local PP=(nil);local rP=(HP[3]);local bP=(#rP);if not(bP>0X0)then else PP={};for pG=0X1,bP do local iG=rP[pG];if iG[0X00001]~=0X0 then do PP[pG-0X01]=bm[iG[0X2]];end;else(PP)[pG-0X01]={fL,iG[2]};end;end;(M)(Cm,PP);end;(fL)[5]=dH(HP,PP,WL);bL=bL+1;do fL[0][fL[0X4]]=fL[5];end;do bL=bL+0X00001;end;do fL[0X4]=fL[0X0000];end;bL=bL+0X1;repeat local lP,OP=Cm,(fL);if not(#lP>0X0)then else local Br={};for em,qm in I,lP do for J2,g2 in I,qm do if not(g2[0X1]==OP and g2[2]>=0X0)then else local NH=g2[0X2];if not Br[NH]then do Br[NH]={OP[NH]};end;end;g2[1]=Br[NH];(g2)[2]=1;end;end;end;end;until true;return false,eP,eP;else do repeat local bK,NK=Cm,fL;do if#bK>0 then local Te={};for pb,Ib in I,bK do for hW,QW in I,Ib do if QW[1]==NK and QW[2]>=0 then local aH=QW[2];if not Te[aH]then do(Te)[aH]={NK[aH]};end;end;(QW)[1]=Te[aH];QW[2]=0X00001;end;end;end;end;end;until true;end;return;end;end;else do if QN<0X00C then do(fL)[jN[7]]=l(fL[jN[0X6]],fL[jN[1]]);end;else do if QN==0Xd then local Ph=(jN[0x7]);local Lh,ih,Bh=fL[Ph]();if not(Lh)then else(fL)[Ph+0X1]=ih;fL[Ph+2]=Bh;bL=jN[6];end;else(fL)[jN[0X7]]=jN[2];end;end;end;end;end;else do if QN>=20 then if not(QN>=21)then(fL)[jN[7]]=fL[jN[0x0006]]>=fL[jN[1]];else do if QN==0X16 then(fL)[0]={};jN=Sm[bL];bL=bL+1;fL[0x1]=WL[jN[2]];jN=Sm[bL];do bL=bL+0X01;end;fL[1]=fL[1][jN[5]];bL=bL+0X1;bL=bL+0X1;jN=Sm[bL];bL=bL+1;(fL)[1]=fL[0x1][jN[0X0005]];bL=bL+0X0001;bL=bL+0X00001;jN=Sm[bL];bL=bL+1;(fL)[0X00002]=WL[jN[0X2]];local mI=0X5;jN=Sm[bL];do bL=bL+0x1;end;local BI=0X2;do fL[0X2]=fL[0X2][jN[0X5]];end;bL=bL+1;bL=bL+1;jN=Sm[bL];bL=bL+0X1;do fL[2]=fL[2][jN[5]];end;bL=bL+1;bL=bL+1;do jN=Sm[bL];end;bL=bL+1;(fL)[3]=fL[0X2][jN[0X5]];do jN=Sm[bL];end;do bL=bL+1;end;(fL)[4]=WL[jN[2]];do bL=bL+0x0001;end;bL=bL+1;jN=Sm[bL];bL=bL+0X1;local XI=(fL[1]);fL[mI+0X1]=XI;do fL[mI]=XI[jN[5]];end;bL=bL+1;mI=5;local II=(0);if BI==0X0000 then else uL=mI+BI-1;end;local sI,wI=nil,nil;if BI==0X1 then sI,wI=eH(fL[mI]());else sI,wI=eH(fL[mI](f(fL,mI+0x01,uL)));end;if II~=0X01 then if II~=0X0 then sI=mI+II-2;do uL=sI+1;end;else sI=sI+mI-0X1;uL=sI;end;local oo=0X0000;for zy=mI,sI do oo=oo+0X1;fL[zy]=wI[oo];end;else do uL=mI-0X1;end;end;bL=bL+1;mI=4;BI=0;II=4;do if BI~=0 then uL=mI+BI-1;end;end;sI,wI=nil;if BI~=0X001 then sI,wI=eH(fL[mI](f(fL,mI+0X1,uL)));else sI,wI=eH(fL[mI]());end;if II==0X0001 then uL=mI-0X001;else if II~=0x000 then sI=mI+II-2;do uL=sI+0X1;end;else sI=sI+mI-1;uL=sI;end;local rO=0;do for ZJ=mI,sI do rO=rO+0X0001;fL[ZJ]=wI[rO];end;end;end;bL=bL+0X1;bL=bL+1;jN=Sm[bL];bL=bL+1;mI=4;local PI=r(function(...)(C)();do for Ex,Ax in...do(C)(true,Ex,Ax);end;end;end);PI(fL[mI],fL[mI+0X001],fL[mI+2]);uL=mI;(fL)[mI]=PI;bL=jN[6];else fL[jN[0x07]]=true;end;end;end;else if not(QN>=0x12)then(fL)[jN[0X007]]=O(fL[jN[6]],fL[jN[0X1]]);else do if QN==19 then else fL[jN[0x7]]=W(fL[jN[6]],fL[jN[0X001]]);end;end;end;end;end;end;end;end;end;end);if nL then if gL then do if vL==1 then return fL[YL]();else return fL[YL](f(fL,YL+1,uL));end;end;elseif not(YL)then else return f(fL,YL,vL);end;else if e(gL)~='\s\116\114\105ng'then(V)(gL,0x0);else if p(gL,'at\116\em\p\116 t\111\032\121i\e\108\100\032\097\cr\111\115\s\032\me\116\097\109\101t\h\o\d\047\C%\045\099a\l\l\032b\o\117\110dar\y')then return coroutine.yield();end;do if not(p(gL,'\094\.-:\%d\+\058\ '))then V(gL,0X0);else(V)("Luraph Script:"..(Dm[bL-1]or"(internal)")..'\058\ '..v(gL),0);end;end;end;end;end;end;end;else if xm>=0x40 then if xm~=65 then Km=function(...)local Gl,gl=0X0001,({});local kl={[1]=Xm,[2]=gl};local Fl=(K());local Bl,Tl=eH(...);do Bl=Bl-0X001;end;for Rl=0X0,Bl do do if not(km>Rl)then break;else gl[Rl]=Tl[Rl+1];end;end;end;if not Lm then Tl=nil;elseif not(Um)then else(gl)[km]={n=Bl>=km and Bl-km+1 or 0X0,f(Tl,km+1,Bl+1)};end;local Kl,Sl=(Fl==g and Qm or Fl),(0X0);if Kl~=Fl then w(Km,Kl);end;while true do local aH=(Sm[Gl]);local OH=aH[4];Gl=Gl+0X0001;return(function(i,c,...)local n,k,H=i[0],i[1],i[2];if H~=nil then if H then for L,V in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if V:IsA("Tool")and(V.ToolTip==n or k and V.Name==n)then return V;end;end;else local w=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if w and w:IsA("Tool")and(w.ToolTip==n or k and w.Name==n)then return w;end;end;end;else for g,q in pairs(game.Players.LocalPlayer.Backpack:GetChildren())do if q:IsA("Tool")and(q.ToolTip==n or k and q.Name==n)then return q;end;end;local l=game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool");do if l and l:IsA("Tool")and(l.ToolTip==n or k and l.Name==n)then return l;end;end;end;end)(gl,bm,...);end;end;else Km=function(...)local uw=({});local Aw=0;local fw=(K());local Pw=(fw==g and Qm or fw);local tw=({[1]=Xm,[2]=uw});local kw=0X01;local Hw,rw=eH(...);Hw=Hw-1;for aM=0,Hw do if km>aM then uw[aM]=rw[aM+0X00001];else break;end;end;if not Lm then rw=nil;elseif not(Um)then else(uw)[km]={n=Hw>=km and Hw-km+0X1 or 0X000,f(rw,km+1,Hw+0X1)};end;if Pw==fw then else w(Km,Pw);end;local nw,jw,pw,Gw=o(function()do while true do local ww=(Sm[kw]);local Mw=ww[4];kw=kw+1;if Mw<0X14 then do if not(Mw<0Xa)then if not(Mw>=15)then if Mw>=0XC then do if Mw>=13 then if Mw~=0X0000e then else local oJ=uw[0XA];local vJ=11;do uw[vJ+0x001]=oJ;end;(uw)[vJ]=oJ[ww[0X5]];ww=Sm[kw];kw=kw+0X1;(uw)[13]=ww[2];kw=kw+1;vJ=0x00B;uw[vJ]=uw[vJ](uw[vJ+0X001],uw[vJ+0X2]);Aw=vJ;do ww=Sm[kw];end;kw=kw+0x0001;do if not(not uw[11])then else kw=ww[6];end;end;end;else local ac,yc=11,(uw[10]);uw[ac+1]=yc;do(uw)[ac]=yc[ww[5]];end;ww=Sm[kw];do kw=kw+0X1;end;do uw[13]=ww[0X2];end;kw=kw+0x1;ac=11;do uw[ac]=uw[ac](uw[ac+1],uw[ac+2]);end;Aw=ac;kw=kw+0X1;kw=kw+1;ww=Sm[kw];kw=kw+0X1;if uw[11]then kw=ww[0x6];end;end;end;else if Mw~=0XB then do(uw)[12]=Pw[ww[2]];end;kw=kw+1;kw=kw+1;local ub=0Xc;do ww=Sm[kw];end;kw=kw+0X1;uw[13]=uw[10][ww[5]];do ww=Sm[kw];end;kw=kw+0X1;(uw)[0Xd]=uw[0XD][ww[5]];do kw=kw+1;end;kw=kw+0X0001;kw=kw+0X0001;do(uw)[ub]=uw[ub](uw[ub+1]);end;Aw=ub;kw=kw+1;kw=kw+1;ww=Sm[kw];kw=kw+0x001;do if not(not(uw[12]<=ww[0x5]))then else kw=ww[0X7];end;end;else do if not(not uw[ww[7]])then else kw=ww[0x6];end;end;end;end;else do if not(Mw>=0X0011)then if Mw==16 then uw[ww[7]]=j(uw[ww[0X00006]],uw[ww[1]]);else(uw)[ww[0X07]]=ww[2]/ww[5];end;else if Mw<0X12 then(uw)[13]=uw[10][ww[5]];do ww=Sm[kw];end;local nO=uw[13];kw=kw+0X001;local EO=13;uw[EO+0x1]=nO;uw[EO]=nO[ww[0X5]];kw=kw+1;do EO=13;end;(uw)[EO]=uw[EO](uw[EO+1]);Aw=EO;ww=Sm[kw];do kw=kw+1;end;do EO=13;end;nO=uw[13];(uw)[EO+0X1]=nO;(uw)[EO]=nO[ww[0x5]];do ww=Sm[kw];end;do kw=kw+1;end;uw[15]=ww[2];kw=kw+1;EO=13;(uw)[EO]=uw[EO](uw[EO+0X1],uw[EO+2]);Aw=EO;ww=Sm[kw];do kw=kw+1;end;if not(uw[0Xd])then else kw=ww[6];end;else if Mw~=0X0013 then local Gb=(nil);local ub=Zm[ww[0X6]];local bb=ub[3];local pb=(#bb);if pb>0X0 then Gb={};do for jX=1,pb do local XX=(bb[jX]);if XX[1]~=0X0 then(Gb)[jX-0x1]=bm[XX[0x2]];else Gb[jX-0X0001]={uw,XX[2]};end;end;end;M(Cm,Gb);end;(uw)[ww[7]]=dH(ub,Gb,Pw);else(uw)[ww[0X7]]=uw[ww[6]]~=uw[ww[1]];end;end;end;end;end;else do if not(Mw<0X005)then if not(Mw<7)then if not(Mw<8)then if Mw==9 then if uw[ww[6]]==uw[ww[0X1]]then kw=ww[7];end;else uw[ww[0x007]]=uw[ww[0x006]]==uw[ww[1]];end;else local Qg=(ww[0X7]);local Fg,jg=uw[Qg],((ww[0X1]-1)*0x000032);for S7=1,ww[0x6]do(Fg)[jg+S7]=uw[Qg+S7];end;end;else if Mw~=6 then(uw)[ww[7]]=Pw[ww[2]];else uw[ww[7]]=not uw[ww[6]];end;end;else if not(Mw<2)then do if not(Mw>=0x003)then(uw)[12]=uw[0][ww[5]];kw=kw+0X1;do kw=kw+1;end;ww=Sm[kw];kw=kw+0X1;(uw)[12]=uw[12][ww[5]];do kw=kw+1;end;kw=kw+1;ww=Sm[kw];kw=kw+0X00001;uw[13]=uw[10][ww[0X5]];kw=kw+0x01;(uw)[14]=uw[12];local ui=0X0000d;ww=Sm[kw];kw=kw+1;uw[0X0d][ww[0x00002]]=uw[14];do ww=Sm[kw];end;kw=kw+1;(uw)[13]=uw[10][ww[0X5]];ww=Sm[kw];do kw=kw+0X001;end;do(uw[13])[ww[0X2]]=ww[0X00005];end;ww=Sm[kw];do kw=kw+0X00001;end;(uw)[0x0000d]=uw[0X0000A][ww[0X00005]];kw=kw+0X0001;do kw=kw+0X001;end;ww=Sm[kw];kw=kw+0X00001;uw[13][ww[0x0002]]=ww[0x00005];ww=Sm[kw];kw=kw+0x00001;(uw)[13]=uw[0Xa][ww[0X05]];ww=Sm[kw];kw=kw+1;uw[0XD][ww[2]]=ww[5];ww=Sm[kw];kw=kw+1;uw[13]=uw[0XA][ww[5]];kw=kw+0x1;kw=kw+0X1;ww=Sm[kw];kw=kw+0x1;uw[0XD][ww[2]]=ww[5];do ww=Sm[kw];end;kw=kw+1;uw[0XD]=uw[10][ww[0X00005]];ww=Sm[kw];kw=kw+1;local ji=(uw[0X00d]);(uw)[ui+0X1]=ji;uw[ui]=ji[ww[5]];ww=Sm[kw];do kw=kw+1;end;(uw)[15]=ww[0X2];do kw=kw+1;end;ui=13;(uw[ui])(uw[ui+1],uw[ui+0X2]);Aw=ui-0x1;kw=kw+0X1;kw=kw+1;ww=Sm[kw];kw=kw+0X1;uw[0X000d]=uw[0x0000A][ww[5]];ww=Sm[kw];do kw=kw+1;end;(uw[13])[ww[0X00002]]=ww[5];do ww=Sm[kw];end;kw=kw+1;do if not(not uw[0X00b])then else kw=ww[6];end;end;else if Mw==4 then uw[ww[0X7]]=ww[0X2];else kw=ww[6];end;end;end;else if Mw~=1 then uw[ww[7]]=uw[ww[6]][uw[ww[0X00001]]];else(uw)[0Xc]=Pw[ww[2]];ww=Sm[kw];kw=kw+1;local QK=12;uw[13]=uw[10][ww[0X5]];do kw=kw+0X1;end;(uw)[QK]=uw[QK](uw[QK+0X1]);Aw=QK;kw=kw+0X00001;kw=kw+0X01;ww=Sm[kw];kw=kw+0X1;if not(not uw[0Xc])then else kw=ww[0X6];end;end;end;end;end;end;end;else do if not(Mw<30)then if not(Mw<0X23)then if Mw<37 then if Mw==0X24 then do(uw)[13]=uw[4]+ww[0X05];end;kw=kw+1;uw[4]=uw[0xD];ww=Sm[kw];do kw=kw+0X1;end;kw=ww[6];else if not(uw[ww[6]]<uw[ww[1]])then kw=ww[7];end;end;else if Mw>=0x26 then do if Mw==0X00027 then uw[0X1]=uw[5];ww=Sm[kw];kw=kw+1;(uw)[0x005]=Pw[ww[2]];local FI=0x5;ww=Sm[kw];local dI=6;kw=kw+1;uw[5]=uw[5][ww[5]];ww=Sm[kw];kw=kw+1;local rI=(uw[0x005]);do uw[FI+1]=rI;end;uw[FI]=rI[ww[0X5]];kw=kw+0x1;FI=5;uw[FI]=uw[FI](uw[FI+1]);do Aw=FI;end;ww=Sm[kw];kw=kw+1;uw[0X0006]=ww[0X02];kw=kw+0X00001;uw[0X0007]=#uw[0X5];do ww=Sm[kw];end;kw=kw+0X1;(uw)[0x8]=ww[2];ww=Sm[kw];kw=kw+1;do FI=uw[dI];end;local cI,oI=uw[dI+1],uw[dI+0x2];do(uw)[dI]=r(function()for Ql=FI,cI,oI do C(true,Ql);end;end);end;kw=ww[6];else do if uw[ww[6]]~=uw[ww[0X1]]then kw=ww[7];end;end;end;end;else uw[ww[7]]=#uw[ww[0X6]];end;end;else if Mw>=32 then if Mw>=33 then if Mw==0X22 then do(uw)[0xb]=uw[0Xa][ww[5]];end;kw=kw+0X00001;kw=kw+1;ww=Sm[kw];kw=kw+0X001;uw[12]=uw[0][ww[5]];kw=kw+1;kw=kw+1;kw=kw+0x1;uw[0XB]=uw[11]==uw[0X000C];do ww=Sm[kw];end;kw=kw+0X001;kw=ww[6];else(uw)[3]=ww[0X2];ww=Sm[kw];kw=kw+0X1;uw[4]=ww[2];kw=kw+1;(uw)[0X5]=uw[2];ww=Sm[kw];kw=kw+0X1;if not(uw[0x5])then else kw=ww[0X6];end;end;else if not(uw[ww[6]]<=uw[ww[0X1]])then kw=ww[0x7];end;end;else if Mw==0x00001F then for BP=ww[0X7],ww[6]do do(uw)[BP]=nil;end;end;else(uw)[0x00b]=uw[0X000A][ww[5]];kw=kw+0X1;kw=kw+0X001;ww=Sm[kw];kw=kw+0X1;(uw)[11]=uw[0x000B][ww[0X5]];do kw=kw+0X01;end;kw=kw+1;ww=Sm[kw];kw=kw+0X1;do if not(ww[2]<uw[11])then kw=ww[7];end;end;end;end;end;else if not(Mw>=25)then if not(Mw<22)then if not(Mw<0x0017)then if Mw==24 then do tw[ww[6]]=uw[ww[0X7]];end;else repeat local Eg,Qg=Cm,uw;do if not(#Eg>0X0)then else local h_={};for Uz,Wz in I,Eg do do for Bl,Tl in I,Wz do if Tl[0X00001]==Qg and Tl[2]>=0X00 then local F4=(Tl[2]);if not(not h_[F4])then else h_[F4]={Qg[F4]};end;do(Tl)[1]=h_[F4];end;do Tl[2]=1;end;end;end;end;end;end;end;until true;return;end;else uw[ww[0x7]]={f({},0X1,ww[0X6])};end;else if Mw==21 then uw[12]=Pw[ww[0x2]];local JQ=(12);do ww=Sm[kw];end;kw=kw+0X1;(uw)[0Xd]=uw[10][ww[0X005]];kw=kw+0X1;uw[JQ]=uw[JQ](uw[JQ+0X1]);Aw=JQ;kw=kw+0x00001;kw=kw+1;do ww=Sm[kw];end;kw=kw+0X00001;do(uw)[13]=Pw[ww[2]];end;kw=kw+1;kw=kw+1;ww=Sm[kw];kw=kw+1;(uw)[0XE]=uw[0][ww[0X0005]];kw=kw+0X1;JQ=0X0D;(uw)[JQ]=uw[JQ](uw[JQ+1]);Aw=JQ;kw=kw+1;kw=kw+1;ww=Sm[kw];do kw=kw+1;end;(uw)[13]=uw[0XD]+ww[0x5];ww=Sm[kw];do kw=kw+1;end;if not(not(uw[12]<uw[13]))then else do kw=ww[0x7];end;end;else(uw)[ww[7]]=ww[2];end;end;else do if not(Mw<27)then if not(Mw<0x00001c)then do if Mw~=29 then local KA=ww[0x7];local RA,HA=uw[KA]();if not(RA)then else do kw=ww[6];end;uw[KA+0x3]=HA;end;else(uw)[ww[7]]=uw[ww[6]]<uw[ww[0X001]];end;end;else do(uw)[0X2]=uw[5];end;kw=kw+1;uw[0x5]=uw[1];ww=Sm[kw];kw=kw+0X1;do if uw[5]then kw=ww[0x006];end;end;end;else if Mw==0X001A then uw[13]=uw[0X3]+ww[5];kw=kw+1;uw[0X0003]=uw[13];ww=Sm[kw];kw=kw+1;kw=ww[6];else do if uw[ww[7]]then kw=ww[0X06];end;end;end;end;end;end;end;end;end;end;end;end);do if nw then if jw then if Gw==1 then return uw[pw]();else do return uw[pw](f(uw,pw+1,Aw));end;end;elseif not(pw)then else do return f(uw,pw,Gw);end;end;else if e(jw)~='str\in\g'then V(jw,0);else do if p(jw,"\097\116t\101\mpt\032t\111 y\iel\100\ \097cr\o\s\s \m\e\116a\109\et\ho\d\/C\%\-ca\l\l\ \098o\117n\100\097\114\y")then return coroutine.yield();end;end;if p(jw,'\^\.\-\058\037d\+\: ')then V("\L\117r\097\112\h \S\cr\i\p\116\:"..(Dm[kw-0X1]or"(\in\116\101r\110a\108\041").."\: "..v(jw),0x0);else V(jw,0X0);end;end;end;end;end;end;else do Km=function(...)local fn=(0x1);local Zn={};local Cn=(K());local dn,hn=eH(...);local Mn={[2]=Zn,[1]=Xm};dn=dn-0X001;for Py=0X0,dn do if not(km>Py)then do break;end;else Zn[Py]=hn[Py+0X1];end;end;local Pn,xn=(Cn==g and Qm or Cn),0X0;if not Lm then hn=nil;elseif not(Um)then else Zn[km]={n=dn>=km and dn-km+1 or 0,f(hn,km+1,dn+1)};end;do if Pn~=Cn then(w)(Km,Pn);end;end;local tn,An,ln,On=o(function()while true do local MP=(Sm[fn]);local NP=(MP[0X04]);fn=fn+1;if NP>=8 then if NP>=12 then if not(NP<0Xe)then if NP==15 then do Zn[0x0]=Pn[MP[2]];end;fn=fn+0X1;local fk=bm[1];(Zn)[1]=fk[1][fk[2]];fn=fn+0X001;fn=fn+1;MP=Sm[fn];fn=fn+0X1;local Kk=0x0;(Zn)[1]=Zn[0X1][MP[0X5]];fn=fn+0X0001;fk=bm[0X00002];(Zn)[2]=fk[1][fk[2]];fn=fn+0X1;(Zn)[3]=true;do fn=fn+1;end;xn=Kk+0X4-1;do(Zn)[Kk]=Zn[Kk](f(Zn,Kk+0X01,xn));end;xn=Kk;fn=fn+1;fn=fn+1;fn=fn+0x00001;fk=bm[0x0];fk[1][fk[2]]=Zn[0X0];do fn=fn+1;end;fk=bm[4];Zn[0X0]=fk[1][fk[2]];fn=fn+1;xn=0X0;(Zn)[xn]=Zn[xn]();fn=fn+1;fk=bm[0X3];(fk[0X1])[fk[0x00002]]=Zn[0x00];fn=fn+0X001;fk=bm[0];Zn[0]=fk[1][fk[0x02]];fn=fn+1;fn=fn+1;fn=fn+1;fk=bm[0X0005];do Zn[1]=fk[1][fk[2]];end;fn=fn+1;fn=fn+1;do MP=Sm[fn];end;do fn=fn+1;end;Zn[0X001]=Zn[1]+MP[5];MP=Sm[fn];do fn=fn+1;end;if not(Zn[0x1]<Zn[0X000])then do fn=MP[7];end;end;else do repeat local lm,Tm,tm=Cm,Zn,(MP[0X007]);if#lm>0 then local xf={};for hm,nm in I,lm do for Xa,Va in I,nm do if Va[0x1]==Tm and Va[0X0002]>=tm then local B2=Va[0X0002];if not(not xf[B2])then else do xf[B2]={Tm[B2]};end;end;(Va)[0X0001]=xf[B2];(Va)[0X2]=1;end;end;end;end;until true;end;end;else if NP==0x00d then local v5=bm[0];(Zn)[0X00]=v5[0X1][v5[2]];do fn=fn+0X1;end;do v5=bm[0X005];end;(v5[0X0001])[v5[2]]=Zn[0x0];fn=fn+1;repeat local TF,NF=Cm,(Zn);if not(#TF>0)then else local Ok=({});for EN,xN in I,TF do do for Ck,Vk in I,xN do if not(Vk[1]==NF and Vk[0X0002]>=0X0)then else local mN=(Vk[2]);if not Ok[mN]then Ok[mN]={NF[mN]};end;do(Vk)[1]=Ok[mN];end;(Vk)[2]=0x1;end;end;end;end;end;until true;return;else local OW,yW=MP[0x7],Zn[MP[0X06]];(Zn)[OW+0X1]=yW;do(Zn)[OW]=yW[MP[5]];end;end;end;else if NP<0X00A then do if NP~=9 then local Yh=(Zm[MP[6]]);local Lh=(Yh[0X3]);local Ah=(nil);local ih=(#Lh);do if not(ih>0)then else Ah={};for oP=1,ih do local dP=Lh[oP];if dP[1]~=0X00 then do(Ah)[oP-0X001]=bm[dP[0X0002]];end;else Ah[oP-0x1]={Zn,dP[0X0002]};end;end;(M)(Cm,Ah);end;end;Zn[MP[7]]=dH(Yh,Ah,Pn);else end;end;else if NP~=0XB then for Tp=MP[7],MP[0X0006]do Zn[Tp]=nil;end;else fn=MP[6];end;end;end;else if not(NP<4)then do if NP<6 then do if NP~=5 then Zn[MP[0X7]]={f({},0X01,MP[0X6])};else(Pn)[MP[2]]=Zn[MP[0x0007]];end;end;else do if NP==0X00007 then do(Zn)[MP[0x7]]=Pn[MP[0X2]];end;else(Zn)[0X00000]=MP[0X002];local xB=(bm[0X01]);do MP=Sm[fn];end;fn=fn+0X00001;Pn[MP[2]]=Zn[0];fn=fn+1;do(Zn)[0X0]=true;end;MP=Sm[fn];fn=fn+0X1;do(Pn)[MP[0x2]]=Zn[0X0000];end;fn=fn+0X0001;(Zn)[0x000]=xB[0X00001][xB[2]];fn=fn+0X1;fn=fn+1;MP=Sm[fn];fn=fn+0x1;Zn[0][MP[0X2]]=MP[5];local TB=0;MP=Sm[fn];fn=fn+0X1;do Zn[0X0000]=Pn[MP[2]];end;fn=fn+1;fn=fn+0X00001;MP=Sm[fn];do fn=fn+1;end;Zn[1]=MP[2];fn=fn+1;Zn[TB](Zn[TB+0X1]);xn=TB-0X1;fn=fn+0x001;do Zn[0]=false;end;MP=Sm[fn];fn=fn+1;Pn[MP[2]]=Zn[0X0];fn=fn+0x1;xB=bm[1];(Zn)[0]=xB[1][xB[2]];do MP=Sm[fn];end;fn=fn+0x00001;Zn[0X0][MP[0x2]]=MP[5];do MP=Sm[fn];end;fn=fn+1;do fn=MP[6];end;end;end;end;end;else do if not(NP>=2)then if NP==0X0001 then(Zn)[MP[7]]=MP[0X2];else(Zn)[MP[7]]=MP[0x2];end;else if NP~=3 then do Zn[MP[0x07]]=Zn[MP[6]]/Zn[MP[0x00001]];end;else local Cd=MP[7];local Bd,Rd=Zn[Cd]();do if not(Bd)then else for R8=0X00001,MP[0X1]do(Zn)[Cd+R8]=Rd[R8];end;fn=MP[0X6];end;end;end;end;end;end;end;end;end);if not(tn)then if e(An)=="string"then if not(p(An,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(p(An,"^.-:%d+: "))then V(An,0x0);else(V)("Luraph Script:"..(Dm[fn-1]or"(internal)")..'\058\ '..v(An),0X0);end;end;else(V)(An,0X00000);end;else if An then if On==1 then return Zn[ln]();else do return Zn[ln](f(Zn,ln+1,xn));end;end;elseif ln then return f(Zn,ln,On);end;end;end;end;end;end;end;end;else do if xm<0X51 then do if not(xm>=0X00004b)then if not(xm<72)then do if not(xm<0X000049)then if xm~=0X0004A then Km=function(...)local k3,S3=0X1,{};local T3={[2]=S3,[1]=Xm};local O3=(K());local U3,m3=eH(...);local p3=(O3==g and Qm or O3);U3=U3-0X01;do for k2=0X00,U3 do if km>k2 then(S3)[k2]=m3[k2+0X1];else do break;end;end;end;end;local W3=(0);do if not Lm then m3=nil;elseif Um then S3[km]={n=U3>=km and U3-km+0X1 or 0X000,f(m3,km+1,U3+0X00001)};end;end;if p3~=O3 then w(Km,p3);end;while true do local Uy=(Sm[k3]);local Jy=(Uy[4]);k3=k3+0X1;return(function(U,l,...)return Client.PlayerGui.Main.InCombat.Visible;end)(S3,bm,...);end;end;else do Km=function(...)local YF,eF=1,({});local zF=(K());local bF,yF=eH(...);bF=bF-0X1;local KF=({[2]=eF,[1]=Xm});local IF=(0);do for Rl=0,bF do do if not(km>Rl)then break;else eF[Rl]=yF[Rl+0X001];end;end;end;end;local gF=((zF==g and Qm or zF));if not Lm then yF=nil;elseif Um then do eF[km]={n=bF>=km and bF-km+1 or 0X0,f(yF,km+0X001,bF+1)};end;end;if gF~=zF then w(Km,gF);end;local TF,kF,GF,MF=o(function()while true do local zk=Sm[YF];local tk=(zk[0x4]);YF=YF+1;if not(tk>=7)then if not(tk>=0X3)then if not(tk>=0x1)then eF[zk[0X7]]=zk[0x002];else if tk==0X2 then(eF)[zk[0x7]]=eF[zk[6]];else repeat local l9,i9=Cm,(eF);if not(#l9>0)then else local ns=({});for dv,Qv in I,l9 do for E2,p2 in I,Qv do if not(p2[1]==i9 and p2[2]>=0X000)then else local ZL=p2[2];if not ns[ZL]then ns[ZL]={i9[ZL]};end;do p2[1]=ns[ZL];end;p2[2]=1;end;end;end;end;until true;return;end;end;else do if not(tk<5)then if tk~=6 then do(eF)[0]=false;end;do zk=Sm[YF];end;YF=YF+1;do gF[zk[0x02]]=eF[0];end;do zk=Sm[YF];end;do YF=YF+0X0001;end;YF=zk[6];else end;else if tk==4 then(eF)[zk[0X7]]=gF[zk[0X02]];else local D6=Zm[zk[6]];local i6,h6=D6[0X03],nil;local E6=(#i6);if not(E6>0)then else h6={};for Ss=1,E6 do local gs=i6[Ss];if gs[1]==0 then h6[Ss-1]={eF,gs[0X2]};else h6[Ss-0X1]=bm[gs[2]];end;end;M(Cm,h6);end;do eF[zk[7]]=dH(D6,h6,gF);end;end;end;end;end;else do if not(tk<10)then if not(tk<0XC)then do if tk~=13 then eF[zk[7]]=eF[zk[6]]^eF[zk[0X01]];else YF=zk[6];end;end;else if tk~=0Xb then local Ed=(zk[7]);local ed,Pd=eF[Ed]();if ed then do YF=zk[0X06];end;(eF)[Ed+3]=Pd;end;else local aH=(bm[0x00000]);eF[0]=aH[0X00001][aH[0X002]];YF=YF+0X1;do aH=bm[0X00001];end;(eF)[0X00001]=aH[1][aH[2]];do YF=YF+1;end;YF=YF+0X00001;do zk=Sm[YF];end;YF=YF+1;do if eF[0X0]~=eF[0x00001]then YF=zk[0X007];end;end;end;end;else if tk>=0X00008 then if tk~=9 then(eF)[zk[0X00007]]=eF[zk[0X6]]*eF[zk[1]];else(eF)[zk[7]]=KF[zk[6]];end;else(eF)[zk[0X7]]={f({},1,zk[6])};end;end;end;end;end;end);if TF then if kF then if MF==1 then do return eF[GF]();end;else return eF[GF](f(eF,GF+0X001,IF));end;elseif not(GF)then else return f(eF,GF,MF);end;else if e(kF)=="string"then do if p(kF,'\097t\116\e\m\p\116\ \116\o\ y\i\e\l\d\ acr\111s\s\ me\116a\m\eth\111\100\/\067\%\-\ca\l\l\032b\oun\da\114\121')then return coroutine.yield();end;end;if p(kF,'\^\046\-:\%\d\+\058\032')then V("Luraph Script:"..(Dm[YF-1]or'\(i\110\116\ern\097\l)')..": "..v(kF),0X0000);else V(kF,0X0000);end;else(V)(kF,0X0);end;end;end;end;end;else do Km=function(...)local fS,FS=0X1,{};local AS=({[1]=Xm,[2]=FS});local tS=(K());local yS,mS=eH(...);yS=yS-1;local LS=((tS==g and Qm or tS));do for l9=0,yS do do if not(km>l9)then do break;end;else FS[l9]=mS[l9+0x1];end;end;end;end;if not Lm then do mS=nil;end;elseif not(Um)then else FS[km]={n=yS>=km and yS-km+1 or 0,f(mS,km+0x00001,yS+0X01)};end;local QS=0x0000;if LS==tS then else(w)(Km,LS);end;local xS,cS,JS,ES=o(function()while true do local QN=Sm[fS];local VN=(QN[4]);do fS=fS+1;end;if VN<17 then if VN>=8 then if VN<12 then if not(VN>=10)then do if VN==0X9 then FS[0X00002]=LS[QN[2]];QN=Sm[fS];fS=fS+0X1;(FS)[3]=QN[0X0002];local PV=(0X0002);fS=fS+1;do FS[PV]=FS[PV](FS[PV+0x1]);end;QS=PV;QN=Sm[fS];fS=fS+0x1;if not FS[0X2]then fS=QN[6];end;else(FS)[0X0003]=LS[QN[0X2]];fS=fS+0X00001;fS=fS+1;do QN=Sm[fS];end;fS=fS+0x1;do FS[4]=QN[2];end;QN=Sm[fS];local uh=0x3;fS=fS+1;FS[5]=QN[0X002];fS=fS+0X0001;FS[uh](FS[uh+1],FS[uh+2]);QS=uh-0x1;fS=fS+1;fS=fS+0X1;do QN=Sm[fS];end;do fS=fS+0X1;end;FS[0x3]=LS[QN[2]];do fS=fS+0x1;end;fS=fS+0X1;fS=fS+0X00001;QS=3;(FS[QS])();QS=QS-1;fS=fS+1;fS=fS+0X1;do QN=Sm[fS];end;fS=fS+0X1;FS[3]=LS[QN[2]];QN=Sm[fS];fS=fS+0X1;do(FS)[4]=QN[2];end;fS=fS+0x01;uh=0x3;(FS)[uh]=FS[uh](FS[uh+0x00001]);do QS=uh;end;QN=Sm[fS];fS=fS+0X00001;if not FS[0X3]then do fS=QN[6];end;end;end;end;else if VN~=11 then local MA=bm[0X0];do FS[1]=MA[1][MA[0x00002]];end;fS=fS+1;fS=fS+0X1;local hA=1;QN=Sm[fS];fS=fS+1;local CA=FS[0X01];(FS)[hA+0X00001]=CA;(FS)[hA]=CA[QN[0X005]];do fS=fS+1;end;do hA=0x1;end;(FS[hA])(FS[hA+1]);QS=hA-1;fS=fS+1;fS=fS+1;fS=fS+0X001;repeat local xC,sC=Cm,FS;if not(#xC>0)then else local I1={};do for eC,aC in I,xC do do for rK,NK in I,aC do if NK[1]==sC and NK[2]>=0 then local T0=(NK[0x02]);if not I1[T0]then do(I1)[T0]={sC[T0]};end;end;(NK)[0x1]=I1[T0];do(NK)[0x2]=1;end;end;end;end;end;end;end;until true;return;else FS[QN[7]]=FS[QN[6]][QN[5]];end;end;else if not(VN<0Xe)then if not(VN<15)then if VN==0x10 then if not FS[QN[7]]then fS=QN[0X6];end;else FS[0x3]=LS[QN[2]];do QN=Sm[fS];end;local WH=0x3;fS=fS+1;FS[0X4]=QN[0X002];do QN=Sm[fS];end;fS=fS+0X00001;(FS)[5]=QN[2];fS=fS+1;FS[WH](FS[WH+0X1],FS[WH+0x2]);QS=WH-0X1;fS=fS+1;fS=fS+0X1;QN=Sm[fS];do fS=fS+1;end;do(FS)[0X00003]=LS[QN[0X00002]];end;do fS=fS+1;end;QS=3;(FS[QS])();do QS=QS-1;end;QN=Sm[fS];fS=fS+1;(FS)[3]=LS[QN[0x2]];QN=Sm[fS];fS=fS+0X1;FS[0x4]=QN[2];do fS=fS+1;end;WH=3;do(FS)[WH]=FS[WH](FS[WH+0X001]);end;QS=WH;do QN=Sm[fS];end;fS=fS+1;if FS[3]then fS=QN[6];end;end;else local Ql=(Zm[QN[0X6]]);local ll,El=Ql[0X00003],nil;local Jl=#ll;do if not(Jl>0X0)then else do El={};end;do for ru=0X1,Jl do local Su=ll[ru];if Su[0x1]==0 then El[ru-1]={FS,Su[2]};else El[ru-1]=bm[Su[2]];end;end;end;M(Cm,El);end;end;(FS)[QN[7]]=dH(Ql,El,LS);end;else if VN==0X000D then FS[0X00]=LS[QN[0x2]];do QN=Sm[fS];end;do fS=fS+0X0001;end;do FS[1]=QN[0x2];end;fS=fS+0X1;local Xt=0;do FS[Xt]=FS[Xt](FS[Xt+0X0001]);end;QS=Xt;QN=Sm[fS];do fS=fS+0X00001;end;FS[0X00001]=FS[0][QN[5]];QN=Sm[fS];fS=fS+1;if FS[1]then do fS=QN[0x6];end;end;else FS[0x003]=FS[0x0002][QN[5]];fS=fS+1;fS=fS+0X1;QN=Sm[fS];do fS=fS+0X1;end;if not(FS[3])then else do fS=QN[6];end;end;end;end;end;else do if not(VN<4)then do if VN<0x0006 then if VN~=0X5 then FS[QN[7]]=QN[2];else(FS)[QN[0X7]]=LS[QN[0X2]];end;else if VN~=0x7 then else FS[0x1]=LS[QN[2]];do fS=fS+0X1;end;do fS=fS+1;end;QN=Sm[fS];fS=fS+1;if not(FS[1])then else fS=QN[0X006];end;end;end;end;else do if not(VN<0X2)then do if VN~=0x3 then local yf=(bm[0x000]);(FS)[3]=yf[0X01][yf[2]];do fS=fS+0X1;end;do fS=fS+0x1;end;QN=Sm[fS];local jf=(FS[3]);do fS=fS+1;end;local Mf=0X03;(FS)[Mf+0X1]=jf;(FS)[Mf]=jf[QN[0X5]];do fS=fS+0x00001;end;Mf=0X03;FS[Mf](FS[Mf+1]);do QS=Mf-1;end;do QN=Sm[fS];end;fS=fS+1;fS=QN[0x006];else for c_=QN[7],QN[6]do FS[c_]=nil;end;end;end;else if VN==0X001 then do FS[3]=LS[QN[0X2]];end;fS=fS+0X1;local LT=(bm[1]);fS=fS+1;QN=Sm[fS];do fS=fS+0X1;end;FS[4]=QN[0X02];local mT=(0X3);fS=fS+1;(FS)[mT]=FS[mT](FS[mT+1]);QS=mT;fS=fS+0X1;do fS=fS+1;end;fS=fS+0X001;(FS)[4]=LT[1][LT[2]];do QN=Sm[fS];end;fS=fS+0X1;do FS[4]=FS[0X4][QN[0X5]];end;do fS=fS+0X001;end;do fS=fS+1;end;fS=fS+0X1;(FS)[5]=FS[3];fS=fS+0x001;mT=4;(FS)[mT]=FS[mT](FS[mT+0X1]);QS=mT;fS=fS+1;fS=fS+1;do QN=Sm[fS];end;do fS=fS+0x00001;end;do if not(not FS[0x4])then else fS=QN[6];end;end;else FS[QN[7]]=j(FS[QN[0X6]],FS[QN[1]]);end;end;end;end;end;end;else if not(VN>=0X19)then if not(VN>=21)then if VN<0X13 then if VN~=0x12 then do if FS[QN[7]]then fS=QN[0X6];end;end;else local d0=(bm[0X001]);(FS)[4]=d0[0X01][d0[0X2]];fS=fS+1;do fS=fS+1;end;QN=Sm[fS];fS=fS+1;FS[0X4]=FS[0x04][QN[5]];fS=fS+1;fS=fS+1;local e0=(0x004);fS=fS+0X1;do(FS)[5]=FS[3];end;local i0=nil;fS=fS+0X00001;d0=bm[0];(FS)[6]=d0[1][d0[2]];fS=fS+0x1;fS=fS+0X1;QN=Sm[fS];do fS=fS+0X1;end;local K0=Zm[QN[6]];local Q0=(K0[0X3]);local J0=#Q0;if not(J0>0)then else i0={};for oB=1,J0 do local xB=(Q0[oB]);if xB[0X1]==0x00000 then do i0[oB-0X1]={FS,xB[0X00002]};end;else i0[oB-1]=bm[xB[0X00002]];end;end;(M)(Cm,i0);end;do FS[0X0007]=dH(K0,i0,LS);end;fS=fS+1;QS=e0+0x00004-1;FS[e0](f(FS,e0+0X1,QS));QS=e0-1;fS=fS+0X1;do fS=fS+0X01;end;do fS=fS+0x1;end;do d0=bm[0];end;FS[4]=d0[1][d0[0x2]];fS=fS+1;fS=fS+0X1;local X0=FS[4];QN=Sm[fS];fS=fS+0x1;do e0=0X04;end;FS[e0+1]=X0;FS[e0]=X0[QN[0X5]];fS=fS+1;e0=4;FS[e0](FS[e0+0x01]);QS=e0-0X1;fS=fS+0X01;do fS=fS+0X1;end;QN=Sm[fS];do fS=fS+0X1;end;fS=QN[6];end;else if VN==20 then FS[0x01]=LS[QN[2]];QN=Sm[fS];fS=fS+0X1;(FS)[0X1]=FS[1][QN[5]];do QN=Sm[fS];end;do fS=fS+1;end;if not(not FS[0x1])then else do fS=QN[6];end;end;else FS[4]=LS[QN[2]];QN=Sm[fS];do fS=fS+0X00001;end;do(FS)[5]=QN[0X2];end;local FR=0X4;do fS=fS+1;end;FS[FR](FS[FR+0x1]);QS=FR-1;QN=Sm[fS];fS=fS+0X01;do fS=QN[0x00006];end;end;end;else if VN>=23 then if VN==0X0018 then FS[3]=LS[QN[0X00002]];fS=fS+1;fS=fS+1;QN=Sm[fS];fS=fS+0x1;FS[4]=QN[0X2];fS=fS+0X001;local hK=(0X3);do FS[hK]=FS[hK](FS[hK+0X1]);end;QS=hK;do fS=fS+0X1;end;local NK=bm[1];(FS)[0X0004]=NK[0X1][NK[0X0002]];QN=Sm[fS];fS=fS+0X1;(FS)[4]=FS[4][QN[5]];fS=fS+0x1;fS=fS+1;fS=fS+1;do(FS)[5]=FS[0X0003];end;fS=fS+0X1;hK=4;(FS)[hK]=FS[hK](FS[hK+1]);QS=hK;fS=fS+0X1;fS=fS+1;QN=Sm[fS];fS=fS+1;if not(not FS[0X00004])then else fS=QN[6];end;else FS[QN[0X7]]=FS[QN[0X00006]]>=FS[QN[1]];end;else do if VN==0X16 then FS[0x1]=LS[QN[2]];QN=Sm[fS];fS=fS+1;FS[1]=FS[0X01][QN[5]];fS=fS+0x1;do fS=fS+1;end;do QN=Sm[fS];end;fS=fS+0X001;local Gb=0X1;(FS)[2]=QN[2];fS=fS+0X001;FS[Gb]=FS[Gb](FS[Gb+1]);QS=Gb;do fS=fS+0X1;end;fS=fS+1;QN=Sm[fS];fS=fS+1;if not(not FS[0x001])then else fS=QN[0x00006];end;else repeat local He,Me=Cm,FS;do if#He>0 then local IR={};for aj,Ij in I,He do do for O_,Z_ in I,Ij do if not(Z_[1]==Me and Z_[2]>=0X000)then else local x3=Z_[0X2];if not IR[x3]then do(IR)[x3]={Me[x3]};end;end;(Z_)[0X001]=IR[x3];Z_[0X02]=1;end;end;end;end;end;end;until true;return;end;end;end;end;else do if VN>=29 then if not(VN<31)then if not(VN>=32)then local H1=bm[1];do FS[4]=H1[0x1][H1[2]];end;fS=fS+0x001;fS=fS+1;do QN=Sm[fS];end;do fS=fS+0X1;end;FS[0X4]=FS[4][QN[5]];local L1=0X004;fS=fS+0X1;do fS=fS+0X1;end;fS=fS+1;do(FS)[5]=FS[0X03];end;local c1=(nil);do fS=fS+1;end;H1=bm[0x0];FS[6]=H1[1][H1[0X2]];fS=fS+0x001;do fS=fS+0X1;end;QN=Sm[fS];fS=fS+1;local A1=(Zm[QN[0x6]]);local a1=(A1[0X3]);local s1=(#a1);do if s1>0x0 then do c1={};end;for Y3=1,s1 do local t3=(a1[Y3]);if t3[1]~=0X0 then(c1)[Y3-1]=bm[t3[0X2]];else do(c1)[Y3-1]={FS,t3[2]};end;end;end;(M)(Cm,c1);end;end;FS[7]=dH(A1,c1,LS);fS=fS+0X0001;QS=L1+4-1;FS[L1](f(FS,L1+1,QS));QS=L1-1;fS=fS+0X1;do fS=fS+0X001;end;do fS=fS+1;end;do H1=bm[0];end;FS[0X4]=H1[1][H1[2]];local q1=FS[4];fS=fS+0x00001;fS=fS+0x1;QN=Sm[fS];fS=fS+0X1;do L1=0X0004;end;FS[L1+1]=q1;FS[L1]=q1[QN[0X00005]];fS=fS+1;L1=0x4;FS[L1](FS[L1+0X1]);QS=L1-0X1;fS=fS+1;do fS=fS+0X1;end;QN=Sm[fS];fS=fS+1;fS=QN[0X00006];else do if VN==33 then(FS)[QN[0X7]]={f({},1,QN[0x6])};else local hu=(bm[0]);(FS)[3]=hu[1][hu[0x2]];fS=fS+1;local Gu=3;fS=fS+1;QN=Sm[fS];fS=fS+0X1;local su=FS[0X3];FS[Gu+1]=su;FS[Gu]=su[QN[5]];fS=fS+1;do Gu=0X0003;end;(FS)[Gu]=FS[Gu](FS[Gu+1]);QS=Gu;fS=fS+0X1;fS=fS+1;do QN=Sm[fS];end;fS=fS+1;if FS[0X3]then do fS=QN[6];end;end;end;end;end;else if VN~=0x001E then do FS[QN[7]]=FS[QN[0X6]]~=FS[QN[1]];end;else FS[0X0002]=LS[QN[2]];fS=fS+0X00001;do fS=fS+1;end;QN=Sm[fS];local CK=(0X2);fS=fS+1;do FS[0X0003]=QN[2];end;do fS=fS+0X1;end;do(FS)[CK]=FS[CK](FS[CK+1]);end;do QS=CK;end;fS=fS+0X1;fS=fS+0X1;do QN=Sm[fS];end;fS=fS+0X1;FS[3]=FS[0X02][QN[5]];fS=fS+1;fS=fS+1;QN=Sm[fS];do fS=fS+1;end;if not(not FS[0X3])then else fS=QN[6];end;end;end;else if VN<27 then do if VN~=26 then FS[1]=LS[QN[0X2]];fS=fS+0X1;do fS=fS+0X01;end;QN=Sm[fS];do fS=fS+0x00001;end;FS[0x1]=FS[0x00001][QN[5]];fS=fS+1;do fS=fS+0X00001;end;do QN=Sm[fS];end;fS=fS+0X1;(FS)[0X002]=LS[QN[0x2]];fS=fS+1;fS=fS+1;fS=fS+0X1;do QS=0X2;end;(FS)[QS]=FS[QS]();QN=Sm[fS];fS=fS+0X001;if FS[0X2]<QN[5]then fS=QN[0X7];end;else FS[QN[7]]=true;end;end;else if VN~=28 then local OU=QN[0X00007];local bU=(QN[0X00001]-0x1)*50;local dU=FS[OU];for aH=0X0001,QN[0X6]do do dU[bU+aH]=FS[OU+aH];end;end;else fS=QN[6];end;end;end;end;end;end;end;end);do if xS then if cS then if ES==0X00001 then return FS[JS]();else return FS[JS](f(FS,JS+1,QS));end;elseif not(JS)then else return f(FS,JS,ES);end;else do if e(cS)~="\str\105\110g"then V(cS,0);else if p(cS,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(cS,"^.\045\:\%d\043\:\ "))then V(cS,0);else V("Lura\p\h\ \S\099r\105p\116\:"..(Dm[fS-0X1]or"(internal)")..": "..v(cS),0);end;end;end;end;end;end;end;end;end;else if not(xm>=0X0046)then do Km=function(...)local yb=(1);local Gb=({});local cb=K();local Ub,vb=eH(...);local Ob={[1]=Xm,[2]=Gb};Ub=Ub-0x001;do for cM=0X0,Ub do if km>cM then Gb[cM]=vb[cM+0x1];else break;end;end;end;local pb=0;local Fb=((cb==g and Qm or cb));if not Lm then vb=nil;elseif not(Um)then else do Gb[km]={n=Ub>=km and Ub-km+0X001 or 0X0,f(vb,km+0X1,Ub+0X00001)};end;end;if Fb==cb then else(w)(Km,Fb);end;local Rb,nb,db,kb=o(function()while true do local Qo=(Sm[yb]);local Po=Qo[0x4];yb=yb+1;if Po<11 then if Po<5 then if Po<2 then if Po==1 then do(Gb)[0x1]=Fb[Qo[0X2]];end;yb=yb+1;local Ih=0X1;yb=yb+0x001;Qo=Sm[yb];yb=yb+0X001;(Gb)[0X002]=Qo[0x00002];yb=yb+0x1;Gb[Ih]=Gb[Ih](Gb[Ih+1]);pb=Ih;do yb=yb+0X1;end;do yb=yb+1;end;Qo=Sm[yb];yb=yb+1;yb=Qo[6];else yb=Qo[0X00006];end;else if not(Po>=3)then repeat local vD,JD=Cm,Gb;do if#vD>0X0 then local w5={};for tO,fO in I,vD do do for AG,jG in I,fO do if not(jG[1]==JD and jG[0X00002]>=0)then else local M6=jG[0X002];do if not w5[M6]then do w5[M6]={JD[M6]};end;end;end;jG[1]=w5[M6];jG[2]=1;end;end;end;end;end;end;until true;local zY=(Qo[7]);return false,zY,zY;else if Po==4 then if not(not Gb[Qo[7]])then else do yb=Qo[0X06];end;end;else do(Gb)[Qo[0X00007]]={f({},0X1,Qo[0x6])};end;end;end;end;else if not(Po<8)then if Po>=0x9 then if Po==0Xa then do if not(not(Gb[Qo[6]]<=Gb[Qo[0X1]]))then else do yb=Qo[7];end;end;end;else local At=(bm[0]);Gb[0X1]=At[1][At[2]];local it=0x00001;yb=yb+0X1;do yb=yb+1;end;Qo=Sm[yb];do yb=yb+0x01;end;local lt=(Gb[0X1]);do Gb[it+0x00001]=lt;end;Gb[it]=lt[Qo[5]];do yb=yb+1;end;do it=0X1;end;(Gb)[it]=Gb[it](Gb[it+1]);pb=it;Qo=Sm[yb];do yb=yb+0X00001;end;yb=Qo[6];end;else Gb[Qo[7]]=#Gb[Qo[6]];end;else if Po<0X006 then do if not(not(Gb[Qo[0x6]]<Gb[Qo[0X00001]]))then else yb=Qo[0X00007];end;end;else if Po~=0X0007 then for Ve=Qo[7],Qo[6]do do Gb[Ve]=nil;end;end;else local aZ=bm[1];(Gb)[0X1]=aZ[1][aZ[2]];yb=yb+1;do yb=yb+1;end;do yb=yb+0X00001;end;Gb[1]=Gb[0X1][Gb[0X0]];do yb=yb+0X00001;end;yb=yb+0X1;Qo=Sm[yb];do yb=yb+0X001;end;(Gb)[1]=Gb[1][Qo[0X5]];do Qo=Sm[yb];end;do yb=yb+1;end;do(Gb)[1]=Gb[1]~=Qo[5];end;Qo=Sm[yb];yb=yb+0X1;yb=Qo[0X6];end;end;end;end;else if not(Po>=16)then do if not(Po<0xd)then if Po>=0X0000e then if Po~=0Xf then else repeat local ec,ac=Cm,(Gb);if not(#ec>0)then else local g8=({});for Bv,Tv in I,ec do do for dP,bP in I,Tv do do if not(bP[0x1]==ac and bP[2]>=0X00)then else local ez=(bP[2]);if not g8[ez]then g8[ez]={ac[ez]};end;bP[0X1]=g8[ez];(bP)[2]=0X1;end;end;end;end;end;end;until true;return;end;else local zb=(Zm[Qo[0X0006]]);local jb=zb[3];local Cb=(#jb);local Tb=(nil);if not(Cb>0X00000)then else Tb={};for wT=0X01,Cb do local cT=jb[wT];if cT[0X001]~=0 then(Tb)[wT-0X1]=bm[cT[2]];else Tb[wT-1]={Gb,cT[0X2]};end;end;M(Cm,Tb);end;(Gb)[Qo[7]]=dH(zb,Tb,Fb);end;else if Po==0XC then Gb[Qo[0X7]]=Fb[Qo[2]];else if Gb[Qo[7]]then do yb=Qo[6];end;end;end;end;end;else do if not(Po>=0x13)then do if Po<17 then(Gb)[Qo[0X07]]=Gb[Qo[6]][Gb[Qo[0X00001]]];else if Po==18 then Gb[1]=Fb[Qo[2]];do Qo=Sm[yb];end;yb=yb+0x1;(Gb)[0x1]=Gb[0X00001][Qo[0x5]];do yb=yb+1;end;do yb=yb+1;end;Qo=Sm[yb];yb=yb+0X1;yb=Qo[0X6];else(Gb)[1]=Fb[Qo[2]];yb=yb+0X1;yb=yb+1;Qo=Sm[yb];yb=yb+1;Gb[0X00002]=Qo[0x0002];local FN=1;yb=yb+1;do Gb[0X3]=Gb[0];end;do yb=yb+0X1;end;local mN=(0x0002);(Gb)[2]=Gb[mN]..Gb[mN+0x001];yb=yb+1;do Gb[FN]=Gb[FN](Gb[FN+1]);end;pb=FN;yb=yb+1;(Gb)[0X1]=not Gb[0X1];Qo=Sm[yb];yb=yb+1;do if not Gb[0X1]then do yb=Qo[0X6];end;end;end;end;end;end;else if Po<20 then(Gb)[Qo[0X7]]=S(Gb[Qo[6]],Gb[Qo[1]]);else if Po~=21 then(Gb)[Qo[0X7]]=Qo[2];else(Gb)[Qo[0X7]]=Qo[0X00002];end;end;end;end;end;end;end;end);if Rb then if nb then if kb==0x1 then return Gb[db]();else return Gb[db](f(Gb,db+0x1,pb));end;elseif not(db)then else do return f(Gb,db,kb);end;end;else do if e(nb)=='\s\116r\in\103'then if p(nb,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(nb,'^.-\:\%d\+\:\ ')then(V)("Luraph Script:"..(Dm[yb-0x0001]or"(internal)")..'\:\ '..v(nb),0X0000);else V(nb,0X0);end;else(V)(nb,0x0);end;end;end;end;end;else do if xm==71 then Km=function(...)local mV=0X1;local DV={};local sV={[1]=Xm,[2]=DV};local VV=(K());local nV,lV=eH(...);do nV=nV-1;end;do for U6=0,nV do if km>U6 then do DV[U6]=lV[U6+0x01];end;else do break;end;end;end;end;local cV=((VV==g and Qm or VV));if not Lm then do lV=nil;end;elseif not(Um)then else(DV)[km]={n=nV>=km and nV-km+1 or 0X0,f(lV,km+0x1,nV+0X001)};end;local QV=0;if cV==VV then else(w)(Km,cV);end;while true do local yV=(Sm[mV]);mV=mV+0X001;local uV=yV[4];do return(function(M,c,...)local Y,H=M[0],M[1];local j,N;if Y=="DragonClaw"then j,N=pcall(_C,"BlackbeardReward","DragonClaw","2");else j,N=pcall(_C,"Buy"..Y,H);end;return j and(N==1 or N==2);end)(DV,bm,...);end;end;end;else Km=function(...)local aH=(0X0001);local OH={};local jH=(K());local mH,WH=0X0,({[1]=Xm,[2]=OH});local rL,ZL=eH(...);do rL=rL-1;end;for jF=0X0,rL do if not(km>jF)then break;else OH[jF]=ZL[jF+1];end;end;local NH=(jH==g and Qm or jH);if not Lm then ZL=nil;elseif Um then(OH)[km]={n=rL>=km and rL-km+0X1 or 0x0,f(ZL,km+1,rL+1)};end;if NH==jH then else w(Km,NH);end;local RL,KL,mL,uL=o(function()while true do local PU=(Sm[aH]);local BU=PU[4];do aH=aH+0X00001;end;if BU>=24 then if BU<0x24 then if not(BU>=30)then if not(BU<27)then do if BU<0x001c then do(OH)[0X2]=NH[PU[2]];end;PU=Sm[aH];aH=aH+1;local R5=0X02;OH[3]=PU[0X2];PU=Sm[aH];aH=aH+1;do OH[4]=PU[0X002];end;aH=aH+0X00001;(OH[R5])(OH[R5+1],OH[R5+0X2]);mH=R5-0X1;do PU=Sm[aH];end;do aH=aH+1;end;do aH=PU[6];end;else if BU==29 then OH[1]=NH[PU[0X2]];aH=aH+1;aH=aH+0X00001;PU=Sm[aH];aH=aH+0x1;(OH)[1]=OH[1][PU[5]];aH=aH+0X1;aH=aH+0X1;PU=Sm[aH];do aH=aH+1;end;if not(not OH[1])then else aH=PU[6];end;else OH[2]=OH[1][PU[5]];do aH=aH+0X1;end;aH=aH+1;PU=Sm[aH];aH=aH+0X1;if not OH[0X0002]then do aH=PU[6];end;end;end;end;end;else if BU>=0X00019 then do if BU==0X1A then local k9=(bm[0X0]);OH[0X00004]=k9[1][k9[2]];local v9=(4);aH=aH+1;aH=aH+1;PU=Sm[aH];aH=aH+0X1;local p9=OH[4];(OH)[v9+0X1]=p9;(OH)[v9]=p9[PU[0X5]];aH=aH+1;v9=0x4;(OH[v9])(OH[v9+0X1]);do mH=v9-1;end;PU=Sm[aH];aH=aH+0x0001;do OH[4]=OH[3][PU[0X5]];end;do aH=aH+0X1;end;aH=aH+0X1;aH=aH+0X00001;mH=4;OH[mH]();do mH=mH-0x1;end;PU=Sm[aH];aH=aH+1;aH=PU[0X6];else do(OH)[PU[7]]=l(OH[PU[0X00006]],OH[PU[0X01]]);end;end;end;else do(OH)[0X02]=NH[PU[2]];end;local HV=(2);PU=Sm[aH];aH=aH+0X1;local PV=OH[2];OH[HV+1]=PV;do(OH)[HV]=PV[PU[0x5]];end;PU=Sm[aH];do aH=aH+0X001;end;OH[0X4]=PU[0X2];aH=aH+1;HV=0X02;OH[HV]=OH[HV](OH[HV+0X1],OH[HV+0X2]);do mH=HV;end;do aH=aH+0X1;end;aH=aH+1;PU=Sm[aH];aH=aH+1;do if not(OH[0X2])then else aH=PU[0X0006];end;end;end;end;else if not(BU>=33)then do if not(BU<0x0001F)then if BU==0X20 then(OH)[0x1]=NH[PU[0X02]];aH=aH+0x1;do aH=aH+0X1;end;do PU=Sm[aH];end;aH=aH+0X001;do(OH)[1]=OH[1][PU[0X5]];end;PU=Sm[aH];aH=aH+0x1;if not(not OH[0X1])then else aH=PU[0X6];end;else do OH[2]=OH[1][PU[0X005]];end;aH=aH+0x0001;aH=aH+1;do PU=Sm[aH];end;aH=aH+1;if not(OH[0x2])then else aH=PU[0X6];end;end;else local ar=bm[1];OH[0x3]=ar[0X1][ar[0X00002]];aH=aH+1;do aH=aH+0X001;end;PU=Sm[aH];aH=aH+1;(OH)[3]=OH[0X3][PU[0X5]];aH=aH+0x1;OH[0x4]=OH[0x00002];local Fr=(0x3);aH=aH+1;ar=bm[0X0];(OH)[0X5]=ar[0X1][ar[2]];do aH=aH+1;end;aH=aH+0x1;do aH=aH+0X1;end;OH[Fr](OH[Fr+0X1],OH[Fr+0X2]);do mH=Fr-1;end;aH=aH+1;aH=aH+1;do aH=aH+0X0001;end;do ar=bm[0];end;OH[3]=ar[0X1][ar[2]];PU=Sm[aH];aH=aH+1;local jr=(OH[0x3]);Fr=3;(OH)[Fr+0X1]=jr;(OH)[Fr]=jr[PU[0x5]];aH=aH+0X1;Fr=0X0003;(OH[Fr])(OH[Fr+1]);mH=Fr-1;PU=Sm[aH];aH=aH+0X1;aH=PU[6];end;end;else if BU>=0X22 then do if BU==0X23 then for AS=PU[7],PU[0X0006]do OH[AS]=nil;end;else OH[0X00001]=NH[PU[2]];aH=aH+0X1;aH=aH+0x1;PU=Sm[aH];aH=aH+1;do OH[0X1]=OH[1][PU[5]];end;do aH=aH+1;end;aH=aH+0X01;PU=Sm[aH];aH=aH+1;(OH)[0X2]=PU[2];do aH=aH+0X1;end;local Bj=(1);(OH)[Bj]=OH[Bj](OH[Bj+1]);mH=Bj;do PU=Sm[aH];end;aH=aH+0X1;do if not(not OH[1])then else aH=PU[0x6];end;end;end;end;else do(OH)[0x2]=NH[PU[2]];end;local cs=2;do PU=Sm[aH];end;aH=aH+1;do OH[3]=PU[2];end;aH=aH+1;do OH[cs]=OH[cs](OH[cs+0X1]);end;mH=cs;do aH=aH+1;end;aH=aH+0X1;PU=Sm[aH];aH=aH+0X1;if not(OH[0X2])then else aH=PU[6];end;end;end;end;else if not(BU<42)then if BU>=45 then if not(BU>=0X002e)then local wL=Zm[PU[0X6]];local QL,TL=wL[0X3],(nil);local JL=(#QL);do if not(JL>0x000)then else TL={};for gx=1,JL do local rx=(QL[gx]);if rx[0X0001]==0X0 then(TL)[gx-1]={OH,rx[0X02]};else TL[gx-1]=bm[rx[0X00002]];end;end;M(Cm,TL);end;end;do OH[PU[0X00007]]=dH(wL,TL,NH);end;else if BU~=0x2F then local Nb,pb=bm[0x1],(nil);OH[0X3]=Nb[0X1][Nb[2]];PU=Sm[aH];aH=aH+1;(OH)[3]=OH[0x3][PU[0x05]];aH=aH+0X1;aH=aH+0X00001;do aH=aH+0X1;end;do(OH)[0x0004]=OH[2];end;local rb=3;do aH=aH+0X1;end;Nb=bm[0];OH[5]=Nb[0x0001][Nb[0X2]];PU=Sm[aH];do aH=aH+0X001;end;local Ab=(Zm[PU[6]]);local Lb=Ab[3];local kb=(#Lb);if kb>0 then do pb={};end;for Cu=0x01,kb do local ru=(Lb[Cu]);do if ru[0x1]==0 then(pb)[Cu-1]={OH,ru[0X2]};else do(pb)[Cu-0X0001]=bm[ru[0X2]];end;end;end;end;(M)(Cm,pb);end;(OH)[6]=dH(Ab,pb,NH);aH=aH+1;mH=rb+4-0x00001;(OH[rb])(f(OH,rb+1,mH));mH=rb-1;PU=Sm[aH];aH=aH+0X001;do OH[0X3]=OH[1][PU[5]];end;PU=Sm[aH];aH=aH+0x01;if OH[0x03]then do aH=PU[6];end;end;else repeat local fg,mg=Cm,OH;if#fg>0X0 then local g_={};do for Fq,nq in I,fg do for sn,Hn in I,nq do if Hn[0x1]==mg and Hn[0X2]>=0 then local Ye=(Hn[0X2]);if not g_[Ye]then(g_)[Ye]={mg[Ye]};end;(Hn)[1]=g_[Ye];Hn[2]=0X001;end;end;end;end;end;until true;do return;end;end;end;else if not(BU<43)then if BU==44 then OH[0X1]=NH[PU[0X2]];aH=aH+1;aH=aH+1;PU=Sm[aH];do aH=aH+1;end;if not(OH[1])then else aH=PU[6];end;else do OH[PU[0x7]]={f({},0X001,PU[0X6])};end;end;else do aH=PU[0X0006];end;end;end;else do if not(BU>=0X27)then if BU>=0x0025 then if BU==38 then do OH[0X4]=NH[PU[0x02]];end;aH=aH+0X1;mH=0X4;do OH[mH]=OH[mH]();end;PU=Sm[aH];aH=aH+0X1;if not OH[4]then aH=PU[0X6];end;else local OW=(bm[0]);do(OH)[0x4]=OW[1][OW[2]];end;aH=aH+0x001;local uW=(0X04);do aH=aH+1;end;PU=Sm[aH];aH=aH+1;local AW=OH[4];OH[uW+1]=AW;(OH)[uW]=AW[PU[0X0005]];aH=aH+0x1;do uW=0X4;end;OH[uW]=OH[uW](OH[uW+1]);mH=uW;PU=Sm[aH];aH=aH+0X01;if not OH[4]then aH=PU[6];end;end;else local sO=(bm[0X00]);do(OH)[0X2]=sO[0X00001][sO[0x2]];end;local vO=(0X2);PU=Sm[aH];aH=aH+1;local FO=(OH[0x002]);(OH)[vO+1]=FO;OH[vO]=FO[PU[0x5]];aH=aH+0x1;vO=2;do(OH)[vO]=OH[vO](OH[vO+0X00001]);end;mH=vO;do aH=aH+1;end;aH=aH+1;do PU=Sm[aH];end;aH=aH+1;do if OH[0X0002]then aH=PU[6];end;end;end;else do if BU>=0X0028 then if BU==41 then local p4=(bm[0]);OH[0X0002]=p4[0X1][p4[0X002]];aH=aH+1;aH=aH+0X1;local I4=(2);PU=Sm[aH];aH=aH+1;local x4=OH[0X2];OH[I4+1]=x4;(OH)[I4]=x4[PU[5]];aH=aH+0x1;do I4=0x02;end;OH[I4](OH[I4+0X1]);mH=I4-0X1;aH=aH+1;aH=aH+0x01;PU=Sm[aH];aH=aH+1;OH[0X2]=NH[PU[0x2]];aH=aH+1;aH=aH+0X1;PU=Sm[aH];aH=aH+0X001;if not(not OH[2])then else aH=PU[0X006];end;else do(OH)[1]=true;end;PU=Sm[aH];aH=aH+1;(NH)[PU[0x02]]=OH[0X1];do aH=aH+0X01;end;do repeat local gd,pd=Cm,(OH);do if not(#gd>0X0)then else local G3={};for fc,Dc in I,gd do for dN,kN in I,Dc do if kN[0x01]==pd and kN[2]>=0x000 then local U9=kN[2];if not(not G3[U9])then else do(G3)[U9]={pd[U9]};end;end;(kN)[1]=G3[U9];(kN)[0X2]=0X001;end;end;end;end;end;until true;end;do return;end;end;else(OH)[0x000]=NH[PU[0X00002]];do aH=aH+0x1;end;aH=aH+0X0001;do PU=Sm[aH];end;aH=aH+0X1;if OH[0]then aH=PU[0x6];end;end;end;end;end;end;end;else if not(BU<12)then do if BU>=0X12 then if BU>=21 then do if not(BU<22)then if BU==0x00017 then do(OH)[PU[0x7]]=OH[PU[6]][OH[PU[0X1]]];end;else(OH)[2]=OH[1][PU[5]];aH=aH+1;aH=aH+0X0001;do PU=Sm[aH];end;aH=aH+0X01;if not OH[2]then aH=PU[0X00006];end;end;else(OH)[PU[0X007]]=NH[PU[2]];end;end;else if BU<0X13 then local gT=bm[0];OH[3]=gT[1][gT[0x2]];PU=Sm[aH];local HT=(OH[3]);aH=aH+1;local eT=(0X3);OH[eT+1]=HT;(OH)[eT]=HT[PU[5]];aH=aH+1;do eT=3;end;OH[eT](OH[eT+1]);mH=eT-0X00001;PU=Sm[aH];aH=aH+1;aH=PU[6];else if BU==0X000014 then do OH[0X03]=NH[PU[0X2]];end;PU=Sm[aH];local tA=(0X3);aH=aH+1;(OH)[0x4]=PU[0x2];do aH=aH+1;end;OH[tA](OH[tA+1]);mH=tA-0X00001;PU=Sm[aH];aH=aH+1;do aH=PU[0X006];end;else OH[0]=NH[PU[2]];aH=aH+1;aH=aH+1;PU=Sm[aH];aH=aH+0X00001;OH[0X01]=PU[0X2];local nr=(0);do aH=aH+1;end;OH[nr]=OH[nr](OH[nr+1]);do mH=nr;end;do PU=Sm[aH];end;aH=aH+0X1;OH[1]=OH[0][PU[0X0005]];PU=Sm[aH];do aH=aH+1;end;if not(OH[1])then else aH=PU[0X6];end;end;end;end;else if BU>=0X0F then do if BU<16 then(OH)[1]=NH[PU[2]];local XU=(0X1);aH=aH+0x00001;aH=aH+1;PU=Sm[aH];aH=aH+1;(OH)[2]=PU[0X2];aH=aH+1;do(OH)[XU]=OH[XU](OH[XU+1]);end;mH=XU;aH=aH+0X0001;aH=aH+0X1;PU=Sm[aH];aH=aH+1;OH[2]=OH[0X01][PU[0X5]];PU=Sm[aH];aH=aH+0X1;if not OH[0X2]then aH=PU[6];end;else if BU==17 then OH[2]=OH[1][PU[5]];aH=aH+0X1;do aH=aH+0x01;end;PU=Sm[aH];aH=aH+1;if OH[2]then aH=PU[0x6];end;else OH[0X0002]=NH[PU[2]];aH=aH+0X1;aH=aH+0X1;PU=Sm[aH];aH=aH+1;(OH)[0X3]=PU[2];do PU=Sm[aH];end;do aH=aH+0X1;end;OH[0X4]=PU[0X00002];PU=Sm[aH];aH=aH+1;(OH)[0X0005]=PU[2];aH=aH+1;local pm=(2);do mH=pm+0X4-1;end;OH[pm](f(OH,pm+0X1,mH));mH=pm-1;PU=Sm[aH];aH=aH+1;aH=PU[0X06];end;end;end;else if BU>=0XD then do if BU==0Xe then do(OH)[PU[0X007]]=W(OH[PU[6]],OH[PU[0X00001]]);end;else OH[PU[7]]=OH[PU[6]]<=OH[PU[1]];end;end;else(OH)[2]=true;do PU=Sm[aH];end;aH=aH+1;NH[PU[2]]=OH[2];PU=Sm[aH];do aH=aH+1;end;aH=PU[6];end;end;end;end;else if BU>=6 then if BU>=9 then do if BU>=10 then if BU==0X0000b then local Hk=PU[0x00006];local fk=(OH[Hk]);for mW=Hk+0X1,PU[1]do fk=fk..OH[mW];end;(OH)[PU[7]]=fk;else(OH)[3]=NH[PU[0X2]];local Ko=3;aH=aH+1;aH=aH+0X1;PU=Sm[aH];aH=aH+0x1;(OH)[4]=PU[2];PU=Sm[aH];local bo=(Zm[PU[6]]);do aH=aH+0X1;end;local ko=(bo[3]);local Yo=nil;local oo=#ko;if not(oo>0)then else do Yo={};end;do for q4=0X1,oo do local g4=(ko[q4]);if g4[1]==0X00000 then(Yo)[q4-1]={OH,g4[0x00002]};else do(Yo)[q4-0X1]=bm[g4[0X002]];end;end;end;end;M(Cm,Yo);end;do OH[0X05]=dH(bo,Yo,NH);end;aH=aH+0X1;do(OH)[Ko]=OH[Ko](OH[Ko+0x1],OH[Ko+2]);end;do mH=Ko;end;aH=aH+1;do aH=aH+1;end;PU=Sm[aH];aH=aH+0X0001;do(OH)[0X3]=OH[3][PU[0X5]];end;PU=Sm[aH];aH=aH+1;do(OH)[0X0004]=OH[0X00003][PU[0X5]];end;aH=aH+1;do aH=aH+0X1;end;aH=aH+1;(OH)[2]=OH[0X04];do PU=Sm[aH];end;do aH=aH+0X1;end;if not(OH[0X2])then else aH=PU[0X6];end;end;else do OH[0X1]=NH[PU[2]];end;aH=aH+1;do aH=aH+1;end;aH=aH+0X00001;do mH=0X1;end;(OH)[mH]=OH[mH]();aH=aH+0X1;aH=aH+0X1;PU=Sm[aH];aH=aH+1;do if not(OH[0X1]<PU[5])then else do aH=PU[0x07];end;end;end;end;end;else if BU>=0x7 then if BU==0x00008 then if OH[PU[6]]==PU[0X05]then else aH=PU[0X0007];end;else local RQ=(bm[0]);(OH)[3]=RQ[0x1][RQ[2]];aH=aH+0X1;do aH=aH+1;end;local yQ=OH[0x03];do PU=Sm[aH];end;aH=aH+0X00001;local wQ=(0X0003);OH[wQ+1]=yQ;(OH)[wQ]=yQ[PU[5]];do aH=aH+1;end;do wQ=3;end;OH[wQ](OH[wQ+1]);mH=wQ-0x0001;do PU=Sm[aH];end;aH=aH+1;(OH)[3]=NH[PU[2]];do PU=Sm[aH];end;do aH=aH+0X1;end;(OH)[0X3]=OH[3][PU[0X005]];PU=Sm[aH];aH=aH+0x1;(OH)[0X4]=PU[2];aH=aH+1;wQ=0X3;OH[wQ](OH[wQ+1]);mH=wQ-0X1;PU=Sm[aH];aH=aH+0X1;OH[3]=NH[PU[0x02]];aH=aH+0X1;aH=aH+0X1;do PU=Sm[aH];end;aH=aH+1;if not OH[3]then do aH=PU[0X6];end;end;end;else local Kj=PU[0X7];local ij=(r(function(...)(C)();for hK,rK,ZK,FK,lK,qK,dK,WK,HK,eK in...do C(true,{hK,rK,ZK,FK,lK,qK,dK,WK,HK,eK});end;end));(ij)(OH[Kj],OH[Kj+0X1],OH[Kj+2]);mH=Kj;do OH[Kj]=ij;end;aH=PU[6];end;end;else if not(BU<3)then do if not(BU>=4)then else if BU~=0X0005 then(OH)[0x3]=NH[PU[0X0002]];PU=Sm[aH];do aH=aH+1;end;OH[0X3]=OH[0x3][PU[5]];do aH=aH+0X001;end;do aH=aH+1;end;do PU=Sm[aH];end;aH=aH+1;do if not(OH[0X3])then else do aH=PU[0X6];end;end;end;else(OH)[2]=OH[1][PU[5]];aH=aH+1;aH=aH+1;do PU=Sm[aH];end;do aH=aH+0X1;end;if not(OH[2])then else aH=PU[6];end;end;end;end;else if BU>=1 then if BU==2 then local o8=bm[1];(OH)[3]=o8[0X1][o8[0x0002]];local N8=0x3;PU=Sm[aH];do aH=aH+1;end;OH[3]=OH[3][PU[0X05]];aH=aH+1;do aH=aH+0X1;end;aH=aH+0X1;do OH[0X4]=OH[2];end;aH=aH+1;do OH[N8]=OH[N8](OH[N8+1]);end;mH=N8;PU=Sm[aH];aH=aH+1;if not(not OH[0x3])then else aH=PU[0X6];end;else do OH[PU[7]]=PU[0X2];end;end;else(OH)[2]=NH[PU[0X2]];PU=Sm[aH];aH=aH+1;OH[0X3]=PU[2];aH=aH+1;local Jp=2;local Hp=bm[0X1];OH[Jp]=OH[Jp](OH[Jp+0X1]);mH=Jp;aH=aH+1;(OH)[3]=Hp[0X00001][Hp[2]];aH=aH+1;aH=aH+1;do PU=Sm[aH];end;aH=aH+0X1;OH[0X3]=OH[0X3][PU[5]];aH=aH+0X1;do aH=aH+1;end;aH=aH+0X01;OH[4]=OH[0X02];do aH=aH+1;end;Jp=3;OH[Jp]=OH[Jp](OH[Jp+1]);mH=Jp;PU=Sm[aH];aH=aH+0X1;if not(not OH[3])then else do aH=PU[0x00006];end;end;end;end;end;end;end;end;end);if RL then if KL then if uL~=1 then return OH[mL](f(OH,mL+0X1,mH));else return OH[mL]();end;elseif mL then return f(OH,mL,uL);end;else do if e(KL)~="string"then(V)(KL,0x0);else do if p(KL,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(p(KL,"^.-:%d+: "))then V(KL,0);else V("\L\117\114aph \Scr\105\112\116\:"..(Dm[aH-0X01]or'(\105nt\ernal\)')..":\ "..v(KL),0);end;end;end;end;end;end;end;end;end;else do if xm<0x4E then if xm<0X4c then do Km=function(...)local EW,XW=1,({});local yW=(K());local uW,AW=eH(...);local WW,vW=(yW==g and Qm or yW),({[1]=Xm,[2]=XW});uW=uW-1;for eo=0X0,uW do if km>eo then XW[eo]=AW[eo+1];else break;end;end;if not Lm then do AW=nil;end;elseif Um then(XW)[km]={n=uW>=km and uW-km+0X01 or 0,f(AW,km+1,uW+0X1)};end;local KW=0;if WW~=yW then(w)(Km,WW);end;local kW,QW,DW,bW=o(function()while true do local gz=(Sm[EW]);local Sz=gz[4];do EW=EW+0X1;end;if not(Sz>=0X10)then if not(Sz<8)then if Sz>=12 then do if not(Sz>=14)then do if Sz==13 then(XW)[gz[0X7]]=XW[gz[0X6]]^XW[gz[1]];else(XW)[gz[7]]=gz[2];end;end;else do if Sz==0Xf then do(XW)[6]=XW[5][gz[0X05]];end;do EW=EW+0X1;end;EW=EW+1;gz=Sm[EW];EW=EW+1;if XW[0X6]==gz[0x5]then do EW=gz[7];end;end;else for aR=gz[0X7],gz[0X00006]do XW[aR]=nil;end;end;end;end;end;else if not(Sz<10)then if Sz~=0Xb then do(XW)[7]=XW[0X5][gz[0X5]];end;EW=EW+0X1;EW=EW+1;do gz=Sm[EW];end;local W9=(0X7);do EW=EW+0X001;end;local V9=(XW[7]);(XW)[W9+0X0001]=V9;(XW)[W9]=V9[gz[5]];EW=EW+1;W9=0x7;XW[W9]=XW[W9](XW[W9+1]);KW=W9;do gz=Sm[EW];end;EW=EW+1;do W9=0X7;end;do V9=XW[0X7];end;XW[W9+0X01]=V9;XW[W9]=V9[gz[5]];do gz=Sm[EW];end;EW=EW+1;(XW)[0X9]=gz[2];EW=EW+1;W9=0X7;XW[W9]=XW[W9](XW[W9+0X1],XW[W9+2]);KW=W9;gz=Sm[EW];EW=EW+0x0001;do if not XW[0X0007]then EW=gz[0X6];end;end;else end;else if Sz~=0x00009 then XW[6]=XW[0X5][gz[0X5]];gz=Sm[EW];local Y1=(0X6);EW=EW+0x1;local a1=XW[0x6];XW[Y1+1]=a1;(XW)[Y1]=a1[gz[5]];EW=EW+0X1;Y1=6;XW[Y1]=XW[Y1](XW[Y1+1]);do KW=Y1;end;do gz=Sm[EW];end;EW=EW+1;(XW)[0X007]=WW[gz[2]];do EW=EW+1;end;EW=EW+1;EW=EW+1;(XW)[8]=XW[0X00001];EW=EW+1;Y1=0X07;XW[Y1]=XW[Y1](XW[Y1+0X0001]);KW=Y1;do EW=EW+0X00001;end;EW=EW+1;gz=Sm[EW];EW=EW+1;Y1=0X007;a1=XW[0x7];XW[Y1+1]=a1;XW[Y1]=a1[gz[0X5]];EW=EW+1;Y1=7;do(XW)[Y1]=XW[Y1](XW[Y1+0x00001]);end;KW=Y1;do EW=EW+1;end;EW=EW+0X1;gz=Sm[EW];do EW=EW+1;end;if XW[6]==XW[0X00007]then else EW=gz[7];end;else(XW)[0x3]=WW[gz[2]];gz=Sm[EW];do EW=EW+1;end;XW[4]=WW[gz[0X2]];EW=EW+1;EW=EW+0X001;do gz=Sm[EW];end;EW=EW+0X0001;XW[5]=gz[0x00002];do EW=EW+0X1;end;local Z3=4;(XW)[Z3]=XW[Z3](XW[Z3+1]);KW=Z3;gz=Sm[EW];EW=EW+0x1;if XW[0X0004]then EW=gz[0X6];end;end;end;end;else if Sz<0X4 then if Sz<0X2 then if Sz~=1 then do(XW)[0]=WW[gz[0X2]];end;EW=EW+0X1;do EW=EW+1;end;local bN=0X00000;gz=Sm[EW];EW=EW+0x1;XW[0x001]=gz[0X0002];do EW=EW+0X1;end;do XW[bN]=XW[bN](XW[bN+1]);end;KW=bN;do gz=Sm[EW];end;EW=EW+1;if not(not XW[0])then else do EW=gz[6];end;end;else if not(not XW[gz[0X7]])then else EW=gz[6];end;end;else do if Sz~=3 then do(XW)[7]=XW[0X005][gz[0X5]];end;local bU=7;gz=Sm[EW];do EW=EW+0X1;end;local YU=(XW[0x7]);(XW)[bU+1]=YU;do(XW)[bU]=YU[gz[0x5]];end;EW=EW+0x0001;do bU=0X7;end;XW[bU]=XW[bU](XW[bU+1]);KW=bU;local MU=(2);do EW=EW+0X01;end;EW=EW+0x1;gz=Sm[EW];EW=EW+0X1;bU=7;do YU=XW[0X07];end;(XW)[bU+1]=YU;do(XW)[bU]=YU[gz[0X5]];end;gz=Sm[EW];do EW=EW+0x1;end;do bU=9;end;YU=XW[1];do XW[bU+1]=YU;end;XW[bU]=YU[gz[5]];do EW=EW+0X0001;end;bU=0x9;local XU=(0);if MU~=0 then do KW=bU+MU-1;end;end;local uU,yU=nil,(nil);if MU~=0x00001 then do uU,yU=eH(XW[bU](f(XW,bU+1,KW)));end;else uU,yU=eH(XW[bU]());end;if XU==0X00001 then KW=bU-1;else if XU==0 then uU=uU+bU-1;KW=uU;else do uU=bU+XU-2;end;do KW=uU+1;end;end;local hC=(0);for eU=bU,uU do do hC=hC+0X1;end;XW[eU]=yU[hC];end;end;do EW=EW+0X1;end;bU=0X0007;XW[bU]=XW[bU](f(XW,bU+1,KW));KW=bU;gz=Sm[EW];EW=EW+1;do if not XW[7]then EW=gz[6];end;end;else repeat local qx,Lx=Cm,XW;if#qx>0X0 then local Ce={};for Lp,qp in I,qx do for d8,C8 in I,qp do if not(C8[1]==Lx and C8[0x02]>=0X0)then else local gD=(C8[2]);if not Ce[gD]then(Ce)[gD]={Lx[gD]};end;(C8)[0X00001]=Ce[gD];C8[0x2]=1;end;end;end;end;until true;return;end;end;end;else if Sz>=6 then if Sz~=0x7 then EW=gz[0X6];else XW[6]=WW[gz[0X2]];do EW=EW+1;end;EW=EW+1;gz=Sm[EW];do EW=EW+1;end;XW[7]=gz[2];local Ed=0X6;gz=Sm[EW];EW=EW+0x1;XW[8]=XW[5][gz[5]];do EW=EW+1;end;EW=EW+0x00001;EW=EW+0x001;(XW[Ed])(XW[Ed+1],XW[Ed+2]);do KW=Ed-0X0001;end;EW=EW+1;EW=EW+1;gz=Sm[EW];EW=EW+0X1;do EW=gz[6];end;end;else if Sz==5 then local XI=(Zm[gz[0X6]]);local qI=(XI[3]);local SI=(nil);local PI=(#qI);do if not(PI>0x0)then else SI={};do for YM=1,PI do local xM=qI[YM];if xM[1]~=0X00000 then(SI)[YM-1]=bm[xM[2]];else SI[YM-1]={XW,xM[2]};end;end;end;(M)(Cm,SI);end;end;(XW)[gz[7]]=dH(XI,SI,WW);else if not(XW[gz[6]]<=XW[gz[1]])then do EW=gz[7];end;end;end;end;end;end;else if Sz>=0X18 then if Sz>=28 then do if Sz>=0x1e then do if Sz<31 then local K7=(gz[0X00007]);local E7,I7,c7=XW[K7]();if E7 then XW[K7+1]=I7;(XW)[K7+0x00002]=c7;do EW=gz[6];end;end;else if Sz~=0x0020 then XW[0X3]=WW[gz[0X02]];gz=Sm[EW];do EW=EW+0x1;end;(XW)[0X4]=WW[gz[2]];EW=EW+1;local LO=0x2;EW=EW+1;gz=Sm[EW];do EW=EW+1;end;XW[4]=XW[0X4][gz[5]];EW=EW+1;EW=EW+0x1;gz=Sm[EW];local sO=0X04;EW=EW+1;local UO=XW[4];(XW)[sO+0x1]=UO;(XW)[sO]=UO[gz[5]];EW=EW+1;sO=4;local tO=(0X00);if LO~=0 then do KW=sO+LO-0X0001;end;end;local gO,IO=nil,(nil);do if LO~=0X1 then gO,IO=eH(XW[sO](f(XW,sO+0X1,KW)));else gO,IO=eH(XW[sO]());end;end;if tO==1 then KW=sO-0X1;else if tO==0 then gO=gO+sO-0X1;do KW=gO;end;else do gO=sO+tO-0x2;end;KW=gO+0X00001;end;local a8=0;for ts=sO,gO do a8=a8+1;(XW)[ts]=IO[a8];end;end;do EW=EW+1;end;do sO=0X3;end;LO=0X0;do tO=4;end;if LO==0 then else KW=sO+LO-1;end;gO,IO=nil;if LO~=0X1 then gO,IO=eH(XW[sO](f(XW,sO+1,KW)));else gO,IO=eH(XW[sO]());end;if tO==0X1 then KW=sO-1;else if tO~=0X0 then gO=sO+tO-0x02;KW=gO+1;else do gO=gO+sO-0x0001;end;KW=gO;end;local xr=(0x0);do for gq=sO,gO do xr=xr+1;(XW)[gq]=IO[xr];end;end;end;EW=EW+0X1;EW=EW+0X1;gz=Sm[EW];EW=EW+1;sO=3;local xO=r(function(...)C();for aY,kY in...do C(true,aY,kY);end;end);(xO)(XW[sO],XW[sO+0X00001],XW[sO+2]);do KW=sO;end;do XW[sO]=xO;end;EW=gz[0X006];else local GU,JU=0X02,(0X3);if GU~=0X0 then KW=JU+GU-0X0001;end;local PU,LU,NU=0X4,nil,nil;do if GU~=0X1 then LU,NU=eH(XW[JU](f(XW,JU+1,KW)));else LU,NU=eH(XW[JU]());end;end;if PU~=0X1 then if PU==0 then LU=LU+JU-0X001;do KW=LU;end;else LU=JU+PU-0X2;KW=LU+0x0001;end;local tU=(0);do for i4=JU,LU do do tU=tU+0X01;end;XW[i4]=NU[tU];end;end;else KW=JU-0X01;end;EW=EW+0x1;do EW=EW+0x01;end;gz=Sm[EW];do EW=EW+1;end;JU=3;local BU=(r(function(...)(C)();do for Ol,gl in...do(C)(true,Ol,gl);end;end;end));(BU)(XW[JU],XW[JU+0x00001],XW[JU+0X2]);do KW=JU;end;(XW)[JU]=BU;EW=gz[0X6];end;end;end;else do if Sz~=29 then local Cb=(gz[0X00007]);local Xb=(r(function(...)(C)();for iJ,aJ in...do C(true,iJ,aJ);end;end));(Xb)(XW[Cb],XW[Cb+0x1],XW[Cb+2]);KW=Cb;do(XW)[Cb]=Xb;end;EW=gz[6];else XW[gz[7]]={f({},1,gz[0X6])};end;end;end;end;else if Sz>=0X1a then if Sz~=27 then repeat local rG,FG=Cm,(XW);do if not(#rG>0X000)then else local yt=({});for B6,b6 in I,rG do for ov,lv in I,b6 do do if lv[0X0001]==FG and lv[0X2]>=0 then local OH=lv[0X2];if not yt[OH]then yt[OH]={FG[OH]};end;lv[0x1]=yt[OH];(lv)[2]=1;end;end;end;end;end;end;until true;local ng=(gz[0x7]);return false,ng,ng+gz[6]-2;else XW[0X0]=WW[gz[2]];EW=EW+1;EW=EW+0x01;gz=Sm[EW];do EW=EW+0X1;end;do if XW[0]then EW=gz[6];end;end;end;else if Sz~=25 then do(XW)[0]=WW[gz[2]];end;gz=Sm[EW];EW=EW+0X1;XW[0]=XW[0][gz[0X5]];EW=EW+0X1;EW=EW+1;gz=Sm[EW];EW=EW+1;if not(not XW[0x0])then else EW=gz[0X6];end;else XW[0]=WW[gz[0X2]];gz=Sm[EW];do EW=EW+1;end;(XW)[0X1]=WW[gz[2]];EW=EW+0X001;EW=EW+0X1;gz=Sm[EW];EW=EW+0X0001;do XW[1]=XW[1][gz[0x5]];end;do gz=Sm[EW];end;EW=EW+1;do if XW[1]then EW=gz[0X06];end;end;end;end;end;else if Sz<20 then if Sz<18 then if Sz==0X11 then(XW)[0]=WW[gz[0x2]];gz=Sm[EW];do EW=EW+1;end;do XW[0]=XW[0][gz[0X5]];end;EW=EW+0x001;EW=EW+1;gz=Sm[EW];EW=EW+1;if not(not XW[0X0])then else EW=gz[0X06];end;else(XW)[gz[0X7]]=S(XW[gz[0X6]],XW[gz[1]]);end;else if Sz==19 then local Jh,wh=gz[7],gz[0x6];local fh=(gz[1]);if wh==0X0 then else KW=Jh+wh-1;end;local Hh,Xh=nil,(nil);if wh~=0x0001 then Hh,Xh=eH(XW[Jh](f(XW,Jh+0x01,KW)));else Hh,Xh=eH(XW[Jh]());end;if fh==0X1 then do KW=Jh-0x1;end;else if fh==0X0 then do Hh=Hh+Jh-1;end;do KW=Hh;end;else Hh=Jh+fh-2;KW=Hh+1;end;local ib=0x0;do for yg=Jh,Hh do ib=ib+0X1;(XW)[yg]=Xh[ib];end;end;end;else XW[0X0]=WW[gz[0X2]];EW=EW+1;EW=EW+1;do gz=Sm[EW];end;EW=EW+0X1;do XW[0]=XW[0][gz[5]];end;gz=Sm[EW];EW=EW+1;do(XW)[0X00]=XW[0][gz[0X005]];end;EW=EW+1;EW=EW+1;gz=Sm[EW];EW=EW+0X1;if XW[0X0]==gz[0X00005]then else EW=gz[0X7];end;end;end;else if Sz>=22 then do if Sz~=23 then XW[gz[0X7]]=WW[gz[2]];else do(XW)[0X6]=WW[gz[2]];end;local Gh=6;do EW=EW+0X1;end;(XW)[7]=XW[0x5];do EW=EW+0X00001;end;XW[Gh](XW[Gh+0X01]);do KW=Gh-1;end;do EW=EW+1;end;(XW)[6]=true;gz=Sm[EW];EW=EW+0X1;do(WW)[gz[0X2]]=XW[0X6];end;do gz=Sm[EW];end;local ch=XW[5];EW=EW+0X001;Gh=0X6;(XW)[Gh+0X1]=ch;XW[Gh]=ch[gz[0X00005]];do gz=Sm[EW];end;EW=EW+0X1;(XW)[8]=gz[0X0002];EW=EW+0X1;Gh=0X00006;(XW)[Gh]=XW[Gh](XW[Gh+0X001],XW[Gh+2]);KW=Gh;EW=EW+1;EW=EW+0X1;gz=Sm[EW];EW=EW+0X1;Gh=6;ch=XW[6];XW[Gh+1]=ch;(XW)[Gh]=ch[gz[5]];EW=EW+0X1;do Gh=0X6;end;(XW[Gh])(XW[Gh+0x001]);do KW=Gh-1;end;do gz=Sm[EW];end;EW=EW+0X00001;EW=gz[0X06];end;end;else if Sz==0X15 then local Tb=(gz[7]);local Pb,Ab=XW[Tb],((gz[0X1]-0X1)*0X0032);for du=1,gz[0x6]do(Pb)[Ab+du]=XW[Tb+du];end;else do(XW)[gz[0X07]]={};end;end;end;end;end;end;end;end);if not(kW)then do if e(QW)~="\s\116r\i\110\g"then(V)(QW,0);else if not(p(QW,'attem\pt\ t\111 yi\e\l\d \097\099ro\s\s\032\109\eta\met\104\111d\047\067\%\-\099\097\l\l\032bo\117n\d\097\114\121'))then else do return coroutine.yield();end;end;if p(QW,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[EW-1]or"(internal)")..":\ "..v(QW),0);else V(QW,0X0);end;end;end;else do if QW then do if bW~=0X1 then return XW[DW](f(XW,DW+0x01,KW));else return XW[DW]();end;end;elseif DW then return f(XW,DW,bW);end;end;end;end;end;else if xm==77 then Km=function(...)local j9,O9=0X001,0X00000;local Y9=({});local g9=({[2]=Y9,[1]=Xm});local S9=(K());local N9,s9=eH(...);local d9=(S9==g and Qm or S9);N9=N9-1;for Zh=0,N9 do do if not(km>Zh)then do break;end;else do(Y9)[Zh]=s9[Zh+1];end;end;end;end;if not Lm then s9=nil;elseif Um then do Y9[km]={n=N9>=km and N9-km+1 or 0,f(s9,km+1,N9+1)};end;end;if d9~=S9 then(w)(Km,d9);end;while true do local R6=Sm[j9];j9=j9+1;local T6=(R6[0x4]);do return(function(P,u,...)local O=P[0];if O==""then return"Fruitless";end;local H=string.match(O,"%-(.+)");if H then return H;end;return O;end)(Y9,bm,...);end;end;end;else Km=function(...)local wK=({});local cK=0X01;local jK={[1]=Xm,[2]=wK};local nK=K();local WK=(nK==g and Qm or nK);local qK,fK=eH(...);qK=qK-1;for gk=0,qK do if not(km>gk)then break;else do wK[gk]=fK[gk+0X1];end;end;end;if not Lm then do fK=nil;end;elseif not(Um)then else(wK)[km]={n=qK>=km and qK-km+1 or 0,f(fK,km+1,qK+0X1)};end;local yK=0;do if WK==nK then else(w)(Km,WK);end;end;local vK,bK,YK,LK=o(function()while true do local g9=Sm[cK];local V9=(g9[4]);cK=cK+1;do if V9<10 then if not(V9<5)then if not(V9>=7)then if V9~=6 then local cx=Zm[g9[6]];local wx=(nil);local tx=(cx[0X3]);local bx=(#tx);if bx>0X0000 then do wx={};end;for Mg=1,bx do local Wg=(tx[Mg]);if Wg[0X01]~=0X0 then(wx)[Mg-1]=bm[Wg[2]];else wx[Mg-0X1]={wK,Wg[2]};end;end;M(Cm,wx);end;(wK)[g9[7]]=dH(cx,wx,WK);else for VZ=g9[7],g9[6]do(wK)[VZ]=nil;end;end;else if V9>=8 then if V9==9 then local fl=(g9[7]);local il,Cl,Gl=wK[fl]();if not(il)then else do wK[fl+0x1]=Cl;end;(wK)[fl+2]=Gl;cK=g9[6];end;else do(wK)[g9[7]]=O(wK[g9[0x00006]],wK[g9[0X00001]]);end;end;else do cK=g9[6];end;end;end;else if not(V9>=2)then if V9==0x1 then repeat local FU,rU=Cm,wK;if#FU>0 then local G1=({});for zG,mG in I,FU do for AB,hB in I,mG do do if hB[0X1]==rU and hB[0X2]>=0X0 then local Co=(hB[0X2]);if not G1[Co]then(G1)[Co]={rU[Co]};end;hB[0X1]=G1[Co];(hB)[0x00002]=1;end;end;end;end;end;until true;return false,g9[0X07],yK;else do wK[g9[7]]=WK[g9[0X02]];end;end;else if V9>=3 then if V9~=4 then else do wK[g9[7]]=WK[g9[0x002]];end;do cK=cK+1;end;cK=cK+1;do cK=cK+0X1;end;yK=0X3;wK[yK]=wK[yK]();cK=cK+1;cK=cK+0X01;do g9=Sm[cK];end;do cK=cK+0X01;end;cK=g9[0X0006];end;else repeat local z9,x9=Cm,(wK);do if not(#z9>0X00000)then else local XV=({});for E0,k0 in I,z9 do for OO,QO in I,k0 do if not(QO[1]==x9 and QO[0X2]>=0X00000)then else local YG=QO[0X2];if not(not XV[YG])then else(XV)[YG]={x9[YG]};end;QO[0X01]=XV[YG];(QO)[2]=0X01;end;end;end;end;end;until true;return;end;end;end;else do if not(V9<15)then if not(V9>=0X00011)then do if V9~=16 then local GM=(g9[7]);local FM,VM=wK[GM]();if not(FM)then else for PO=0x1,g9[1]do do wK[GM+PO]=VM[PO];end;end;cK=g9[6];end;else(wK)[g9[0x7]]=wK[g9[6]];end;end;else if not(V9<0X000012)then if V9~=0X0013 then(wK)[g9[0x007]]={f({},1,g9[0X00006])};else do wK[g9[0x7]]=WK[g9[0x002]];end;do g9=Sm[cK];end;cK=cK+1;(wK)[g9[0X7]]=wK[0X1];do g9=Sm[cK];end;cK=cK+0X1;local T2=(g9[0X7]);repeat local MB,LB=Cm,wK;if not(#MB>0)then else local go=({});for Z8,y8 in I,MB do for z9,s9 in I,y8 do if s9[1]==LB and s9[0X2]>=0X00 then local BT=s9[2];do if not go[BT]then do go[BT]={LB[BT]};end;end;end;s9[1]=go[BT];do(s9)[2]=1;end;end;end;end;end;until true;yK=T2+1;return true,T2,0x2;end;else local IP=(1);wK[IP]=wK[IP](wK[IP+0X01],wK[IP+2]);yK=IP;local zP=wK[1];do cK=cK+1;end;cK=cK+0X1;g9=Sm[cK];cK=cK+1;IP=1;(wK)[IP+1]=zP;(wK)[IP]=zP[g9[5]];g9=Sm[cK];cK=cK+0X0001;(wK)[g9[7]]=g9[2];cK=cK+1;do IP=0x1;end;(wK)[IP]=wK[IP](wK[IP+0X001],wK[IP+2]);yK=IP;cK=cK+0X001;cK=cK+0X1;g9=Sm[cK];do cK=cK+1;end;do wK[2]=WK[g9[0X2]];end;cK=cK+0X1;cK=cK+0X1;g9=Sm[cK];do cK=cK+0X1;end;(wK)[3]=wK[g9[0X006]];g9=Sm[cK];local vP=g9[0X6];cK=cK+1;do IP=0X0002;end;local RP=4;if vP==0X00 then else yK=IP+vP-1;end;local uP,fP=nil,nil;if vP~=0x001 then uP,fP=eH(wK[IP](f(wK,IP+1,yK)));else do uP,fP=eH(wK[IP]());end;end;if RP~=1 then if RP~=0 then uP=IP+RP-2;yK=uP+1;else do uP=uP+IP-1;end;yK=uP;end;local CB=(0);for bw=IP,uP do CB=CB+0X0001;(wK)[bw]=fP[CB];end;else yK=IP-1;end;cK=cK+0X1;cK=cK+0X1;do g9=Sm[cK];end;cK=cK+0X1;IP=g9[7];local nP=(r(function(...)(C)();for CR,OR in...do C(true,CR,OR);end;end));(nP)(wK[IP],wK[IP+0x00001],wK[IP+0X2]);yK=IP;(wK)[IP]=nP;cK=g9[0X6];end;end;else if not(V9<0xc)then if V9>=13 then if V9==0xE then(wK[g9[7]])[wK[g9[0X00006]]]=wK[g9[0X00001]];else wK[g9[0X007]]=g9[0X2];end;else do(wK)[g9[0X7]]=WK[g9[0X2]];end;cK=cK+0X0001;cK=cK+0x1;cK=cK+1;(wK)[6]=wK[4];do g9=Sm[cK];end;do cK=cK+1;end;local LD=g9[0X0007];wK[LD]=wK[LD](wK[LD+1]);yK=LD;cK=cK+0x1;cK=cK+0x1;g9=Sm[cK];cK=cK+0X001;wK[g9[0X07]][wK[g9[0X6]]]=wK[g9[1]];do g9=Sm[cK];end;cK=cK+0X1;do cK=g9[0x6];end;end;else do if V9==11 then do(wK)[g9[0X7]]=wK[g9[6]]^wK[g9[0X1]];end;else(wK)[g9[7]]=WK[g9[2]];cK=cK+0x01;cK=cK+0X1;g9=Sm[cK];cK=cK+0X1;(wK)[g9[7]]=wK[1][g9[5]];g9=Sm[cK];cK=cK+0X1;(wK)[g9[7]]=g9[2];g9=Sm[cK];cK=cK+1;do(wK)[g9[0X00007]]=wK[g9[6]];end;g9=Sm[cK];cK=cK+0X0001;if not(wK[3])then else cK=g9[0X006];end;end;end;end;end;end;end;end;end;end);if not(vK)then do if e(bK)~='s\116ri\110\103'then V(bK,0);else if p(bK,'\097\116te\m\pt\032\116\o\032\y\105e\108\d a\099\114o\115s\ \109et\097\me\116h\111\100/C\037\-\ca\l\108\032\098\oun\dar\y')then return coroutine.yield();end;do if not(p(bK,"^.-:\%\100\043\058\032"))then(V)(bK,0);else(V)('\076ur\097p\h\ \Sc\114\i\112\116\:'..(Dm[cK-0X001]or'\040\105n\116\101r\110a\l\)')..'\058\ '..v(bK),0);end;end;end;end;else if bK then if LK==0X1 then return wK[YK]();else return wK[YK](f(wK,YK+0x1,yK));end;elseif not(YK)then else do return f(wK,YK,LK);end;end;end;end;end;end;else if xm<0x4f then Km=function(...)local sp=0x0;local vp=(0X00001);local lp=({});local mp=K();local ip,Np=eH(...);local Op={[1]=Xm,[2]=lp};ip=ip-1;local Mp=((mp==g and Qm or mp));for I8=0,ip do if not(km>I8)then break;else do(lp)[I8]=Np[I8+0X1];end;end;end;do if not Lm then Np=nil;elseif Um then lp[km]={n=ip>=km and ip-km+0X001 or 0,f(Np,km+0X001,ip+1)};end;end;if Mp~=mp then w(Km,Mp);end;local rp,Dp,wp,Up=o(function()do while true do local rU=Sm[vp];local xU=(rU[0X4]);vp=vp+0X1;if not(xU<0x0a)then if xU>=15 then do if not(xU<18)then do if not(xU<19)then if xU==20 then lp[rU[7]]=O(lp[rU[6]],lp[rU[1]]);else(lp)[rU[7]]=lp[rU[6]]~=lp[rU[0X001]];end;else lp[rU[0X7]]=lp[rU[6]]<=lp[rU[0X1]];end;end;else if not(xU<16)then do if xU~=0X11 then do lp[rU[0X07]]=true;end;else lp[0X0]=Mp[rU[2]];vp=vp+0X00001;sp=0x0;lp[sp]=lp[sp]();vp=vp+1;vp=vp+1;do rU=Sm[vp];end;vp=vp+0X1;do lp[1]=Mp[rU[2]];end;do vp=vp+1;end;vp=vp+1;vp=vp+0x1;lp[0]=lp[0]-lp[1];rU=Sm[vp];vp=vp+1;if not(rU[2]<lp[0X0])then vp=rU[0x07];end;end;end;else local n2=(rU[7]);local H2,F2,L2=lp[n2],lp[n2+1],lp[n2+0X2];do lp[n2]=r(function()do for Fp=H2,F2,L2 do C(true,Fp);end;end;end);end;vp=rU[0X6];end;end;end;else if not(xU<0XC)then if not(xU<0X00d)then if xU==14 then(lp)[0x0]=Mp[rU[2]];do vp=vp+0x1;end;vp=vp+0X1;rU=Sm[vp];vp=vp+1;lp[0X0001]=rU[0X00002];local NW=0;vp=vp+1;(lp)[NW]=lp[NW](lp[NW+1]);local FW=bm[0X0];sp=NW;vp=vp+0X1;vp=vp+0x1;vp=vp+1;(lp)[0X1]=FW[1][FW[2]];rU=Sm[vp];vp=vp+1;(lp)[1]=lp[0X01][rU[0X0005]];vp=vp+1;(lp)[0X2]=lp[0];do vp=vp+1;end;NW=0X01;(lp)[NW]=lp[NW](lp[NW+1]);sp=NW;rU=Sm[vp];vp=vp+0x00001;if not lp[1]then vp=rU[0X0006];end;else if lp[rU[7]]then vp=rU[0x6];end;end;else(lp)[rU[7]]=Mp[rU[2]];end;else if xU==11 then local yd=(bm[0x00]);(lp)[0x0001]=yd[0X1][yd[0X2]];local Ed=1;do rU=Sm[vp];end;do vp=vp+0X001;end;(lp)[1]=lp[1][rU[0X5]];vp=vp+0X1;do lp[0X2]=lp[0];end;vp=vp+0X1;yd=bm[0x1];(lp)[3]=yd[1][yd[2]];vp=vp+0X00001;(lp[Ed])(lp[Ed+1],lp[Ed+0x2]);do sp=Ed-0X0001;end;vp=vp+1;do yd=bm[1];end;(lp)[1]=yd[1][yd[2]];rU=Sm[vp];local Kd=(lp[0X001]);vp=vp+0X1;do Ed=0X1;end;(lp)[Ed+1]=Kd;lp[Ed]=Kd[rU[5]];vp=vp+0X001;Ed=1;lp[Ed](lp[Ed+0X1]);do sp=Ed-0X1;end;vp=vp+1;vp=vp+1;do rU=Sm[vp];end;vp=vp+0X1;do vp=rU[0X6];end;else for Le=rU[7],rU[6]do(lp)[Le]=nil;end;end;end;end;else if not(xU>=0X5)then if not(xU<0X2)then if xU<3 then lp[rU[7]]=rU[2];else if xU==4 then repeat local T9,q9=Cm,(lp);do if#T9>0X0000 then local BD=({});for a7,A7 in I,T9 do for Gx,gx in I,A7 do if not(gx[1]==q9 and gx[0x2]>=0)then else local Kd=gx[2];if not(not BD[Kd])then else BD[Kd]={q9[Kd]};end;do gx[1]=BD[Kd];end;(gx)[2]=0X1;end;end;end;end;end;until true;return;else lp[1]=Mp[rU[0X2]];vp=vp+1;vp=vp+1;rU=Sm[vp];vp=vp+0X001;(lp)[0X2]=Mp[rU[0X2]];vp=vp+1;vp=vp+0X1;rU=Sm[vp];local YU=0x00001;do vp=vp+0X1;end;(lp)[0X2]=lp[0X002][rU[0X0005]];rU=Sm[vp];vp=vp+0X00001;do lp[2]=lp[0X2][rU[0X5]];end;rU=Sm[vp];vp=vp+0X0001;do lp[0X0003]=Mp[rU[0X00002]];end;vp=vp+1;vp=vp+1;rU=Sm[vp];do vp=vp+1;end;(lp)[3]=lp[3][rU[0X00005]];rU=Sm[vp];vp=vp+1;(lp)[3]=lp[0X3][rU[0x5]];vp=vp+1;vp=vp+0X1;rU=Sm[vp];do vp=vp+0X01;end;lp[0X0003]=lp[3][rU[5]];vp=vp+1;vp=vp+1;rU=Sm[vp];vp=vp+1;do lp[0X003]=lp[3][rU[5]];end;do vp=vp+0X0001;end;do vp=vp+1;end;rU=Sm[vp];vp=vp+0X001;do(lp)[0X4]=rU[2];end;vp=vp+1;do sp=YU+4-0X1;end;lp[YU](f(lp,YU+1,sp));sp=YU-0X001;vp=vp+1;vp=vp+1;rU=Sm[vp];vp=vp+0x1;(lp)[1]=Mp[rU[0X002]];vp=vp+0x01;vp=vp+0x01;rU=Sm[vp];do vp=vp+1;end;do(lp)[2]=Mp[rU[2]];end;rU=Sm[vp];vp=vp+1;lp[2]=lp[2][rU[0X0005]];vp=vp+0X1;vp=vp+1;do rU=Sm[vp];end;vp=vp+1;(lp)[2]=lp[2][rU[5]];rU=Sm[vp];vp=vp+0X1;(lp)[3]=Mp[rU[2]];rU=Sm[vp];vp=vp+1;lp[3]=lp[3][rU[5]];rU=Sm[vp];vp=vp+1;do lp[0X00003]=lp[0X3][rU[5]];end;rU=Sm[vp];vp=vp+0x01;do lp[0X0003]=lp[3][rU[5]];end;vp=vp+0X00001;vp=vp+1;rU=Sm[vp];vp=vp+1;(lp)[0X3]=lp[3][rU[5]];vp=vp+1;vp=vp+0X1;rU=Sm[vp];vp=vp+0X1;lp[0X4]=rU[2];do vp=vp+1;end;YU=1;do sp=YU+0X4-1;end;lp[YU](f(lp,YU+1,sp));sp=YU-1;rU=Sm[vp];vp=vp+0x1;vp=rU[6];end;end;else if xU==1 then local XQ=(Zm[rU[6]]);local NQ=(nil);local TQ=(XQ[0X3]);local vQ=(#TQ);if vQ>0 then NQ={};for a7=1,vQ do local j7=(TQ[a7]);if j7[1]~=0 then NQ[a7-0X01]=bm[j7[2]];else do NQ[a7-1]={lp,j7[2]};end;end;end;(M)(Cm,NQ);end;do(lp)[rU[7]]=dH(XQ,NQ,Mp);end;else(lp)[0X00001]=Mp[rU[0X2]];do rU=Sm[vp];end;vp=vp+0X1;local lf=(1);do(lp)[0X2]=rU[0X2];end;vp=vp+1;(lp)[lf]=lp[lf](lp[lf+0X01]);sp=lf;rU=Sm[vp];vp=vp+1;if not lp[0x001]then vp=rU[0X06];end;end;end;else if not(xU>=0X7)then do if xU==6 then lp[rU[0X7]]={f({},1,rU[6])};else vp=rU[6];end;end;else do if not(xU>=0X08)then(lp)[0x01]=Mp[rU[2]];do rU=Sm[vp];end;vp=vp+1;lp[2]=rU[0X2];rU=Sm[vp];local zu=0X00001;do vp=vp+1;end;(lp)[3]=rU[0X2];rU=Sm[vp];vp=vp+0X001;(lp)[0X4]=rU[2];do rU=Sm[vp];end;vp=vp+1;lp[5]=rU[2];vp=vp+1;do sp=zu+0x00005-1;end;lp[zu](f(lp,zu+1,sp));do sp=zu-1;end;do rU=Sm[vp];end;vp=vp+1;vp=rU[6];else do if xU~=0X0009 then else do lp[1]=Mp[rU[2]];end;do vp=vp+0X01;end;vp=vp+1;rU=Sm[vp];do vp=vp+0X1;end;if not(lp[1])then else do vp=rU[0X06];end;end;end;end;end;end;end;end;end;end;end;end);if not(rp)then if e(Dp)~="\s\116\114\105\110g"then V(Dp,0);else if p(Dp,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if not(p(Dp,"^.-:%d+: "))then(V)(Dp,0);else V("L\117\114\097\112\h \S\cr\105\112t:"..(Dm[vp-0X1]or"\(i\110\116er\110\097\l\)")..": "..v(Dp),0);end;end;else if Dp then if Up~=1 then return lp[wp](f(lp,wp+1,sp));else return lp[wp]();end;elseif not(wp)then else return f(lp,wp,Up);end;end;end;else if xm==80 then Km=function(...)local wM,sM,hM=0X000,{},(1);local vM=(K());local UM,rM=eH(...);local MM={[1]=Xm,[2]=sM};local kM=((vM==g and Qm or vM));UM=UM-0X1;for tE=0X0,UM do if km>tE then sM[tE]=rM[tE+0X01];else break;end;end;do if not Lm then rM=nil;elseif not(Um)then else do(sM)[km]={n=UM>=km and UM-km+0X0001 or 0X0,f(rM,km+1,UM+1)};end;end;end;if kM==vM then else(w)(Km,kM);end;local JM,xM,jM,lM=o(function()while true do local QK=(Sm[hM]);local FK=QK[4];hM=hM+1;do if not(FK>=11)then if not(FK<5)then if not(FK>=0x8)then do if not(FK<6)then if FK~=0x7 then else local bz=Zm[QK[0X06]];local Qz=bz[3];local Cz,dz=#Qz,(nil);do if Cz>0 then dz={};for wX=1,Cz do local YX=(Qz[wX]);do if YX[1]==0X0 then(dz)[wX-0x0001]={sM,YX[2]};else(dz)[wX-0x1]=bm[YX[0X2]];end;end;end;(M)(Cm,dz);end;end;sM[QK[7]]=dH(bz,dz,kM);end;else sM[QK[0x00007]]=sM[QK[0X006]];end;end;else if not(FK>=0X9)then local i5=QK[0X7];local T5,k5=sM[i5]();if not(T5)then else hM=QK[6];(sM)[i5+3]=k5;end;else if FK~=0xA then do sM[QK[7]]={f({},1,QK[6])};end;else do(sM)[QK[7]]={};end;end;end;end;else if not(FK<2)then if not(FK<0X03)then if FK==0X4 then do(sM)[1]=kM[QK[2]];end;hM=hM+0X01;do hM=hM+1;end;QK=Sm[hM];hM=hM+0X0001;(sM)[1]=sM[0X1][QK[5]];local ss=(sM[1]);QK=Sm[hM];hM=hM+0X1;local ks=(0x00001);sM[ks+1]=ss;do(sM)[ks]=ss[QK[0X5]];end;do hM=hM+1;end;do sM[3]=sM[0];end;hM=hM+0X1;ks=1;(sM)[ks]=sM[ks](sM[ks+0x1],sM[ks+0X2]);wM=ks;hM=hM+1;do hM=hM+1;end;QK=Sm[hM];hM=hM+0X1;if not sM[0x1]then hM=QK[0X6];end;else do sM[QK[7]]=kM[QK[2]];end;end;else repeat local x4,z4=Cm,sM;if not(#x4>0X0)then else local i2={};for aN,PN in I,x4 do do for rA,ZA in I,PN do if not(ZA[1]==z4 and ZA[2]>=0x0)then else local St=(ZA[0x002]);if not(not i2[St])then else(i2)[St]={z4[St]};end;ZA[0X1]=i2[St];ZA[0X002]=0x1;end;end;end;end;end;until true;local hO=QK[0X00007];return false,hO,hO;end;else if FK~=1 then do sM[QK[0x7]]=O(sM[QK[0X6]],sM[QK[0X1]]);end;else for Yx=QK[0x7],QK[0X6]do do(sM)[Yx]=nil;end;end;end;end;end;else if not(FK<0X00011)then do if FK<20 then if FK<18 then sM[QK[0X07]]=true;else do if FK~=19 then do(sM)[QK[0X07]]=QK[2];end;else local jV=2;local TV=1;if jV~=0 then wM=TV+jV-1;end;local kV,RV,bV=4,nil,nil;if jV~=0x1 then RV,bV=eH(sM[TV](f(sM,TV+0X1,wM)));else RV,bV=eH(sM[TV]());end;if kV~=0X1 then if kV==0X000 then do RV=RV+TV-0x1;end;do wM=RV;end;else RV=TV+kV-2;do wM=RV+1;end;end;local k3=0X0;for G5=TV,RV do do k3=k3+0X0001;end;sM[G5]=bV[k3];end;else wM=TV-0x01;end;hM=hM+1;hM=hM+1;QK=Sm[hM];hM=hM+0X0001;TV=1;local MV=r(function(...)(C)();for Ha,Fa in...do C(true,Ha,Fa);end;end);(MV)(sM[TV],sM[TV+1],sM[TV+2]);do wM=TV;end;(sM)[TV]=MV;hM=QK[6];end;end;end;else if FK<0x15 then hM=QK[6];else if FK==22 then local nY=(QK[0X7]);local tY,CY,NY=sM[nY]();do if tY then sM[nY+1]=CY;sM[nY+0X2]=NY;do hM=QK[6];end;end;end;else sM[0X4]=sM[0X3][QK[5]];do hM=hM+0X1;end;hM=hM+1;QK=Sm[hM];hM=hM+0X1;if sM[0x004]~=sM[0]then do hM=QK[7];end;end;end;end;end;end;else if not(FK>=0Xe)then if not(FK<0Xc)then do if FK==13 then(sM)[1]=kM[QK[2]];do QK=Sm[hM];end;do hM=hM+0X01;end;(sM)[0X0002]=kM[QK[0X2]];local M0=2;QK=Sm[hM];do hM=hM+0X00001;end;(sM)[3]=QK[0X2];hM=hM+1;sM[M0]=sM[M0](sM[M0+1]);do wM=M0;end;do hM=hM+1;end;hM=hM+1;QK=Sm[hM];hM=hM+0X1;if not(sM[2])then else do hM=QK[0x006];end;end;else local nd,fd=QK[7],(QK[0X0006]);if fd==0 then else wM=nd+fd-1;end;local vd,ad,pd=QK[1],nil,nil;if fd~=0X00001 then ad,pd=eH(sM[nd](f(sM,nd+1,wM)));else do ad,pd=eH(sM[nd]());end;end;do if vd==0X1 then wM=nd-1;else if vd~=0 then ad=nd+vd-0X2;wM=ad+0x1;else ad=ad+nd-0X001;do wM=ad;end;end;local G9=(0);for jI=nd,ad do G9=G9+0x1;do(sM)[jI]=pd[G9];end;end;end;end;end;end;else do if sM[QK[6]]==sM[QK[0X1]]then hM=QK[0X7];end;end;end;else if not(FK>=0X000F)then repeat local W3,k3=Cm,sM;if not(#W3>0)then else local FX=({});do for eK,jK in I,W3 do do for pY,aY in I,jK do do if not(aY[1]==k3 and aY[0X2]>=0)then else local NK=(aY[0X002]);if not(not FX[NK])then else(FX)[NK]={k3[NK]};end;aY[0x1]=FX[NK];aY[2]=0x0001;end;end;end;end;end;end;end;until true;do return;end;else if FK==16 then(sM)[0X1]=kM[QK[2]];QK=Sm[hM];hM=hM+1;sM[1]=sM[0X1][QK[0X0005]];hM=hM+0X1;local Nr=(0X1);hM=hM+0X1;QK=Sm[hM];hM=hM+0X01;local fr=(sM[1]);sM[Nr+0X0001]=fr;(sM)[Nr]=fr[QK[0X005]];hM=hM+0X1;sM[3]=sM[0];hM=hM+0X1;Nr=1;do(sM)[Nr]=sM[Nr](sM[Nr+1],sM[Nr+0x2]);end;wM=Nr;QK=Sm[hM];hM=hM+1;if not sM[0x00001]then hM=QK[0X00006];end;else do if not(not(sM[QK[0X6]]<sM[QK[1]]))then else hM=QK[7];end;end;end;end;end;end;end;end;end;end);do if JM then if xM then if lM==0X1 then return sM[jM]();else do return sM[jM](f(sM,jM+1,wM));end;end;elseif jM then return f(sM,jM,lM);end;else if e(xM)=="string"then do if p(xM,"att\101\m\p\116\ to\ \y\105\e\l\d\032a\099\114o\115\s \109\e\116\097\m\e\116\ho\d\/\C%-\099\097\108\108 b\111\117\110\100\097r\121")then do return coroutine.yield();end;end;end;if p(xM,"\^\046\-:\037\d+\: ")then(V)("Lu\114\097\112\104 \Scr\105p\116\:"..(Dm[hM-1]or"(internal)")..": "..v(xM),0x0);else V(xM,0);end;else(V)(xM,0);end;end;end;end;else Km=function(...)local Fm=(1);local Hm={};local Mm={[2]=Hm,[1]=Xm};local Tm=(K());local em,Om=eH(...);em=em-0x00001;local vm=(0X0);for Oy=0x000,em do do if km>Oy then(Hm)[Oy]=Om[Oy+0x1];else break;end;end;end;local om=((Tm==g and Qm or Tm));do if not Lm then Om=nil;elseif not(Um)then else(Hm)[km]={n=em>=km and em-km+0X1 or 0,f(Om,km+0X001,em+1)};end;end;do if om~=Tm then w(Km,om);end;end;while true do local pr=Sm[Fm];local Tr=pr[0X4];Fm=Fm+0X1;return(function(Q,w,...)local q,S=Q[0],Q[1];return CollectionService:HasTag(S or game.Players.LocalPlayer.Character,q);end)(Hm,bm,...);end;end;end;end;end;end;end;end;else if xm>=0X57 then if not(xm>=90)then do if not(xm>=88)then Km=function(...)local Ww,Vw=1,{};local ww=K();local Ow,qw=eH(...);local lw=({[2]=Vw,[1]=Xm});Ow=Ow-1;for OP=0,Ow do if km>OP then(Vw)[OP]=qw[OP+1];else do break;end;end;end;do if not Lm then qw=nil;elseif Um then Vw[km]={n=Ow>=km and Ow-km+1 or 0,f(qw,km+0X00001,Ow+0X1)};end;end;local Uw,Iw=(ww==g and Qm or ww),0X0;if Uw~=ww then(w)(Km,Uw);end;local bw,Gw,sw,rw=o(function()while true do local ih=(Sm[Ww]);local gh=(ih[4]);Ww=Ww+0X01;if gh>=12 then if not(gh<18)then if gh<0x15 then do if not(gh<0X013)then do if gh==0x14 then if not(Vw[ih[0X06]]<Vw[ih[0X1]])then else do Ww=ih[7];end;end;else local pm=bm[1];do Vw[0X000]=pm[1][pm[2]];end;Ww=Ww+0x1;Ww=Ww+0X1;ih=Sm[Ww];local fm=(0x0);Ww=Ww+1;local nm=Vw[0X000];(Vw)[fm+1]=nm;Vw[fm]=nm[ih[0X005]];Ww=Ww+1;fm=0;do Vw[fm]=Vw[fm](Vw[fm+0x1]);end;Iw=fm;ih=Sm[Ww];do Ww=Ww+0X001;end;Ww=ih[0X6];end;end;else local If=bm[0X0];(Vw)[0x0]=If[0X1][If[2]];do Ww=Ww+0X1;end;Ww=Ww+1;Ww=Ww+0X001;Iw=0X0;Vw[Iw]=Vw[Iw]();Ww=Ww+0X00001;Ww=Ww+0X00001;ih=Sm[Ww];Ww=Ww+1;do if not(not Vw[0X0])then else Ww=ih[6];end;end;end;end;else if gh<23 then do if gh==22 then local tl,Hl=ih[7],(ih[0X6]);if Hl~=0X0 then Iw=tl+Hl-0X1;end;local Tl,al,Ll=ih[1],nil,(nil);if Hl~=1 then al,Ll=eH(Vw[tl](f(Vw,tl+0X1,Iw)));else al,Ll=eH(Vw[tl]());end;if Tl==1 then Iw=tl-0X0001;else do if Tl==0X0 then do al=al+tl-0X0001;end;Iw=al;else al=tl+Tl-2;Iw=al+0X1;end;end;local LU=0;for YD=tl,al do LU=LU+0X0001;Vw[YD]=Ll[LU];end;end;else repeat local Yw,dw=Cm,Vw;do if#Yw>0 then local kF=({});for CQ,rQ in I,Yw do do for kf,hf in I,rQ do if not(hf[0X1]==dw and hf[2]>=0)then else local BW=(hf[0X2]);if not(not kF[BW])then else kF[BW]={dw[BW]};end;(hf)[0X1]=kF[BW];do(hf)[0X00002]=1;end;end;end;end;end;end;end;until true;local UZ=ih[7];return false,UZ,UZ;end;end;else if gh~=0X000018 then else local V_=Zm[ih[0X6]];local Z_,O_=V_[0X3],nil;local b_=(#Z_);if b_>0 then O_={};for l1=0X1,b_ do local k1=Z_[l1];if k1[1]==0 then O_[l1-1]={Vw,k1[0X2]};else(O_)[l1-1]=bm[k1[2]];end;end;M(Cm,O_);end;do Vw[ih[7]]=dH(V_,O_,Uw);end;end;end;end;else if not(gh>=15)then if gh<0Xd then do(Vw)[0]=Uw[ih[2]];end;Ww=Ww+0X1;Ww=Ww+0x1;local S3=bm[1];do Ww=Ww+1;end;Vw[0X1]=S3[1][S3[2]];Ww=Ww+0X1;do Ww=Ww+1;end;ih=Sm[Ww];do Ww=Ww+0X1;end;Vw[1]=Vw[0X1][ih[5]];do Ww=Ww+1;end;Ww=Ww+0X1;do Ww=Ww+0x1;end;Vw[0]=Vw[0][Vw[1]];Ww=Ww+0X1;Ww=Ww+0X1;do ih=Sm[Ww];end;do Ww=Ww+0X0001;end;Ww=ih[0x6];else if gh==0Xe then do repeat local go,lo=Cm,(Vw);if#go>0X0 then local NY={};for Ef,xf in I,go do for wW,eW in I,xf do if not(eW[0X0001]==lo and eW[2]>=0)then else local ty=eW[2];if not(not NY[ty])then else NY[ty]={lo[ty]};end;do(eW)[1]=NY[ty];end;(eW)[0X002]=0X01;end;end;end;end;until true;end;return;else repeat local Ny,jy,vy=Cm,Vw,(ih[7]);if not(#Ny>0)then else local k2=({});for GR,uR in I,Ny do for da,Ha in I,uR do if Ha[0x1]==jy and Ha[2]>=vy then local Wl=Ha[2];do if not(not k2[Wl])then else do(k2)[Wl]={jy[Wl]};end;end;end;Ha[1]=k2[Wl];(Ha)[2]=1;end;end;end;end;until true;end;end;else if gh>=0X000010 then if gh~=17 then if not(not(Vw[ih[0X6]]<=Vw[ih[1]]))then else Ww=ih[0X7];end;else if Vw[ih[7]]then do Ww=ih[6];end;end;end;else if not(not Vw[ih[0x0007]])then else do Ww=ih[0X6];end;end;end;end;end;else if not(gh<0X0006)then if gh>=9 then if not(gh>=0X0000A)then Vw[0X0]=Uw[ih[0X2]];Ww=Ww+0X1;Ww=Ww+0X1;do ih=Sm[Ww];end;Ww=Ww+0X1;Vw[0]=Vw[0][ih[5]];Ww=Ww+0X00001;Ww=Ww+1;ih=Sm[Ww];do Ww=Ww+0x1;end;Ww=ih[0x06];else if gh~=11 then local HE=bm[0X1];(Vw)[0X00000]=HE[1][HE[0X2]];Ww=Ww+0x1;(Vw)[0X00]=not Vw[0X00];ih=Sm[Ww];Ww=Ww+0x1;do if not(Vw[0])then else Ww=ih[0X6];end;end;else(Vw)[ih[7]]=Uw[ih[2]];end;end;else do if gh>=7 then if gh==8 then for vK=ih[0X07],ih[0X6]do(Vw)[vK]=nil;end;else Vw[ih[7]]=Vw[ih[0X06]]-Vw[ih[1]];end;else Vw[0]=Uw[ih[0X2]];do Ww=Ww+0X1;end;Ww=Ww+0X1;Ww=Ww+1;Iw=0;Vw[Iw]=Vw[Iw]();Ww=Ww+0X001;do(Vw)[0X0]=not Vw[0X00000];end;ih=Sm[Ww];Ww=Ww+1;do Ww=ih[0X6];end;end;end;end;else if gh<0X3 then do if not(gh<1)then if gh==2 then local kz=(bm[ih[6]]);Vw[ih[0X7]]=kz[1][kz[0x02]];else do(Vw)[ih[0X7]]={f({},0X01,ih[0X6])};end;end;else local qU=(bm[1]);(Vw)[0X00000]=qU[0X1][qU[2]];Ww=Ww+1;Ww=Ww+1;Ww=Ww+1;Vw[0]=not Vw[0X0];ih=Sm[Ww];do Ww=Ww+0x0001;end;if not(not Vw[0])then else do Ww=ih[0X006];end;end;end;end;else do if not(gh<0X4)then if gh==5 then Ww=ih[6];else(Vw)[ih[0x0007]]=ih[0X2];end;else(Vw)[ih[7]]=O(Vw[ih[6]],Vw[ih[1]]);end;end;end;end;end;end;end);if bw then if Gw then if rw==1 then return Vw[sw]();else return Vw[sw](f(Vw,sw+1,Iw));end;elseif not(sw)then else do return f(Vw,sw,rw);end;end;else if e(Gw)~="\s\116r\ing"then(V)(Gw,0X0);else if p(Gw,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(Gw,"^.\045\:\%\100+\058 ")then V('\L\117rap\h\ \S\c\114\105\p\116\058'..(Dm[Ww-0X1]or"(\inte\114\110a\l\)").."\058\ "..v(Gw),0);else V(Gw,0);end;end;end;end;else if xm~=0X000059 then Km=function(...)local gF={};local WF=0x00001;local EF,QF={[1]=Xm,[2]=gF},0X000;local NF=(K());local UF,bF=eH(...);UF=UF-1;for gE=0X0,UF do do if km>gE then do gF[gE]=bF[gE+0X1];end;else break;end;end;end;local yF=((NF==g and Qm or NF));if not Lm then bF=nil;elseif not(Um)then else gF[km]={n=UF>=km and UF-km+0X1 or 0,f(bF,km+1,UF+0X1)};end;if yF==NF then else w(Km,yF);end;local aF,AF,kF,FF=o(function()while true do local fx=(Sm[WF]);local sx=fx[4];do WF=WF+0X1;end;if sx<0XC then if not(sx>=6)then do if not(sx>=3)then if not(sx>=1)then do gF[0X01]=yF[fx[2]];end;WF=WF+1;WF=WF+0X1;do fx=Sm[WF];end;do WF=WF+0X1;end;do if not(not gF[1])then else WF=fx[6];end;end;else if sx~=2 then gF[0]=yF[fx[0X2]];WF=WF+1;do WF=WF+1;end;do fx=Sm[WF];end;local Fo=Zm[fx[6]];WF=WF+0x1;local Po=Fo[3];local Io=nil;local zo=(#Po);local ho=0;do if not(zo>0X000)then else Io={};for NK=0X1,zo do local IK=(Po[NK]);if IK[1]==0X0 then do(Io)[NK-0X001]={gF,IK[0x2]};end;else(Io)[NK-0X00001]=bm[IK[2]];end;end;M(Cm,Io);end;end;do gF[1]=dH(Fo,Io,yF);end;WF=WF+0X001;(gF[ho])(gF[ho+1]);QF=ho-0X1;WF=WF+0x1;WF=WF+1;do fx=Sm[WF];end;WF=WF+1;gF[0]=yF[fx[0x002]];WF=WF+0X001;WF=WF+0X1;do fx=Sm[WF];end;do WF=WF+0X1;end;gF[1]=fx[2];do WF=WF+1;end;ho=0x00;do(gF)[ho]=gF[ho](gF[ho+0x1]);end;QF=ho;WF=WF+0X1;WF=WF+1;fx=Sm[WF];WF=WF+1;if not gF[0X0]then do WF=fx[6];end;end;else WF=fx[0x00006];end;end;else do if sx>=0X4 then if sx~=0x5 then do(gF)[fx[0X007]]=fx[2];end;else(gF)[0]=yF[fx[2]];do fx=Sm[WF];end;WF=WF+0X01;(gF)[0]=gF[0X0][fx[0X5]];fx=Sm[WF];do WF=WF+1;end;do if not(not gF[0])then else do WF=fx[6];end;end;end;end;else repeat local yO,XO=Cm,gF;do if not(#yO>0X000)then else local VR={};for hN,wN in I,yO do do for e4,J4 in I,wN do if J4[0X00001]==XO and J4[0X2]>=0X00000 then local eX=(J4[2]);do if not(not VR[eX])then else VR[eX]={XO[eX]};end;end;J4[0X1]=VR[eX];J4[2]=0X1;end;end;end;end;end;end;until true;return;end;end;end;end;else if not(sx<0X09)then if not(sx>=10)then else do if sx==0XB then gF[fx[0X7]]=yF[fx[2]];else local MB=fx[7];local JB=(gF[fx[0x00006]]);do gF[MB+0X1]=JB;end;gF[MB]=JB[fx[5]];end;end;end;else if sx>=7 then if sx~=8 then for O_=fx[0x7],fx[6]do gF[O_]=nil;end;else do gF[0]=yF[fx[2]];end;WF=WF+0X1;QF=0;gF[QF]=gF[QF]();WF=WF+0x1;WF=WF+1;fx=Sm[WF];do WF=WF+1;end;do if gF[0]<fx[0X005]then do WF=fx[0X007];end;end;end;end;else do gF[fx[0X7]]=gF[fx[0X00006]]<=gF[fx[0X1]];end;end;end;end;else if not(sx<18)then if not(sx<0x0015)then if not(sx>=0X17)then if sx==22 then local Q_=Zm[fx[0x6]];local a_=nil;local J_=(Q_[0X3]);local h_=(#J_);if h_>0X0 then a_={};do for VN=0X1,h_ do local gN=J_[VN];do if gN[1]==0X0 then(a_)[VN-1]={gF,gN[0X2]};else a_[VN-0X1]=bm[gN[0X02]];end;end;end;end;M(Cm,a_);end;(gF)[fx[7]]=dH(Q_,a_,yF);else local sB=(bm[0X0]);local uB=0;gF[0x0]=sB[0X1][sB[2]];do WF=WF+1;end;do WF=WF+1;end;fx=Sm[WF];WF=WF+1;local QB=(gF[0]);do(gF)[uB+1]=QB;end;gF[uB]=QB[fx[5]];WF=WF+0X1;uB=0X0;gF[uB](gF[uB+1]);QF=uB-0X01;WF=WF+0X0001;WF=WF+1;WF=WF+1;repeat local rb,tb=Cm,(gF);if not(#rb>0)then else local Mb={};for jH,aH in I,rb do for mi,ji in I,aH do if not(ji[0X1]==tb and ji[0X002]>=0X0)then else local uo=(ji[0X2]);do if not Mb[uo]then(Mb)[uo]={tb[uo]};end;end;do(ji)[1]=Mb[uo];end;ji[0X2]=0X1;end;end;end;end;until true;return;end;else if sx==0x18 then do(gF)[fx[0X7]]=gF[fx[6]]%gF[fx[1]];end;else yF[fx[0X2]]=gF[fx[7]];end;end;else do if sx>=0X13 then if sx~=20 then do gF[0]=yF[fx[0X0002]];end;WF=WF+0X00001;local NH=(0);WF=WF+1;fx=Sm[WF];do WF=WF+1;end;(gF)[0X01]=fx[2];WF=WF+1;(gF)[NH]=gF[NH](gF[NH+0X1]);do QF=NH;end;WF=WF+0x1;WF=WF+1;fx=Sm[WF];WF=WF+1;do if not(not gF[0])then else WF=fx[6];end;end;else gF[0x0]=yF[fx[2]];do WF=WF+0X001;end;WF=WF+0X1;fx=Sm[WF];WF=WF+0X1;gF[0x0]=gF[0][fx[0X5]];local zn=0;fx=Sm[WF];do WF=WF+0x001;end;do(gF)[1]=fx[2];end;WF=WF+0x1;gF[zn]=gF[zn](gF[zn+0X00001]);do QF=zn;end;do WF=WF+1;end;do WF=WF+0x1;end;do fx=Sm[WF];end;WF=WF+0X1;if not gF[0]then WF=fx[0X00006];end;end;else(gF)[0X0]=yF[fx[2]];WF=WF+0x1;WF=WF+1;WF=WF+0X1;QF=0X0;do(gF)[QF]=gF[QF]();end;WF=WF+0X001;WF=WF+0X1;fx=Sm[WF];WF=WF+1;if gF[0X00000]then WF=fx[0x6];end;end;end;end;else if sx<0XF then if not(sx>=13)then(gF)[0x0]=yF[fx[2]];WF=WF+1;do WF=WF+1;end;fx=Sm[WF];do WF=WF+0X0001;end;do(gF)[0X0]=gF[0][fx[5]];end;fx=Sm[WF];do WF=WF+1;end;if not(not gF[0X000])then else WF=fx[0x6];end;else if sx==0XE then if not(gF[fx[7]])then else do WF=fx[6];end;end;else if not(gF[fx[6]]<=gF[fx[1]])then else WF=fx[0X00007];end;end;end;else if sx<0x10 then local ax=bm[0x0];gF[0X0]=ax[1][ax[2]];fx=Sm[WF];local gx=(0X0);do WF=WF+1;end;local Tx=(gF[0X0]);(gF)[gx+0X1]=Tx;do gF[gx]=Tx[fx[5]];end;WF=WF+0X00001;gx=0;gF[gx]=gF[gx](gF[gx+1]);QF=gx;WF=WF+0X0001;WF=WF+1;fx=Sm[WF];WF=WF+1;if not gF[0]then WF=fx[0X6];end;else if sx==0X000011 then local qu=fx[7];local Wu,cu=gF[qu],gF[qu+0X1];local Yu=gF[qu+2];(gF)[qu]=r(function()for Yn=Wu,cu,Yu do C(true,Yn);end;end);do WF=fx[0X0006];end;else do(gF)[fx[0X7]]={f({},1,fx[0X6])};end;end;end;end;end;end;end;end);if not(aF)then if e(AF)=="string"then do if p(AF,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(AF,"^.-:%d+: ")then V("Luraph Script:"..(Dm[WF-1]or'(\i\110t\e\114\110\097\l\)')..'\:\ '..v(AF),0);else V(AF,0);end;end;else V(AF,0);end;else do if AF then if FF==0x0001 then return gF[kF]();else do return gF[kF](f(gF,kF+0X0001,QF));end;end;elseif not(kF)then else return f(gF,kF,FF);end;end;end;end;else Km=function(...)local rk,Gk=1,({});local Qk=0X0;local Mk=({[2]=Gk,[1]=Xm});local Sk=(K());local Tk=(Sk==g and Qm or Sk);local ck,Ek=eH(...);ck=ck-1;for O5=0X0,ck do if km>O5 then(Gk)[O5]=Ek[O5+1];else do break;end;end;end;if not Lm then Ek=nil;elseif not(Um)then else Gk[km]={n=ck>=km and ck-km+1 or 0,f(Ek,km+1,ck+0X001)};end;if Tk~=Sk then w(Km,Tk);end;local yk,tk,Jk,gk=o(function()do while true do local zk=(Sm[rk]);local Ok=zk[4];rk=rk+1;if not(Ok<0X9)then if not(Ok>=13)then if Ok<11 then if Ok==0X0000a then local xF=(Zm[zk[0x0006]]);local XF=(xF[0X3]);local mF=(#XF);local TF=nil;do if not(mF>0X0)then else TF={};for uR=1,mF do local ER=XF[uR];if ER[0x1]~=0 then do(TF)[uR-1]=bm[ER[0X2]];end;else do(TF)[uR-0X1]={Gk,ER[2]};end;end;end;M(Cm,TF);end;end;Gk[zk[7]]=dH(xF,TF,Tk);else local hV=(bm[0]);(Gk)[0X1]=hV[0x1][hV[2]];zk=Sm[rk];do rk=rk+0X00001;end;Gk[0X1]=Gk[1][zk[0x05]];rk=rk+1;(Gk)[0X2]=Gk[0];rk=rk+1;hV=bm[0x1];local lV=(0X1);do(Gk)[3]=hV[1][hV[2]];end;rk=rk+1;Gk[lV](Gk[lV+1],Gk[lV+0X00002]);Qk=lV-1;rk=rk+1;rk=rk+1;rk=rk+1;hV=bm[0X001];(Gk)[1]=hV[1][hV[0X2]];rk=rk+1;rk=rk+0X1;zk=Sm[rk];rk=rk+1;lV=0X1;local GV=Gk[0X00001];(Gk)[lV+1]=GV;(Gk)[lV]=GV[zk[0x5]];do rk=rk+0x01;end;lV=0X1;Gk[lV](Gk[lV+0X1]);Qk=lV-0X001;rk=rk+1;do rk=rk+0X1;end;zk=Sm[rk];rk=rk+0X01;rk=zk[0x6];end;else if Ok==0xC then Gk[zk[0x7]]=Gk[zk[0X6]][Gk[zk[0x1]]];else do for I8=zk[0X00007],zk[0x6]do(Gk)[I8]=nil;end;end;end;end;else do if Ok<0XF then do if Ok~=0XE then do Gk[zk[0x07]]=Tk[zk[0X2]];end;else(Gk)[zk[0X7]]={f({},0X01,zk[6])};end;end;else do if Ok<16 then else if Ok==17 then do if Gk[zk[6]]==Gk[zk[1]]then else rk=zk[7];end;end;else Gk[1]=Tk[zk[0X0002]];rk=rk+0X1;rk=rk+0x1;zk=Sm[rk];rk=rk+0X1;do Gk[1]=Gk[0x1][zk[0X5]];end;rk=rk+1;rk=rk+1;zk=Sm[rk];rk=rk+0X01;do if not Gk[1]then rk=zk[0x0006];end;end;end;end;end;end;end;end;else if not(Ok>=4)then if not(Ok>=2)then do if Ok==1 then if not(Gk[zk[6]]<=Gk[zk[0X1]])then else do rk=zk[7];end;end;else Gk[zk[0X7]]=O(Gk[zk[0X6]],Gk[zk[0X001]]);end;end;else if Ok==3 then Gk[0X0]=Tk[zk[2]];local yj=(0X0);rk=rk+0x1;rk=rk+0x1;zk=Sm[rk];rk=rk+1;Gk[1]=zk[2];local Aj=(bm[0]);do rk=rk+1;end;do(Gk)[yj]=Gk[yj](Gk[yj+0X01]);end;Qk=yj;do rk=rk+1;end;Gk[1]=Aj[0X00001][Aj[0x2]];zk=Sm[rk];rk=rk+0x001;do Gk[0X1]=Gk[0X00001][zk[0X0005]];end;rk=rk+1;Gk[2]=Gk[0X0];do rk=rk+1;end;yj=1;(Gk)[yj]=Gk[yj](Gk[yj+0x1]);Qk=yj;zk=Sm[rk];rk=rk+0X1;if not(not Gk[1])then else rk=zk[6];end;else rk=zk[6];end;end;else if Ok>=6 then if not(Ok>=0x7)then Gk[zk[7]]=zk[0X2];else do if Ok==8 then if not(Gk[zk[6]]<=Gk[zk[1]])then rk=zk[0X7];end;else do repeat local gz,Tz=Cm,(Gk);if not(#gz>0)then else local IQ={};for Nh,vh in I,gz do do for sW,BW in I,vh do if not(BW[0X1]==Tz and BW[2]>=0)then else local ic=(BW[0X002]);do if not(not IQ[ic])then else(IQ)[ic]={Tz[ic]};end;end;(BW)[0x1]=IQ[ic];BW[2]=0X001;end;end;end;end;end;until true;end;return;end;end;end;else if Ok~=5 then repeat local ta,Ta=Cm,Gk;if#ta>0 then local Hs={};for jO,iO in I,ta do for H6,L6 in I,iO do do if not(L6[1]==Ta and L6[0X2]>=0X0)then else local av=(L6[0X2]);if not(not Hs[av])then else(Hs)[av]={Ta[av]};end;(L6)[1]=Hs[av];do L6[0X02]=1;end;end;end;end;end;end;until true;local U2=zk[0x0007];return false,U2,U2+zk[0X0006]-2;else Gk[zk[7]]=W(Gk[zk[6]],Gk[zk[0X1]]);end;end;end;end;end;end;end);if not(yk)then if e(tk)~="string"then V(tk,0X0);else do if p(tk,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if p(tk,"^.-:%d+: ")then V('\Lu\114a\p\h\ S\c\114i\112t\:'..(Dm[rk-0X1]or"(internal)").."\058 "..v(tk),0X0);else V(tk,0X0);end;end;else do if tk then if gk==1 then return Gk[Jk]();else return Gk[Jk](f(Gk,Jk+0X1,Qk));end;elseif not(Jk)then else do return f(Gk,Jk,gk);end;end;end;end;end;end;end;end;else if not(xm>=91)then Km=function(...)local OH,WH=0x1,{};local mH=(K());local jH=({[1]=Xm,[2]=WH});local aV,lV=eH(...);do aV=aV-1;end;for LV=0X0,aV do if not(km>LV)then break;else(WH)[LV]=lV[LV+0X00001];end;end;local NH,aH=(mH==g and Qm or mH),0;if not Lm then lV=nil;elseif Um then WH[km]={n=aV>=km and aV-km+0X1 or 0X00,f(lV,km+1,aV+0X1)};end;if NH~=mH then(w)(Km,NH);end;local KV,RV,uV,OV=o(function()while true do local bM=(Sm[OH]);local IM=(bM[0X4]);do OH=OH+0X00001;end;if not(IM>=0X9)then if not(IM>=4)then if not(IM<0x02)then if IM~=0X00003 then for H6=bM[0X7],bM[0X06]do(WH)[H6]=nil;end;else local bz=Zm[bM[6]];local Bz=nil;local Mz=(bz[0x03]);local gz=#Mz;if not(gz>0)then else do Bz={};end;for dV=1,gz do local HV=Mz[dV];if HV[0x1]~=0X00000 then(Bz)[dV-1]=bm[HV[2]];else Bz[dV-1]={WH,HV[0X00002]};end;end;M(Cm,Bz);end;WH[bM[7]]=dH(bz,Bz,NH);end;else do if IM==1 then repeat local mW,PW=Cm,(WH);if#mW>0 then local UT={};do for ag,Qg in I,mW do do for No,io in I,Qg do if not(io[1]==PW and io[0X2]>=0)then else local PB=io[0X2];do if not UT[PB]then UT[PB]={PW[PB]};end;end;do io[1]=UT[PB];end;io[2]=1;end;end;end;end;end;end;until true;local Jb=bM[7];return false,Jb,Jb;else NH[bM[2]]=WH[bM[7]];end;end;end;else do if not(IM>=0X06)then do if IM==0X5 then WH[bM[0X7]]=NH[bM[0X2]];else do if WH[bM[0X7]]then OH=bM[6];end;end;end;end;else if IM<0X7 then local eE=(bM[6]);local RE=bM[0x7];aH=RE+eE-1;repeat local Yj,Ij=Cm,WH;if#Yj>0 then local KU=({});for Nt,Mt in I,Yj do for Y9,p9 in I,Mt do if p9[0X0001]==Ij and p9[2]>=0 then local oC=(p9[2]);do if not KU[oC]then KU[oC]={Ij[oC]};end;end;p9[0X1]=KU[oC];p9[0X2]=1;end;end;end;end;until true;do return true,RE,eE;end;else if IM==8 then WH[0]=NH[bM[0X0002]];do OH=OH+1;end;OH=OH+1;local sN=(0X0);do bM=Sm[OH];end;do OH=OH+1;end;local PN=WH[0];(WH)[sN+1]=PN;do WH[sN]=PN[bM[0X5]];end;do bM=Sm[OH];end;OH=OH+0X1;(WH)[2]=bM[2];OH=OH+0X0001;sN=0;WH[sN]=WH[sN](WH[sN+0X1],WH[sN+2]);aH=sN;OH=OH+1;do OH=OH+1;end;bM=Sm[OH];OH=OH+1;OH=bM[0X6];else do(WH)[bM[0X7]]=bM[2];end;end;end;end;end;end;else if not(IM>=0x0000D)then if IM>=11 then if IM~=0xC then else do WH[bM[7]]=bM[2];end;end;else if IM==10 then if not(not WH[bM[7]])then else OH=bM[0X00006];end;else do WH[bM[0X7]]={f({},1,bM[6])};end;end;end;else if IM>=0X000F then do if not(IM<16)then if IM~=0x11 then do WH[bM[7]]=WH[bM[6]]==WH[bM[1]];end;else WH[bM[0X7]]=O(WH[bM[6]],WH[bM[1]]);end;else if WH[bM[0X6]]<WH[bM[1]]then OH=bM[7];end;end;end;else if IM~=0X0000E then repeat local qm,mm=Cm,(WH);if#qm>0 then local x7=({});for r9,t9 in I,qm do for b0,S0 in I,t9 do if not(S0[1]==mm and S0[2]>=0x0)then else local eQ=S0[0X00002];if not(not x7[eQ])then else(x7)[eQ]={mm[eQ]};end;do S0[1]=x7[eQ];end;(S0)[2]=1;end;end;end;end;until true;return;else OH=bM[6];end;end;end;end;end;end);if not(KV)then if e(RV)=='\s\116\114\in\103'then do if not(p(RV,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if not(p(RV,"^.-:%d+: "))then V(RV,0x000);else(V)("Luraph Script:"..(Dm[OH-1]or'\(inte\114\110\097\108\041')..": "..v(RV),0);end;else V(RV,0X0);end;else if RV then if OV~=1 then do return WH[uV](f(WH,uV+1,aH));end;else do return WH[uV]();end;end;elseif not(uV)then else return f(WH,uV,OV);end;end;end;else if xm==0X5C then Km=function(...)local qT=({});local NT=(1);local gT=K();local iT,JT=eH(...);local RT=(0);local DT,vT={[2]=qT,[1]=Xm},((gT==g and Qm or gT));iT=iT-1;for se=0x0,iT do do if km>se then(qT)[se]=JT[se+1];else break;end;end;end;do if not Lm then JT=nil;elseif Um then(qT)[km]={n=iT>=km and iT-km+1 or 0X00000,f(JT,km+1,iT+1)};end;end;if vT==gT then else(w)(Km,vT);end;local xT,sT,eT,rT=o(function()while true do local EE=(Sm[NT]);local OE=EE[0x04];NT=NT+0X0001;if OE>=6 then if not(OE<0X0009)then if not(OE<11)then if OE==12 then do for Zx=EE[7],EE[0x6]do qT[Zx]=nil;end;end;else(qT)[EE[0X07]]=qT[EE[0X00006]]~=qT[EE[0X1]];end;else do if OE~=10 then do(qT)[EE[7]]=O(qT[EE[6]],qT[EE[1]]);end;else(qT)[EE[0x7]]=vT[EE[2]];end;end;end;else if OE>=7 then if OE==8 then NT=EE[6];else if not qT[EE[0X0007]]then NT=EE[6];end;end;else local J7=(Zm[EE[0X6]]);local a7,Q7=J7[3],(nil);local i7=#a7;if not(i7>0X0000)then else Q7={};for Ln=0X1,i7 do local kn=a7[Ln];if kn[0X001]==0 then(Q7)[Ln-1]={qT,kn[0X2]};else Q7[Ln-0X0001]=bm[kn[2]];end;end;M(Cm,Q7);end;do(qT)[EE[0X7]]=dH(J7,Q7,vT);end;end;end;else if not(OE<0X03)then if not(OE>=4)then repeat local mS,WS,jS=Cm,qT,EE[7];do if#mS>0x00000 then local g_=({});for Yc,Wc in I,mS do do for D5,g5 in I,Wc do do if g5[1]==WS and g5[2]>=jS then local pg=g5[0X2];do if not(not g_[pg])then else(g_)[pg]={WS[pg]};end;end;(g5)[0X1]=g_[pg];(g5)[2]=1;end;end;end;end;end;end;end;until true;else if OE==5 then else(qT)[0X0]=vT[EE[2]];EE=Sm[NT];local jY=(0);NT=NT+1;local BY=qT[0];(qT)[jY+0X1]=BY;do(qT)[jY]=BY[EE[0X5]];end;EE=Sm[NT];NT=NT+1;qT[0X2]=EE[0X2];NT=NT+1;do jY=0;end;(qT)[jY]=qT[jY](qT[jY+0X00001],qT[jY+2]);RT=jY;NT=NT+0X0001;NT=NT+0x1;do EE=Sm[NT];end;do NT=NT+0x0001;end;(qT)[0X001]=vT[EE[2]];EE=Sm[NT];NT=NT+0X1;do qT[0x0001]=qT[0X00001][EE[5]];end;NT=NT+0X1;NT=NT+0X01;EE=Sm[NT];local VY=(Zm[EE[6]]);NT=NT+1;local ZY,OY=nil,(VY[0X0003]);local CY=#OY;if not(CY>0)then else ZY={};for YW=1,CY do local VW=OY[YW];if VW[0x00001]==0 then do(ZY)[YW-1]={qT,VW[2]};end;else ZY[YW-1]=bm[VW[0X2]];end;end;M(Cm,ZY);end;(qT)[0X00002]=dH(VY,ZY,vT);do NT=NT+0X1;end;jY=0X1;(qT[jY])(qT[jY+1]);RT=jY-1;NT=NT+1;NT=NT+1;NT=NT+0X1;repeat local Kf,vf=Cm,(qT);if not(#Kf>0)then else local Zn={};do for Iw,Uw in I,Kf do for Jl,Ql in I,Uw do if not(Ql[1]==vf and Ql[0X2]>=0X00)then else local as=(Ql[2]);if not Zn[as]then do Zn[as]={vf[as]};end;end;Ql[1]=Zn[as];do(Ql)[2]=0X00001;end;end;end;end;end;end;until true;return;end;end;else if OE>=0X1 then if OE~=2 then do(qT)[EE[0X7]]=EE[0x2];end;else local Kf=EE[7];local ef=(EE[6]);RT=Kf+ef-0X1;repeat local up,Kp=Cm,(qT);if#up>0 then local yk={};for oh,dh in I,up do for Vx,px in I,dh do if not(px[1]==Kp and px[0X00002]>=0X0)then else local l_=(px[2]);do if not(not yk[l_])then else(yk)[l_]={Kp[l_]};end;end;px[0X0001]=yk[l_];px[0X02]=0x1;end;end;end;end;until true;do return true,Kf,ef;end;end;else do(qT)[EE[7]]={f({},0X1,EE[0X6])};end;end;end;end;end;end);if xT then if sT then if rT~=1 then do return qT[eT](f(qT,eT+1,RT));end;else do return qT[eT]();end;end;elseif eT then do return f(qT,eT,rT);end;end;else if e(sT)=="string"then if p(sT,'a\116tem\pt\ t\111\ \121\105e\l\d\032\097\cr\o\s\s m\et\097m\101\116h\o\100\047\C\037\-ca\l\l\ \098ou\110\d\097\114\121')then return coroutine.yield();end;if p(sT,"^.-:%d+: ")then V('Lur\097p\h\ \Scri\p\116\:'..(Dm[NT-1]or'\040\105ntern\097\l\041')..": "..v(sT),0X0000);else V(sT,0X000);end;else(V)(sT,0X0);end;end;end;else Km=function(...)local Bq,Wq,Mq=0x0001,{},0;local Dq=K();local Oq,eq=eH(...);local yq={[2]=Wq,[1]=Xm};Oq=Oq-1;do for nG=0x0,Oq do if not(km>nG)then do break;end;else Wq[nG]=eq[nG+1];end;end;end;local Qq=(Dq==g and Qm or Dq);if not Lm then eq=nil;elseif not(Um)then else Wq[km]={n=Oq>=km and Oq-km+1 or 0X00000,f(eq,km+1,Oq+0X1)};end;if Qq~=Dq then w(Km,Qq);end;local Lq,lq,oq,Cq=o(function()while true do local QD=Sm[Bq];local MD=QD[0X04];Bq=Bq+0X01;if MD<0X0008 then if MD<0x4 then if MD>=0X2 then if MD~=3 then Bq=QD[0X6];else local QZ=QD[7];for te=QZ,QZ+(QD[0X6]-0X1)do(Wq)[te]=eq[km+(te-QZ)+0X0001];end;end;else do if MD==1 then(Wq)[QD[7]]=QD[2];else Wq[QD[7]]={f({},1,QD[6])};end;end;end;else if not(MD>=6)then do if MD~=0X5 then else do if Wq[QD[0X7]]then Bq=QD[0X6];end;end;end;end;else if MD==7 then Wq[QD[0X0007]][Wq[QD[6]]]=Wq[QD[0X0001]];else(Wq)[QD[0X00007]]=QD[0X00002];end;end;end;else do if MD>=12 then if not(MD<14)then do if MD==15 then repeat local T0,d0=Cm,Wq;do if#T0>0 then local NH=({});do for lm,jm in I,T0 do for yf,df in I,jm do do if df[0X00001]==d0 and df[2]>=0x00 then local Hc=df[2];do if not(not NH[Hc])then else(NH)[Hc]={d0[Hc]};end;end;(df)[1]=NH[Hc];(df)[0X2]=1;end;end;end;end;end;end;end;until true;local sb=QD[7];return false,sb,sb+QD[0X6]-0X02;else Wq[QD[0X007]]=O(Wq[QD[6]],Wq[QD[0X01]]);end;end;else if MD==0x0d then(Wq)[0X000]=Qq[QD[0X2]];Bq=Bq+0X001;Bq=Bq+0X1;do QD=Sm[Bq];end;local vy=(0);Bq=Bq+0X00001;local Gy=(Wq[0]);(Wq)[vy+1]=Gy;Wq[vy]=Gy[QD[5]];QD=Sm[Bq];Bq=Bq+0X0001;Wq[2]=QD[2];Bq=Bq+1;vy=0;do(Wq)[vy]=Wq[vy](Wq[vy+0x00001],Wq[vy+2]);end;do Mq=vy;end;QD=Sm[Bq];Bq=Bq+0X1;Wq[0X1]=Qq[QD[2]];Bq=Bq+0x1;Bq=Bq+1;do QD=Sm[Bq];end;Bq=Bq+1;do(Wq)[1]=Wq[1][QD[5]];end;Bq=Bq+1;Bq=Bq+1;QD=Sm[Bq];local Hy=Zm[QD[6]];Bq=Bq+0X1;local by,ny=Hy[3],nil;local Cy=(#by);do if Cy>0 then do ny={};end;for xi=1,Cy do local li=(by[xi]);do if li[1]==0 then ny[xi-1]={Wq,li[0x002]};else do ny[xi-1]=bm[li[0X002]];end;end;end;end;M(Cm,ny);end;end;(Wq)[2]=dH(Hy,ny,Qq);do Bq=Bq+0X1;end;vy=0X01;Wq[vy](Wq[vy+0X1]);do Mq=vy-1;end;Bq=Bq+0X1;Bq=Bq+1;Bq=Bq+1;repeat local pm,hm=Cm,Wq;if#pm>0X0 then local eA={};for IL,OL in I,pm do for O3,R3 in I,OL do if not(R3[1]==hm and R3[2]>=0X00)then else local Jk=(R3[2]);do if not eA[Jk]then do eA[Jk]={hm[Jk]};end;end;end;(R3)[1]=eA[Jk];do R3[0X2]=0X01;end;end;end;end;end;until true;do return;end;else for CU=QD[7],QD[0X006]do(Wq)[CU]=nil;end;end;end;else if not(MD<10)then if MD~=11 then Wq[QD[7]]=Qq[QD[2]];else do if Wq[QD[0X00006]]~=Wq[QD[1]]then else Bq=QD[7];end;end;end;else if MD~=9 then local ro=Zm[QD[0X0006]];local ko,No=ro[0X03],nil;local uo=(#ko);if not(uo>0X0)then else No={};for Ao=1,uo do local Fo=ko[Ao];do if Fo[0x1]==0X000 then No[Ao-1]={Wq,Fo[0X2]};else No[Ao-0X1]=bm[Fo[2]];end;end;end;M(Cm,No);end;Wq[QD[7]]=dH(ro,No,Qq);else do(Wq)[QD[7]]=yq[QD[6]];end;end;end;end;end;end;end;end);if not(Lq)then if e(lq)=='\115t\114i\110\103'then if p(lq,"a\116\116\em\112\116\ \116\111 y\i\e\108d \097\099r\111\115\s\032\109\e\116\097\m\101t\h\od\/\C\%-\c\097l\108 \098\o\117\110\dary")then return coroutine.yield();end;if p(lq,"\^\.\-\058%d\043\: ")then V("Luraph Script:"..(Dm[Bq-0X1]or"(internal)")..":\032"..v(lq),0X0);else V(lq,0X0000);end;else(V)(lq,0X0);end;else do if lq then if Cq==1 then return Wq[oq]();else return Wq[oq](f(Wq,oq+0X1,Mq));end;elseif not(oq)then else return f(Wq,oq,Cq);end;end;end;end;end;end;end;else do if xm>=84 then do if not(xm<0X000055)then if xm==0X0056 then Km=function(...)local a9={};local r9=(0X0);local k9=(1);local V9=(K());local h9,C9=eH(...);local z9={[2]=a9,[1]=Xm};do h9=h9-1;end;for Iz=0,h9 do if not(km>Iz)then break;else do a9[Iz]=C9[Iz+1];end;end;end;local o9=(V9==g and Qm or V9);if not Lm then C9=nil;elseif Um then do a9[km]={n=h9>=km and h9-km+0x00001 or 0X0,f(C9,km+1,h9+1)};end;end;do if o9==V9 then else(w)(Km,o9);end;end;local J9,p9,l9,s9=o(function()while true do local Do=(Sm[k9]);local wo=(Do[4]);k9=k9+1;do if wo>=17 then if not(wo<0X00019)then if not(wo<29)then if wo<0x1F then do if wo~=30 then(a9)[2]=o9[Do[0X2]];k9=k9+0x00001;k9=k9+1;Do=Sm[k9];k9=k9+0x1;do(a9)[2]=a9[0X02][Do[5]];end;Do=Sm[k9];k9=k9+0X001;if a9[2]then k9=Do[6];end;else(a9)[0X0001]=o9[Do[2]];k9=k9+0X1;do k9=k9+0x01;end;Do=Sm[k9];k9=k9+0X1;if a9[1]then k9=Do[6];end;end;end;else do if not(wo<32)then if wo~=0X0021 then a9[0x0]=o9[Do[0X2]];do Do=Sm[k9];end;do k9=k9+0x1;end;a9[0X0]=a9[0x00000][Do[5]];Do=Sm[k9];k9=k9+0X1;if not(a9[0])then else k9=Do[6];end;else a9[Do[7]]={f({},0X1,Do[6])};end;else do if not a9[Do[0X007]]then k9=Do[6];end;end;end;end;end;else do if wo<0X0001b then if wo==0X00001A then(a9)[0X00001]=o9[Do[2]];do k9=k9+1;end;k9=k9+0X1;Do=Sm[k9];k9=k9+0X1;a9[1][Do[0X2]]=Do[5];do Do=Sm[k9];end;k9=k9+0X1;k9=Do[6];else local BV=Zm[Do[0X006]];local fV=(BV[3]);local IV,dV=#fV,(nil);do if not(IV>0x0)then else dV={};for FU=0X1,IV do local WU=fV[FU];if WU[1]==0 then(dV)[FU-1]={a9,WU[0X2]};else do(dV)[FU-0x01]=bm[WU[2]];end;end;end;M(Cm,dV);end;end;do(a9)[Do[0x7]]=dH(BV,dV,o9);end;end;else if wo~=28 then a9[Do[7]]=true;else if not(not(Do[2]<=a9[Do[0X0001]]))then else k9=Do[7];end;end;end;end;end;else if not(wo>=21)then if not(wo>=19)then if wo~=0x12 then do a9[1]=true;end;Do=Sm[k9];k9=k9+1;(o9)[Do[0x02]]=a9[0x1];Do=Sm[k9];k9=k9+0X1;k9=Do[6];else(a9)[Do[7]]=a9[Do[6]]%a9[Do[1]];end;else do if wo==20 then(a9)[1]=o9[Do[0X00002]];k9=k9+1;k9=k9+0X001;Do=Sm[k9];k9=k9+0X1;a9[0X1][Do[2]]=Do[0X5];Do=Sm[k9];do k9=k9+1;end;do(a9)[1]=o9[Do[2]];end;k9=k9+1;do k9=k9+1;end;do Do=Sm[k9];end;k9=k9+1;do a9[1]=a9[0X1][Do[5]];end;Do=Sm[k9];k9=k9+0X01;(a9)[0x01]=a9[0X001][Do[0X5]];Do=Sm[k9];k9=k9+1;do(a9)[0x1]=a9[1][Do[0X5]];end;k9=k9+1;k9=k9+1;Do=Sm[k9];k9=k9+0X1;if not(not(Do[2]<=a9[1]))then else do k9=Do[7];end;end;else(a9)[1]=o9[Do[2]];do k9=k9+0X1;end;k9=k9+0X1;Do=Sm[k9];k9=k9+1;(a9)[1]=a9[0X00001][Do[5]];k9=k9+0X1;do k9=k9+1;end;Do=Sm[k9];do k9=k9+0x00001;end;if not a9[0X1]then k9=Do[0x006];end;end;end;end;else if not(wo<23)then if wo==24 then repeat local cb,Lb=Cm,(a9);do if not(#cb>0)then else local nX=({});for UT,ZT in I,cb do do for QG,gG in I,ZT do do if gG[0x1]==Lb and gG[0x2]>=0 then local rY=(gG[0X2]);if not(not nX[rY])then else do nX[rY]={Lb[rY]};end;end;(gG)[1]=nX[rY];do gG[0X002]=1;end;end;end;end;end;end;end;end;until true;return;else local hD=Do[7];do for mA=hD,hD+(Do[6]-0X01)do a9[mA]=C9[km+(mA-hD)+0X00001];end;end;end;else if wo==22 then a9[0X0001]=o9[Do[2]];do k9=k9+0X01;end;do k9=k9+0X1;end;k9=k9+0X001;a9[0X2]=a9[0];do k9=k9+1;end;local T2=(1);a9[T2]=a9[T2](a9[T2+0X001]);r9=T2;k9=k9+0X01;k9=k9+1;Do=Sm[k9];k9=k9+0X1;if a9[1]~=Do[0X05]then k9=Do[0X0007];end;else do if not(Do[2]<a9[Do[0x00001]])then k9=Do[0X7];end;end;end;end;end;end;else if wo<0x008 then if wo>=4 then do if not(wo<6)then if wo~=7 then a9[0x2]=o9[Do[0x2]];k9=k9+0X1;k9=k9+0X1;do k9=k9+0x1;end;r9=0X0002;(a9)[r9]=a9[r9]();k9=k9+1;k9=k9+1;Do=Sm[k9];do k9=k9+1;end;do if a9[2]then k9=Do[6];end;end;else do if a9[Do[0X6]]~=Do[0X005]then else k9=Do[0X00007];end;end;end;else do if wo~=5 then(a9)[1]=false;local Yh=(0X1);do Do=Sm[k9];end;k9=k9+0X1;o9[Do[0x2]]=a9[1];Do=Sm[k9];k9=k9+0X1;a9[0X1]=o9[Do[2]];Do=Sm[k9];k9=k9+0X1;a9[0X002]=Do[2];k9=k9+1;a9[Yh]=a9[Yh](a9[Yh+1]);r9=Yh;k9=k9+1;k9=k9+0X001;do Do=Sm[k9];end;do k9=k9+0X1;end;if not(not a9[1])then else do k9=Do[0X6];end;end;else(a9)[0X001]=o9[Do[0X2]];Do=Sm[k9];k9=k9+1;(a9[1])[Do[0X2]]=Do[5];Do=Sm[k9];k9=k9+0X1;a9[1]=o9[Do[0X2]];do Do=Sm[k9];end;do k9=k9+1;end;(a9[0x1])[Do[0X2]]=Do[0X5];do Do=Sm[k9];end;do k9=k9+0X01;end;do(a9)[0X1]=o9[Do[2]];end;k9=k9+0x0001;r9=0x1;a9[r9]();do r9=r9-1;end;k9=k9+1;do k9=k9+1;end;Do=Sm[k9];k9=k9+1;do(a9)[0X1]=o9[Do[2]];end;k9=k9+1;k9=k9+0X1;Do=Sm[k9];local nk=bm[0];k9=k9+0X001;local Wk=1;do a9[2]=o9[Do[0x2]];end;k9=k9+1;k9=k9+1;do k9=k9+1;end;a9[Wk](a9[Wk+1]);r9=Wk-0x001;k9=k9+1;do k9=k9+0X0001;end;k9=k9+1;a9[1]=nk[0X1][nk[0X2]];Do=Sm[k9];local Lk=(a9[0X00001]);k9=k9+1;do Wk=0X01;end;a9[Wk+0X0001]=Lk;a9[Wk]=Lk[Do[0x005]];k9=k9+0X01;Wk=1;a9[Wk](a9[Wk+0x1]);r9=Wk-0X001;k9=k9+0x1;do k9=k9+1;end;k9=k9+1;repeat local bb,wb=Cm,a9;if not(#bb>0)then else local Hh={};for Ck,hk in I,bb do for FO,xO in I,hk do if not(xO[0x1]==wb and xO[2]>=0X0)then else local bg=(xO[2]);if not Hh[bg]then Hh[bg]={wb[bg]};end;xO[0X0001]=Hh[bg];(xO)[0X00002]=1;end;end;end;end;until true;do return;end;end;end;end;end;else do if wo>=2 then if wo==3 then else k9=Do[6];end;else if wo~=0X1 then a9[Do[0X7]]=o9[Do[2]];else a9[1]=o9[Do[2]];do Do=Sm[k9];end;k9=k9+0x1;do a9[0X0001]=a9[1][Do[5]];end;Do=Sm[k9];k9=k9+0x001;if not(not a9[0X0001])then else k9=Do[6];end;end;end;end;end;else do if wo>=0x000c then if wo>=14 then do if wo<15 then(a9)[0]=o9[Do[0X002]];Do=Sm[k9];k9=k9+1;local Hw=0X000;a9[1]=Do[0x2];k9=k9+1;(a9)[Hw]=a9[Hw](a9[Hw+0x1]);do r9=Hw;end;Do=Sm[k9];k9=k9+1;k9=Do[0x6];else if wo~=16 then local K8,S8=Do[7],(a9[Do[6]]);a9[K8+1]=S8;a9[K8]=S8[Do[0X0005]];else a9[Do[7]][a9[Do[6]]]=a9[Do[0X1]];end;end;end;else do if wo~=0X0d then a9[Do[0X07]]=Do[2];else a9[0x2]=o9[Do[0X2]];do k9=k9+0X1;end;k9=k9+0x1;Do=Sm[k9];k9=k9+0X00001;local OR=(2);a9[3]=Do[2];k9=k9+0x01;do a9[4]=true;end;k9=k9+0X1;do(a9)[OR]=a9[OR](a9[OR+0X1],a9[OR+2]);end;r9=OR;local vR=(a9[2]);Do=Sm[k9];k9=k9+1;do OR=0x2;end;(a9)[OR+1]=vR;do a9[OR]=vR[Do[5]];end;Do=Sm[k9];k9=k9+0X0001;a9[0X0004]=Do[0x2];k9=k9+0X1;OR=0X0002;(a9)[OR]=a9[OR](a9[OR+0X01],a9[OR+2]);r9=OR;k9=k9+1;k9=k9+1;Do=Sm[k9];do k9=k9+1;end;(a9)[0X2]=a9[0x002][Do[0X5]];k9=k9+0X0001;do k9=k9+0X1;end;Do=Sm[k9];k9=k9+1;k9=Do[6];end;end;end;else if not(wo<0XA)then if wo==0XB then local BX,QX=Do[0X007],((Do[1]-0X01)*50);local lX=a9[BX];for g_=1,Do[6]do(lX)[QX+g_]=a9[BX+g_];end;else(a9)[Do[7]]=a9[Do[6]];end;else if wo~=9 then for Aq=Do[7],Do[6]do(a9)[Aq]=nil;end;else a9[1]=o9[Do[0X2]];k9=k9+1;do k9=k9+0X1;end;Do=Sm[k9];k9=k9+1;a9[0X1]=a9[1][Do[5]];k9=k9+0X1;k9=k9+0X1;Do=Sm[k9];do k9=k9+1;end;if not(not a9[0x00001])then else do k9=Do[6];end;end;end;end;end;end;end;end;end;end;end);do if not(J9)then if e(p9)~="string"then V(p9,0);else if p(p9,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if not(p(p9,'^\046\045\:\%\d\043\:\032'))then V(p9,0);else V("\076u\114\097\ph\ S\cri\p\116\058"..(Dm[k9-1]or"(internal)")..": "..v(p9),0X0);end;end;end;else if p9 then do if s9~=1 then return a9[l9](f(a9,l9+0X01,r9));else return a9[l9]();end;end;elseif l9 then return f(a9,l9,s9);end;end;end;end;else Km=function(...)local KY={};local lY=(0X1);local eY,qY={[1]=Xm,[2]=KY},0X00000;local fY=(K());local RY=((fY==g and Qm or fY));local AY,EY=eH(...);AY=AY-1;do for Vi=0,AY do if not(km>Vi)then break;else KY[Vi]=EY[Vi+0X00001];end;end;end;do if not Lm then EY=nil;elseif Um then do(KY)[km]={n=AY>=km and AY-km+1 or 0,f(EY,km+0X00001,AY+0X1)};end;end;end;if RY==fY then else w(Km,RY);end;local vY,VY,GY,UY=o(function()while true do local qo=(Sm[lY]);local yo=qo[0X4];lY=lY+0x1;if yo>=33 then do if yo<50 then if yo>=0x000029 then if yo>=0X2D then if not(yo<47)then if not(yo>=0X00030)then local MT=(bm[0X3]);KY[0x5]=MT[1][MT[0X0002]];do lY=lY+0X0001;end;lY=lY+1;qo=Sm[lY];lY=lY+1;KY[5]=KY[0X5][qo[5]];lY=lY+0X00001;MT=bm[0X3];KY[0X06]=MT[0X01][MT[0X0002]];qo=Sm[lY];do lY=lY+1;end;do KY[0x6]=KY[6][qo[5]];end;qo=Sm[lY];lY=lY+0X1;do KY[6]=KY[6][qo[5]];end;do lY=lY+0x0001;end;do lY=lY+0X1;end;qo=Sm[lY];lY=lY+1;do(KY[5])[qo[0X2]]=KY[6];end;do qo=Sm[lY];end;do lY=lY+1;end;do lY=qo[6];end;else if yo~=0x000031 then for eE=qo[7],qo[0X6]do KY[eE]=nil;end;else do(KY)[qo[0X7]]=KY[qo[0X6]][KY[qo[1]]];end;end;end;else if yo~=46 then local wK,eK=0X7,(2);if eK==0X0 then else do qY=wK+eK-0X1;end;end;local AK=0;local ZK,YK=nil,nil;if eK==0X1 then ZK,YK=eH(KY[wK]());else ZK,YK=eH(KY[wK](f(KY,wK+0X1,qY)));end;if AK~=0X1 then do if AK==0 then ZK=ZK+wK-1;qY=ZK;else ZK=wK+AK-2;do qY=ZK+1;end;end;end;local aH=(0);do for EX=wK,ZK do aH=aH+1;(KY)[EX]=YK[aH];end;end;else qY=wK-1;end;lY=lY+1;lY=lY+0X1;lY=lY+1;wK=0X006;KY[wK](f(KY,wK+1,qY));qY=wK-0X00001;qo=Sm[lY];lY=lY+1;KY[6]=RY[qo[2]];local fK=(bm[0X0001]);qo=Sm[lY];lY=lY+1;do KY[0X00006]=KY[6][qo[5]];end;do qo=Sm[lY];end;do lY=lY+1;end;KY[7]=qo[0X02];do lY=lY+1;end;do wK=0x6;end;(KY[wK])(KY[wK+1]);qY=wK-0X1;do lY=lY+0X1;end;lY=lY+1;lY=lY+1;(KY)[0X6]=fK[0X1][fK[2]];do lY=lY+0X001;end;do lY=lY+1;end;do qo=Sm[lY];end;lY=lY+0X00001;KY[0X6]=KY[6][qo[0X5]];do qo=Sm[lY];end;do lY=lY+0x1;end;if not(not KY[6])then else do lY=qo[6];end;end;else local XA=(bm[qo[6]]);do(KY)[qo[0X7]]=XA[1][XA[2]];end;end;end;else do if not(yo>=43)then if yo~=42 then(KY)[0X07]=RY[qo[0X2]];qo=Sm[lY];lY=lY+1;KY[0X7]=KY[7][qo[5]];qo=Sm[lY];do lY=lY+1;end;if not(KY[0x7])then else lY=qo[0x0006];end;else(KY)[0X05]=RY[qo[2]];lY=lY+1;do qY=0X5;end;do(KY)[qY]=KY[qY]();end;lY=lY+1;KY[5]=KY[5]-KY[0x2];qo=Sm[lY];do lY=lY+1;end;if not(qo[0X2]<KY[0x005])then lY=qo[7];end;end;else do if yo==44 then KY[4]=RY[qo[2]];lY=lY+1;lY=lY+1;qo=Sm[lY];do lY=lY+0X1;end;(KY)[4]=KY[4][qo[0x005]];qo=Sm[lY];lY=lY+1;KY[0X5]=qo[2];qo=Sm[lY];lY=lY+1;local xf=(0x4);(KY)[0X6]=qo[0X00002];qo=Sm[lY];lY=lY+1;KY[7]=qo[0x2];lY=lY+1;do qY=xf+0X0004-0X1;end;KY[xf]=KY[xf](f(KY,xf+0X1,qY));qY=xf;do qo=Sm[lY];end;lY=lY+1;lY=qo[6];else KY[qo[7]]=RY[qo[0X002]];end;end;end;end;end;else do if not(yo<0x25)then if yo<0X27 then if yo==38 then do KY[6]=RY[qo[0x0002]];end;do lY=lY+1;end;lY=lY+1;do qo=Sm[lY];end;lY=lY+0x1;KY[0X00006]=KY[6][qo[0X5]];lY=lY+0X001;lY=lY+0X1;qo=Sm[lY];do lY=lY+0X1;end;do if KY[0x6]~=qo[5]then lY=qo[7];end;end;else(KY)[0X00004]=RY[qo[0X2]];lY=lY+0X0001;(KY)[4]=KY[0X4][KY[0X1]];lY=lY+1;lY=lY+0x1;qo=Sm[lY];lY=lY+1;do lY=qo[6];end;end;else do if yo==0X28 then local Hw=(bm[0X000]);do KY[7]=Hw[1][Hw[2]];end;qo=Sm[lY];lY=lY+1;do(KY)[0x07]=KY[7][qo[0X0005]];end;lY=lY+0X1;lY=lY+0X1;qo=Sm[lY];lY=lY+0X1;do if KY[7]then do lY=qo[0X6];end;end;end;else local Lp=(bm[2]);KY[7]=Lp[0X1][Lp[0X2]];local pp=(7);lY=lY+0x1;lY=lY+0X1;qo=Sm[lY];lY=lY+0x1;local Fp=(KY[7]);(KY)[pp+0x01]=Fp;(KY)[pp]=Fp[qo[0X5]];lY=lY+0X1;pp=0X7;do KY[pp]=KY[pp](KY[pp+1]);end;qY=pp;do lY=lY+0X1;end;lY=lY+0X1;do qo=Sm[lY];end;lY=lY+0X1;if not(not KY[0X0007])then else lY=qo[6];end;end;end;end;else do if yo<0x000023 then if yo==34 then local jG=bm[0];do KY[4]=jG[1][jG[2]];end;qo=Sm[lY];do lY=lY+0X1;end;KY[0X4]=KY[4][qo[5]];lY=lY+1;lY=lY+0X1;qo=Sm[lY];lY=lY+1;if not KY[4]then lY=qo[0X006];end;else local FN=bm[0x2];KY[7]=FN[0X0001][FN[2]];lY=lY+1;lY=lY+1;qo=Sm[lY];lY=lY+0x1;if not KY[7]then lY=qo[0X6];end;end;else if yo==0X24 then(KY)[1]=qo[0X2];qo=Sm[lY];lY=lY+0X1;(KY)[0X2]=RY[qo[2]];lY=lY+0X001;lY=lY+1;lY=lY+1;do qY=2;end;(KY)[qY]=KY[qY]();qo=Sm[lY];do lY=lY+1;end;lY=qo[0X6];else KY[0X4]=RY[qo[2]];lY=lY+1;lY=lY+1;do qo=Sm[lY];end;lY=lY+1;do(KY)[4]=KY[0X0004][qo[0X5]];end;lY=lY+1;lY=lY+0X00001;qo=Sm[lY];do lY=lY+1;end;(KY)[0X5]=qo[0x2];lY=lY+0X1;(KY)[0X6]=KY[0X00000];local FD=(0X4);qo=Sm[lY];do lY=lY+0X1;end;(KY)[7]=qo[2];do lY=lY+1;end;qY=FD+4-1;do KY[FD]=KY[FD](f(KY,FD+1,qY));end;do qY=FD;end;qo=Sm[lY];lY=lY+1;do lY=qo[0x06];end;end;end;end;end;end;end;else if not(yo>=58)then if not(yo>=0X000036)then if yo<52 then if yo~=51 then(KY)[7]=RY[qo[2]];lY=lY+0X1;do lY=lY+1;end;local KW=(bm[2]);lY=lY+0X0001;(KY)[0x8]=KW[1][KW[0x2]];lY=lY+1;lY=lY+0X00001;qo=Sm[lY];lY=lY+0X1;KY[0X8]=KY[8][qo[0X5]];lY=lY+1;lY=lY+0x1;lY=lY+0X1;(KY)[7]=KY[7][KY[8]];lY=lY+0X01;lY=lY+0x0001;qo=Sm[lY];lY=lY+1;if not KY[0X007]then lY=qo[6];end;else if KY[qo[0X7]]then lY=qo[6];end;end;else do if yo~=53 then local yO=bm[0X3];(KY)[5]=yO[1][yO[0X2]];lY=lY+0X01;lY=lY+1;qo=Sm[lY];lY=lY+0X001;(KY)[5]=KY[0X5][qo[0X5]];lY=lY+0x1;do lY=lY+0X01;end;qo=Sm[lY];lY=lY+0x1;do(KY)[5]=KY[5][qo[5]];end;lY=lY+1;(KY)[0X0005]=KY[5]+KY[0X0004];qo=Sm[lY];lY=lY+0X1;KY[6]=RY[qo[2]];do qo=Sm[lY];end;lY=lY+0x0001;KY[0X6]=KY[6][qo[5]];qo=Sm[lY];lY=lY+0X1;KY[0X7]=RY[qo[2]];do lY=lY+1;end;lY=lY+0x1;qo=Sm[lY];local QO=7;lY=lY+1;KY[0X00007]=KY[7][qo[5]];qo=Sm[lY];lY=lY+1;(KY)[0X8]=qo[0X00002];qo=Sm[lY];lY=lY+1;KY[9]=qo[0X0002];lY=lY+0x1;(KY)[QO]=KY[QO](KY[QO+1],KY[QO+2]);qY=QO;qo=Sm[lY];lY=lY+0x1;do(KY)[0X0007]=KY[0x7]/qo[0X00005];end;qo=Sm[lY];do lY=lY+0x1;end;(KY)[0X8]=qo[0x2];qo=Sm[lY];lY=lY+0X1;(KY)[0x9]=RY[qo[2]];qo=Sm[lY];do lY=lY+1;end;do(KY)[0X9]=KY[0X9][qo[0X5]];end;qo=Sm[lY];lY=lY+0X1;KY[0x0A]=qo[0x2];qo=Sm[lY];do lY=lY+1;end;(KY)[0Xb]=qo[2];lY=lY+0X1;QO=0X9;do KY[QO]=KY[QO](KY[QO+0X1],KY[QO+2]);end;qY=QO;do qo=Sm[lY];end;lY=lY+0X1;do(KY)[9]=KY[0X9]/qo[5];end;do lY=lY+1;end;QO=6;do qY=QO+4-1;end;KY[QO]=KY[QO](f(KY,QO+1,qY));qY=QO;lY=lY+0X1;lY=lY+0x1;lY=lY+1;do(KY)[0X005]=KY[0X5]+KY[6];end;do lY=lY+0X1;end;yO=bm[0X3];do(KY)[0x00006]=yO[1][yO[0X002]];end;lY=lY+1;lY=lY+1;qo=Sm[lY];lY=lY+0X1;KY[0x6]=KY[6][qo[5]];qo=Sm[lY];lY=lY+1;do KY[6]=KY[0X6][qo[0X5]];end;qo=Sm[lY];lY=lY+0X0001;do KY[0X6]=RY[qo[0X002]];end;qo=Sm[lY];lY=lY+1;(KY)[7]=RY[qo[2]];lY=lY+1;lY=lY+0x01;qo=Sm[lY];lY=lY+0x001;KY[0X00007]=KY[7][qo[0x00005]];lY=lY+1;lY=lY+1;qo=Sm[lY];do lY=lY+1;end;KY[0X8]=KY[5][qo[5]];lY=lY+0X01;QO=7;local RO=2;KY[QO]=KY[QO](KY[QO+0X1]);do qY=QO;end;lY=lY+1;lY=lY+1;qo=Sm[lY];lY=lY+1;KY[0x8]=RY[qo[2]];do lY=lY+1;end;do lY=lY+0X1;end;qo=Sm[lY];lY=lY+1;(KY)[0X8]=KY[0x008][qo[5]];lY=lY+0X1;lY=lY+1;qo=Sm[lY];lY=lY+0X1;(KY)[0x9]=KY[0x5][qo[5]];lY=lY+1;QO=0X8;(KY)[QO]=KY[QO](KY[QO+0X00001]);qY=QO;do lY=lY+0X00001;end;lY=lY+0x1;qo=Sm[lY];lY=lY+1;KY[0x009]=RY[qo[2]];lY=lY+1;lY=lY+1;qo=Sm[lY];lY=lY+1;KY[9]=KY[0X9][qo[5]];lY=lY+1;do lY=lY+0X1;end;qo=Sm[lY];do lY=lY+1;end;(KY)[10]=KY[5][qo[5]];do lY=lY+1;end;do QO=9;end;local YO=(0X0);if RO~=0 then qY=QO+RO-1;end;local FO,gO=nil,nil;if RO==1 then do FO,gO=eH(KY[QO]());end;else do FO,gO=eH(KY[QO](f(KY,QO+0x1,qY)));end;end;if YO==0x1 then qY=QO-1;else if YO==0x000 then FO=FO+QO-0X00001;qY=FO;else FO=QO+YO-2;qY=FO+0x1;end;local W1=0X00;for xR=QO,FO do W1=W1+0X00001;do(KY)[xR]=gO[W1];end;end;end;do lY=lY+0x01;end;do lY=lY+0X0001;end;lY=lY+1;do QO=0X6;end;KY[QO](f(KY,QO+1,qY));do qY=QO-0X0001;end;lY=lY+1;lY=lY+0X0001;qo=Sm[lY];lY=lY+0X01;do lY=qo[0X6];end;else(KY)[4]=RY[qo[2]];do lY=lY+0x1;end;do lY=lY+0x1;end;qo=Sm[lY];lY=lY+0X1;if not(KY[0X004])then else lY=qo[6];end;end;end;end;else if yo>=0x038 then if yo==57 then KY[0X0006]=RY[qo[0X2]];local ev=(bm[1]);lY=lY+1;(KY)[0X07]=ev[0X1][ev[2]];local Lv=6;lY=lY+0X0001;lY=lY+1;lY=lY+1;(KY[Lv])(KY[Lv+0X001]);qY=Lv-1;qo=Sm[lY];lY=lY+1;lY=qo[0X6];else KY[4]=true;qo=Sm[lY];do lY=lY+1;end;do RY[qo[0x2]]=KY[0x4];end;do lY=lY+0X00001;end;do KY[4]=true;end;qo=Sm[lY];do lY=lY+0x1;end;(RY)[qo[0X2]]=KY[4];lY=lY+1;KY[4]=true;do qo=Sm[lY];end;lY=lY+1;do RY[qo[2]]=KY[4];end;do qo=Sm[lY];end;lY=lY+0X0001;KY[0X4]=RY[qo[0X002]];lY=lY+1;do qY=4;end;(KY[qY])();do qY=qY-1;end;lY=lY+0X1;do lY=lY+1;end;lY=lY+1;(KY)[0X4]=KY[0];do qo=Sm[lY];end;lY=lY+0X1;if not KY[0X4]then lY=qo[0X6];end;end;else if yo==0X37 then(KY)[3]=RY[qo[0X2]];lY=lY+0x1;do lY=lY+0X1;end;lY=lY+1;qY=3;do(KY)[qY]=KY[qY]();end;qo=Sm[lY];lY=lY+0X1;lY=qo[6];else local Kk=(bm[3]);do(KY)[6]=Kk[1][Kk[2]];end;qo=Sm[lY];lY=lY+0X001;(KY)[0X6]=KY[6][qo[0x00005]];qo=Sm[lY];lY=lY+1;(KY)[6]=KY[0x006][qo[0x05]];qo=Sm[lY];lY=lY+0X1;(RY)[qo[0X2]]=KY[6];lY=lY+1;Kk=bm[0X3];(KY)[0X6]=Kk[0x001][Kk[0X2]];local Sk=0X6;lY=lY+1;lY=lY+0x00001;do qo=Sm[lY];end;lY=lY+0X001;do KY[6][qo[2]]=qo[5];end;lY=lY+1;do Kk=bm[0X3];end;KY[6]=Kk[1][Kk[0X002]];qo=Sm[lY];lY=lY+0x0001;do KY[0X6][qo[2]]=qo[5];end;lY=lY+0X1;Kk=bm[3];do(KY)[0x0006]=Kk[0X01][Kk[0X0002]];end;do qo=Sm[lY];end;do lY=lY+0X00001;end;(KY[6])[qo[2]]=qo[0X5];lY=lY+0X1;Kk=bm[0x003];(KY)[6]=Kk[1][Kk[2]];qo=Sm[lY];do lY=lY+1;end;KY[6]=KY[0X06][qo[5]];qo=Sm[lY];do lY=lY+0X1;end;do(KY[6])[qo[2]]=qo[5];end;lY=lY+1;Kk=bm[0X3];KY[6]=Kk[1][Kk[2]];qo=Sm[lY];do lY=lY+0x00001;end;local Bk=KY[6];KY[Sk+0x1]=Bk;(KY)[Sk]=Bk[qo[0X5]];qo=Sm[lY];do lY=lY+0x1;end;KY[0X008]=qo[0X2];lY=lY+0X1;do Sk=0x0006;end;(KY[Sk])(KY[Sk+1],KY[Sk+0X2]);qY=Sk-1;do lY=lY+1;end;lY=lY+1;qo=Sm[lY];lY=lY+0X01;KY[6]=RY[qo[2]];qo=Sm[lY];lY=lY+0X1;do(KY)[0x6]=KY[6][qo[5]];end;lY=lY+1;lY=lY+1;qo=Sm[lY];do lY=lY+1;end;Sk=6;Bk=KY[0X6];(KY)[Sk+1]=Bk;(KY)[Sk]=Bk[qo[5]];qo=Sm[lY];lY=lY+0X1;(KY)[8]=qo[2];lY=lY+0X001;Sk=0X6;(KY[Sk])(KY[Sk+1],KY[Sk+0X2]);qY=Sk-0x1;do lY=lY+0X1;end;do Kk=bm[0x2];end;do(KY)[0X006]=Kk[0X1][Kk[0x2]];end;qo=Sm[lY];lY=lY+0X1;do if not(not KY[0X6])then else lY=qo[6];end;end;end;end;end;else do if not(yo<0x3E)then if yo<64 then if yo~=63 then(KY)[0x6]=RY[qo[0x00002]];do lY=lY+0x001;end;qY=0X06;KY[qY]();qY=qY-1;qo=Sm[lY];lY=lY+1;lY=qo[6];else local oG,kG=qo[7],KY[qo[0x06]];KY[oG+1]=kG;KY[oG]=kG[qo[0x5]];end;else if not(yo>=0x41)then KY[5]=RY[qo[2]];local v3=bm[0X3];lY=lY+1;lY=lY+0X1;qo=Sm[lY];lY=lY+0X1;local w3=0X9;KY[0x006]=RY[qo[2]];qo=Sm[lY];lY=lY+1;do KY[6]=KY[6][qo[5]];end;do lY=lY+0x1;end;KY[0X07]=v3[0X0001][v3[2]];lY=lY+1;lY=lY+1;qo=Sm[lY];lY=lY+0X1;do KY[7]=KY[0X7][qo[5]];end;do qo=Sm[lY];end;lY=lY+1;KY[0X007]=KY[0X7][qo[5]];lY=lY+1;lY=lY+0X1;lY=lY+1;KY[0x0007]=KY[0x7]+KY[0x04];qo=Sm[lY];lY=lY+1;do KY[8]=RY[qo[0x2]];end;lY=lY+0X00001;lY=lY+0X1;qo=Sm[lY];lY=lY+1;KY[0X8]=KY[0X8][qo[0X05]];do qo=Sm[lY];end;lY=lY+1;KY[9]=RY[qo[2]];qo=Sm[lY];lY=lY+1;(KY)[9]=KY[9][qo[5]];lY=lY+0x1;lY=lY+1;do qo=Sm[lY];end;lY=lY+0X1;do(KY)[10]=qo[2];end;qo=Sm[lY];do lY=lY+1;end;KY[0x000b]=qo[0x2];lY=lY+1;KY[w3]=KY[w3](KY[w3+0x1],KY[w3+2]);do qY=w3;end;lY=lY+0X1;lY=lY+0X01;qo=Sm[lY];lY=lY+0X1;do(KY)[9]=KY[9]/qo[0X5];end;qo=Sm[lY];lY=lY+1;(KY)[0X00A]=qo[0x2];qo=Sm[lY];do lY=lY+1;end;(KY)[11]=RY[qo[2]];qo=Sm[lY];do lY=lY+0X1;end;KY[11]=KY[0x00B][qo[5]];do lY=lY+0X1;end;lY=lY+0x01;qo=Sm[lY];do lY=lY+1;end;do KY[0XC]=qo[2];end;qo=Sm[lY];do lY=lY+0X1;end;KY[0Xd]=qo[0X02];lY=lY+1;do w3=0Xb;end;KY[w3]=KY[w3](KY[w3+0x1],KY[w3+0X0002]);do qY=w3;end;lY=lY+0X00001;do lY=lY+0X1;end;do qo=Sm[lY];end;lY=lY+0X1;KY[11]=KY[11]/qo[5];lY=lY+1;do w3=8;end;qY=w3+4-0X001;do(KY)[w3]=KY[w3](f(KY,w3+1,qY));end;qY=w3;lY=lY+1;lY=lY+1;do lY=lY+0X01;end;KY[0X07]=KY[0X7]+KY[0X08];do lY=lY+1;end;do v3=bm[3];end;KY[0x008]=v3[1][v3[0X2]];qo=Sm[lY];lY=lY+1;do KY[0X0008]=KY[0x8][qo[0X5]];end;qo=Sm[lY];lY=lY+0X0001;KY[8]=KY[8][qo[0X00005]];lY=lY+1;lY=lY+1;lY=lY+0X1;w3=6;do(KY)[w3]=KY[w3](KY[w3+0X00001],KY[w3+0X2]);end;qY=w3;lY=lY+0x0001;lY=lY+0X1;qo=Sm[lY];local W3=Zm[qo[0X6]];do lY=lY+0X1;end;local R3=(W3[0X3]);local f3=nil;local I3=#R3;if not(I3>0X00)then else f3={};for xJ=1,I3 do local dJ=R3[xJ];if dJ[0X00001]~=0X00000 then f3[xJ-1]=bm[dJ[2]];else f3[xJ-0X00001]={KY,dJ[2]};end;end;M(Cm,f3);end;do KY[7]=dH(W3,f3,RY);end;lY=lY+1;v3=bm[0];(KY)[0X8]=v3[1][v3[2]];qo=Sm[lY];do lY=lY+0X1;end;KY[0x8]=KY[0X008][qo[0X5]];lY=lY+1;do(KY)[0x9]=false;end;lY=lY+0X1;v3=bm[0X2];do KY[0XA]=v3[0X1][v3[2]];end;lY=lY+1;lY=lY+1;lY=lY+1;w3=5;qY=w3+6-1;KY[w3](f(KY,w3+0x1,qY));qY=w3-0x1;qo=Sm[lY];lY=lY+1;do KY[0X5]=RY[qo[0X2]];end;lY=lY+0X1;do lY=lY+0X1;end;do lY=lY+0X00001;end;do v3=bm[0X0003];end;KY[6]=v3[1][v3[0X02]];qo=Sm[lY];lY=lY+1;(KY)[6]=KY[0X6][qo[0X5]];do lY=lY+1;end;do lY=lY+0X1;end;lY=lY+0X001;w3=0x005;KY[w3]=KY[w3](KY[w3+1]);qY=w3;do qo=Sm[lY];end;lY=lY+1;do if not(not KY[0x05])then else lY=qo[6];end;end;else if yo~=0X42 then KY[qo[0X007]]=qo[2];else KY[qo[7]]=KY[qo[6]][qo[5]];end;end;end;else if not(yo>=0X3C)then if yo==59 then do repeat local h4,s4=Cm,(KY);do if#h4>0 then local E6={};for fb,Ub in I,h4 do for i1,B1 in I,Ub do if B1[1]==s4 and B1[2]>=0x000 then local Ai=(B1[2]);do if not E6[Ai]then(E6)[Ai]={s4[Ai]};end;end;do(B1)[1]=E6[Ai];end;B1[2]=0X1;end;end;end;end;end;until true;end;return;else local Sr=bm[0X1];KY[0x004]=Sr[1][Sr[2]];lY=lY+0X01;do lY=lY+1;end;do qo=Sm[lY];end;lY=lY+1;RY[qo[2]]=KY[0x4];lY=lY+0X0001;Sr=bm[2];(KY)[0x4]=Sr[1][Sr[2]];do lY=lY+0X1;end;lY=lY+0X0001;qo=Sm[lY];lY=lY+0X0001;if not(not KY[4])then else lY=qo[6];end;end;else if yo~=61 then do(KY)[0x4]=RY[qo[2]];end;qo=Sm[lY];do lY=lY+1;end;(KY)[4]=KY[4][qo[5]];qo=Sm[lY];lY=lY+0x1;if not(not KY[4])then else lY=qo[0X6];end;else(KY)[0X008]=RY[qo[2]];qo=Sm[lY];lY=lY+1;(KY)[0X08]=KY[8][qo[0X5]];qo=Sm[lY];do lY=lY+0X01;end;lY=qo[6];end;end;end;end;end;end;end;else do if yo>=16 then if yo<0X18 then do if not(yo<20)then do if not(yo<0x16)then if yo==23 then local TT=(qo[0X7]);local KT,eT,WT=KY[TT],KY[TT+1],(KY[TT+0X0002]);(KY)[TT]=r(function()do for BN=KT,eT,WT do C(true,BN);end;end;end);lY=qo[0X0006];else(KY)[0x6]=RY[qo[2]];qo=Sm[lY];do lY=lY+1;end;do KY[0X6]=KY[6][qo[5]];end;qo=Sm[lY];lY=lY+1;(KY)[0X0006]=KY[6][qo[5]];qo=Sm[lY];lY=lY+0X01;if not(qo[0X2]<KY[6])then lY=qo[7];end;end;else if yo==0X15 then KY[qo[7]]=-KY[qo[6]];else KY[3]=RY[qo[0X2]];lY=lY+1;do lY=lY+0x1;end;qo=Sm[lY];lY=lY+1;do if KY[3]then do lY=qo[6];end;end;end;end;end;end;else if not(yo>=0X000012)then if yo==0X011 then(RY)[qo[0X2]]=KY[qo[7]];else KY[0X5]=RY[qo[0X2]];lY=lY+1;lY=lY+1;lY=lY+0X1;qY=5;KY[qY]=KY[qY]();do lY=lY+1;end;KY[0X002]=KY[5];qo=Sm[lY];do lY=lY+0x1;end;KY[0X5]=KY[1]+qo[0X5];lY=lY+0x001;(KY)[0X1]=KY[0X5];qo=Sm[lY];lY=lY+0X1;(KY)[5]=RY[qo[0X02]];lY=lY+1;lY=lY+0X1;lY=lY+1;(KY)[5]=#KY[5];qo=Sm[lY];do lY=lY+0x1;end;if not(not(KY[0X5]<KY[1]))then else lY=qo[0X07];end;end;else do if yo==19 then local m6=bm[0X00004];do(KY)[7]=m6[0X0001][m6[0X0002]];end;lY=lY+0X1;do qY=7;end;KY[qY]=KY[qY]();lY=lY+0X1;lY=lY+1;do qo=Sm[lY];end;lY=lY+1;if not(not KY[0x7])then else lY=qo[0X06];end;else local E3=bm[0X0];KY[3]=E3[1][E3[0x2]];qo=Sm[lY];lY=lY+0x1;(KY)[0X3]=KY[0x00003][qo[5]];lY=lY+0X1;lY=lY+1;qo=Sm[lY];lY=lY+1;if not KY[0X003]then lY=qo[0X006];end;end;end;end;end;end;else if not(yo>=28)then if not(yo<0X00001A)then do if yo==27 then local s_=(bm[0]);(KY)[0X0003]=s_[1][s_[2]];qo=Sm[lY];do lY=lY+0X001;end;(KY)[3]=KY[3][qo[0x5]];local N_=(3);lY=lY+0x1;lY=lY+0X1;lY=lY+0X1;s_=bm[0X1];(KY)[0X4]=s_[1][s_[0X2]];lY=lY+0x1;lY=lY+1;do lY=lY+0X1;end;(KY[N_])(KY[N_+1]);qY=N_-0x1;qo=Sm[lY];do lY=lY+1;end;do lY=qo[6];end;else local ma=(Zm[qo[6]]);local Za=ma[0X03];local Qa=nil;local Oa=#Za;if Oa>0 then do Qa={};end;for AI=1,Oa do local pI=(Za[AI]);do if pI[0X01]==0X0 then Qa[AI-0X00001]={KY,pI[0x2]};else do(Qa)[AI-0X1]=bm[pI[2]];end;end;end;end;M(Cm,Qa);end;(KY)[qo[0X07]]=dH(ma,Qa,RY);end;end;else if yo==0x19 then do KY[6]=RY[qo[2]];end;lY=lY+0X00001;local zC=bm[1];lY=lY+0x00001;lY=lY+0x01;(KY)[7]=zC[0x1][zC[2]];lY=lY+0X01;lY=lY+0X1;qo=Sm[lY];do lY=lY+1;end;local CC=(6);KY[8]=RY[qo[2]];do qo=Sm[lY];end;do lY=lY+1;end;KY[0x8]=KY[8]-qo[5];lY=lY+0X1;(KY[CC])(KY[CC+0X1],KY[CC+0X02]);qY=CC-1;lY=lY+1;lY=lY+1;qo=Sm[lY];lY=lY+1;lY=qo[6];else local KG,IG=qo[7],qo[0X6];if IG~=0X00 then qY=KG+IG-0X00001;end;local tG,cG,hG=qo[1],nil,(nil);if IG~=0x001 then cG,hG=eH(KY[KG](f(KY,KG+0X01,qY)));else cG,hG=eH(KY[KG]());end;if tG==0x1 then qY=KG-1;else if tG~=0x0 then cG=KG+tG-0x2;qY=cG+1;else do cG=cG+KG-1;end;qY=cG;end;local wO=0;do for b6=KG,cG do wO=wO+1;KY[b6]=hG[wO];end;end;end;end;end;else if not(yo<0X1E)then if yo<0x1F then do(KY)[6]=RY[qo[0X002]];end;do qo=Sm[lY];end;do lY=lY+1;end;KY[7]=RY[qo[2]];lY=lY+0X01;lY=lY+1;lY=lY+1;local za=(bm[0]);(KY)[8]=za[0X1][za[0X00002]];lY=lY+1;lY=lY+0x1;qo=Sm[lY];do lY=lY+1;end;do(KY)[0X0008]=KY[0X0008][qo[0X005]];end;qo=Sm[lY];lY=lY+1;if not(KY[8])then else lY=qo[6];end;else do if yo==0X20 then(KY)[0X7]=KY[5][qo[0X0005]];lY=lY+1;lY=lY+0X1;qo=Sm[lY];lY=lY+0X1;do(KY)[0X00007]=KY[7][qo[5]];end;do lY=lY+0X1;end;lY=lY+1;do qo=Sm[lY];end;lY=lY+1;if not(qo[0X0002]<=KY[7])then else lY=qo[7];end;else do(KY)[qo[0X7]]=KY[qo[0x006]];end;end;end;end;else do if yo~=0X0001D then lY=qo[6];else KY[6]=RY[qo[2]];qo=Sm[lY];lY=lY+1;do(KY)[0X006]=KY[6][qo[0X5]];end;qo=Sm[lY];lY=lY+0X1;if not KY[6]then lY=qo[6];end;end;end;end;end;end;else if yo<0X8 then do if not(yo>=0X4)then do if not(yo<0X00002)then if yo==0x3 then do KY[4]=KY[0x03];end;qo=Sm[lY];lY=lY+1;do(RY)[qo[2]]=KY[4];end;do qo=Sm[lY];end;lY=lY+1;KY[0X4]=RY[qo[2]];lY=lY+1;lY=lY+0x1;local lU=(4);lY=lY+0X1;KY[0X5]=KY[3];qo=Sm[lY];lY=lY+0X00001;KY[6]=RY[qo[2]];lY=lY+0X00001;lY=lY+0x1;lY=lY+0X1;(KY[lU])(KY[lU+0x1],KY[lU+2]);do qY=lU-0X1;end;qo=Sm[lY];lY=lY+1;lY=qo[0X006];else local TQ=bm[0X003];KY[6]=TQ[1][TQ[0X2]];do lY=lY+1;end;lY=lY+1;qo=Sm[lY];lY=lY+1;(KY)[6]=KY[0X6][qo[5]];lY=lY+0X01;do lY=lY+1;end;qo=Sm[lY];lY=lY+1;if not(KY[6]<=qo[0X005])then else do lY=qo[0X00007];end;end;end;else if yo==0X1 then(KY)[6]=RY[qo[0X00002]];lY=lY+1;lY=lY+1;local Bx=(6);lY=lY+1;local wx=(bm[1]);(KY)[7]=wx[1][wx[2]];lY=lY+0X1;do KY[0X00008]=nil;end;qo=Sm[lY];do lY=lY+0X1;end;KY[9]=qo[2];lY=lY+1;qY=Bx+0X4-0x1;(KY[Bx])(f(KY,Bx+1,qY));qY=Bx-1;do lY=lY+0x01;end;lY=lY+0X001;qo=Sm[lY];lY=lY+1;lY=qo[6];else end;end;end;else do if not(yo>=0x6)then if yo~=5 then local Y1=(bm[0X2]);(KY)[0x7]=Y1[1][Y1[0X00002]];do lY=lY+1;end;do lY=lY+1;end;qo=Sm[lY];lY=lY+0X01;if not KY[7]then lY=qo[0x6];end;else if KY[qo[6]]~=KY[qo[0X001]]then else lY=qo[7];end;end;else if yo==7 then KY[0X5]=RY[qo[0X2]];lY=lY+0X00001;qY=5;(KY)[qY]=KY[qY]();qo=Sm[lY];do lY=lY+1;end;if not(not KY[0x5])then else lY=qo[0x6];end;else(KY)[6]=RY[qo[0X2]];lY=lY+0X001;do lY=lY+1;end;qo=Sm[lY];lY=lY+0X1;local li=(0X006);(KY)[7]=qo[0x0002];lY=lY+0x00001;(KY[li])(KY[li+0x001]);do qY=li-0X1;end;lY=lY+0X1;lY=lY+0X1;do qo=Sm[lY];end;do lY=lY+0X0001;end;(KY)[0X6]=RY[qo[2]];do qo=Sm[lY];end;lY=lY+0X001;(KY)[0X7]=qo[2];lY=lY+0X1;li=6;KY[li](KY[li+0X1]);qY=li-0X0001;lY=lY+0x0001;do lY=lY+1;end;qo=Sm[lY];do lY=lY+1;end;lY=qo[0X6];end;end;end;end;end;else if yo<0xC then if not(yo>=0xa)then if yo==0X9 then KY[5]=RY[qo[2]];lY=lY+1;lY=lY+1;qo=Sm[lY];do lY=lY+1;end;KY[0X5]=KY[0X5][qo[0x5]];local gG=bm[3];lY=lY+0X1;do(KY)[6]=gG[0X1][gG[2]];end;qo=Sm[lY];lY=lY+0X1;local wG=0X005;KY[0X00006]=KY[6][qo[0X5]];qo=Sm[lY];do lY=lY+0x00001;end;(KY)[0X6]=KY[6][qo[0X5]];qo=Sm[lY];lY=lY+0X1;KY[6]=KY[0X6][qo[0X005]];qo=Sm[lY];lY=lY+1;KY[6]=KY[0X6]-qo[0X5];do lY=lY+0X00001;end;(KY)[wG]=KY[wG](KY[wG+0X00001]);qY=wG;qo=Sm[lY];lY=lY+1;if not(not(KY[0X5]<qo[5]))then else lY=qo[0X7];end;else local P2=qo[0X007];for FY=P2,P2+(qo[0X6]-1)do(KY)[FY]=EY[km+(FY-P2)+0X1];end;end;else if yo==0X000B then KY[0X009]=KY[5][qo[5]];qo=Sm[lY];lY=lY+1;do KY[0X9]=KY[9][qo[0x5]];end;do qo=Sm[lY];end;do lY=lY+0x00001;end;if not(not(qo[0X2]<=KY[9]))then else lY=qo[0X7];end;else do(KY)[7]=RY[qo[0X2]];end;lY=lY+1;lY=lY+1;lY=lY+1;do qY=0X7;end;do KY[qY]=KY[qY]();end;do lY=lY+1;end;lY=lY+0X0001;do qo=Sm[lY];end;lY=lY+1;do if KY[7]then lY=qo[0X00006];end;end;end;end;else do if not(yo>=0x000E)then if yo~=0Xd then(KY)[0X5]=qo[0X0002];do lY=lY+0x01;end;KY[1]=KY[0X5];qo=Sm[lY];lY=lY+0X1;lY=qo[6];else do(KY)[qo[0X0007]]={f({},1,qo[6])};end;end;else if yo~=15 then local YE=(bm[0X0002]);local bE=4;KY[4]=YE[1][YE[0x00002]];do lY=lY+0X001;end;do lY=lY+0X1;end;qo=Sm[lY];do lY=lY+0X001;end;local JE=KY[4];(KY)[bE+1]=JE;KY[bE]=JE[qo[5]];do lY=lY+1;end;do bE=0x4;end;KY[bE](KY[bE+1]);do qY=bE-0X1;end;lY=lY+0X1;lY=lY+1;qo=Sm[lY];do lY=lY+0X1;end;do lY=qo[6];end;else if KY[qo[6]]==qo[5]then else do lY=qo[7];end;end;end;end;end;end;end;end;end;end;end;end);if vY then if VY then if UY~=0x001 then return KY[GY](f(KY,GY+0X1,qY));else return KY[GY]();end;elseif not(GY)then else do return f(KY,GY,UY);end;end;else if e(VY)~="string"then(V)(VY,0x0000);else if p(VY,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(VY,'\^.\-\:%d\+\:\ '))then V(VY,0X0);else(V)('\Lu\114\097\112\h\032Scr\i\pt\058'..(Dm[lY-0x01]or"(internal)")..": "..v(VY),0X0);end;end;end;end;end;else Km=function(...)local E4,h4=1,({});local N4=K();local D4,O4=eH(...);local s4={[1]=Xm,[2]=h4};local g4=((N4==g and Qm or N4));do D4=D4-0X001;end;for r3=0,D4 do do if not(km>r3)then break;else do h4[r3]=O4[r3+0x01];end;end;end;end;do if not Lm then O4=nil;elseif not(Um)then else(h4)[km]={n=D4>=km and D4-km+1 or 0,f(O4,km+0x001,D4+0X0001)};end;end;local t4=(0);if g4~=N4 then w(Km,g4);end;local Q4,H4,u4,d4=o(function()while true do local CV=(Sm[E4]);local rV=CV[4];E4=E4+0X00001;if not(rV<0X8)then if rV<0X000c then do if rV>=10 then do if rV~=11 then E4=CV[0X6];else do if h4[CV[6]]~=h4[CV[1]]then E4=CV[7];end;end;end;end;else do if rV~=9 then h4[CV[0X7]]=s4[CV[0X6]];else do repeat local Ji,vi=Cm,h4;if not(#Ji>0X0)then else local Fe=({});do for KL,VL in I,Ji do for D0,w0 in I,VL do if w0[0x0001]==vi and w0[2]>=0 then local md=w0[2];do if not(not Fe[md])then else do(Fe)[md]={vi[md]};end;end;end;(w0)[1]=Fe[md];(w0)[0X02]=1;end;end;end;end;end;until true;end;local jH=CV[0x7];return false,jH,jH;end;end;end;end;else if not(rV>=0XE)then if rV~=13 then for ch=CV[0X7],CV[6]do(h4)[ch]=nil;end;else h4[CV[0X7]]=h4[CV[6]][h4[CV[1]]];end;else if rV~=15 then h4[CV[7]]={f({},1,CV[0x6])};else h4[0]=g4[CV[2]];CV=Sm[E4];E4=E4+0X1;(h4)[0x00000]=h4[0][CV[5]];CV=Sm[E4];E4=E4+1;if not h4[0X0]then E4=CV[0x006];end;end;end;end;else do if not(rV>=4)then if rV<2 then if rV==1 then(g4)[CV[0X00002]]=h4[CV[7]];else h4[CV[0X07]]=h4[CV[0X006]]<h4[CV[0x1]];end;else if rV~=3 then else h4[CV[0X007]]=g4[CV[2]];end;end;else do if not(rV>=0x6)then if rV==0X5 then do(h4)[0X0000]=g4[CV[0X2]];end;local ml=(0);E4=E4+0X00001;E4=E4+0X1;CV=Sm[E4];E4=E4+1;(h4)[0X1]=CV[2];do E4=E4+0X1;end;(h4)[ml]=h4[ml](h4[ml+1]);t4=ml;E4=E4+0x01;do E4=E4+0x1;end;E4=E4+0X0001;h4[0]=not h4[0];CV=Sm[E4];do E4=E4+0x1;end;E4=CV[6];else h4[CV[0X7]]=CV[0x00002];end;else if rV==7 then local Gj=Zm[CV[6]];local yj=nil;local Zj=(Gj[0X3]);local Kj=#Zj;do if Kj>0 then yj={};for hy=0x1,Kj do local oy=(Zj[hy]);do if oy[1]~=0 then(yj)[hy-0x1]=bm[oy[0x00002]];else do yj[hy-0X1]={h4,oy[0x2]};end;end;end;end;M(Cm,yj);end;end;(h4)[CV[0X7]]=dH(Gj,yj,g4);else do repeat local v8,y8=Cm,(h4);do if not(#v8>0x000)then else local eq={};for IO,FO in I,v8 do for Jr,ar in I,FO do do if ar[0x0001]==y8 and ar[0x0002]>=0 then local lB=(ar[2]);if not eq[lB]then eq[lB]={y8[lB]};end;(ar)[1]=eq[lB];(ar)[0X2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;end;end;end);if not(Q4)then if e(H4)~="string"then(V)(H4,0);else do if p(H4,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if p(H4,"^.-:%d+: ")then(V)('\L\117\114\097\p\h\032\083\099r\105pt:'..(Dm[E4-0x1]or'(\in\116\erna\108\)')..'\:\ '..v(H4),0);else V(H4,0);end;end;else if H4 then do if d4~=0x01 then return h4[u4](f(h4,u4+1,t4));else return h4[u4]();end;end;elseif not(u4)then else do return f(h4,u4,d4);end;end;end;end;end;end;else do if not(xm<0X52)then if xm~=0X53 then Km=function(...)local h5=({});local b5=(1);local D5=({[1]=Xm,[2]=h5});local Z5=K();local B5=(Z5==g and Qm or Z5);local s5,m5=eH(...);do s5=s5-1;end;for jP=0,s5 do if not(km>jP)then do break;end;else h5[jP]=m5[jP+0X01];end;end;if not Lm then do m5=nil;end;elseif Um then do(h5)[km]={n=s5>=km and s5-km+1 or 0X0,f(m5,km+0X1,s5+0X1)};end;end;local N5=(0x0);if B5==Z5 then else w(Km,B5);end;local p5,U5,f5,K5=o(function()while true do local Nt=Sm[b5];local ht=Nt[0x4];b5=b5+0X1;if not(ht>=0X0b)then do if not(ht>=5)then do if not(ht>=2)then if ht~=0X00001 then(h5[Nt[7]])[h5[Nt[0X6]]]=h5[Nt[1]];else local m2=bm[0X0];local y2=(0);h5[0]=m2[0X00001][m2[2]];b5=b5+0X1;b5=b5+1;Nt=Sm[b5];b5=b5+1;local i2=h5[0x0];do h5[y2+0X1]=i2;end;(h5)[y2]=i2[Nt[5]];b5=b5+0X1;do y2=0;end;h5[y2](h5[y2+1]);do N5=y2-0X1;end;b5=b5+1;do b5=b5+1;end;b5=b5+1;repeat local M4,a4=Cm,(h5);if not(#M4>0X0)then else local bd=({});for Ai,Ji in I,M4 do do for Q3,j3 in I,Ji do if not(j3[0X00001]==a4 and j3[0X2]>=0)then else local mZ=j3[0x2];do if not(not bd[mZ])then else bd[mZ]={a4[mZ]};end;end;j3[1]=bd[mZ];do(j3)[2]=1;end;end;end;end;end;end;until true;return;end;else if not(ht>=0X0003)then for oZ=Nt[0X7],Nt[0X6]do do(h5)[oZ]=nil;end;end;else do if ht==4 then B5[Nt[0x0002]]=h5[Nt[7]];else(h5)[0x00]=B5[Nt[2]];b5=b5+1;b5=b5+0X00001;Nt=Sm[b5];b5=b5+0X001;h5[1]=Nt[2];b5=b5+1;local xT=(0X00000);(h5)[xT]=h5[xT](h5[xT+1]);N5=xT;do Nt=Sm[b5];end;do b5=b5+0x0001;end;if not(not h5[0x0])then else b5=Nt[6];end;end;end;end;end;end;else if not(ht>=0X08)then if not(ht<6)then if ht==0X007 then do(h5)[0X00]=B5[Nt[2]];end;Nt=Sm[b5];b5=b5+1;h5[0X0]=h5[0X0][Nt[0X005]];b5=b5+0X001;do b5=b5+0x0001;end;Nt=Sm[b5];b5=b5+1;do if not(not h5[0X0])then else b5=Nt[6];end;end;else(h5)[Nt[7]]=h5[Nt[0x6]]%h5[Nt[0X1]];end;else end;else do if ht<0X9 then h5[0]=B5[Nt[0x2]];do b5=b5+0X1;end;N5=0X0;do h5[N5]=h5[N5]();end;Nt=Sm[b5];b5=b5+0X1;if h5[0x0]then do b5=Nt[6];end;end;else if ht==10 then local vt=bm[0];h5[0]=vt[0X00001][vt[2]];local nt=0;do Nt=Sm[b5];end;b5=b5+1;local Et=(h5[0X0]);h5[nt+1]=Et;(h5)[nt]=Et[Nt[5]];b5=b5+0x1;nt=0;do(h5)[nt]=h5[nt](h5[nt+0X01]);end;N5=nt;b5=b5+1;b5=b5+0x1;Nt=Sm[b5];do b5=b5+0X1;end;if not(not h5[0X00000])then else b5=Nt[6];end;else local vL=Zm[Nt[0X6]];local oL=(vL[0X3]);local zL=(#oL);local HL=nil;if not(zL>0)then else HL={};for S9=1,zL do local J9=oL[S9];if J9[1]~=0 then do HL[S9-1]=bm[J9[0X2]];end;else HL[S9-1]={h5,J9[0X2]};end;end;(M)(Cm,HL);end;(h5)[Nt[0X7]]=dH(vL,HL,B5);end;end;end;end;end;end;else if not(ht>=17)then if ht>=14 then if ht>=15 then if ht~=0X10 then do h5[0X0]=B5[Nt[2]];end;Nt=Sm[b5];b5=b5+0X1;do(h5)[0X0]=h5[0X00000][Nt[0x00005]];end;b5=b5+0X1;b5=b5+0x1;Nt=Sm[b5];b5=b5+0X00001;(h5)[0]=h5[0X0][Nt[5]];b5=b5+0X1;b5=b5+0X1;Nt=Sm[b5];b5=b5+0X1;do if not(h5[0]<Nt[5])then b5=Nt[7];end;end;else(h5)[Nt[7]]=Nt[2];end;else do if h5[Nt[0X7]]then b5=Nt[6];end;end;end;else if ht<0xC then h5[0x0]=B5[Nt[2]];do Nt=Sm[b5];end;b5=b5+0X00001;local qO=(Zm[Nt[0X6]]);local HO,RO=qO[0X3],(nil);local OO=#HO;if OO>0X000 then do RO={};end;for Vm=0X001,OO do local Nm=(HO[Vm]);if Nm[0x1]==0 then do RO[Vm-0X0001]={h5,Nm[2]};end;else(RO)[Vm-0x001]=bm[Nm[2]];end;end;M(Cm,RO);end;local hO=0;h5[0X1]=dH(qO,RO,B5);b5=b5+1;h5[hO](h5[hO+0X1]);N5=hO-1;Nt=Sm[b5];b5=b5+0X1;h5[0X0]=B5[Nt[0X2]];do Nt=Sm[b5];end;b5=b5+0X1;(h5)[1]=Nt[0x0002];b5=b5+1;hO=0x00;h5[hO]=h5[hO](h5[hO+0X1]);do N5=hO;end;b5=b5+0x1;do b5=b5+0X1;end;do Nt=Sm[b5];end;b5=b5+1;if not(not h5[0])then else do b5=Nt[0X0006];end;end;else if ht==13 then h5[Nt[0X7]]=B5[Nt[2]];else local rf=(Nt[0X7]);local tf=(r(function(...)C();for R1,S1,w1,d1,B1,V1,N1,M1,h1,X1 in...do(C)(true,{R1,S1,w1,d1,B1,V1,N1,M1,h1,X1});end;end));tf(h5[rf],h5[rf+0x001],h5[rf+0x2]);N5=rf;do h5[rf]=tf;end;b5=Nt[0X6];end;end;end;else if ht>=0X14 then if ht>=0X15 then do if ht==0X16 then do h5[Nt[0X007]]={f({},0X00001,Nt[0X6])};end;else do(h5)[Nt[7]]=h5[Nt[6]]*h5[Nt[0x001]];end;end;end;else h5[0X00]=B5[Nt[2]];local XW=0;b5=b5+0X00001;b5=b5+0X01;do Nt=Sm[b5];end;b5=b5+1;(h5)[0X0]=h5[0][Nt[0X5]];do Nt=Sm[b5];end;b5=b5+0X001;(h5)[0X001]=Nt[0X2];do b5=b5+1;end;(h5)[XW]=h5[XW](h5[XW+0X1]);N5=XW;do b5=b5+1;end;do b5=b5+1;end;Nt=Sm[b5];b5=b5+1;if not(not h5[0])then else do b5=Nt[0X00006];end;end;end;else if ht<18 then do h5[0]=B5[Nt[0X02]];end;Nt=Sm[b5];b5=b5+0X1;h5[0]=h5[0x0000][Nt[0X5]];do b5=b5+0x00001;end;b5=b5+1;do Nt=Sm[b5];end;b5=b5+1;if not h5[0X000]then b5=Nt[0x6];end;else if ht==0X00013 then b5=Nt[0X006];else repeat local Bg,Fg=Cm,(h5);do if not(#Bg>0)then else local d3={};for Nd,dd in I,Bg do do for at,Jt in I,dd do do if not(Jt[0X1]==Fg and Jt[0X2]>=0)then else local HP=(Jt[2]);if not(not d3[HP])then else(d3)[HP]={Fg[HP]};end;do(Jt)[1]=d3[HP];end;(Jt)[0X2]=1;end;end;end;end;end;end;end;until true;do return;end;end;end;end;end;end;end;end);if not(p5)then if e(U5)=="string"then if p(U5,'\097tte\mpt\ \116\o\032\y\i\e\l\d\ \097\c\114o\ss\ \m\e\116\097\109e\116\h\111\100\/\C\037-ca\l\l\ \098ou\110\dar\y')then return coroutine.yield();end;if not(p(U5,"^.-:%d+: "))then V(U5,0X0);else(V)("Luraph Script:"..(Dm[b5-0X01]or"(internal)")..'\:\ '..v(U5),0);end;else V(U5,0);end;else if U5 then if K5==1 then return h5[f5]();else return h5[f5](f(h5,f5+0x00001,N5));end;elseif f5 then return f(h5,f5,K5);end;end;end;else Km=function(...)local NJ=1;local tJ=0x0;local QJ=({});local XJ=({[2]=QJ,[1]=Xm});local qJ=(K());local cJ,RJ=eH(...);cJ=cJ-1;local jJ=(qJ==g and Qm or qJ);for xA=0X0,cJ do do if km>xA then do QJ[xA]=RJ[xA+0x1];end;else break;end;end;end;if not Lm then RJ=nil;elseif not(Um)then else(QJ)[km]={n=cJ>=km and cJ-km+0x00001 or 0,f(RJ,km+1,cJ+0x01)};end;if jJ==qJ then else(w)(Km,jJ);end;local wJ,TJ,sJ,HJ=o(function()while true do local ZJ=(Sm[NJ]);local AJ=(ZJ[4]);NJ=NJ+1;if AJ<0X0008 then if not(AJ<4)then if AJ<0X00006 then if AJ~=5 then do repeat local af,pf=Cm,QJ;if not(#af>0X0)then else local ju={};for Q2,F2 in I,af do for mM,IM in I,F2 do if not(IM[0X0001]==pf and IM[0x002]>=0X00000)then else local G7=(IM[0X2]);if not(not ju[G7])then else(ju)[G7]={pf[G7]};end;IM[0x1]=ju[G7];(IM)[2]=0X0001;end;end;end;end;until true;end;return;else do NJ=ZJ[6];end;end;else if AJ~=0x7 then QJ[ZJ[7]]=XJ[ZJ[6]];else do QJ[ZJ[7]]=ZJ[2];end;end;end;else if not(AJ<2)then if AJ~=3 then if QJ[ZJ[0X7]]then do NJ=ZJ[0x6];end;end;else QJ[ZJ[7]]=ZJ[2];end;else if AJ~=0x1 then(QJ)[ZJ[0X00007]]={f({},0X1,ZJ[6])};else(QJ[ZJ[0X7]])[QJ[ZJ[0X6]]]=QJ[ZJ[1]];end;end;end;else do if AJ<12 then if not(AJ>=10)then do if AJ==9 then local Wp=ZJ[0X007];local Yp=(r(function(...)C();for lr,Fr,sr,wr,Dr,Gr,Br,Er,Nr,Tr in...do C(true,{lr,Fr,sr,wr,Dr,Gr,Br,Er,Nr,Tr});end;end));Yp(QJ[Wp],QJ[Wp+0X0001],QJ[Wp+2]);tJ=Wp;(QJ)[Wp]=Yp;NJ=ZJ[6];else end;end;else if AJ==0X00B then QJ[0]=jJ[ZJ[2]];local SO=(0);ZJ=Sm[NJ];do NJ=NJ+1;end;do(QJ)[1]=ZJ[2];end;NJ=NJ+1;QJ[SO](QJ[SO+1]);tJ=SO-1;do NJ=NJ+1;end;NJ=NJ+1;do ZJ=Sm[NJ];end;NJ=NJ+0X00001;NJ=ZJ[6];else QJ[ZJ[7]]=jJ[ZJ[2]];end;end;else if AJ<14 then if AJ~=0Xd then for yC=ZJ[7],ZJ[0X006]do QJ[yC]=nil;end;else do repeat local hR,dR,pR=Cm,QJ,ZJ[0x7];if not(#hR>0X0)then else local mX={};for i9,b9 in I,hR do do for GO,AO in I,b9 do do if AO[1]==dR and AO[0X2]>=pR then local tQ=AO[2];if not(not mX[tQ])then else(mX)[tQ]={dR[tQ]};end;(AO)[0X1]=mX[tQ];AO[2]=1;end;end;end;end;end;end;until true;end;end;else if AJ==0X0000f then local zB,AB=Zm[ZJ[0X6]],(nil);local rB=zB[3];local PB=(#rB);do if PB>0 then AB={};for aw=1,PB do local Yw=rB[aw];if Yw[0X1]~=0 then AB[aw-0X1]=bm[Yw[0x2]];else(AB)[aw-0X1]={QJ,Yw[0X2]};end;end;M(Cm,AB);end;end;(QJ)[ZJ[0X7]]=dH(zB,AB,jJ);else XJ[ZJ[0X0006]]=QJ[ZJ[0x0007]];end;end;end;end;end;end;end);if not(wJ)then if e(TJ)~="string"then V(TJ,0);else if not(p(TJ,"\097\116\116\e\mpt\032\116\111\032\121\i\101l\d\032a\c\114\111\s\s\ \m\eta\m\101\116\h\111\d\/C\037\-\099\097l\108\ \098\o\117\110\100ar\y"))then else return coroutine.yield();end;if p(TJ,"^.-:%d+: ")then V('\L\117raph\ \Scri\112\116\058'..(Dm[NJ-1]or"(internal)")..'\:\032'..v(TJ),0X0);else V(TJ,0);end;end;else do if TJ then do if HJ~=1 then do return QJ[sJ](f(QJ,sJ+1,tJ));end;else do return QJ[sJ]();end;end;end;elseif not(sJ)then else do return f(QJ,sJ,HJ);end;end;end;end;end;end;else Km=function(...)local zz=(0x1);local Jz={};local yz=(K());local Mz,az=eH(...);local pz=({[1]=Xm,[2]=Jz});Mz=Mz-1;for N4=0X0000,Mz do if km>N4 then(Jz)[N4]=az[N4+0X1];else break;end;end;local Gz=(yz==g and Qm or yz);if not Lm then az=nil;elseif not(Um)then else(Jz)[km]={n=Mz>=km and Mz-km+1 or 0,f(az,km+1,Mz+0x1)};end;local Yz=0;if Gz~=yz then w(Km,Gz);end;local iz,Vz,Nz,Ez=o(function()do while true do local sX=Sm[zz];local pX=(sX[4]);do zz=zz+1;end;if pX>=9 then if pX>=0xd then if pX>=0X000F then if pX<16 then Jz[sX[0X7]]=Gz[sX[2]];else if pX~=0X0011 then local i4=sX[0X7];local V4=Jz[i4+0X00002];local l4,t4=Jz[i4],(Jz[i4+0X1]);do Jz[i4]=r(function()for ij=l4,t4,V4 do(C)(true,ij);end;end);end;do zz=sX[0x006];end;else repeat local f0,M0=Cm,(Jz);do if not(#f0>0)then else local HW={};do for FO,vO in I,f0 do for JY,jY in I,vO do if jY[1]==M0 and jY[2]>=0 then local t3=(jY[0X0002]);if not HW[t3]then HW[t3]={M0[t3]};end;jY[0X1]=HW[t3];jY[2]=0X1;end;end;end;end;end;end;until true;return;end;end;else if pX==0Xe then Jz[1]=Gz[sX[2]];sX=Sm[zz];zz=zz+0X1;Jz[0X1]=Jz[0X0001][sX[5]];sX=Sm[zz];zz=zz+0X1;do if not(not Jz[0X00001])then else do zz=sX[6];end;end;end;else if not(Jz[sX[6]]<=Jz[sX[1]])then zz=sX[0X7];end;end;end;else do if not(pX<11)then if pX==12 then for KT=sX[7],sX[6]do(Jz)[KT]=nil;end;else local eg=(Zm[sX[0X6]]);local gg=eg[0X3];local Ug=(nil);local sg=(#gg);if sg>0 then Ug={};for mi=1,sg do local Ki=gg[mi];if Ki[1]==0X0000 then(Ug)[mi-0X1]={Jz,Ki[0X2]};else(Ug)[mi-0X1]=bm[Ki[2]];end;end;M(Cm,Ug);end;do Jz[sX[7]]=dH(eg,Ug,Gz);end;end;else if pX~=10 then local gk=(sX[0X00007]);local Kk=r(function(...)(C)();for xo,so,wo,Eo,ro,po,Xo,Go,to,Mo in...do C(true,{xo,so,wo,Eo,ro,po,Xo,Go,to,Mo});end;end);(Kk)(Jz[gk],Jz[gk+0x1],Jz[gk+0x00002]);do Yz=gk;end;do Jz[gk]=Kk;end;zz=sX[0X06];else Jz[sX[0x07]]=#Jz[sX[0X6]];end;end;end;end;else if not(pX<4)then if pX<6 then if pX~=0X005 then do zz=sX[0X6];end;else Jz[sX[7]]=sX[2];end;else do if not(pX>=7)then do Jz[sX[0X7]]={f({},1,sX[6])};end;else if pX~=0X008 then if not(not(Jz[sX[6]]<Jz[sX[0X1]]))then else do zz=sX[0X07];end;end;else(Jz)[sX[0x7]]=Jz[sX[0X0006]]~=Jz[sX[0X1]];end;end;end;end;else do if pX>=0X02 then if pX==0x00003 then repeat local Jb,db=Cm,Jz;if#Jb>0X00000 then local v0=({});for TK,cK in I,Jb do for t5,C5 in I,cK do if not(C5[1]==db and C5[0x00002]>=0X00000)then else local yO=C5[2];do if not(not v0[yO])then else v0[yO]={db[yO]};end;end;(C5)[1]=v0[yO];C5[2]=0X1;end;end;end;end;until true;local y1=sX[0X7];do return false,y1,y1+sX[6]-2;end;else(Jz)[0]=Gz[sX[2]];sX=Sm[zz];local xT=(0X0);zz=zz+1;Jz[1]=sX[2];do zz=zz+0X1;end;do(Jz)[xT]=Jz[xT](Jz[xT+0X1]);end;local IT=bm[0];Yz=xT;zz=zz+1;(Jz)[0x1]=IT[0X1][IT[0X2]];zz=zz+0X1;zz=zz+1;sX=Sm[zz];zz=zz+1;Jz[1]=Jz[1][sX[5]];zz=zz+1;(Jz)[0X2]=Jz[0x000];zz=zz+1;xT=0X01;(Jz)[xT]=Jz[xT](Jz[xT+1]);do Yz=xT;end;do zz=zz+0X01;end;zz=zz+0X1;sX=Sm[zz];zz=zz+1;do if not Jz[1]then zz=sX[6];end;end;end;else if pX~=0x00001 then else local y0=bm[0X0];Jz[0X1]=y0[0X1][y0[0X002]];zz=zz+1;zz=zz+0X00001;sX=Sm[zz];zz=zz+1;(Jz)[1]=Jz[0X1][sX[0X005]];do zz=zz+0X001;end;zz=zz+0X1;zz=zz+1;do Jz[0X2]=Jz[0];end;zz=zz+0X001;local r0=1;y0=bm[0X00001];do(Jz)[0x3]=y0[0x1][y0[2]];end;zz=zz+1;do zz=zz+1;end;do zz=zz+1;end;(Jz[r0])(Jz[r0+0X1],Jz[r0+2]);Yz=r0-1;zz=zz+1;do y0=bm[1];end;(Jz)[0X01]=y0[1][y0[2]];local n0=Jz[1];zz=zz+0X01;zz=zz+0X0001;do sX=Sm[zz];end;zz=zz+1;r0=1;(Jz)[r0+0X1]=n0;do(Jz)[r0]=n0[sX[0X5]];end;zz=zz+0X00001;r0=0X001;Jz[r0](Jz[r0+1]);Yz=r0-1;zz=zz+0x001;zz=zz+1;sX=Sm[zz];zz=zz+1;zz=sX[0x6];end;end;end;end;end;end;end;end);do if iz then if Vz then if Ez~=1 then return Jz[Nz](f(Jz,Nz+0x1,Yz));else do return Jz[Nz]();end;end;elseif not(Nz)then else return f(Jz,Nz,Ez);end;else if e(Vz)~="string"then(V)(Vz,0);else if p(Vz,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(Vz,"\^.\045:\%\d+:\ ")then V("Lu\114\097p\h\ S\c\114ip\116\:"..(Dm[zz-0X1]or'\(in\116\e\114nal\)')..":\032"..v(Vz),0X0);else(V)(Vz,0X0);end;end;end;end;end;end;end;end;end;end;end;end;end;end;else do if not(xm>=139)then if xm<0X074 then if not(xm>=104)then do if xm<98 then do if not(xm>=0X5F)then if xm~=94 then do Km=function(...)local n5=0;local D5={};local s5=K();local T5=({[2]=D5,[1]=Xm});local Q5,C5=eH(...);Q5=Q5-0X01;do for VG=0,Q5 do if km>VG then do(D5)[VG]=C5[VG+0x1];end;else break;end;end;end;local e5=(s5==g and Qm or s5);if not Lm then do C5=nil;end;elseif Um then D5[km]={n=Q5>=km and Q5-km+0x00001 or 0,f(C5,km+1,Q5+1)};end;local g5=0X0001;if e5==s5 then else(w)(Km,e5);end;local N5,K5,P5,r5=o(function()while true do local aU=Sm[g5];local VU=aU[4];g5=g5+1;if not(VU<29)then if VU>=44 then if VU>=0X33 then if VU>=0X000037 then if not(VU>=0x000039)then do if VU==56 then if not(aU[2]<D5[aU[1]])then g5=aU[7];end;else D5[3]=e5[aU[2]];aU=Sm[g5];g5=g5+1;D5[0X4]=aU[0x0002];local VN=3;g5=g5+1;(D5)[VN]=D5[VN](D5[VN+1]);do n5=VN;end;do g5=g5+1;end;(D5)[0]=D5[3];do aU=Sm[g5];end;g5=g5+1;g5=aU[0X0006];end;end;else if VU~=58 then D5[0X2]=e5[aU[2]];do g5=g5+0X00001;end;g5=g5+1;aU=Sm[g5];g5=g5+0x1;do if not D5[2]then g5=aU[6];end;end;else end;end;else if VU<53 then if VU~=52 then D5[4]=e5[aU[2]];do g5=g5+0x001;end;(D5)[0x5]=D5[3];local O4=(4);g5=g5+1;D5[O4]=D5[O4](D5[O4+0X1]);n5=O4;g5=g5+0X001;do g5=g5+1;end;aU=Sm[g5];g5=g5+0X1;if D5[4]==aU[0X5]then else g5=aU[7];end;else D5[4]=e5[aU[0X00002]];g5=g5+0X1;g5=g5+1;aU=Sm[g5];g5=g5+1;D5[4]=D5[0X0004][aU[0x5]];do aU=Sm[g5];end;do g5=g5+1;end;if not D5[4]then do g5=aU[0x6];end;end;end;else if VU~=54 then do D5[4]=e5[aU[0X002]];end;g5=g5+1;g5=g5+0X00001;do aU=Sm[g5];end;g5=g5+0X1;D5[4]=D5[0x04][aU[5]];aU=Sm[g5];do g5=g5+1;end;if not(not D5[4])then else g5=aU[0x06];end;else do if D5[aU[6]]==aU[5]then g5=aU[0X7];end;end;end;end;end;else if VU>=0X2f then if not(VU<49)then if VU==0X032 then(D5)[2]=e5[aU[0X2]];aU=Sm[g5];g5=g5+1;D5[2]=D5[0X2][aU[5]];aU=Sm[g5];g5=g5+0X01;if D5[0X2]then do g5=aU[6];end;end;else local vL=aU[7];local dL=(aU[0X1]-0X1)*50;local LL=(D5[vL]);for Bz=0X1,aU[0X0006]do do LL[dL+Bz]=D5[vL+Bz];end;end;end;else if VU==0X30 then D5[4]=false;local vx=4;do aU=Sm[g5];end;do g5=g5+1;end;e5[aU[0X2]]=D5[4];aU=Sm[g5];do g5=g5+0X0001;end;D5[0X4]=e5[aU[2]];g5=g5+1;g5=g5+0x1;aU=Sm[g5];g5=g5+1;D5[0X5]=aU[0X2];do g5=g5+0x1;end;do(D5)[vx]=D5[vx](D5[vx+1]);end;n5=vx;aU=Sm[g5];g5=g5+1;if not(not D5[4])then else g5=aU[0X6];end;else D5[0x00002]=e5[aU[2]];g5=g5+1;g5=g5+1;aU=Sm[g5];do g5=g5+1;end;(D5[0X002])[aU[2]]=aU[5];aU=Sm[g5];g5=g5+1;D5[2]=e5[aU[0X2]];g5=g5+1;n5=0x2;(D5[n5])();n5=n5-0X1;g5=g5+0x01;g5=g5+0X1;do g5=g5+0X1;end;repeat local Wa,ya=Cm,D5;if not(#Wa>0)then else local ia={};for Kl,al in I,Wa do for F_,U_ in I,al do if U_[0X1]==ya and U_[2]>=0X000 then local zp=(U_[2]);if not(not ia[zp])then else ia[zp]={ya[zp]};end;(U_)[1]=ia[zp];do(U_)[0X00002]=1;end;end;end;end;end;until true;return;end;end;else do if VU<0X0002d then do(D5)[aU[7]]=D5[aU[6]]~=D5[aU[1]];end;else if VU==46 then do(D5)[0X2]=e5[aU[0X2]];end;g5=g5+0x1;g5=g5+1;aU=Sm[g5];do g5=g5+0x0001;end;do D5[0X002]=D5[0X2][aU[0X5]];end;g5=g5+1;do g5=g5+1;end;aU=Sm[g5];g5=g5+1;do if not(not D5[0X02])then else do g5=aU[0X6];end;end;end;else g5=aU[0x6];end;end;end;end;end;else do if VU>=36 then if not(VU>=40)then if not(VU>=0X00026)then if VU==37 then do(D5)[2]=e5[aU[0x00002]];end;g5=g5+1;do g5=g5+1;end;do aU=Sm[g5];end;do g5=g5+0X001;end;(D5)[2]=D5[0X00002][aU[5]];aU=Sm[g5];g5=g5+1;do if not D5[2]then g5=aU[6];end;end;else local To=bm[0X0000];(D5)[0x2]=To[0x0001][To[0X00002]];local Qo=(2);g5=g5+0x00001;do g5=g5+0X1;end;aU=Sm[g5];g5=g5+1;local po=D5[2];D5[Qo+1]=po;(D5)[Qo]=po[aU[5]];g5=g5+0X1;Qo=0x0002;D5[Qo](D5[Qo+0X001]);n5=Qo-1;g5=g5+0X00001;do g5=g5+0X1;end;do aU=Sm[g5];end;do g5=g5+0X1;end;(D5)[2]=e5[aU[0x2]];aU=Sm[g5];g5=g5+1;do(D5)[3]=aU[2];end;g5=g5+1;Qo=0x002;D5[Qo]=D5[Qo](D5[Qo+1]);n5=Qo;g5=g5+0X1;do g5=g5+0X1;end;g5=g5+0X01;D5[0X0000]=D5[0X2];g5=g5+0X01;D5[0X2]=D5[0X0];aU=Sm[g5];g5=g5+0x01;(e5)[aU[2]]=D5[0x2];aU=Sm[g5];g5=g5+1;do(D5)[0x2]=e5[aU[2]];end;aU=Sm[g5];g5=g5+0X01;D5[3]=aU[2];g5=g5+1;do Qo=2;end;(D5)[Qo]=D5[Qo](D5[Qo+1]);do n5=Qo;end;aU=Sm[g5];g5=g5+1;if not(D5[0X2])then else g5=aU[6];end;end;else if VU==39 then(D5)[2]=e5[aU[2]];g5=g5+0X1;g5=g5+0X1;do aU=Sm[g5];end;do g5=g5+1;end;(D5)[0X2]=D5[0x2][aU[5]];do aU=Sm[g5];end;g5=g5+0X00001;if not(D5[0X2])then else g5=aU[6];end;else(D5)[0]=e5[aU[0X2]];g5=g5+0x1;do g5=g5+0X1;end;aU=Sm[g5];g5=g5+0X1;(D5)[1]=aU[2];g5=g5+0X1;local rR=(0);do(D5)[rR]=D5[rR](D5[rR+0X01]);end;n5=rR;do g5=g5+1;end;(D5)[0X1]=D5[0];aU=Sm[g5];do g5=g5+0x001;end;e5[aU[0x2]]=D5[0X1];do aU=Sm[g5];end;g5=g5+1;if not(D5[0X00])then else g5=aU[6];end;end;end;else if VU>=0X2A then if VU==0X2B then D5[0X00001]=e5[aU[0X2]];g5=g5+1;g5=g5+0x1;aU=Sm[g5];local iv=(0X01);do g5=g5+0X01;end;D5[0X02]=aU[2];aU=Sm[g5];do g5=g5+1;end;D5[0X3]=e5[aU[0X2]];do aU=Sm[g5];end;g5=g5+1;do(D5)[3]=D5[3][aU[0X0005]];end;g5=g5+0X1;do D5[iv]=D5[iv](D5[iv+0X01],D5[iv+2]);end;do n5=iv;end;aU=Sm[g5];g5=g5+1;if D5[0X01]~=aU[0x00005]then else do g5=aU[7];end;end;else if not D5[aU[7]]then g5=aU[0X6];end;end;else if VU==41 then do(D5)[aU[0X7]]=e5[aU[2]];end;else if D5[aU[0X0006]]<=D5[aU[0X1]]then do g5=aU[7];end;end;end;end;end;else do if VU>=32 then if not(VU<34)then if VU==35 then local m3=(Zm[aU[6]]);local L3=(m3[0X00003]);local O3,q3=#L3,(nil);if not(O3>0X0)then else q3={};for tK=1,O3 do local eK=L3[tK];if eK[1]~=0 then(q3)[tK-1]=bm[eK[0x2]];else q3[tK-1]={D5,eK[2]};end;end;(M)(Cm,q3);end;(D5)[aU[0X007]]=dH(m3,q3,e5);else(D5)[aU[7]]=aU[2];end;else do if VU~=33 then(D5)[4]=e5[aU[2]];local yw=4;g5=g5+1;g5=g5+1;aU=Sm[g5];g5=g5+1;do D5[0X0005]=aU[0x2];end;g5=g5+1;D5[0X00006]=true;g5=g5+0X1;(D5)[yw]=D5[yw](D5[yw+0X1],D5[yw+2]);n5=yw;aU=Sm[g5];g5=g5+0X0001;if D5[0X0004]then g5=aU[6];end;else local OT,MT=bm[1],(nil);(D5)[3]=OT[0X1][OT[2]];aU=Sm[g5];do g5=g5+1;end;(D5)[3]=D5[3][aU[5]];g5=g5+1;g5=g5+0X1;g5=g5+1;(D5)[4]=D5[2];local iT=(0X3);g5=g5+0X1;OT=bm[0];(D5)[0x5]=OT[0X1][OT[0X2]];g5=g5+0X1;g5=g5+0X1;aU=Sm[g5];g5=g5+1;local VT=(Zm[aU[6]]);local PT=(VT[3]);local jT=#PT;if not(jT>0)then else MT={};for nB=0X001,jT do local TB=PT[nB];if TB[1]==0 then(MT)[nB-0x00001]={D5,TB[0X0002]};else(MT)[nB-0X1]=bm[TB[2]];end;end;M(Cm,MT);end;D5[6]=dH(VT,MT,e5);g5=g5+0x1;n5=iT+0x4-0X1;(D5[iT])(f(D5,iT+1,n5));n5=iT-0X1;do g5=g5+0X1;end;g5=g5+1;g5=g5+0x01;OT=bm[0];(D5)[3]=OT[1][OT[0x00002]];aU=Sm[g5];g5=g5+0X1;local fT=D5[0X3];do iT=3;end;do(D5)[iT+1]=fT;end;D5[iT]=fT[aU[0X5]];do g5=g5+1;end;iT=3;D5[iT](D5[iT+1]);do n5=iT-1;end;do g5=g5+1;end;g5=g5+1;do aU=Sm[g5];end;g5=g5+0x1;g5=aU[0X06];end;end;end;else do if not(VU>=30)then do D5[0X4]=e5[aU[0X002]];end;g5=g5+1;g5=g5+1;aU=Sm[g5];g5=g5+1;D5[4]=D5[4][aU[5]];do aU=Sm[g5];end;g5=g5+0X1;(D5)[0x4]=D5[0X0004][aU[5]];g5=g5+1;g5=g5+0x1;aU=Sm[g5];g5=g5+0X00001;(D5)[4]=D5[4][aU[5]];do aU=Sm[g5];end;do g5=g5+1;end;do if not(not(aU[0X0002]<=D5[4]))then else g5=aU[0x7];end;end;else if VU==0X01F then if not(aU[2]<=D5[aU[0X0001]])then do g5=aU[0x007];end;end;else do D5[0X4]=e5[aU[2]];end;g5=g5+0x00001;g5=g5+0X001;aU=Sm[g5];g5=g5+1;do D5[4][aU[0X2]]=aU[5];end;aU=Sm[g5];g5=g5+0X1;D5[4]=e5[aU[2]];g5=g5+0x1;g5=g5+0X001;do g5=g5+0X1;end;local zO=(4);n5=4;(D5[n5])();n5=n5-1;do g5=g5+1;end;g5=g5+0X1;aU=Sm[g5];g5=g5+0x1;(D5)[4]=e5[aU[2]];aU=Sm[g5];do g5=g5+0X1;end;(D5)[5]=e5[aU[2]];g5=g5+0X01;D5[zO](D5[zO+1]);n5=zO-0X1;aU=Sm[g5];g5=g5+1;g5=aU[0X6];end;end;end;end;end;end;end;end;else if VU>=14 then if VU>=21 then do if VU<0X000019 then if VU<23 then if VU~=22 then do D5[5]=e5[aU[0X2]];end;g5=g5+0X1;n5=0X5;do(D5)[n5]=D5[n5]();end;g5=g5+1;g5=g5+1;do aU=Sm[g5];end;do g5=g5+1;end;if D5[5]then g5=aU[6];end;else D5[3]=e5[aU[2]];aU=Sm[g5];do g5=g5+0X1;end;(D5)[0x00003]=D5[3][aU[0X005]];g5=g5+0X1;g5=g5+0X1;aU=Sm[g5];g5=g5+1;D5[3]=D5[0x3][aU[0X00005]];aU=Sm[g5];g5=g5+0X00001;if not(aU[2]<D5[3])then g5=aU[0X7];end;end;else if VU~=24 then(D5)[0X03]=true;aU=Sm[g5];g5=g5+0X1;(e5)[aU[0X0002]]=D5[0X00003];aU=Sm[g5];g5=g5+0X0001;do g5=aU[6];end;else if D5[aU[6]]==aU[0X00005]then else g5=aU[7];end;end;end;else if not(VU<0X001b)then if VU~=0X01c then D5[0X0003]=e5[aU[2]];g5=g5+1;g5=g5+1;do aU=Sm[g5];end;g5=g5+0x1;if D5[3]then do g5=aU[6];end;end;else D5[0x4]=true;aU=Sm[g5];do g5=g5+1;end;do e5[aU[2]]=D5[4];end;aU=Sm[g5];do g5=g5+1;end;do g5=aU[6];end;end;else if VU==0x1A then repeat local sC,eC=Cm,D5;do if not(#sC>0)then else local OK=({});for QX,kX in I,sC do do for nc,Pc in I,kX do if Pc[0X1]==eC and Pc[2]>=0X0 then local KD=Pc[0x2];if not OK[KD]then(OK)[KD]={eC[KD]};end;(Pc)[1]=OK[KD];Pc[0X2]=1;end;end;end;end;end;end;until true;return;else(D5)[3]=e5[aU[2]];local Ps=(3);aU=Sm[g5];g5=g5+1;D5[0x4]=aU[0X2];g5=g5+1;(D5)[Ps]=D5[Ps](D5[Ps+1]);do n5=Ps;end;aU=Sm[g5];g5=g5+0x1;if not(not D5[3])then else do g5=aU[6];end;end;end;end;end;end;else if not(VU<0X11)then if VU>=19 then if VU~=0x14 then do D5[4]=e5[aU[0X0002]];end;g5=g5+0x001;g5=g5+1;aU=Sm[g5];g5=g5+0X1;(D5)[0X00004]=D5[4][aU[0X5]];aU=Sm[g5];do g5=g5+1;end;if not(not D5[4])then else g5=aU[0x6];end;else D5[0X4]=e5[aU[2]];aU=Sm[g5];g5=g5+0x0001;D5[0X004]=D5[4][aU[5]];aU=Sm[g5];do g5=g5+1;end;if not(not D5[4])then else do g5=aU[0X06];end;end;end;else if VU==0X00012 then local Fy=(2);local Xy=(bm[0]);(D5)[2]=Xy[1][Xy[0X2]];g5=g5+1;do g5=g5+1;end;aU=Sm[g5];do g5=g5+1;end;local xy=(D5[0x2]);D5[Fy+0x1]=xy;do(D5)[Fy]=xy[aU[0x005]];end;do g5=g5+1;end;Fy=0X2;do(D5)[Fy]=D5[Fy](D5[Fy+1]);end;n5=Fy;do g5=g5+1;end;do g5=g5+1;end;aU=Sm[g5];g5=g5+0x00001;if not D5[2]then g5=aU[0X6];end;else(D5)[0x004]=e5[aU[0x02]];g5=g5+1;do g5=g5+0x0001;end;aU=Sm[g5];g5=g5+1;D5[0X05]=e5[aU[2]];g5=g5+1;g5=g5+0x1;do aU=Sm[g5];end;local Cj=0X4;g5=g5+1;D5[6]=aU[0X0002];g5=g5+1;local Aj=(0X3);local rj=0X00003;if rj~=0 then n5=Cj+rj-0x1;end;local sj,nj=nil,(nil);do if rj~=1 then sj,nj=eH(D5[Cj](f(D5,Cj+1,n5)));else do sj,nj=eH(D5[Cj]());end;end;end;if Aj==1 then do n5=Cj-1;end;else do if Aj~=0X0 then sj=Cj+Aj-2;n5=sj+1;else sj=sj+Cj-1;n5=sj;end;end;local MI=(0);for Yz=Cj,sj do MI=MI+1;D5[Yz]=nj[MI];end;end;g5=g5+0X1;do(D5)[3]=D5[0x00005];end;g5=g5+1;D5[2]=D5[4];aU=Sm[g5];g5=g5+1;do g5=aU[6];end;end;end;else do if not(VU<0XF)then if VU==0X010 then D5[0X4]=e5[aU[0X02]];aU=Sm[g5];g5=g5+1;do D5[4][aU[2]]=aU[5];end;aU=Sm[g5];do g5=g5+1;end;(D5)[0X04]=e5[aU[0x2]];aU=Sm[g5];g5=g5+0X1;do if not D5[4]then g5=aU[6];end;end;else D5[aU[7]]={f({},1,aU[6])};end;else(D5)[2]=true;g5=g5+1;(D5)[3]=nil;aU=Sm[g5];g5=g5+0x00001;(D5)[0X004]=e5[aU[2]];g5=g5+0x1;do g5=g5+1;end;aU=Sm[g5];g5=g5+1;D5[4]=D5[4][aU[5]];g5=g5+1;g5=g5+0X1;aU=Sm[g5];g5=g5+1;if D5[0X4]then g5=aU[0x6];end;end;end;end;end;else do if VU<0X7 then if VU<3 then do if not(VU<0X00001)then if VU==0x2 then(D5)[aU[7]]=a(D5[aU[6]]);else for Nu=aU[0x0007],aU[6]do D5[Nu]=nil;end;end;else(D5)[0X4]=e5[aU[0X00002]];g5=g5+1;do g5=g5+1;end;do aU=Sm[g5];end;do g5=g5+0X01;end;(D5)[0x004]=D5[0X00004][aU[0X5]];g5=g5+0X00001;g5=g5+1;g5=g5+1;D5[3]=D5[0x4];do aU=Sm[g5];end;g5=g5+0X001;g5=aU[6];end;end;else do if not(VU>=5)then if VU==0X4 then do(D5)[5]=e5[aU[0x2]];end;g5=g5+1;do g5=g5+1;end;aU=Sm[g5];do g5=g5+0X0001;end;D5[5]=D5[0X0005][aU[5]];aU=Sm[g5];do g5=g5+0x1;end;do if D5[5]then g5=aU[6];end;end;else do D5[2]=e5[aU[0X2]];end;aU=Sm[g5];g5=g5+1;(D5)[2]=D5[0x2][aU[0x5]];aU=Sm[g5];do g5=g5+1;end;if not(not D5[0x0002])then else g5=aU[6];end;end;else if VU==6 then D5[3]=e5[aU[0X0002]];g5=g5+1;g5=g5+1;do aU=Sm[g5];end;g5=g5+1;D5[3]=D5[0x00003][aU[5]];g5=g5+0X00001;g5=g5+1;aU=Sm[g5];do g5=g5+0x1;end;if not D5[3]then g5=aU[6];end;else(D5)[5]=e5[aU[2]];g5=g5+1;do g5=g5+1;end;do aU=Sm[g5];end;g5=g5+0X0001;do(D5)[6]=aU[2];end;do g5=g5+1;end;(D5)[0x7]=true;local CE=(5);g5=g5+0X1;D5[CE]=D5[CE](D5[CE+1],D5[CE+0X02]);n5=CE;local TE=(D5[0X5]);g5=g5+0x00001;g5=g5+1;aU=Sm[g5];do g5=g5+0x1;end;CE=0X5;D5[CE+0x1]=TE;(D5)[CE]=TE[aU[5]];aU=Sm[g5];g5=g5+1;do(D5)[0X7]=aU[2];end;g5=g5+0X00001;CE=5;D5[CE]=D5[CE](D5[CE+0x1],D5[CE+0X2]);do n5=CE;end;aU=Sm[g5];g5=g5+0X00001;D5[5]=D5[0X0005][aU[0X5]];do aU=Sm[g5];end;do g5=g5+0X0001;end;g5=aU[0X6];end;end;end;end;else if VU<10 then if VU>=0x00008 then if VU~=9 then D5[2]=e5[aU[2]];aU=Sm[g5];g5=g5+1;D5[0X02]=D5[2][aU[0X0005]];do g5=g5+0X01;end;g5=g5+1;aU=Sm[g5];do g5=g5+0X00001;end;do if not(D5[0X2])then else g5=aU[0x6];end;end;else do(D5)[0X2]=e5[aU[2]];end;g5=g5+1;g5=g5+0X001;aU=Sm[g5];g5=g5+0X0001;D5[0X3]=aU[0X2];do g5=g5+1;end;local GV=(2);D5[GV]=D5[GV](D5[GV+0x00001]);n5=GV;do g5=g5+1;end;g5=g5+1;aU=Sm[g5];g5=g5+0X1;do if not D5[0X2]then g5=aU[6];end;end;end;else D5[0x4]=e5[aU[2]];do aU=Sm[g5];end;g5=g5+1;do D5[4]=D5[0X0004][aU[5]];end;do g5=g5+1;end;g5=g5+1;aU=Sm[g5];g5=g5+1;do D5[4]=D5[0X004][aU[0x00005]];end;g5=g5+0X01;g5=g5+0X1;aU=Sm[g5];g5=g5+1;if not(not(aU[2]<=D5[4]))then else do g5=aU[0X7];end;end;end;else do if VU>=12 then do if VU~=13 then local kg=(bm[1]);D5[3]=kg[1][kg[0X2]];aU=Sm[g5];local zg=(0x03);g5=g5+0X1;do D5[0x00003]=D5[3][aU[0X005]];end;g5=g5+1;do g5=g5+1;end;g5=g5+1;(D5)[4]=D5[2];g5=g5+1;do(D5)[zg]=D5[zg](D5[zg+1]);end;n5=zg;do g5=g5+1;end;g5=g5+0x001;aU=Sm[g5];g5=g5+0x0001;if not D5[0X3]then g5=aU[6];end;else if D5[aU[0X7]]then g5=aU[0X00006];end;end;end;else if VU~=11 then(D5)[4]=e5[aU[2]];g5=g5+0X1;g5=g5+0X1;aU=Sm[g5];g5=g5+0x1;(D5[0X4])[aU[0X02]]=aU[0X005];aU=Sm[g5];g5=g5+0X1;g5=aU[6];else(D5)[0x3]=e5[aU[0X00002]];g5=g5+1;g5=g5+1;aU=Sm[g5];g5=g5+0X00001;(D5)[4]=aU[2];local Xw=3;g5=g5+0X0001;(D5[Xw])(D5[Xw+0X001]);do n5=Xw-1;end;aU=Sm[g5];g5=g5+0X00001;g5=aU[0X6];end;end;end;end;end;end;end;end;end;end);if not(N5)then if e(K5)=="string"then do if p(K5,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if not(p(K5,"^.-:%d+: "))then(V)(K5,0);else V("Luraph Script:"..(Dm[g5-1]or"(internal)")..": "..v(K5),0X0);end;else(V)(K5,0X0);end;else if K5 then if r5~=1 then return D5[P5](f(D5,P5+0X1,n5));else return D5[P5]();end;elseif not(P5)then else do return f(D5,P5,r5);end;end;end;end;end;else Km=function(...)local fp=({});local Ep=0X001;local zp=(0x0);local xp=(K());local Rp={[1]=Xm,[2]=fp};local mp,dp=eH(...);mp=mp-1;for tD=0,mp do if km>tD then fp[tD]=dp[tD+0x001];else break;end;end;local gp=(xp==g and Qm or xp);if not Lm then do dp=nil;end;elseif Um then fp[km]={n=mp>=km and mp-km+0X1 or 0X0,f(dp,km+1,mp+1)};end;do if gp~=xp then w(Km,gp);end;end;local Zp,Jp,sp,qp=o(function()do while true do local KB=Sm[Ep];local GB=KB[0X4];Ep=Ep+1;if not(GB>=0Xb)then if not(GB>=5)then if GB<0X2 then do if GB~=1 then do fp[KB[0X007]]=gp[KB[0X2]];end;else local Md=(Zm[KB[6]]);local td=Md[3];local id=nil;local vd=#td;if not(vd>0)then else id={};for qS=0x001,vd do local ES=td[qS];do if ES[1]~=0 then(id)[qS-0X01]=bm[ES[0X02]];else do(id)[qS-0X001]={fp,ES[2]};end;end;end;end;M(Cm,id);end;(fp)[KB[0X7]]=dH(Md,id,gp);end;end;else if not(GB<3)then do if GB==0X4 then local ue,ce=KB[0X7],KB[0X6];if ce~=0x00 then zp=ue+ce-0X1;end;local De,Ye,Be=KB[1],nil,nil;if ce==0X1 then Ye,Be=eH(fp[ue]());else Ye,Be=eH(fp[ue](f(fp,ue+1,zp)));end;do if De~=0X01 then if De~=0 then Ye=ue+De-2;zp=Ye+0X1;else Ye=Ye+ue-0x1;zp=Ye;end;local ci=0;for JD=ue,Ye do do ci=ci+0x1;end;fp[JD]=Be[ci];end;else zp=ue-1;end;end;else fp[1]=gp[KB[2]];KB=Sm[Ep];Ep=Ep+0X1;fp[2]=gp[KB[0X2]];Ep=Ep+0X1;Ep=Ep+1;KB=Sm[Ep];Ep=Ep+1;do fp[2]=fp[2][KB[5]];end;KB=Sm[Ep];Ep=Ep+1;do(fp)[2]=fp[0X2][KB[0X00005]];end;KB=Sm[Ep];Ep=Ep+1;local id=(1);do fp[2]=fp[2][KB[0x5]];end;KB=Sm[Ep];Ep=Ep+0X1;(fp)[2]=fp[2][KB[0x005]];Ep=Ep+1;(fp)[id]=fp[id](fp[id+1]);zp=id;KB=Sm[Ep];Ep=Ep+0X1;if not(fp[1]<=KB[5])then Ep=KB[0x7];end;end;end;else(fp)[0X1]=gp[KB[0x2]];KB=Sm[Ep];do Ep=Ep+0X00001;end;do(fp)[0X02]=KB[0X002];end;KB=Sm[Ep];Ep=Ep+0X0001;do fp[3]=gp[KB[0x2]];end;KB=Sm[Ep];Ep=Ep+1;fp[3]=fp[0x03][KB[0x05]];KB=Sm[Ep];Ep=Ep+1;(fp)[0X00003]=fp[0x3][KB[0x5]];KB=Sm[Ep];do Ep=Ep+1;end;do fp[0X00003]=fp[0x003][KB[5]];end;Ep=Ep+0X00001;Ep=Ep+0x1;local g1=0X001;KB=Sm[Ep];Ep=Ep+0x01;(fp)[3]=fp[0X3][KB[5]];do Ep=Ep+0x1;end;Ep=Ep+0X1;KB=Sm[Ep];do Ep=Ep+0X1;end;fp[0X3]=fp[3][KB[0X00005]];Ep=Ep+1;fp[g1](fp[g1+1],fp[g1+2]);zp=g1-1;KB=Sm[Ep];Ep=Ep+1;Ep=KB[6];end;end;else if GB<8 then if not(GB>=0X0006)then do(fp)[KB[0X7]]=KB[0X00002];end;else if GB~=7 then fp[1]=gp[KB[0X2]];Ep=Ep+1;Ep=Ep+1;local QD=3;KB=Sm[Ep];do Ep=Ep+1;end;do fp[2]=KB[2];end;local qD=0;KB=Sm[Ep];Ep=Ep+0X1;(fp)[0X3]=gp[KB[2]];KB=Sm[Ep];Ep=Ep+1;(fp)[0x03]=fp[0x3][KB[5]];Ep=Ep+1;do Ep=Ep+1;end;KB=Sm[Ep];do Ep=Ep+1;end;fp[0X4]=KB[0X2];KB=Sm[Ep];Ep=Ep+0X1;do fp[0X5]=KB[0x0002];end;KB=Sm[Ep];Ep=Ep+1;(fp)[0X6]=KB[0X02];do Ep=Ep+1;end;local iD=4;if iD~=0x00 then zp=QD+iD-1;end;local aD,cD=nil,(nil);if iD~=1 then aD,cD=eH(fp[QD](f(fp,QD+1,zp)));else do aD,cD=eH(fp[QD]());end;end;if qD~=0x1 then if qD==0 then aD=aD+QD-0X00001;zp=aD;else aD=QD+qD-2;zp=aD+1;end;local ez=(0X0);for I7=QD,aD do ez=ez+1;do(fp)[I7]=cD[ez];end;end;else zp=QD-0x001;end;Ep=Ep+1;QD=1;(fp[QD])(f(fp,QD+0X1,zp));zp=QD-0X01;do KB=Sm[Ep];end;do Ep=Ep+0X1;end;Ep=KB[0X06];else(fp)[KB[7]]={f({},0x001,KB[0x00006])};end;end;else if GB>=9 then do if GB~=10 then if fp[KB[6]]~=KB[5]then Ep=KB[7];end;else fp[1]=gp[KB[0X2]];KB=Sm[Ep];do Ep=Ep+1;end;do fp[0x00002]=gp[KB[0x002]];end;KB=Sm[Ep];do Ep=Ep+0x1;end;fp[2]=fp[2][KB[5]];KB=Sm[Ep];Ep=Ep+0X1;do(fp)[2]=fp[2][KB[5]];end;KB=Sm[Ep];Ep=Ep+1;(fp)[0X2]=fp[0x2][KB[5]];Ep=Ep+0X1;Ep=Ep+0X1;KB=Sm[Ep];do Ep=Ep+0x00001;end;fp[2]=fp[2][KB[5]];do Ep=Ep+0X0001;end;do Ep=Ep+0X1;end;KB=Sm[Ep];Ep=Ep+0X1;local ji=0x1;(fp)[0X2]=fp[0X2][KB[5]];Ep=Ep+0X1;Ep=Ep+1;Ep=Ep+1;fp[ji]=fp[ji](fp[ji+1]);zp=ji;do KB=Sm[Ep];end;Ep=Ep+1;do if not(not(fp[0X0001]<=KB[5]))then else Ep=KB[0X7];end;end;end;end;else end;end;end;else if GB<17 then if not(GB<14)then if not(GB<15)then if GB==0X000010 then if not(not fp[KB[7]])then else Ep=KB[0x6];end;else Ep=KB[0x6];end;else do fp[1]=gp[KB[0X002]];end;Ep=Ep+0X1;do Ep=Ep+0X1;end;KB=Sm[Ep];Ep=Ep+0x0001;do if not(not fp[0X1])then else Ep=KB[6];end;end;end;else if not(GB<0X0c)then do if GB~=13 then for IL=KB[7],KB[0X0006]do(fp)[IL]=nil;end;else fp[1]=gp[KB[2]];Ep=Ep+0x1;Ep=Ep+1;KB=Sm[Ep];Ep=Ep+0X1;fp[2]=gp[KB[0x2]];Ep=Ep+1;Ep=Ep+0X1;do KB=Sm[Ep];end;do Ep=Ep+0X0001;end;(fp)[0X2]=fp[0X002][KB[0x005]];KB=Sm[Ep];Ep=Ep+0X1;do fp[2]=fp[0X00002][KB[5]];end;KB=Sm[Ep];do Ep=Ep+1;end;fp[2]=fp[2][KB[0X5]];KB=Sm[Ep];Ep=Ep+0X01;(fp)[0X002]=fp[0X2][KB[0x05]];local Pa=1;Ep=Ep+0X1;do Ep=Ep+1;end;do Ep=Ep+1;end;fp[Pa]=fp[Pa](fp[Pa+0x1]);do zp=Pa;end;Ep=Ep+1;Ep=Ep+1;do KB=Sm[Ep];end;Ep=Ep+1;if not(not(fp[1]<=KB[5]))then else Ep=KB[7];end;end;end;else(fp)[1]=gp[KB[2]];Ep=Ep+0X001;Ep=Ep+1;KB=Sm[Ep];do Ep=Ep+1;end;fp[0X2]=KB[0x00002];KB=Sm[Ep];Ep=Ep+0X1;do fp[3]=gp[KB[0x2]];end;KB=Sm[Ep];do Ep=Ep+0X1;end;do fp[0X3]=fp[3][KB[0x5]];end;do Ep=Ep+0X0001;end;Ep=Ep+1;KB=Sm[Ep];Ep=Ep+1;(fp)[4]=KB[2];KB=Sm[Ep];Ep=Ep+0X01;fp[0X5]=KB[0X00002];local h_=0;do KB=Sm[Ep];end;local d_=3;Ep=Ep+1;(fp)[6]=KB[0x002];Ep=Ep+0X1;local u_=4;if u_~=0X0 then zp=d_+u_-0X1;end;local y_,w_=nil,(nil);do if u_==0X00001 then y_,w_=eH(fp[d_]());else y_,w_=eH(fp[d_](f(fp,d_+1,zp)));end;end;if h_==0X1 then do zp=d_-0X1;end;else if h_~=0 then y_=d_+h_-0x2;zp=y_+0X001;else y_=y_+d_-1;do zp=y_;end;end;local W9=(0);for aG=d_,y_ do W9=W9+1;fp[aG]=w_[W9];end;end;Ep=Ep+1;d_=1;(fp[d_])(f(fp,d_+0x01,zp));zp=d_-0X1;Ep=Ep+0X1;Ep=Ep+0X1;KB=Sm[Ep];do Ep=Ep+1;end;Ep=KB[0X6];end;end;else if not(GB>=20)then if GB>=0X12 then if GB~=19 then(fp)[KB[0x7]]=fp[KB[6]]^fp[KB[0X1]];else(fp)[KB[0X7]]=fp[KB[6]]<fp[KB[1]];end;else repeat local G1,t1=Cm,(fp);if not(#G1>0X00)then else local yi=({});for jF,hF in I,G1 do for GV,oV in I,hF do if not(oV[0x1]==t1 and oV[0X2]>=0)then else local ER=(oV[0X2]);if not yi[ER]then yi[ER]={t1[ER]};end;do(oV)[1]=yi[ER];end;(oV)[0X2]=1;end;end;end;end;until true;do return;end;end;else if not(GB>=0X15)then local f5=KB[7];local I5,Q5,V5=fp[f5],fp[f5+1],(fp[f5+2]);(fp)[f5]=r(function()for OF=I5,Q5,V5 do(C)(true,OF);end;end);Ep=KB[0X6];else if GB==0X16 then do if not(not(fp[KB[0X00006]]<=fp[KB[0X1]]))then else Ep=KB[7];end;end;else(fp)[KB[7]]=fp[KB[0X6]]+fp[KB[1]];end;end;end;end;end;end;end;end);if not(Zp)then do if e(Jp)~='\s\116r\ing'then(V)(Jp,0);else do if not(p(Jp,"\097t\116\e\109\p\116\ \116\o\ \121\105\e\108\100\ a\cr\os\s\ m\et\097m\eth\111\d\047C\037\-c\097\108l\032bo\117\110\d\097\114\y"))then else return coroutine.yield();end;end;do if p(Jp,"\^\.\-\058\037d+: ")then(V)('\Lura\112\h\ \Scr\i\p\116\:'..(Dm[Ep-1]or"(internal)")..'\058\ '..v(Jp),0);else(V)(Jp,0);end;end;end;end;else do if Jp then if qp~=0X00001 then return fp[sp](f(fp,sp+1,zp));else return fp[sp]();end;elseif not(sp)then else do return f(fp,sp,qp);end;end;end;end;end;end;else do if not(xm>=96)then Km=function(...)local r7,V7=0X1,{};local l7=(K());local j7,F7,n7={[2]=V7,[1]=Xm},(l7==g and Qm or l7),(0X0);local u7,t7=eH(...);do u7=u7-1;end;for wl=0,u7 do do if not(km>wl)then break;else V7[wl]=t7[wl+1];end;end;end;if not Lm then t7=nil;elseif not(Um)then else V7[km]={n=u7>=km and u7-km+1 or 0,f(t7,km+0x1,u7+1)};end;if F7==l7 then else w(Km,F7);end;local Y7,f7,y7,I7=o(function()while true do local cy=(Sm[r7]);local Cy=cy[4];r7=r7+0X1;if Cy>=0x0A then if not(Cy>=0xf)then if not(Cy>=12)then if Cy~=11 then local dN=(Zm[cy[6]]);local AN,qN=dN[0X00003],nil;local hN=(#AN);if hN>0 then qN={};do for g4=0X001,hN do local A4=(AN[g4]);if A4[0X1]~=0 then do qN[g4-1]=bm[A4[2]];end;else(qN)[g4-1]={V7,A4[0X002]};end;end;end;M(Cm,qN);end;(V7)[cy[0X00007]]=dH(dN,qN,F7);else do(V7)[0X0]=F7[cy[0X0002]];end;do r7=r7+1;end;r7=r7+1;cy=Sm[r7];r7=r7+1;r7=cy[6];end;else if not(Cy>=0Xd)then local V0=bm[0];(V7)[0]=V0[0x00001][V0[2]];cy=Sm[r7];local q0=(0);r7=r7+1;local T0=(V7[0]);do V7[q0+0X01]=T0;end;V7[q0]=T0[cy[0x5]];r7=r7+1;q0=0;do V7[q0]=V7[q0](V7[q0+0X001]);end;n7=q0;do r7=r7+0X001;end;r7=r7+1;do cy=Sm[r7];end;r7=r7+1;r7=cy[0x006];else if Cy~=14 then if not(V7[cy[0X6]]<V7[cy[1]])then else r7=cy[0X7];end;else do r7=cy[6];end;end;end;end;else if Cy<17 then do if Cy==0X10 then if V7[cy[0X6]]<=V7[cy[0X0001]]then r7=cy[0X7];end;else repeat local hD,CD=Cm,V7;if#hD>0 then local ey={};do for vp,wp in I,hD do for iN,hN in I,wp do if hN[1]==CD and hN[0x00002]>=0X0 then local HU=(hN[0X2]);do if not ey[HU]then do(ey)[HU]={CD[HU]};end;end;end;(hN)[1]=ey[HU];do(hN)[0X2]=0X1;end;end;end;end;end;end;until true;local ci=(cy[0X7]);return false,ci,ci;end;end;else if Cy<0X12 then(V7)[cy[0X7]]=F7[cy[0X002]];else if Cy~=19 then do(V7)[cy[7]]={f({},0X1,cy[6])};end;else do for YX=cy[0x7],cy[6]do(V7)[YX]=nil;end;end;end;end;end;end;else if Cy<5 then do if not(Cy<0X002)then if Cy<3 then(V7)[cy[0X7]]=cy[2];else if Cy~=0x04 then else local ZE,uE=u7-km,cy[7];if ZE<0 then ZE=-0x1;end;for AW=uE,uE+ZE do V7[AW]=t7[km+(AW-uE)+1];end;n7=uE+ZE;end;end;else if Cy~=1 then V7[0X00]=F7[cy[2]];do cy=Sm[r7];end;r7=r7+1;do V7[0]=V7[0X0][cy[5]];end;cy=Sm[r7];r7=r7+0X1;if not(V7[0])then else r7=cy[0X006];end;else local Da=cy[0x07];for St=Da,Da+(cy[6]-1)do(V7)[St]=t7[km+(St-Da)+0X1];end;end;end;end;else if not(Cy>=0X7)then if Cy==0X6 then if V7[cy[6]]~=V7[cy[0X1]]then r7=cy[7];end;else do if not(not V7[cy[0X007]])then else r7=cy[6];end;end;end;else if Cy>=8 then if Cy==0x9 then V7[cy[7]]=V7[cy[0x6]]>V7[cy[0X1]];else repeat local br,lr,Xr=Cm,V7,cy[0x7];do if not(#br>0X00000)then else local GD={};for gV,LV in I,br do for gX,PX in I,LV do if PX[1]==lr and PX[2]>=Xr then local Mz=PX[2];do if not(not GD[Mz])then else GD[Mz]={lr[Mz]};end;end;do PX[1]=GD[Mz];end;do PX[2]=0x1;end;end;end;end;end;end;until true;end;else repeat local eW,zW=Cm,(V7);if not(#eW>0X0)then else local d7=({});for ix,fx in I,eW do for WH,NH in I,fx do do if not(NH[0X1]==zW and NH[2]>=0X0)then else local c7=(NH[0X2]);do if not(not d7[c7])then else(d7)[c7]={zW[c7]};end;end;NH[0X1]=d7[c7];(NH)[0x2]=0X1;end;end;end;end;end;until true;return;end;end;end;end;end;end);do if not(Y7)then do if e(f7)=="string"then if not(p(f7,'\097\116\116\101mpt\032\116o\ \121\ie\ld\032a\099\114o\115\115\ \109\eta\m\101t\h\o\100/\C%\-ca\108\l\ \098\o\117n\d\097r\121'))then else do return coroutine.yield();end;end;do if p(f7,"^\046\-\:\%\d+:\ ")then(V)('L\117\114\097\112\h \S\cri\112t\058'..(Dm[r7-0X1]or"\(\i\110\116\101\114\110al\)")..'\:\ '..v(f7),0);else(V)(f7,0);end;end;else(V)(f7,0X00);end;end;else if f7 then if I7~=1 then return V7[y7](f(V7,y7+1,n7));else do return V7[y7]();end;end;elseif y7 then return f(V7,y7,I7);end;end;end;end;else if xm~=0X0061 then Km=function(...)local mu=(0X00000);local Au=1;local du={};local Iu=(K());local Tu=({[2]=du,[1]=Xm});local Cu,Bu=eH(...);local au=((Iu==g and Qm or Iu));Cu=Cu-0X1;for Fw=0X0,Cu do if not(km>Fw)then break;else du[Fw]=Bu[Fw+0X1];end;end;if not Lm then Bu=nil;elseif Um then(du)[km]={n=Cu>=km and Cu-km+1 or 0,f(Bu,km+1,Cu+1)};end;if au==Iu then else(w)(Km,au);end;local Vu,hu,Ju,iu=o(function()while true do local M7=(Sm[Au]);local z7=M7[0x4];do Au=Au+1;end;if z7>=0X9 then if not(z7<0x0000d)then do if z7>=15 then do if not(z7<16)then if z7==0X11 then du[M7[7]][du[M7[6]]]=du[M7[0X0001]];else(du)[M7[7]]=du[M7[6]]~=du[M7[1]];end;else do if not(not(du[M7[0X6]]<du[M7[1]]))then else Au=M7[0X07];end;end;end;end;else if z7==0XE then local rT=M7[7];local LT=(M7[6]);mu=rT+LT-0x1;repeat local we,qe=Cm,du;do if not(#we>0X0)then else local ct={};do for gA,bA in I,we do do for Yc,Zc in I,bA do if not(Zc[0X1]==qe and Zc[0x2]>=0X00)then else local hd=(Zc[2]);if not ct[hd]then(ct)[hd]={qe[hd]};end;do(Zc)[0x0001]=ct[hd];end;(Zc)[0X0002]=0x0001;end;end;end;end;end;end;end;until true;return true,rT,LT;else do(du)[M7[7]]=M7[2];end;end;end;end;else if not(z7>=11)then if z7~=10 then for R1=M7[7],M7[0X6]do(du)[R1]=nil;end;else du[0]=au[M7[2]];M7=Sm[Au];Au=Au+1;local qj,kj=du[0X00],(nil);local lj=0x0;do du[lj+1]=qj;end;do(du)[lj]=qj[M7[0X5]];end;M7=Sm[Au];Au=Au+0x1;du[2]=M7[0X0002];Au=Au+1;lj=0;do du[lj]=du[lj](du[lj+1],du[lj+2]);end;mu=lj;Au=Au+0X01;Au=Au+0x01;M7=Sm[Au];Au=Au+0X1;(du)[0X1]=au[M7[2]];do M7=Sm[Au];end;Au=Au+0X1;du[1]=du[0X001][M7[0X5]];do Au=Au+0x0001;end;Au=Au+0X1;M7=Sm[Au];Au=Au+1;local Fj=Zm[M7[0X0006]];local Yj=Fj[3];local Vj=#Yj;if Vj>0X0 then kj={};for Ca=1,Vj do local va=Yj[Ca];do if va[1]~=0 then do(kj)[Ca-0X01]=bm[va[0X2]];end;else(kj)[Ca-0x00001]={du,va[0X2]};end;end;end;M(Cm,kj);end;do du[2]=dH(Fj,kj,au);end;Au=Au+0X1;lj=0X1;(du[lj])(du[lj+1]);mu=lj-0X00001;do Au=Au+0X001;end;do Au=Au+1;end;do Au=Au+0X01;end;repeat local xp,qp=Cm,(du);do if#xp>0X0 then local aZ={};do for BS,aS in I,xp do for q1,X1 in I,aS do do if X1[0X00001]==qp and X1[2]>=0 then local Z1=X1[0X2];if not aZ[Z1]then aZ[Z1]={qp[Z1]};end;do(X1)[0X00001]=aZ[Z1];end;X1[2]=0X0001;end;end;end;end;end;end;end;until true;do return;end;end;else if z7~=0Xc then local kG=M7[7];for YO=kG,kG+(M7[0X0006]-0X1)do do(du)[YO]=Bu[km+(YO-kG)+0X1];end;end;else(du)[M7[0X7]]=au[M7[2]];end;end;end;else if not(z7>=0X004)then do if z7<0X2 then if z7~=0x1 then Au=M7[6];else du[M7[7]]=du[M7[6]]-du[M7[1]];end;else if z7==0X3 then do du[M7[7]]=a(du[M7[6]]);end;else if not(du[M7[7]])then else do Au=M7[0X6];end;end;end;end;end;else if z7>=0x6 then if z7>=7 then if z7==0x8 then(du)[M7[7]]={f({},0X0001,M7[0X006])};else end;else do du[M7[0X7]]=true;end;end;else if z7~=5 then local O3=(M7[7]);local r3,M3=du[O3]();if not(r3)then else for M6=0x1,M7[0X01]do do(du)[O3+M6]=M3[M6];end;end;Au=M7[6];end;else local mR=Zm[M7[6]];local VR=(nil);local vR=mR[3];local HR=(#vR);do if HR>0 then VR={};for yL=0X1,HR do local GL=vR[yL];if GL[1]==0x0 then do VR[yL-1]={du,GL[0X0002]};end;else(VR)[yL-1]=bm[GL[2]];end;end;M(Cm,VR);end;end;du[M7[0x00007]]=dH(mR,VR,au);end;end;end;end;end;end);if Vu then if hu then do if iu==1 then return du[Ju]();else return du[Ju](f(du,Ju+1,mu));end;end;elseif not(Ju)then else return f(du,Ju,iu);end;else do if e(hu)=="string"then if p(hu,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if not(p(hu,"^.-:%d+: "))then V(hu,0X00000);else(V)("\Lura\ph\ \S\cr\i\pt\:"..(Dm[Au-1]or"\(in\116\e\114\110\097l\041").."\:\ "..v(hu),0X000);end;end;else(V)(hu,0X0);end;end;end;end;else Km=function(...)local g1=({});local Z1=1;local H1=K();local c1={[1]=Xm,[2]=g1};local R1=(H1==g and Qm or H1);local s1,F1=eH(...);s1=s1-0X001;for Jn=0,s1 do if km>Jn then do(g1)[Jn]=F1[Jn+0X001];end;else break;end;end;local k1=(0x00);do if not Lm then F1=nil;elseif Um then g1[km]={n=s1>=km and s1-km+1 or 0,f(F1,km+1,s1+1)};end;end;do if R1~=H1 then(w)(Km,R1);end;end;local p1,y1,m1,w1=o(function()while true do local y0=Sm[Z1];local c0=y0[0X0004];Z1=Z1+0X1;if c0<17 then do if c0>=8 then if not(c0>=0xC)then do if c0<10 then if c0==0X9 then local UL=(bm[0]);g1[0X02]=UL[1][UL[0X02]];Z1=Z1+1;Z1=Z1+1;local qL=0X00002;do y0=Sm[Z1];end;do Z1=Z1+1;end;local wL=(g1[2]);(g1)[qL+0X1]=wL;g1[qL]=wL[y0[5]];do Z1=Z1+1;end;qL=2;(g1[qL])(g1[qL+1]);k1=qL-1;Z1=Z1+1;Z1=Z1+1;y0=Sm[Z1];Z1=Z1+0X001;Z1=y0[0X6];else g1[2]=R1[y0[0x2]];local JC=(2);y0=Sm[Z1];do Z1=Z1+0X001;end;(g1)[3]=y0[2];Z1=Z1+1;g1[JC](g1[JC+1]);k1=JC-0X1;Z1=Z1+1;Z1=Z1+0X1;do y0=Sm[Z1];end;Z1=Z1+1;do Z1=y0[0X006];end;end;else if c0==0XB then(g1)[0X0]=R1[y0[0X2]];do Z1=Z1+1;end;do Z1=Z1+0X1;end;y0=Sm[Z1];Z1=Z1+1;(g1)[0X01]=y0[2];local SE=(0);y0=Sm[Z1];Z1=Z1+0X001;(g1)[2]=y0[0X2];Z1=Z1+0X001;(g1)[SE]=g1[SE](g1[SE+0X1],g1[SE+2]);do k1=SE;end;Z1=Z1+0X0001;do Z1=Z1+1;end;do y0=Sm[Z1];end;Z1=Z1+0X1;(g1)[1]=R1[y0[0X00002]];Z1=Z1+0X1;Z1=Z1+1;y0=Sm[Z1];do Z1=Z1+0X0001;end;do g1[0X2]=y0[2];end;y0=Sm[Z1];Z1=Z1+0X1;g1[3]=R1[y0[0X2]];Z1=Z1+1;Z1=Z1+1;Z1=Z1+1;(g1)[4]=g1[0X00];do Z1=Z1+1;end;local HE=(2);SE=0X3;(g1)[SE]=g1[SE](g1[SE+1]);do k1=SE;end;Z1=Z1+1;Z1=Z1+0X1;Z1=Z1+0x0001;g1[2]=g1[HE]..g1[HE+1];y0=Sm[Z1];Z1=Z1+0X0001;(g1[0x1])[y0[2]]=g1[2];y0=Sm[Z1];Z1=Z1+0X1;Z1=y0[0x00006];else local Ut=bm[1];g1[3]=Ut[1][Ut[2]];do Z1=Z1+0X001;end;do Z1=Z1+1;end;do y0=Sm[Z1];end;Z1=Z1+0X1;g1[0X3]=g1[3][y0[0X5]];do Z1=Z1+1;end;(g1)[0X4]=g1[0X2];Z1=Z1+1;local Xt=3;Ut=bm[0X0];g1[0x5]=Ut[0X1][Ut[2]];Z1=Z1+0X0001;(g1)[6]=nil;Z1=Z1+1;do(g1)[7]={};end;y0=Sm[Z1];local xt=Zm[y0[0X00006]];Z1=Z1+1;local Jt,Ct=nil,(xt[3]);local tt=(#Ct);do if tt>0 then do Jt={};end;for MZ=1,tt do local tZ=(Ct[MZ]);if tZ[0X1]==0X0 then do(Jt)[MZ-1]={g1,tZ[0X2]};end;else(Jt)[MZ-1]=bm[tZ[2]];end;end;M(Cm,Jt);end;end;do g1[8]=dH(xt,Jt,R1);end;do y0=Sm[Z1];end;Z1=Z1+0x1;(g1[0X07])[y0[0x2]]=g1[0X8];Z1=Z1+1;k1=Xt+5-1;(g1[Xt])(f(g1,Xt+1,k1));k1=Xt-0X1;do Z1=Z1+0X1;end;Ut=bm[0];g1[3]=Ut[0X00001][Ut[0X002]];y0=Sm[Z1];local Yt=g1[0x3];Z1=Z1+0X001;Xt=0X3;(g1)[Xt+1]=Yt;g1[Xt]=Yt[y0[0x5]];Z1=Z1+1;Xt=3;g1[Xt](g1[Xt+1]);k1=Xt-1;Z1=Z1+1;Z1=Z1+1;y0=Sm[Z1];Z1=Z1+1;do Z1=y0[0x6];end;end;end;end;else if not(c0>=0X000E)then if c0~=0X00d then do(g1)[y0[7]]={f({},0X1,y0[0X06])};end;else do for Ts=y0[0X00007],y0[6]do g1[Ts]=nil;end;end;end;else if c0>=0XF then do if c0~=0X0010 then g1[0x1]=R1[y0[2]];do Z1=Z1+0X0001;end;Z1=Z1+0X00001;y0=Sm[Z1];Z1=Z1+1;(g1)[0x0001]=g1[0X1][y0[0X0005]];y0=Sm[Z1];do Z1=Z1+1;end;if not(not g1[1])then else do Z1=y0[6];end;end;else local pA,dA=y0[7],y0[0X6];k1=pA+dA-1;do repeat local zb,yb=Cm,g1;if#zb>0 then local AT=({});for wh,Th in I,zb do for qv,pv in I,Th do do if not(pv[1]==yb and pv[0X00002]>=0)then else local CU=pv[0X2];if not AT[CU]then AT[CU]={yb[CU]};end;pv[1]=AT[CU];(pv)[0x2]=0X1;end;end;end;end;end;until true;end;do return true,pA,dA;end;end;end;else do(g1)[3]=R1[y0[0X2]];end;do Z1=Z1+1;end;do Z1=Z1+1;end;y0=Sm[Z1];Z1=Z1+0x001;do if not(g1[0X3])then else Z1=y0[6];end;end;end;end;end;else if c0>=0X4 then if not(c0<6)then do if c0~=7 then(g1)[0X0]=R1[y0[0X002]];Z1=Z1+0X01;do Z1=Z1+0X1;end;y0=Sm[Z1];Z1=Z1+0X001;if not(g1[0])then else do Z1=y0[0X06];end;end;else(g1)[2]=R1[y0[2]];y0=Sm[Z1];do Z1=Z1+1;end;(g1)[3]=y0[0X2];do Z1=Z1+0X1;end;local oV=2;g1[oV]=g1[oV](g1[oV+0X01]);k1=oV;y0=Sm[Z1];Z1=Z1+0X01;if g1[0X002]then Z1=y0[0X6];end;end;end;else if c0==0X005 then else local Mf=bm[0X0];local cf=1;(g1)[0X1]=Mf[1][Mf[2]];y0=Sm[Z1];do Z1=Z1+0x1;end;local df=(g1[0X0001]);(g1)[cf+0X1]=df;(g1)[cf]=df[y0[0X5]];do Z1=Z1+0X01;end;cf=1;do g1[cf]=g1[cf](g1[cf+1]);end;k1=cf;y0=Sm[Z1];Z1=Z1+1;if not g1[0X1]then do Z1=y0[6];end;end;end;end;else if c0>=0X00002 then if c0~=3 then do g1[3]=R1[y0[0x02]];end;y0=Sm[Z1];do Z1=Z1+1;end;(g1)[3]=g1[3][y0[5]];y0=Sm[Z1];Z1=Z1+0x1;if not(g1[0X3])then else Z1=y0[0X6];end;else local p5=bm[0X000];g1[0x1]=p5[1][p5[2]];y0=Sm[Z1];local n5=(1);do Z1=Z1+0X1;end;local H5=g1[0x1];g1[n5+1]=H5;g1[n5]=H5[y0[5]];Z1=Z1+0X0001;n5=0X1;(g1[n5])(g1[n5+1]);k1=n5-1;Z1=Z1+1;do repeat local CI,PI=Cm,g1;if#CI>0 then local Rq=({});for Zf,Af in I,CI do do for SR,TR in I,Af do if TR[1]==PI and TR[0X2]>=0 then local ZI=(TR[2]);if not(not Rq[ZI])then else do Rq[ZI]={PI[ZI]};end;end;(TR)[1]=Rq[ZI];do(TR)[0X2]=0x1;end;end;end;end;end;end;until true;end;return;end;else if c0==0X1 then g1[y0[0X00007]]=y0[2];else(g1)[0X1]=R1[y0[0x2]];Z1=Z1+1;Z1=Z1+1;y0=Sm[Z1];Z1=Z1+1;do g1[0X1]=g1[0X00001][y0[5]];end;y0=Sm[Z1];local x2=1;Z1=Z1+1;g1[0X2]=y0[0X02];Z1=Z1+0X1;g1[x2]=g1[x2](g1[x2+0X1]);do k1=x2;end;y0=Sm[Z1];Z1=Z1+1;if not g1[0X001]then do Z1=y0[0x6];end;end;end;end;end;end;end;else if c0<25 then if c0<0X00015 then if c0<19 then if c0~=18 then g1[0X1]=R1[y0[2]];y0=Sm[Z1];Z1=Z1+1;(g1)[2]=y0[2];do y0=Sm[Z1];end;Z1=Z1+1;local RR=(0x1);g1[3]=y0[0x2];Z1=Z1+1;g1[RR]=g1[RR](g1[RR+0X1],g1[RR+0x2]);k1=RR;Z1=Z1+1;Z1=Z1+0x1;do y0=Sm[Z1];end;Z1=Z1+1;do g1[0x0002]=R1[y0[0X2]];end;y0=Sm[Z1];Z1=Z1+0X1;do g1[0X3]=y0[2];end;do y0=Sm[Z1];end;do Z1=Z1+0X1;end;(g1)[0x00004]=R1[y0[0x2]];Z1=Z1+1;g1[0x05]=g1[1];local XR=(3);Z1=Z1+0x00001;RR=4;(g1)[RR]=g1[RR](g1[RR+0x001]);k1=RR;Z1=Z1+0X1;do g1[0x3]=g1[XR]..g1[XR+1];end;do y0=Sm[Z1];end;Z1=Z1+0x1;do(g1[0x00002])[y0[2]]=g1[0x3];end;Z1=Z1+0X1;g1[2]=g1[1];y0=Sm[Z1];Z1=Z1+1;if g1[2]then Z1=y0[0X6];end;else do(g1)[2]=R1[y0[0X02]];end;Z1=Z1+0X001;Z1=Z1+0x1;y0=Sm[Z1];Z1=Z1+1;g1[2]=g1[2][y0[5]];Z1=Z1+0X1;Z1=Z1+0X01;y0=Sm[Z1];do Z1=Z1+0x0001;end;do if not(not g1[2])then else do Z1=y0[6];end;end;end;end;else if c0~=0x00014 then(g1)[y0[0X7]]=R1[y0[2]];else local ov,Xv=y0[7],((y0[0X1]-0X1)*0X32);local Sv=(g1[ov]);for AZ=0X1,y0[6]do(Sv)[Xv+AZ]=g1[ov+AZ];end;end;end;else if c0>=23 then do if c0~=24 then do repeat local mA,YA=Cm,g1;if not(#mA>0)then else local P6=({});for jc,Zc in I,mA do for lF,sF in I,Zc do if sF[1]==YA and sF[2]>=0x0 then local zt=sF[2];do if not(not P6[zt])then else P6[zt]={YA[zt]};end;end;sF[0X00001]=P6[zt];sF[0X2]=0x001;end;end;end;end;until true;end;do return;end;else(g1)[y0[7]]=g1[y0[6]]<g1[y0[1]];end;end;else if c0==0X16 then(g1)[0x1]=R1[y0[2]];Z1=Z1+0x1;Z1=Z1+0X0001;y0=Sm[Z1];do Z1=Z1+1;end;(g1)[0X00001]=g1[0x1][y0[0X5]];do y0=Sm[Z1];end;Z1=Z1+1;do if not g1[0X1]then Z1=y0[6];end;end;else local Ax=(bm[0X0000]);do g1[2]=Ax[1][Ax[2]];end;local Xx=2;y0=Sm[Z1];do Z1=Z1+0X1;end;local Fx=(g1[2]);g1[Xx+1]=Fx;do g1[Xx]=Fx[y0[0X5]];end;do Z1=Z1+1;end;do(g1)[4]=true;end;Z1=Z1+0X1;Xx=2;g1[Xx](g1[Xx+0X01],g1[Xx+0X2]);k1=Xx-1;y0=Sm[Z1];do Z1=Z1+0X1;end;do(g1)[2]=R1[y0[2]];end;do Z1=Z1+0X001;end;do Z1=Z1+1;end;y0=Sm[Z1];Z1=Z1+1;(g1)[0X3]=R1[y0[2]];Z1=Z1+0X1;do Xx=2;end;do g1[Xx]=g1[Xx](g1[Xx+1]);end;k1=Xx;Z1=Z1+0X1;Z1=Z1+0X1;Z1=Z1+0x1;do Ax=bm[0x0001];end;(g1)[0X3]=Ax[0x1][Ax[2]];Z1=Z1+0X1;Z1=Z1+1;do y0=Sm[Z1];end;do Z1=Z1+1;end;do(g1)[0X003]=g1[3][y0[0x5]];end;Z1=Z1+1;do g1[0X04]=g1[2];end;Z1=Z1+1;Xx=0X0003;do g1[Xx]=g1[Xx](g1[Xx+1]);end;do k1=Xx;end;Z1=Z1+0X1;Z1=Z1+1;y0=Sm[Z1];Z1=Z1+0X00001;if not(not g1[0x03])then else Z1=y0[6];end;end;end;end;else if not(c0>=29)then if c0>=27 then do if c0==28 then g1[0X03]=R1[y0[0x2]];Z1=Z1+0x01;Z1=Z1+0X1;y0=Sm[Z1];Z1=Z1+1;g1[0X3]=g1[0X3][y0[0x5]];y0=Sm[Z1];Z1=Z1+1;if not(g1[3])then else Z1=y0[6];end;else Z1=y0[6];end;end;else if c0==0X1A then local dZ,bZ=2,(g1[0x2]);(g1)[dZ+0X1]=bZ;g1[dZ]=bZ[y0[5]];y0=Sm[Z1];Z1=Z1+1;(g1)[4]=y0[0X2];Z1=Z1+0X1;dZ=0X002;(g1)[dZ]=g1[dZ](g1[dZ+1],g1[dZ+0x2]);k1=dZ;y0=Sm[Z1];Z1=Z1+0X1;do if not(g1[0X2])then else do Z1=y0[0X06];end;end;end;else(g1)[y0[7]]=g1[y0[0X0006]];end;end;else if not(c0>=31)then if c0==30 then g1[1]=R1[y0[2]];Z1=Z1+1;k1=0X0001;g1[k1]=g1[k1]();y0=Sm[Z1];Z1=Z1+1;if g1[0X00001]then do Z1=y0[0x6];end;end;else local EG=(y0[7]);local zG,sG,kG=g1[EG],g1[EG+1],(g1[EG+0X2]);g1[EG]=r(function()for yo=zG,sG,kG do(C)(true,yo);end;end);do Z1=y0[0X6];end;end;else do if not(c0>=32)then if not(g1[y0[6]]<y0[5])then Z1=y0[0X0007];end;else if c0==33 then g1[y0[7]]=a(g1[y0[0X06]]);else local Mu=nil;local Ru=Zm[y0[6]];local Xu=(Ru[0x3]);local Ju=#Xu;if Ju>0X0 then Mu={};for Ie=0X1,Ju do local le=(Xu[Ie]);if le[1]==0X00000 then do Mu[Ie-1]={g1,le[2]};end;else do Mu[Ie-0X1]=bm[le[2]];end;end;end;M(Cm,Mu);end;(g1)[y0[7]]=dH(Ru,Mu,R1);end;end;end;end;end;end;end;end;end);if not(p1)then do if e(y1)~="string"then V(y1,0);else if p(y1,'\097t\116\em\pt\ \116\o\ yi\el\d \097cro\s\115 \109etam\e\116\104od\/\C%\-\cal\l \098\o\117n\dar\y')then return coroutine.yield();end;if not(p(y1,"\^\.-\:\%\d+\:\ "))then V(y1,0);else(V)("Luraph Script:"..(Dm[Z1-0X1]or"(internal)").."\058 "..v(y1),0X00);end;end;end;else if y1 then if w1==0x00001 then return g1[m1]();else return g1[m1](f(g1,m1+0X1,k1));end;elseif m1 then return f(g1,m1,w1);end;end;end;end;end;end;end;end;else if xm<0x65 then if not(xm<99)then if xm==0x64 then Km=function(...)local OR=({});local xR=0;local iR=0X1;local VR=(K());local MR={[1]=Xm,[2]=OR};local PR,yR=eH(...);PR=PR-1;for Yr=0x00000,PR do if not(km>Yr)then break;else OR[Yr]=yR[Yr+0x1];end;end;local wR=(VR==g and Qm or VR);if not Lm then do yR=nil;end;elseif not(Um)then else OR[km]={n=PR>=km and PR-km+1 or 0,f(yR,km+0X00001,PR+0x1)};end;if wR==VR then else(w)(Km,wR);end;local ZR,fR,mR,WR=o(function()while true do local Fv=(Sm[iR]);local Kv=Fv[0X4];iR=iR+1;if Kv>=7 then if Kv>=10 then do if not(Kv>=12)then do if Kv==11 then do(OR)[Fv[7]]=OR[Fv[6]]/OR[Fv[0X01]];end;else local dX=(OR[Fv[0X6]]);local hX=(Fv[0X7]);(OR)[hX+1]=dX;(OR)[hX]=dX[Fv[5]];end;end;else if Kv==0xD then do OR[Fv[0X007]]=not OR[Fv[0X6]];end;else do for vE=Fv[0x7],Fv[6]do do OR[vE]=nil;end;end;end;end;end;end;else do if Kv<8 then OR[Fv[7]]=Fv[2];else do if Kv==9 then OR[Fv[7]]={f({},1,Fv[6])};else end;end;end;end;end;else if Kv>=3 then if Kv<5 then if Kv==0X4 then wR[Fv[0x2]]=OR[Fv[7]];else(OR)[Fv[0X7]]=wR[Fv[0X002]];end;else if Kv==6 then OR[0X0]=wR[Fv[2]];do iR=iR+0x0001;end;iR=iR+1;Fv=Sm[iR];iR=iR+1;(OR)[0x0000]=OR[0][Fv[0x05]];Fv=Sm[iR];local KO,JO=Zm[Fv[0X6]],(0);do iR=iR+0X1;end;local yO=(nil);local gO=(KO[0X3]);local fO=(#gO);if not(fO>0x0)then else do yO={};end;for Qu=1,fO do local bu=(gO[Qu]);if bu[1]~=0 then(yO)[Qu-0X001]=bm[bu[2]];else(yO)[Qu-1]={OR,bu[0x00002]};end;end;M(Cm,yO);end;(OR)[0X1]=dH(KO,yO,wR);iR=iR+0x01;OR[JO](OR[JO+1]);do xR=JO-0X1;end;do iR=iR+1;end;iR=iR+0x0001;iR=iR+1;repeat local jh,rh=Cm,(OR);if#jh>0 then local x2=({});for sb,cb in I,jh do for Wf,kf in I,cb do if not(kf[1]==rh and kf[0X2]>=0)then else local Cb=(kf[0x002]);do if not(not x2[Cb])then else x2[Cb]={rh[Cb]};end;end;do(kf)[1]=x2[Cb];end;(kf)[0X2]=1;end;end;end;end;until true;do return;end;else local F3,K3=Fv[7],(Fv[6]);if K3==0X0 then else xR=F3+K3-1;end;local S3=(Fv[1]);local T3,r3=nil,nil;if K3==1 then do T3,r3=eH(OR[F3]());end;else do T3,r3=eH(OR[F3](f(OR,F3+1,xR)));end;end;if S3~=0X1 then do if S3~=0 then T3=F3+S3-0X00002;do xR=T3+0X1;end;else T3=T3+F3-1;xR=T3;end;end;local dK=0;for aZ=F3,T3 do dK=dK+0X1;do OR[aZ]=r3[dK];end;end;else do xR=F3-1;end;end;end;end;else if Kv<0X01 then OR[Fv[7]]=-OR[Fv[6]];else if Kv~=2 then local wQ,CQ=Zm[Fv[0X006]],(nil);local FQ=(wQ[3]);local TQ=(#FQ);do if not(TQ>0)then else CQ={};do for kl=1,TQ do local Sl=FQ[kl];do if Sl[1]==0X0 then(CQ)[kl-1]={OR,Sl[0x2]};else(CQ)[kl-0X00001]=bm[Sl[2]];end;end;end;end;(M)(Cm,CQ);end;end;(OR)[Fv[7]]=dH(wQ,CQ,wR);else iR=Fv[0X6];end;end;end;end;end;end);if not(ZR)then do if e(fR)~='s\116r\105\110\g'then(V)(fR,0);else do if p(fR,"a\116\116\e\m\p\116\ \116\o\032yi\e\108\d\ \097\099r\o\115\115\ \m\et\097\m\eth\o\d\/C\%-\099a\ll\032b\o\117\110\d\097ry")then return coroutine.yield();end;end;do if not(p(fR,"^.-:%d+: "))then V(fR,0);else V("Luraph Script:"..(Dm[iR-0X1]or"(internal)").."\058 "..v(fR),0);end;end;end;end;else if fR then if WR~=1 then do return OR[mR](f(OR,mR+0X1,xR));end;else return OR[mR]();end;elseif not(mR)then else return f(OR,mR,WR);end;end;end;else do Km=function(...)local UN,DN=1,({});local EN=({[1]=Xm,[2]=DN});local sN=K();local eN=(0);local NN,vN=eH(...);local IN=((sN==g and Qm or sN));NN=NN-0X1;for RC=0X00,NN do do if not(km>RC)then break;else do(DN)[RC]=vN[RC+1];end;end;end;end;if not Lm then vN=nil;elseif not(Um)then else DN[km]={n=NN>=km and NN-km+0X001 or 0x0,f(vN,km+1,NN+1)};end;do if IN~=sN then w(Km,IN);end;end;local GN,bN,XN,QN=o(function()while true do local Qh=(Sm[UN]);local yh=Qh[0x00004];UN=UN+1;if not(yh<10)then if not(yh>=15)then if not(yh>=12)then if yh~=0XB then(DN)[Qh[7]]=Qh[0x0002];else do DN[Qh[0X07]]={f({},1,Qh[0x6])};end;end;else do if yh>=0X0d then if yh==14 then else for Ay=Qh[0X7],Qh[0X0006]do(DN)[Ay]=nil;end;end;else UN=Qh[6];end;end;end;else do if yh>=0X0012 then do if not(yh>=0X0013)then repeat local FQ,PQ=Cm,(DN);if not(#FQ>0)then else local v6={};for hb,sb in I,FQ do for IQ,UQ in I,sb do do if UQ[1]==PQ and UQ[2]>=0X00 then local CQ=UQ[2];do if not v6[CQ]then v6[CQ]={PQ[CQ]};end;end;(UQ)[1]=v6[CQ];UQ[0X002]=0X001;end;end;end;end;end;until true;return false,Qh[0X7],eN;else do if yh~=0X014 then DN[Qh[7]]=IN[Qh[2]];else local iO=Qh[7];local fO=((Qh[0X1]-0X1)*0X032);local gO=(DN[iO]);for um=0X1,Qh[6]do do(gO)[fO+um]=DN[iO+um];end;end;end;end;end;end;else do if not(yh<16)then if yh==17 then local gR=DN[Qh[6]]/DN[Qh[1]];(DN)[Qh[7]]=gR-gR%1;else do DN[0X00002]=IN[Qh[2]];end;Qh=Sm[UN];do UN=UN+0X1;end;(DN)[0x2]=DN[0X2][Qh[5]];do UN=UN+1;end;UN=UN+1;UN=UN+1;eN=2;DN[eN]();do eN=eN-0x1;end;Qh=Sm[UN];UN=UN+0X1;do(DN)[0X2]=IN[Qh[0x2]];end;Qh=Sm[UN];local GU=0X2;UN=UN+0X001;(DN)[2]=DN[2][Qh[0X005]];do UN=UN+1;end;(DN)[0X0003]=DN[0];do Qh=Sm[UN];end;UN=UN+1;(DN)[4]=Qh[0X2];Qh=Sm[UN];UN=UN+0X1;DN[0X05]=IN[Qh[2]];UN=UN+0X1;local vU=0x4;eN=GU+vU-0X001;repeat local Ab,kb=Cm,DN;if not(#Ab>0X0)then else local Os={};for kZ,CZ in I,Ab do for kk,Hk in I,CZ do if not(Hk[0x1]==kb and Hk[0X02]>=0)then else local KW=(Hk[2]);do if not Os[KW]then do(Os)[KW]={kb[KW]};end;end;end;do Hk[1]=Os[KW];end;Hk[2]=0X1;end;end;end;end;until true;return true,GU,vU;end;else(DN)[2]=IN[Qh[0X0002]];UN=UN+1;UN=UN+0x001;UN=UN+1;(DN)[0X03]=DN[0];UN=UN+0x1;local no=0X2;(DN)[no]=DN[no](DN[no+0X1]);do eN=no;end;Qh=Sm[UN];UN=UN+1;if not(DN[0x2]<=DN[1])then UN=Qh[7];end;end;end;end;end;end;else do if not(yh>=0x5)then if yh>=0x002 then if yh<0x0003 then DN[Qh[7]]=DN[Qh[6]]==DN[Qh[0x01]];else if yh~=4 then DN[Qh[0x07]]=#DN[Qh[6]];else(DN)[Qh[7]]=a(DN[Qh[6]]);end;end;else if yh~=1 then local J1=Zm[Qh[0x6]];local q1,C1=J1[3],nil;local u1=#q1;if not(u1>0x0)then else do C1={};end;for Iy=1,u1 do local ly=(q1[Iy]);if ly[0X001]~=0 then do(C1)[Iy-0X00001]=bm[ly[2]];end;else(C1)[Iy-1]={DN,ly[0X2]};end;end;M(Cm,C1);end;DN[Qh[7]]=dH(J1,C1,IN);else repeat local qW,SW=Cm,DN;if#qW>0 then local bi={};for mp,Sp in I,qW do for t8,f8 in I,Sp do if not(f8[0X1]==SW and f8[2]>=0)then else local t6=f8[2];do if not bi[t6]then(bi)[t6]={SW[t6]};end;end;f8[1]=bi[t6];(f8)[2]=1;end;end;end;end;until true;return;end;end;else if not(yh>=7)then if yh~=0X00006 then(DN)[Qh[7]]=l(DN[Qh[0x6]],DN[Qh[1]]);else DN[0X00]=IN[Qh[0X00002]];UN=UN+0X1;do UN=UN+1;end;do Qh=Sm[UN];end;do UN=UN+0X1;end;(DN)[0X0]=DN[0X0000][Qh[0X5]];do UN=UN+1;end;UN=UN+0X1;do UN=UN+0X1;end;eN=0x0;DN[eN]();do eN=eN-0X1;end;UN=UN+1;UN=UN+1;Qh=Sm[UN];UN=UN+1;(DN)[0]=IN[Qh[0X2]];Qh=Sm[UN];do UN=UN+1;end;DN[0]=DN[0x0][Qh[5]];UN=UN+0x1;do UN=UN+1;end;Qh=Sm[UN];do UN=UN+1;end;(DN)[0]=DN[0][Qh[5]];UN=UN+0X1;UN=UN+0X1;do Qh=Sm[UN];end;UN=UN+0x1;(DN)[0X0]=DN[0][Qh[5]];Qh=Sm[UN];UN=UN+1;DN[1]=IN[Qh[0X00002]];do Qh=Sm[UN];end;UN=UN+1;DN[1]=DN[1][Qh[0X5]];Qh=Sm[UN];UN=UN+1;(DN)[0X1]=DN[0X01][Qh[0X005]];Qh=Sm[UN];UN=UN+1;DN[0X00001]=DN[0x00001][Qh[0x5]];UN=UN+0x1;UN=UN+0x0001;Qh=Sm[UN];UN=UN+0X0001;do UN=Qh[6];end;end;else if yh>=0X8 then if yh~=9 then DN[Qh[7]]=DN[Qh[0X0006]]>DN[Qh[1]];else(DN)[0X00003]=DN[0]+Qh[5];UN=UN+0X01;do(DN)[0X000]=DN[3];end;UN=UN+1;do(DN)[3]=DN[1]-DN[2];end;UN=UN+0X1;DN[1]=DN[0x3];Qh=Sm[UN];UN=UN+0X0001;do UN=Qh[0x006];end;end;else if not(DN[Qh[6]]<=DN[Qh[0X1]])then do UN=Qh[7];end;end;end;end;end;end;end;end;end);do if GN then if bN then if QN==0X00001 then return DN[XN]();else return DN[XN](f(DN,XN+0x1,eN));end;elseif not(XN)then else return f(DN,XN,QN);end;else if e(bN)=="st\114i\110g"then if not(p(bN,'\097\116te\109\112\116\ \116\111\032\y\105\e\l\d a\099\114\os\s\ \109\e\116a\m\e\116\104\111\d\/\067\%\-\c\097l\l\ \098\o\117n\da\114y'))then else return coroutine.yield();end;do if p(bN,"\^.-:\%d\+:\ ")then(V)('\076\117\114aph\032\083\c\114\105\112\116\:'..(Dm[UN-1]or'\040\inte\114\110\097\l\)')..": "..v(bN),0X0);else(V)(bN,0);end;end;else(V)(bN,0);end;end;end;end;end;end;else Km=function(...)local Oz={};local oz=(1);local Rz=(K());local ez=((Rz==g and Qm or Rz));local dz={[1]=Xm,[2]=Oz};local Kz=0;local nz,Pz=eH(...);nz=nz-0X1;for Bw=0X000,nz do if km>Bw then Oz[Bw]=Pz[Bw+1];else break;end;end;if not Lm then Pz=nil;elseif not(Um)then else Oz[km]={n=nz>=km and nz-km+1 or 0X0000,f(Pz,km+0X01,nz+0X001)};end;if ez==Rz then else(w)(Km,ez);end;local az,Az,Bz,vz=o(function()while true do local cx=Sm[oz];local vx=cx[4];oz=oz+0x00001;if not(vx>=14)then do if vx>=7 then if vx<0Xa then if vx<8 then Oz[cx[0X007]]=Oz[cx[0X6]];else do if vx==0x9 then local cB=cx[7];local NB,xB=Oz[cB]();if NB then oz=cx[6];(Oz)[cB+0X3]=xB;end;else do Oz[4]=ez[cx[0X02]];end;oz=oz+0X00001;local mm=(0X004);oz=oz+0X001;cx=Sm[oz];oz=oz+0X1;(Oz)[0x4]=Oz[0X4][cx[0x0005]];oz=oz+1;oz=oz+1;oz=oz+0X0001;Oz[5]=Oz[0];cx=Sm[oz];oz=oz+0X00001;Oz[0X6]=cx[2];oz=oz+1;Oz[mm](Oz[mm+1],Oz[mm+0x2]);do Kz=mm-0X0001;end;oz=oz+0x1;oz=oz+0X1;cx=Sm[oz];oz=oz+1;do oz=cx[6];end;end;end;end;else do if not(vx>=0Xc)then do if vx==0Xb then Oz[cx[7]]=Oz[cx[6]]*Oz[cx[1]];else if not(Oz[cx[0X6]]<Oz[cx[0X1]])then else do oz=cx[0X7];end;end;end;end;else do if vx==13 then Oz[0]=ez[cx[2]];do cx=Sm[oz];end;oz=oz+1;local ca=0X0000;(Oz)[0x0]=Oz[0][cx[5]];cx=Sm[oz];oz=oz+1;(Oz)[0X0]=Oz[0][cx[0X5]];do oz=oz+0x1;end;oz=oz+1;cx=Sm[oz];oz=oz+1;(Oz)[0]=Oz[0X0][cx[5]];cx=Sm[oz];oz=oz+1;Oz[0X0000]=Oz[0X00000][cx[0X5]];oz=oz+1;oz=oz+0X001;cx=Sm[oz];oz=oz+1;do Oz[0X0]=Oz[0X00][cx[0x5]];end;do cx=Sm[oz];end;oz=oz+1;do(Oz)[0x0]=Oz[0][cx[0X05]];end;oz=oz+1;oz=oz+1;cx=Sm[oz];oz=oz+0X1;(Oz)[0]=Oz[0X00][cx[5]];oz=oz+1;do oz=oz+1;end;cx=Sm[oz];oz=oz+0x1;Oz[0X0]=Oz[0x0][cx[0X0005]];cx=Sm[oz];oz=oz+0X01;(Oz)[0X00000]=Oz[0x0][cx[5]];do cx=Sm[oz];end;do oz=oz+0x1;end;local Va=Oz[0];do Oz[ca+0X1]=Va;end;Oz[ca]=Va[cx[5]];cx=Sm[oz];oz=oz+1;(Oz)[2]=cx[2];oz=oz+0X1;ca=0x000;(Oz)[ca]=Oz[ca](Oz[ca+0X01],Oz[ca+0X002]);Kz=ca;do cx=Sm[oz];end;oz=oz+1;do(Oz)[1]=cx[2];end;oz=oz+1;Oz[0X2]=#Oz[0];oz=oz+0X1;(Oz)[3]=true;oz=oz+0X01;do Oz[4]=Oz[0x0][Oz[0X2]];end;oz=oz+0X1;oz=oz+1;cx=Sm[oz];oz=oz+1;ca=4;do Va=Oz[0X4];end;(Oz)[ca+0X001]=Va;Oz[ca]=Va[cx[5]];cx=Sm[oz];do oz=oz+0X1;end;Oz[6]=cx[0X2];do oz=oz+1;end;ca=4;do(Oz)[ca]=Oz[ca](Oz[ca+1],Oz[ca+0X02]);end;Kz=ca;cx=Sm[oz];oz=oz+1;if not(not Oz[4])then else oz=cx[0X6];end;else do(Oz)[0x0]=ez[cx[2]];end;do cx=Sm[oz];end;oz=oz+1;do Oz[0X00000]=Oz[0][cx[5]];end;cx=Sm[oz];oz=oz+1;Oz[0X0]=Oz[0X00000][cx[5]];do cx=Sm[oz];end;oz=oz+1;(Oz)[0]=Oz[0][cx[0X05]];do cx=Sm[oz];end;oz=oz+0X1;do Oz[0X00000]=Oz[0X0][cx[5]];end;oz=oz+1;oz=oz+0X1;cx=Sm[oz];do oz=oz+0X1;end;do(Oz)[0X00000]=Oz[0][cx[5]];end;oz=oz+0x00001;do oz=oz+0x1;end;cx=Sm[oz];oz=oz+0X1;(Oz)[0]=Oz[0X0][cx[5]];oz=oz+0X001;oz=oz+1;cx=Sm[oz];do oz=oz+1;end;do if not Oz[0]then oz=cx[0X6];end;end;end;end;end;end;end;else if not(vx>=0X03)then if vx>=0X1 then do if vx~=2 then oz=cx[0X006];else for Qg=cx[7],cx[6]do(Oz)[Qg]=nil;end;end;end;else Oz[cx[7]]=Oz[cx[6]]+Oz[cx[0X01]];end;else if vx>=5 then if vx~=0X6 then do Oz[cx[0X7]]={f({},0X00001,cx[6])};end;else(Oz)[cx[7]]=ez[cx[2]];end;else if vx~=0X04 then local KQ=cx[0X007];local RQ,VQ,tQ=Oz[KQ],Oz[KQ+0x001],(Oz[KQ+0X2]);Oz[KQ]=r(function()for oL=RQ,VQ,tQ do(C)(true,oL);end;end);oz=cx[6];else Oz[0X4]=false;do oz=oz+1;end;Oz[3]=Oz[0X4];cx=Sm[oz];oz=oz+1;oz=cx[0X00006];end;end;end;end;end;else if vx>=21 then if not(vx<0X19)then if not(vx<27)then do if vx==28 then local Ay=Zm[cx[0X6]];local Ty,Ey=Ay[0X03],nil;local Oy=#Ty;if not(Oy>0)then else do Ey={};end;for t7=1,Oy do local A7=(Ty[t7]);if A7[1]~=0 then Ey[t7-1]=bm[A7[0X2]];else(Ey)[t7-0X00001]={Oz,A7[0x00002]};end;end;(M)(Cm,Ey);end;(Oz)[cx[0X007]]=dH(Ay,Ey,ez);else(Oz)[cx[0X007]]=O(Oz[cx[0X6]],Oz[cx[1]]);end;end;else do if vx==26 then Oz[8]=Oz[0][Oz[0X0007]];do oz=oz+0X1;end;do(Oz)[9]=Oz[0X00001];end;do oz=oz+1;end;local U7=0X9;(Oz)[0XA]=Oz[8];oz=oz+1;do Oz[9]=Oz[U7]..Oz[U7+1];end;oz=oz+0X1;(Oz)[0x1]=Oz[0X9];oz=oz+0X1;Oz[0X9]=#Oz[0];cx=Sm[oz];do oz=oz+0X1;end;if Oz[0x9]~=Oz[0X07]then else oz=cx[7];end;else local ws,ss=4,(Oz[0X1]);(Oz)[ws+0X01]=ss;do Oz[ws]=ss[cx[5]];end;cx=Sm[oz];oz=oz+0X01;(Oz)[6]=cx[0X2];oz=oz+1;(Oz)[7]=#Oz[0x1];cx=Sm[oz];oz=oz+0X1;(Oz)[7]=Oz[0X007]-cx[5];oz=oz+0x01;ws=4;do Kz=ws+4-1;end;(Oz)[ws]=Oz[ws](f(Oz,ws+0X1,Kz));Kz=ws;oz=oz+1;do oz=oz+1;end;do oz=oz+1;end;(Oz)[0X1]=Oz[4];cx=Sm[oz];oz=oz+0X00001;oz=cx[0X0006];end;end;end;else if vx>=0X17 then if vx~=0X0018 then do if not(not Oz[cx[7]])then else oz=cx[0X00006];end;end;else Oz[cx[0x7]]=cx[2];end;else if vx==22 then(Oz)[0X4]=ez[cx[0X2]];oz=oz+0X00001;oz=oz+1;do cx=Sm[oz];end;local lD=(0X04);oz=oz+1;(Oz)[0X0004]=Oz[0X004][cx[5]];oz=oz+0x1;(Oz)[5]=Oz[0];local TD=(4);do oz=oz+1;end;Oz[0X6]=#Oz[0];oz=oz+0X0001;Oz[lD](Oz[lD+0X1],Oz[lD+0X00002]);Kz=lD-0X1;cx=Sm[oz];oz=oz+0X00001;(Oz)[4]=cx[2];oz=oz+0x1;Oz[5]=#Oz[0x00];cx=Sm[oz];do oz=oz+0X1;end;Oz[6]=cx[0X2];cx=Sm[oz];do oz=oz+0x1;end;do lD=Oz[TD];end;local MD,wD=Oz[TD+0X001],Oz[TD+0X2];Oz[TD]=r(function()for A1=lD,MD,wD do(C)(true,A1);end;end);do oz=cx[6];end;else repeat local lW,LW=Cm,(Oz);if#lW>0x00000 then local qC=({});do for eP,PP in I,lW do for tY,aY in I,PP do if not(aY[1]==LW and aY[0x2]>=0x0)then else local Qb=aY[2];if not(not qC[Qb])then else do qC[Qb]={LW[Qb]};end;end;(aY)[1]=qC[Qb];(aY)[0X002]=1;end;end;end;end;end;until true;local oa=(cx[0X7]);return false,oa,oa;end;end;end;else if not(vx<0X0011)then do if vx>=19 then if vx==0x0014 then local sF=cx[0X0007];local EF=(r(function(...)C();do for Q9,B9,W9,x9,I9,o9,s9,g9,d9,h9 in...do(C)(true,{Q9,B9,W9,x9,I9,o9,s9,g9,d9,h9});end;end;end));EF(Oz[sF],Oz[sF+0x1],Oz[sF+0X2]);Kz=sF;Oz[sF]=EF;oz=cx[0X06];else(Oz)[0x009]=Oz[1];cx=Sm[oz];do oz=oz+1;end;do Oz[10]=cx[2];end;oz=oz+0X01;local Ai=9;(Oz)[0x9]=Oz[Ai]..Oz[Ai+1];do oz=oz+0x001;end;(Oz)[1]=Oz[0X9];cx=Sm[oz];oz=oz+0X1;oz=cx[6];end;else if vx~=18 then local mI=(cx[0X7]);local uI,qI=Oz[mI]();if not(uI)then else for KL=0X00001,cx[0x1]do(Oz)[mI+KL]=qI[KL];end;do oz=cx[0X00006];end;end;else local MB=cx[0X7];local FB=(cx[0x6]);if FB==0x0 then else Kz=MB+FB-1;end;local NB=cx[0x01];local cB,yB=nil,(nil);if FB~=0X001 then do cB,yB=eH(Oz[MB](f(Oz,MB+0x1,Kz)));end;else do cB,yB=eH(Oz[MB]());end;end;if NB~=1 then if NB==0 then cB=cB+MB-1;do Kz=cB;end;else do cB=MB+NB-0X2;end;Kz=cB+0X1;end;local xK=0;for Pm=MB,cB do xK=xK+1;(Oz)[Pm]=yB[xK];end;else do Kz=MB-0X0001;end;end;end;end;end;else if vx<0Xf then repeat local sm,gm=Cm,Oz;if not(#sm>0x00000)then else local Xg={};for l_,F_ in I,sm do for GP,bP in I,F_ do if not(bP[1]==gm and bP[0X02]>=0X00)then else local ys=bP[0X02];if not Xg[ys]then(Xg)[ys]={gm[ys]};end;do bP[0X001]=Xg[ys];end;(bP)[0X2]=0X1;end;end;end;end;until true;return;else if vx==16 then else(Oz)[4]=ez[cx[2]];cx=Sm[oz];oz=oz+1;Oz[0X4]=Oz[0x4][cx[0X5]];oz=oz+0x01;(Oz)[0x0005]=Oz[0];do cx=Sm[oz];end;do oz=oz+0X1;end;Oz[0X6]=cx[2];do oz=oz+1;end;local On=(0x0004);Oz[On](Oz[On+0X1],Oz[On+2]);Kz=On-1;oz=oz+1;oz=oz+0X01;cx=Sm[oz];oz=oz+1;(Oz)[4]=ez[cx[2]];oz=oz+1;do oz=oz+0x1;end;do cx=Sm[oz];end;oz=oz+0x1;do(Oz)[5]=Oz[0][cx[0X5]];end;oz=oz+1;oz=oz+1;oz=oz+0X1;On=4;do Oz[On]=Oz[On](Oz[On+0X1]);end;Kz=On;cx=Sm[oz];do oz=oz+0X01;end;if not Oz[4]then oz=cx[6];end;end;end;end;end;end;end;end);if az then if Az then do if vz~=0X01 then return Oz[Bz](f(Oz,Bz+0X1,Kz));else return Oz[Bz]();end;end;elseif not(Bz)then else return f(Oz,Bz,vz);end;else do if e(Az)~="string"then(V)(Az,0x00);else if p(Az,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(Az,'^.\-\058\%d\043\:\ ')then(V)("Luraph Script:"..(Dm[oz-0X0001]or"\(\105\110t\101r\110a\108)")..": "..v(Az),0X00);else(V)(Az,0X0);end;end;end;end;end;end;else if xm<0x066 then Km=function(...)local pQ,IQ={},(0);local fQ=1;local AQ=K();local BQ=({[1]=Xm,[2]=pQ});local oQ=(AQ==g and Qm or AQ);local TQ,KQ=eH(...);TQ=TQ-1;for JQ=0,TQ do if km>JQ then do pQ[JQ]=KQ[JQ+1];end;else do break;end;end;end;if not Lm then KQ=nil;elseif not(Um)then else(pQ)[km]={n=TQ>=km and TQ-km+0X1 or 0,f(KQ,km+0X1,TQ+1)};end;if oQ~=AQ then(w)(Km,oQ);end;while true do local g1=(Sm[fQ]);local K1=(g1[0x00004]);fQ=fQ+1;return(function(X,e,...)local E=X[0];local I=E or Priority:get("AutoCollectFruit");if not I:check()then return;end;local l=Client.Character;if not Client.Team then _C("SetTeam",Client.Team.Name);end;if not l then return;end;if not l:FindFirstChild("Humanoid")then return;end;if l:FindFirstChild("Humanoid").Health<=0 then return;end;if not Root then return;end;if#FruitInServer<=0 then return;end;local I=Priority:get("AutoCollectFruit");local function R(s)if s.Name=="Fruit "and Settings.TweenCollectFruit then I:set();if l:FindFirstChild("Humanoid").Health<=0 or not s:FindFirstChild("Handle")then return;end;I:set();repeat tp(s:WaitForChild("Handle").CFrame,function()return I:check()and s.Parent==workspace and Settings[Priority.Activity];end);until s.Parent~=workspace or not I:check()or not Settings[Priority.Activity];I:clear();end;if s:IsA("Tool")and s:FindFirstChild("Handle")then if dist(s.Handle.Position)<=5000 then if tick()-RecentCollected<15 then return;end;RecentCollected=tick();firetouchinterest(s.Handle,l.HumanoidRootPart,0);firetouchinterest(s.Handle,l.HumanoidRootPart,1);end;end;end;for f,C in pairs(FruitInServer)do if C then R(C);if C.Name=="Fruit "or C:IsA("Tool")then break;end;end;end;I:clear();end)(pQ,bm,...);end;end;else if xm==103 then do Km=function(...)local Pa,ra=1,{};local ca=({[2]=ra,[1]=Xm});local ya=(K());local oa=0;local xa,wa=eH(...);local Aa=(ya==g and Qm or ya);xa=xa-0X1;for uC=0x0,xa do if not(km>uC)then break;else ra[uC]=wa[uC+0X0001];end;end;if not Lm then wa=nil;elseif Um then do ra[km]={n=xa>=km and xa-km+0X1 or 0x0,f(wa,km+0X1,xa+1)};end;end;do if Aa==ya then else(w)(Km,Aa);end;end;local ga,Da,Sa,ia=o(function()do while true do local we=Sm[Pa];local He=we[0x0004];Pa=Pa+1;if He<14 then if He>=7 then do if not(He>=0Xa)then if not(He>=0X8)then repeat local l4,t4,F4=Cm,ra,we[0X7];do if#l4>0 then local am=({});for EE,uE in I,l4 do do for TU,yU in I,uE do if not(yU[1]==t4 and yU[2]>=F4)then else local Gb=yU[0X2];if not am[Gb]then do am[Gb]={t4[Gb]};end;end;yU[1]=am[Gb];yU[2]=1;end;end;end;end;end;end;until true;else do if He==9 then do repeat local mT,bT=Cm,ra;do if not(#mT>0)then else local px={};do for wA,zA in I,mT do for J2,S2 in I,zA do if not(S2[0X0001]==bT and S2[2]>=0)then else local GL=(S2[0x2]);if not(not px[GL])then else px[GL]={bT[GL]};end;do S2[0x1]=px[GL];end;S2[2]=1;end;end;end;end;end;end;until true;end;do return;end;else local Y4=(we[0X7]);local H4,M4,z4=ra[Y4]();if H4 then(ra)[Y4+0X001]=M4;(ra)[Y4+2]=z4;Pa=we[0X6];end;end;end;end;else do if He>=12 then if He==13 then ra[we[7]][ra[we[0x6]]]=ra[we[0X0001]];else ra[we[0X7]]=ra[we[6]]<ra[we[0X1]];end;else if He~=11 then do(ra)[we[0x0007]]=Aa[we[2]];end;else(ra)[4]=Aa[we[2]];do Pa=Pa+1;end;local Go=0;Pa=Pa+1;local Ao=(0X5);we=Sm[Pa];Pa=Pa+0X0001;do(ra)[0X005]=Aa[we[2]];end;Pa=Pa+0x01;(ra)[6]=ra[2];Pa=Pa+1;local Qo=(2);do if Qo~=0x0 then oa=Ao+Qo-1;end;end;local Xo,go=nil,(nil);if Qo==1 then Xo,go=eH(ra[Ao]());else Xo,go=eH(ra[Ao](f(ra,Ao+0X1,oa)));end;do if Go==0X01 then do oa=Ao-0X0001;end;else do if Go~=0x0 then Xo=Ao+Go-0X0002;oa=Xo+0X1;else Xo=Xo+Ao-0X1;oa=Xo;end;end;local Vz=(0);do for aD=Ao,Xo do Vz=Vz+0X001;(ra)[aD]=go[Vz];end;end;end;end;Pa=Pa+0x1;Pa=Pa+0x1;Pa=Pa+1;do Ao=0X004;end;Qo=0;Go=4;if Qo~=0 then oa=Ao+Qo-0X1;end;Xo,go=nil;do if Qo~=1 then do Xo,go=eH(ra[Ao](f(ra,Ao+1,oa)));end;else Xo,go=eH(ra[Ao]());end;end;if Go~=1 then if Go==0X00 then do Xo=Xo+Ao-1;end;do oa=Xo;end;else Xo=Ao+Go-0X2;oa=Xo+0X1;end;local pv=(0X0);for Zj=Ao,Xo do pv=pv+0X1;do(ra)[Zj]=go[pv];end;end;else do oa=Ao-1;end;end;do Pa=Pa+0X01;end;Pa=Pa+0X1;we=Sm[Pa];Pa=Pa+1;Ao=4;local lo=(r(function(...)(C)();do for bf,Uf in...do(C)(true,bf,Uf);end;end;end));lo(ra[Ao],ra[Ao+1],ra[Ao+2]);oa=Ao;do(ra)[Ao]=lo;end;Pa=we[6];end;end;end;end;end;else do if not(He<0X3)then if He>=5 then do if He==6 then do ra[3]=Aa[we[0X2]];end;Pa=Pa+1;Pa=Pa+1;do Pa=Pa+0X1;end;do ra[4]=ra[0x002];end;local jh=3;Pa=Pa+1;ra[jh]=ra[jh](ra[jh+0x1]);oa=jh;we=Sm[Pa];Pa=Pa+0x1;if ra[0X3]==we[0X5]then else Pa=we[7];end;else do(ra)[0X7]=Aa[we[0X0002]];end;do we=Sm[Pa];end;Pa=Pa+0x1;Aa[we[2]]=ra[7];we=Sm[Pa];Pa=Pa+1;do ra[0x7]=Aa[we[2]];end;local z5=0;Pa=Pa+0X1;local D5=(10);Pa=Pa+1;we=Sm[Pa];Pa=Pa+0X001;do ra[7]=ra[0x0007][we[5]];end;do Pa=Pa+0X001;end;do ra[0x8]=ra[2];end;we=Sm[Pa];Pa=Pa+1;(ra)[0X9]=we[2];do we=Sm[Pa];end;do Pa=Pa+0X1;end;ra[10]=Aa[we[0X2]];we=Sm[Pa];Pa=Pa+0X01;ra[10]=ra[0xa][we[5]];we=Sm[Pa];Pa=Pa+1;do(ra)[0Xb]=we[0X2];end;we=Sm[Pa];do Pa=Pa+0X01;end;(ra)[12]=we[0x2];we=Sm[Pa];Pa=Pa+0X001;do ra[0XD]=we[0X2];end;do Pa=Pa+1;end;local i5=(0X4);if i5==0x0 then else do oa=D5+i5-0x1;end;end;local S5,Q5=nil,(nil);do if i5~=0X001 then S5,Q5=eH(ra[D5](f(ra,D5+1,oa)));else S5,Q5=eH(ra[D5]());end;end;if z5~=0x1 then if z5==0 then do S5=S5+D5-1;end;oa=S5;else S5=D5+z5-2;oa=S5+1;end;local QX=(0X00000);do for LR=D5,S5 do QX=QX+1;(ra)[LR]=Q5[QX];end;end;else do oa=D5-0X0001;end;end;do Pa=Pa+0X001;end;D5=0X7;ra[D5](f(ra,D5+0X1,oa));oa=D5-0X01;Pa=Pa+0x1;Pa=Pa+0X1;we=Sm[Pa];do Pa=Pa+1;end;Pa=we[0X006];end;end;else if He~=0X4 then do if ra[we[6]]~=ra[we[0x001]]then Pa=we[0X7];end;end;else do ra[0X6][we[2]]=we[0X05];end;we=Sm[Pa];do Pa=Pa+0X001;end;ra[6][we[0X2]]=we[0X5];we=Sm[Pa];do Pa=Pa+0X00001;end;do ra[0X7]=Aa[we[0X02]];end;Pa=Pa+0X0001;ra[0X8]=ra[0X6];Pa=Pa+1;(ra)[0x00009]={};do we=Sm[Pa];end;local NH=(Zm[we[6]]);Pa=Pa+1;local aH=(NH[3]);local WH=nil;local OH=(#aH);if OH>0x000 then WH={};for Pl=0X1,OH do local al=(aH[Pl]);if al[0x1]==0 then WH[Pl-0X01]={ra,al[0X0002]};else(WH)[Pl-0X1]=bm[al[0x2]];end;end;M(Cm,WH);end;ra[10]=dH(NH,WH,Aa);we=Sm[Pa];Pa=Pa+0x01;ra[9][we[0x2]]=ra[10];do we=Sm[Pa];end;Pa=Pa+0x1;NH=Zm[we[0x6]];WH=nil;do aH=NH[0X3];end;do OH=#aH;end;local mH=7;if OH>0 then WH={};for dI=0X0001,OH do local rI=aH[dI];if rI[1]~=0X000 then do(WH)[dI-1]=bm[rI[0X02]];end;else WH[dI-1]={ra,rI[2]};end;end;M(Cm,WH);end;do(ra)[10]=dH(NH,WH,Aa);end;we=Sm[Pa];Pa=Pa+0X1;ra[0x09][we[0X2]]=ra[10];do Pa=Pa+0X1;end;ra[mH](ra[mH+1],ra[mH+0X2]);oa=mH-0x1;Pa=Pa+0X1;Pa=Pa+0X1;we=Sm[Pa];do Pa=Pa+0X1;end;Pa=we[0X6];end;end;else if not(He>=1)then do ra[0]=Aa[we[0X2]];end;do we=Sm[Pa];end;do Pa=Pa+0X1;end;ra[0X0001]=Aa[we[2]];Pa=Pa+0X00001;local XG=(0);Pa=Pa+1;Pa=Pa+0x1;local qG=(1);local dG=(1);if qG~=0X0 then oa=dG+qG-1;end;local wG,xG=nil,nil;do if qG==0X001 then wG,xG=eH(ra[dG]());else wG,xG=eH(ra[dG](f(ra,dG+1,oa)));end;end;if XG==1 then oa=dG-1;else if XG==0X000 then do wG=wG+dG-1;end;do oa=wG;end;else do wG=dG+XG-0X2;end;oa=wG+0X1;end;local e_=0;for bL=dG,wG do e_=e_+1;do ra[bL]=xG[e_];end;end;end;Pa=Pa+1;dG=0x00;qG=0;XG=0X4;if qG~=0X0 then oa=dG+qG-1;end;wG,xG=nil;if qG~=1 then wG,xG=eH(ra[dG](f(ra,dG+1,oa)));else wG,xG=eH(ra[dG]());end;do if XG~=1 then if XG~=0 then wG=dG+XG-2;oa=wG+1;else wG=wG+dG-0X1;do oa=wG;end;end;local GR=0X00000;for Pb=dG,wG do do GR=GR+0X1;end;ra[Pb]=xG[GR];end;else do oa=dG-0X001;end;end;end;do Pa=Pa+1;end;Pa=Pa+0X001;do we=Sm[Pa];end;Pa=Pa+1;dG=0;local gG=(r(function(...)C();for Ly,Uy in...do(C)(true,Ly,Uy);end;end));gG(ra[dG],ra[dG+0X1],ra[dG+2]);oa=dG;(ra)[dG]=gG;Pa=we[6];else if He~=0X2 then else(ra)[0X7]=Aa[we[2]];Pa=Pa+0X001;Pa=Pa+0X0001;Pa=Pa+1;do ra[8]=ra[0x6];end;Pa=Pa+1;local qD=0X7;do ra[qD]=ra[qD](ra[qD+0X1]);end;do oa=qD;end;Pa=Pa+0X1;Pa=Pa+1;do we=Sm[Pa];end;Pa=Pa+0X1;if ra[7]~=we[5]then do Pa=we[0X0007];end;end;end;end;end;end;end;else do if He>=0X15 then if not(He<0X0018)then if He>=0X01A then if He==27 then do ra[we[7]]=nil;end;else(ra)[we[0X7]]={f({},0X1,we[0X0006])};end;else if He~=0X0019 then(ra)[we[0X7]]=we[0X02];else(ra)[4]=ra[0X3][we[5]];Pa=Pa+1;Pa=Pa+0X01;do we=Sm[Pa];end;do Pa=Pa+0x1;end;ra[5]=Aa[we[0X00002]];we=Sm[Pa];Pa=Pa+1;if ra[4]~=ra[5]then Pa=we[0x007];end;end;end;else do if not(He>=22)then do Pa=we[6];end;else do if He~=23 then(ra)[0x08]=Aa[we[0X2]];we=Sm[Pa];do Pa=Pa+0X1;end;do ra[0X00009]=Aa[we[2]];end;do we=Sm[Pa];end;Pa=Pa+1;if ra[8]==ra[9]then Pa=we[0X7];end;else local It=(Zm[we[6]]);local Yt=It[0x3];local tt=nil;local Ft=(#Yt);if not(Ft>0x0)then else tt={};for S9=1,Ft do local y9=(Yt[S9]);if y9[0x1]==0X0 then tt[S9-1]={ra,y9[2]};else(tt)[S9-0X001]=bm[y9[0X2]];end;end;(M)(Cm,tt);end;(ra)[we[0X007]]=dH(It,tt,Aa);end;end;end;end;end;else if not(He>=17)then do if not(He>=0X0F)then ra[3]=Aa[we[2]];Pa=Pa+0x0001;(ra)[0X00004]=ra[0X002];do Pa=Pa+0x001;end;local r3=3;(ra)[r3]=ra[r3](ra[r3+1]);do oa=r3;end;we=Sm[Pa];Pa=Pa+0X001;(ra)[0X3]=ra[0X3][we[5]];Pa=Pa+0X1;Pa=Pa+1;we=Sm[Pa];Pa=Pa+0X1;if not ra[3]then do Pa=we[0X00006];end;end;else if He~=0x0010 then if ra[we[6]]==we[5]then else Pa=we[7];end;else ra[we[7]]=ra[we[6]][we[5]];end;end;end;else if He<19 then do if He~=18 then for On=we[0X7],we[0X6]do ra[On]=nil;end;else(ra)[8]=Aa[we[0X2]];local dg=(0X8);Pa=Pa+0X1;do ra[9]=ra[6];end;do we=Sm[Pa];end;do Pa=Pa+1;end;ra[0Xa]=we[2];Pa=Pa+0X1;ra[dg]=ra[dg](ra[dg+1],ra[dg+0x2]);do oa=dg;end;do we=Sm[Pa];end;do Pa=Pa+0X01;end;if not(not ra[8])then else Pa=we[6];end;end;end;else do if He~=20 then if not(not ra[we[0x7]])then else Pa=we[6];end;else ra[we[7]]=ra[we[0X6]]-ra[we[1]];end;end;end;end;end;end;end;end;end;end);if ga then if Da then if ia~=1 then return ra[Sa](f(ra,Sa+1,oa));else do return ra[Sa]();end;end;elseif not(Sa)then else return f(ra,Sa,ia);end;else do if e(Da)~="\st\114\105n\g"then(V)(Da,0);else if not(p(Da,'\097\116\116\e\m\112t \116\111\ \y\105\101l\d\ \097\cro\s\s\ \me\116\097m\e\116h\o\d\/\067\%\-\ca\l\108\032boun\d\097r\y'))then else return coroutine.yield();end;do if p(Da,'\^.-\058%\100\+\058\032')then V('\076\117r\097\p\h S\c\114\i\p\116:'..(Dm[Pa-0X1]or'\(i\110t\e\114na\108\)').."\:\ "..v(Da),0x0000);else V(Da,0);end;end;end;end;end;end;end;else Km=function(...)local dP,fP=1,{};local cP=K();local PP=0x000;local BP,RP=eH(...);local oP=({[1]=Xm,[2]=fP});BP=BP-0x1;do for eq=0,BP do do if not(km>eq)then break;else fP[eq]=RP[eq+1];end;end;end;end;local yP=((cP==g and Qm or cP));if not Lm then RP=nil;elseif not(Um)then else fP[km]={n=BP>=km and BP-km+0X01 or 0,f(RP,km+0x1,BP+0X1)};end;do if yP==cP then else(w)(Km,yP);end;end;do while true do local vg=Sm[dP];local Pg=(vg[4]);dP=dP+0X1;return(function(w,G,...)local v={...};local s=network:Send("CommF_",...);if v[1]=="requestEntrance"then CollectionService:AddTag(Client,"Teleporting");task.delay(3,function()CollectionService:RemoveTag(Client,"Teleporting");end);wait(.25);end;return s;end)(fP,bm,...);end;end;end;end;end;end;end;end;else if xm<110 then if not(xm<0x6B)then if xm<108 then Km=function(...)local Ph,oh=0X1,({});local mh=K();local wh,xh=eH(...);local Vh,qh={[2]=oh,[1]=Xm},((mh==g and Qm or mh));do wh=wh-1;end;for iu=0,wh do if km>iu then do oh[iu]=xh[iu+1];end;else do break;end;end;end;if not Lm then do xh=nil;end;elseif Um then(oh)[km]={n=wh>=km and wh-km+0X1 or 0,f(xh,km+0x01,wh+0X0001)};end;if qh~=mh then w(Km,qh);end;local th=(0x0);do while true do local SB=(Sm[Ph]);Ph=Ph+0X1;local wB=SB[0x4];return(function(t,h,...)local Z=t[0];return Client.Backpack:FindFirstChild(Z);end)(oh,bm,...);end;end;end;else if xm==0X06d then do Km=function(...)local vk=0X01;local yk,Zk={},(0);local xk=({[1]=Xm,[2]=yk});local Ak=K();local dk=((Ak==g and Qm or Ak));local zk,gk=eH(...);do zk=zk-1;end;do for vY=0,zk do do if not(km>vY)then break;else(yk)[vY]=gk[vY+1];end;end;end;end;do if not Lm then do gk=nil;end;elseif Um then(yk)[km]={n=zk>=km and zk-km+0X1 or 0,f(gk,km+0X1,zk+0X01)};end;end;if dk==Ak then else w(Km,dk);end;local Dk,Vk,Mk,Lk=o(function()do while true do local NZ=Sm[vk];local rZ=(NZ[4]);do vk=vk+1;end;if rZ>=0x00005 then if rZ<0x8 then if not(rZ>=6)then local AZ=(NZ[0x001]);local gZ,FZ=NZ[7],(NZ[0X6]);if FZ~=0 then Zk=gZ+FZ-1;end;local PZ,WZ=nil,(nil);do if FZ~=0X01 then PZ,WZ=eH(yk[gZ](f(yk,gZ+1,Zk)));else PZ,WZ=eH(yk[gZ]());end;end;do if AZ~=1 then if AZ==0 then do PZ=PZ+gZ-1;end;Zk=PZ;else PZ=gZ+AZ-0x2;Zk=PZ+0x01;end;local NQ=0;for Q3=gZ,PZ do NQ=NQ+1;yk[Q3]=WZ[NQ];end;else Zk=gZ-0X001;end;end;else if rZ~=0X7 then do(yk[NZ[7]])[yk[NZ[0x0006]]]=yk[NZ[1]];end;else vk=NZ[6];end;end;else if rZ<9 then do yk[NZ[0X7]]=yk[NZ[6]]^yk[NZ[0x1]];end;else if rZ==10 then(yk)[0x0]=dk[NZ[0X002]];vk=vk+1;vk=vk+0X0001;do NZ=Sm[vk];end;do vk=vk+0X00001;end;(yk)[0]=yk[0][NZ[5]];vk=vk+0X01;vk=vk+0X1;NZ=Sm[vk];local Ip=(Zm[NZ[0X06]]);vk=vk+1;local Lp=(nil);local Wp=(0);local up=(Ip[0x3]);local ip=(#up);if not(ip>0)then else Lp={};do for Lu=0X1,ip do local mu=(up[Lu]);if mu[1]~=0 then do(Lp)[Lu-0x01]=bm[mu[2]];end;else Lp[Lu-0X1]={yk,mu[0X2]};end;end;end;M(Cm,Lp);end;yk[1]=dH(Ip,Lp,dk);vk=vk+0X0001;(yk[Wp])(yk[Wp+1]);Zk=Wp-0X1;vk=vk+0X1;repeat local gV,tV=Cm,(yk);if not(#gV>0X0)then else local jj=({});do for yv,vv in I,gV do do for jL,WL in I,vv do if WL[0X1]==tV and WL[0X2]>=0 then local N9=WL[0X00002];do if not jj[N9]then jj[N9]={tV[N9]};end;end;do(WL)[0x1]=jj[N9];end;(WL)[0X2]=0X00001;end;end;end;end;end;end;until true;return;else(yk)[NZ[0X7]]={f({},0X0001,NZ[0X006])};end;end;end;else if rZ<0X2 then if rZ~=1 then else local p_=Zm[NZ[6]];local w_=(nil);local E_=p_[3];local r_=(#E_);if not(r_>0)then else w_={};for pw=0x1,r_ do local jw=E_[pw];if jw[1]==0X00000 then w_[pw-1]={yk,jw[0X0002]};else do(w_)[pw-1]=bm[jw[2]];end;end;end;(M)(Cm,w_);end;(yk)[NZ[0X7]]=dH(p_,w_,dk);end;else if rZ>=0X3 then if rZ~=4 then local GK=NZ[7];local pK,OK=yk[GK]();if pK then for X7=1,NZ[1]do yk[GK+X7]=OK[X7];end;vk=NZ[0X006];end;else(yk)[NZ[0X007]]=dk[NZ[0x2]];end;else(yk)[NZ[7]]=NZ[2];end;end;end;end;end;end);if not(Dk)then if e(Vk)=="string"then if p(Vk,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(Vk,'\^\046\-\058\037\d\043\:\ ')then V('\Lu\114\097ph S\c\114\ipt\:'..(Dm[vk-1]or"\(\i\110\116\101r\110a\108\)")..': '..v(Vk),0);else V(Vk,0x0);end;else(V)(Vk,0X0);end;else do if Vk then if Lk~=1 then return yk[Mk](f(yk,Mk+0X1,Zk));else return yk[Mk]();end;elseif not(Mk)then else return f(yk,Mk,Lk);end;end;end;end;end;else do Km=function(...)local IQ=(1);local xQ={};local FQ=K();local cQ,BQ=(FQ==g and Qm or FQ),(0);local rQ={[1]=Xm,[2]=xQ};local HQ,iQ=eH(...);HQ=HQ-0X00001;do for sB=0X00000,HQ do if km>sB then(xQ)[sB]=iQ[sB+0x001];else break;end;end;end;do if not Lm then do iQ=nil;end;elseif not(Um)then else do xQ[km]={n=HQ>=km and HQ-km+0X1 or 0X0,f(iQ,km+0x1,HQ+1)};end;end;end;if cQ==FQ then else(w)(Km,cQ);end;do while true do local bD=Sm[IQ];IQ=IQ+0X1;local dD=bD[4];return(function(r,k,...)local T=r[0];Client.Character.Humanoid:UnequipTools(T);end)(xQ,bm,...);end;end;end;end;end;end;else if not(xm<105)then if xm~=0X06A then Km=function(...)local NJ=(0X1);local pJ={};local WJ={[1]=Xm,[2]=pJ};local aJ=(K());local ZJ=(aJ==g and Qm or aJ);local QJ,FJ=eH(...);local uJ=(0);QJ=QJ-0X1;for Wt=0x000,QJ do if km>Wt then(pJ)[Wt]=FJ[Wt+0X1];else do break;end;end;end;if not Lm then do FJ=nil;end;elseif not(Um)then else(pJ)[km]={n=QJ>=km and QJ-km+1 or 0,f(FJ,km+0X0001,QJ+0X1)};end;do if ZJ==aJ then else(w)(Km,ZJ);end;end;local vJ,kJ,zJ,SJ=o(function()while true do local wJ=(Sm[NJ]);local EJ=wJ[4];NJ=NJ+0X1;do if not(EJ>=0X8)then do if not(EJ<4)then do if EJ<6 then if EJ~=5 then(pJ)[wJ[7]]=wJ[2];else local Ew,mw=wJ[7],(pJ[wJ[6]]);(pJ)[Ew+1]=mw;pJ[Ew]=mw[wJ[0X005]];end;else if EJ==7 then pJ[wJ[0x00007]]=ZJ[wJ[2]];else repeat local X3,R3=Cm,pJ;if#X3>0x000 then local ch=({});do for gG,iG in I,X3 do for SY,NY in I,iG do do if NY[1]==R3 and NY[2]>=0 then local G1=NY[0x002];if not(not ch[G1])then else(ch)[G1]={R3[G1]};end;NY[0x1]=ch[G1];(NY)[0X2]=1;end;end;end;end;end;end;until true;do return false,wJ[0X7],uJ;end;end;end;end;else do if not(EJ<0x0002)then if EJ~=3 then pJ[0]=ZJ[wJ[2]];NJ=NJ+1;NJ=NJ+0X1;local Rz=pJ[0X0];wJ=Sm[NJ];NJ=NJ+0X1;local Dz=(0X000);do pJ[Dz+1]=Rz;end;pJ[Dz]=Rz[wJ[5]];wJ=Sm[NJ];NJ=NJ+1;pJ[2]=wJ[2];local dz=0X3;do NJ=NJ+1;end;do Dz=0X0;end;uJ=Dz+dz-0X1;repeat local aS,zS=Cm,pJ;if not(#aS>0)then else local hO={};for SE,OE in I,aS do do for eA,xA in I,OE do if xA[0X1]==zS and xA[0X0002]>=0 then local Ao=(xA[2]);if not(not hO[Ao])then else hO[Ao]={zS[Ao]};end;(xA)[1]=hO[Ao];(xA)[2]=0X1;end;end;end;end;end;until true;do return true,Dz,dz;end;else(pJ)[wJ[7]]=-pJ[wJ[6]];end;else if EJ~=0X001 then pJ[wJ[0X0007]]={f({},1,wJ[6])};else NJ=wJ[0X006];end;end;end;end;end;else do if EJ<12 then if not(EJ<10)then do if EJ~=0XB then pJ[wJ[0X7]]=l(pJ[wJ[6]],pJ[wJ[1]]);else local Nn=(wJ[0X7]);for uM=Nn,Nn+(wJ[6]-1)do pJ[uM]=FJ[km+(uM-Nn)+1];end;end;end;else do if EJ==0X9 then pJ[wJ[0X7]]=pJ[wJ[0X0006]]~=pJ[wJ[0X1]];else end;end;end;else if EJ>=14 then do if EJ<15 then repeat local eV,JV=Cm,pJ;if#eV>0X00000 then local hh={};do for bB,kB in I,eV do do for ty,Ny in I,kB do if Ny[1]==JV and Ny[2]>=0 then local Uj=(Ny[0X2]);if not(not hh[Uj])then else(hh)[Uj]={JV[Uj]};end;(Ny)[1]=hh[Uj];do Ny[0x002]=1;end;end;end;end;end;end;end;until true;return;else if EJ~=16 then(pJ)[wJ[0X00007]]=pJ[wJ[0X00006]][pJ[wJ[0X0001]]];else(pJ)[wJ[0x00007]]=wJ[2];end;end;end;else if EJ~=0x000D then local aR=(wJ[7]);local zR=((wJ[1]-0X001)*50);local HR=pJ[aR];for dq=0X0001,wJ[6]do HR[zR+dq]=pJ[aR+dq];end;else local gM=Zm[wJ[6]];local OM=(gM[0X0003]);local dM=(nil);local wM=#OM;do if wM>0X0 then dM={};for fe=1,wM do local He=OM[fe];if He[1]==0X0 then do dM[fe-1]={pJ,He[2]};end;else dM[fe-0x01]=bm[He[2]];end;end;M(Cm,dM);end;end;do pJ[wJ[7]]=dH(gM,dM,ZJ);end;end;end;end;end;end;end;end;end);if not(vJ)then do if e(kJ)~="\s\116r\i\110g"then(V)(kJ,0X00000);else if p(kJ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if p(kJ,"\^.\-\:\%d+\:\ ")then V('\Lur\097\p\h \S\c\114\i\112\116\058'..(Dm[NJ-1]or"(internal)")..": "..v(kJ),0X00);else V(kJ,0);end;end;end;else if kJ then if SJ==1 then return pJ[zJ]();else do return pJ[zJ](f(pJ,zJ+1,uJ));end;end;elseif zJ then return f(pJ,zJ,SJ);end;end;end;else do Km=function(...)local AZ=({});local HZ=(0x0);local eZ=K();local fZ={[2]=AZ,[1]=Xm};local uZ,gZ=eH(...);uZ=uZ-1;for Iq=0,uZ do do if km>Iq then AZ[Iq]=gZ[Iq+1];else do break;end;end;end;end;local QZ=(eZ==g and Qm or eZ);if not Lm then gZ=nil;elseif Um then(AZ)[km]={n=uZ>=km and uZ-km+0X1 or 0X000,f(gZ,km+1,uZ+1)};end;local KZ=(0X1);do if QZ==eZ then else w(Km,QZ);end;end;local cZ,JZ,GZ,kZ=o(function()while true do local rL=(Sm[KZ]);local ML=rL[0X00004];KZ=KZ+1;if not(ML>=0X7)then if not(ML>=3)then do if not(ML>=1)then local Dk=(Zm[rL[0X006]]);local gk=(Dk[3]);local pk,Tk=#gk,nil;if not(pk>0)then else Tk={};for MB=0X1,pk do local yB=(gk[MB]);if yB[1]==0X00000 then do(Tk)[MB-1]={AZ,yB[0X2]};end;else Tk[MB-1]=bm[yB[0x02]];end;end;M(Cm,Tk);end;AZ[rL[7]]=dH(Dk,Tk,QZ);else if ML~=2 then for Nb=rL[0x0007],rL[6]do(AZ)[Nb]=nil;end;else AZ[rL[7]]=rL[0X02];end;end;end;else if ML<5 then do if ML==4 then local VE=rL[1];local RE=rL[6];local IE=rL[7];if RE==0X00000 then else do HZ=IE+RE-1;end;end;local aE,yE=nil,(nil);if RE~=1 then aE,yE=eH(AZ[IE](f(AZ,IE+0X1,HZ)));else aE,yE=eH(AZ[IE]());end;if VE~=0x1 then do if VE==0X00000 then aE=aE+IE-0X0001;HZ=aE;else aE=IE+VE-2;HZ=aE+1;end;end;local VQ=0;for GD=IE,aE do VQ=VQ+1;do(AZ)[GD]=yE[VQ];end;end;else HZ=IE-1;end;else repeat local IV,DV=Cm,AZ;do if#IV>0x0 then local oo=({});for gB,dB in I,IV do for Gi,qi in I,dB do if not(qi[1]==DV and qi[2]>=0X00)then else local kf=(qi[0X2]);if not(not oo[kf])then else do(oo)[kf]={DV[kf]};end;end;qi[0X1]=oo[kf];qi[0x2]=1;end;end;end;end;end;until true;local mH=rL[7];return false,mH,mH+rL[0X006]-2;end;end;else if ML==6 then AZ[rL[0x007]]=true;else if AZ[rL[0X006]]==AZ[rL[1]]then do KZ=rL[7];end;end;end;end;end;else if ML>=0Xb then if not(ML<0XD)then if ML==14 then(AZ)[0]=QZ[rL[2]];KZ=KZ+1;KZ=KZ+0X1;rL=Sm[KZ];local Xv=(AZ[0X0]);KZ=KZ+1;local Zv=0X0;(AZ)[Zv+1]=Xv;do(AZ)[Zv]=Xv[rL[5]];end;rL=Sm[KZ];KZ=KZ+0X01;(AZ)[0X2]=rL[2];KZ=KZ+0X0001;Zv=0X0;(AZ)[Zv]=AZ[Zv](AZ[Zv+1],AZ[Zv+0x2]);HZ=Zv;KZ=KZ+1;do KZ=KZ+1;end;do rL=Sm[KZ];end;do KZ=KZ+1;end;(AZ)[1]=QZ[rL[2]];do KZ=KZ+0x1;end;KZ=KZ+1;rL=Sm[KZ];KZ=KZ+0X1;AZ[0x1]=AZ[1][rL[5]];rL=Sm[KZ];local Mv=(Zm[rL[0X06]]);KZ=KZ+1;local vv=(Mv[3]);local hv=nil;local rv=(#vv);do if rv>0 then hv={};for mJ=1,rv do local oJ=(vv[mJ]);if oJ[1]~=0X0 then do(hv)[mJ-1]=bm[oJ[0X2]];end;else(hv)[mJ-1]={AZ,oJ[2]};end;end;M(Cm,hv);end;end;(AZ)[2]=dH(Mv,hv,QZ);KZ=KZ+1;Zv=1;(AZ[Zv])(AZ[Zv+1]);HZ=Zv-0X0001;KZ=KZ+1;KZ=KZ+1;KZ=KZ+0X1;do repeat local TR,SR=Cm,(AZ);if#TR>0 then local PX=({});for HF,iF in I,TR do for wI,vI in I,iF do do if vI[1]==SR and vI[0X2]>=0X0000 then local hJ=(vI[0X2]);if not(not PX[hJ])then else PX[hJ]={SR[hJ]};end;vI[0X1]=PX[hJ];vI[2]=0X1;end;end;end;end;end;until true;end;return;else(AZ)[rL[0x00007]]={f({},1,rL[0x0006])};end;else if ML==0Xc then else do(AZ)[rL[0X007]]=QZ[rL[0X02]];end;end;end;else if ML<9 then if ML==8 then if AZ[rL[0X6]]==AZ[rL[1]]then else KZ=rL[7];end;else do AZ[rL[0x7]]=S(AZ[rL[0X6]],AZ[rL[1]]);end;end;else do if ML~=0xA then local wX=rL[7];for JI=wX,wX+(rL[6]-0X1)do AZ[JI]=gZ[km+(JI-wX)+0X1];end;else do KZ=rL[6];end;end;end;end;end;end;end;end);if cZ then if JZ then if kZ==0x1 then return AZ[GZ]();else return AZ[GZ](f(AZ,GZ+0X01,HZ));end;elseif not(GZ)then else return f(AZ,GZ,kZ);end;else if e(JZ)=="string"then if not(p(JZ,'\097t\116\101\109p\116\ \116\o\032\y\ie\l\100\ a\c\114\o\ss\ \m\eta\m\e\116h\o\100/\067\%-\call\ \098\ou\110d\097\114\y'))then else return coroutine.yield();end;if p(JZ,'\^\.\045\:%\d\+\:\032')then(V)("Luraph Script:"..(Dm[KZ-0X1]or"(internal)")..':\ '..v(JZ),0x0);else V(JZ,0);end;else V(JZ,0X0);end;end;end;end;end;else Km=function(...)local Ag,Rg=1,({});local wg=({[1]=Xm,[2]=Rg});local gg=K();local Vg=(gg==g and Qm or gg);local Pg,Jg=eH(...);Pg=Pg-1;do for ck=0x0,Pg do if km>ck then Rg[ck]=Jg[ck+1];else break;end;end;end;if not Lm then do Jg=nil;end;elseif not(Um)then else do Rg[km]={n=Pg>=km and Pg-km+0X1 or 0X00,f(Jg,km+0X01,Pg+0X1)};end;end;local yg=(0X0000);if Vg==gg then else w(Km,Vg);end;local Hg,fg,lg,Wg=o(function()while true do local x_=Sm[Ag];local N_=(x_[4]);Ag=Ag+1;if not(N_<9)then do if not(N_>=0XE)then if N_<11 then if N_~=0X0000a then local lr=(bm[0X000]);(Rg)[0X0001]=lr[1][lr[0X2]];do x_=Sm[Ag];end;do Ag=Ag+1;end;(Rg)[0X1]=Rg[0X001][x_[5]];Ag=Ag+1;local Jr=(0X1);do(Rg)[2]=Rg[0X0000];end;Ag=Ag+0X1;lr=bm[1];do Rg[0x3]=lr[0X01][lr[2]];end;Ag=Ag+0X00001;Rg[Jr](Rg[Jr+0x1],Rg[Jr+2]);do yg=Jr-1;end;Ag=Ag+1;lr=bm[0X00001];(Rg)[1]=lr[1][lr[0X2]];local Qr=(Rg[1]);do Ag=Ag+0X00001;end;Ag=Ag+1;x_=Sm[Ag];do Ag=Ag+1;end;do Jr=1;end;(Rg)[Jr+1]=Qr;(Rg)[Jr]=Qr[x_[5]];Ag=Ag+0X001;do Jr=1;end;Rg[Jr](Rg[Jr+0x01]);yg=Jr-0X001;do x_=Sm[Ag];end;Ag=Ag+0X0001;Ag=x_[6];else for Zi=x_[7],x_[6]do(Rg)[Zi]=nil;end;end;else if N_>=12 then do if N_==13 then local O9,q9=Zm[x_[0X6]],(nil);local R9=(O9[3]);local V9=#R9;if not(V9>0)then else q9={};for ZY=1,V9 do local DY=(R9[ZY]);if DY[0X1]==0X0 then q9[ZY-0X01]={Rg,DY[0X002]};else q9[ZY-1]=bm[DY[2]];end;end;M(Cm,q9);end;(Rg)[x_[7]]=dH(O9,q9,Vg);else Rg[0x000]=Vg[x_[2]];Ag=Ag+1;Ag=Ag+1;local cY=(0X0);x_=Sm[Ag];Ag=Ag+1;(Rg)[1]=x_[0X0002];local OY=(bm[0x000]);Ag=Ag+1;(Rg)[cY]=Rg[cY](Rg[cY+0X001]);yg=cY;do Ag=Ag+0x1;end;Ag=Ag+1;Ag=Ag+0X1;Rg[1]=OY[1][OY[0X2]];Ag=Ag+0x1;Ag=Ag+0X1;do x_=Sm[Ag];end;do Ag=Ag+1;end;do Rg[0x1]=Rg[1][x_[5]];end;Ag=Ag+1;do(Rg)[0X2]=Rg[0];end;do Ag=Ag+1;end;cY=0x1;do(Rg)[cY]=Rg[cY](Rg[cY+0X00001]);end;do yg=cY;end;Ag=Ag+0X1;Ag=Ag+1;x_=Sm[Ag];Ag=Ag+0X1;do if not(not Rg[0X1])then else Ag=x_[6];end;end;end;end;else Rg[x_[7]]=Rg[x_[0x6]]~=Rg[x_[1]];end;end;else if N_<16 then do if N_~=0xF then local fk=(x_[7]);for Mt=fk,fk+(x_[0X6]-0X1)do(Rg)[Mt]=Jg[km+(Mt-fk)+0X1];end;else if Rg[x_[0X0006]]~=Rg[x_[0X0001]]then Ag=x_[0X7];end;end;end;else if N_<17 then(Rg)[x_[7]]=Vg[x_[2]];else if N_==18 then Rg[x_[7]]=x_[2];else repeat local d0,n0=Cm,(Rg);do if not(#d0>0X000)then else local p4={};for Ip,vp in I,d0 do for zl,Dl in I,vp do if not(Dl[0x1]==n0 and Dl[2]>=0)then else local sG=(Dl[2]);if not(not p4[sG])then else(p4)[sG]={n0[sG]};end;do(Dl)[1]=p4[sG];end;Dl[0x0002]=0x1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;else if N_<0X4 then if N_<0X2 then if N_~=0X01 then Ag=x_[0X6];else Rg[x_[0x7]]=x_[2];end;else if N_==0x003 then Rg[x_[0X7]]={f({},0X1,x_[6])};else if not(not Rg[x_[0X7]])then else Ag=x_[0X06];end;end;end;else do if not(N_>=0X00006)then do if N_==0x5 then local hM=(x_[0X7]);local yM=x_[6];yg=hM+yM-1;repeat local WM,fM=Cm,(Rg);do if not(#WM>0)then else local MI={};for b2,C2 in I,WM do for uh,ch in I,C2 do do if ch[1]==fM and ch[0X2]>=0x0 then local CA=(ch[0X2]);if not(not MI[CA])then else(MI)[CA]={fM[CA]};end;do(ch)[0x01]=MI[CA];end;(ch)[2]=1;end;end;end;end;end;end;until true;return true,hM,yM;else Rg[0X0001]=Vg[x_[2]];Ag=Ag+0x1;Ag=Ag+1;x_=Sm[Ag];Ag=Ag+0X0001;(Rg)[0X1]=Rg[1][x_[0X5]];Ag=Ag+0x01;Ag=Ag+1;x_=Sm[Ag];Ag=Ag+1;if not(not Rg[1])then else do Ag=x_[0X6];end;end;end;end;else if N_<7 then Rg[x_[7]]=Rg[x_[0X6]]<=Rg[x_[0X01]];else if N_==0X0008 then else do Rg[x_[0X07]]=-Rg[x_[0X006]];end;end;end;end;end;end;end;end;end);if not(Hg)then if e(fg)=='str\105\110g'then do if not(p(fg,"\097t\116\e\109\112\116\ \116\o\ \y\105e\l\100\ \097\099\114\111s\s \m\101tameth\o\d\047\067%\-\c\097\108\108\032b\o\117n\dar\121"))then else return coroutine.yield();end;end;if not(p(fg,"^.-:%d+: "))then(V)(fg,0X000);else(V)("Luraph Script:"..(Dm[Ag-1]or'\040\i\110ter\110a\l)')..": "..v(fg),0);end;else(V)(fg,0);end;else if fg then if Wg~=1 then return Rg[lg](f(Rg,lg+0X1,yg));else return Rg[lg]();end;elseif not(lg)then else return f(Rg,lg,Wg);end;end;end;end;end;else do if not(xm<0X00071)then if xm<0X72 then Km=function(...)local HF,PF=0X1,({});local jF=(K());local WF,uF=eH(...);local rF={[1]=Xm,[2]=PF};WF=WF-1;local wF=((jF==g and Qm or jF));local KF=(0X0);for mk=0,WF do if not(km>mk)then break;else PF[mk]=uF[mk+0x1];end;end;do if not Lm then uF=nil;elseif not(Um)then else do PF[km]={n=WF>=km and WF-km+1 or 0,f(uF,km+1,WF+0X1)};end;end;end;do if wF~=jF then(w)(Km,wF);end;end;local hF,lF,LF,bF=o(function()while true do local vh=Sm[HF];local dh=vh[0x004];HF=HF+0X1;if dh>=6 then if not(dh>=9)then if dh<0X7 then PF[vh[0X7]]=O(PF[vh[6]],PF[vh[0X1]]);else if dh==0X08 then do for Xf=vh[0X7],vh[0X6]do do(PF)[Xf]=nil;end;end;end;else PF[0]=wF[vh[2]];HF=HF+0x00001;do HF=HF+1;end;local N1=(0);vh=Sm[HF];HF=HF+0X00001;local k1=PF[0];(PF)[N1+1]=k1;PF[N1]=k1[vh[5]];HF=HF+1;do N1=0X0000;end;PF[N1](PF[N1+1]);KF=N1-0x001;HF=HF+1;do repeat local H2,W2=Cm,PF;if not(#H2>0X00000)then else local ab=({});do for k3,l3 in I,H2 do for ah,kh in I,l3 do if not(kh[0X01]==W2 and kh[2]>=0X0)then else local Vb=(kh[0x2]);if not ab[Vb]then(ab)[Vb]={W2[Vb]};end;(kh)[1]=ab[Vb];(kh)[2]=1;end;end;end;end;end;until true;end;do return;end;end;end;else if dh<11 then if dh~=10 then(PF)[vh[7]]=PF[vh[6]];else do PF[vh[7]]=wF[vh[2]];end;end;else if dh~=0XC then(PF)[vh[0X00007]]={f({},1,vh[0X00006])};else HF=vh[0X00006];end;end;end;else if dh<3 then if dh<0X01 then(wF)[vh[2]]=PF[vh[7]];else if dh~=2 then if PF[vh[0X06]]<=PF[vh[1]]then HF=vh[7];end;else local yw=Zm[vh[6]];local Tw,Ow=yw[3],nil;local Xw=(#Tw);do if Xw>0X00000 then Ow={};for NX=0X00001,Xw do local eX=Tw[NX];if eX[0X00001]~=0X0 then(Ow)[NX-1]=bm[eX[2]];else Ow[NX-0x1]={PF,eX[2]};end;end;M(Cm,Ow);end;end;do(PF)[vh[0X7]]=dH(yw,Ow,wF);end;end;end;else if dh>=0X4 then if dh==0X5 then else PF[vh[0x0007]]=not PF[vh[0X6]];end;else PF[vh[0x7]]=vh[2];end;end;end;end;end);do if not(hF)then if e(lF)=="string"then if not(p(lF,"\097\116\116\101mp\116\032t\111 \y\i\101\l\d\ \097c\114o\115\115 \meta\109\et\h\111\100\047C\037\045\099\097\l\108\032boundar\y"))then else return coroutine.yield();end;if p(lF,"\^.-\:\037\d\043\: ")then V("\076ur\097\ph \S\c\114ip\116\:"..(Dm[HF-0x0001]or"(internal)").."\:\ "..v(lF),0);else V(lF,0X0);end;else(V)(lF,0X00);end;else if lF then if bF~=0X1 then return PF[LF](f(PF,LF+0x1,KF));else do return PF[LF]();end;end;elseif LF then return f(PF,LF,bF);end;end;end;end;else if xm~=115 then Km=function(...)local Ws=({});local Ms=(0x001);local ys=(K());local Gs=(0x000);local xs,ns=eH(...);local ms,Es={[2]=Ws,[1]=Xm},(ys==g and Qm or ys);xs=xs-1;do for z3=0,xs do do if km>z3 then do Ws[z3]=ns[z3+0x1];end;else break;end;end;end;end;if not Lm then ns=nil;elseif not(Um)then else Ws[km]={n=xs>=km and xs-km+1 or 0,f(ns,km+1,xs+1)};end;if Es~=ys then w(Km,Es);end;local as,ks,Ds,ss=o(function()while true do local wG=(Sm[Ms]);local jG=(wG[0x4]);Ms=Ms+1;if jG>=0x9 then if not(jG<13)then do if not(jG>=15)then if jG==14 then local ua=(wG[6]);local Ca=(wG[0X7]);do Gs=Ca+ua-1;end;repeat local ZI,II=Cm,(Ws);if#ZI>0 then local rO=({});for Wv,Av in I,ZI do do for i4,s4 in I,Av do do if not(s4[1]==II and s4[0X2]>=0)then else local Wu=(s4[2]);if not rO[Wu]then rO[Wu]={II[Wu]};end;(s4)[1]=rO[Wu];s4[2]=1;end;end;end;end;end;end;until true;return true,Ca,ua;else end;else if not(jG<16)then do if jG~=0X11 then do(Ws)[wG[7]]={f({},1,wG[0X6])};end;else do Ws[0X0]=Es[wG[2]];end;Ms=Ms+1;Ms=Ms+0X0001;do wG=Sm[Ms];end;Ms=Ms+1;Ws[0x0]=Ws[0X0][wG[0X5]];Ms=Ms+1;Ms=Ms+0X1;wG=Sm[Ms];Ms=Ms+1;Ws[0]=Ws[0][wG[5]];wG=Sm[Ms];Ms=Ms+0x1;(Ws)[0]=Ws[0][wG[5]];Ms=Ms+0X001;Ms=Ms+0X01;wG=Sm[Ms];Ms=Ms+0x00001;Ws[0X000]=Ws[0X0]>wG[5];wG=Sm[Ms];Ms=Ms+0x01;Ms=wG[0x6];end;end;else local z7=Zm[wG[0X6]];local M7=z7[3];local m7=#M7;local C7=(nil);do if not(m7>0)then else C7={};for jW=1,m7 do local JW=M7[jW];do if JW[1]==0 then(C7)[jW-1]={Ws,JW[2]};else(C7)[jW-0X1]=bm[JW[2]];end;end;end;(M)(Cm,C7);end;end;Ws[wG[7]]=dH(z7,C7,Es);end;end;end;else if not(jG<11)then do if jG==12 then Ws[0x0]=Es[wG[0X2]];Ms=Ms+1;Ms=Ms+1;Ms=Ms+1;Gs=0X0;Ws[Gs]=Ws[Gs]();Ms=Ms+1;Ms=Ms+0X1;wG=Sm[Ms];Ms=Ms+0X1;Ms=wG[0X06];else do if not(not Ws[wG[7]])then else Ms=wG[0x6];end;end;end;end;else do if jG==10 then(Ws)[wG[0x7]]=Ws[wG[0X6]]<Ws[wG[0X01]];else Ws[wG[7]]=Es[wG[2]];end;end;end;end;else do if jG<4 then if not(jG>=0X2)then do if jG~=1 then repeat local av,wv=Cm,Ws;if not(#av>0X0)then else local l0={};for Tf,Xf in I,av do do for XP,HP in I,Xf do do if HP[0X00001]==wv and HP[2]>=0 then local m3=(HP[2]);if not(not l0[m3])then else(l0)[m3]={wv[m3]};end;(HP)[1]=l0[m3];do HP[0X02]=0x01;end;end;end;end;end;end;end;until true;return;else Ws[wG[7]]=Ws[wG[0X00006]];end;end;else if jG==0X3 then local oB=bm[0x0];(Ws)[0X00]=oB[1][oB[0X02]];wG=Sm[Ms];do Ms=Ms+1;end;local MB,sB=0X0,(Ws[0X0]);Ws[MB+1]=sB;Ws[MB]=sB[wG[5]];Ms=Ms+0x1;MB=0X0;Ws[MB]=Ws[MB](Ws[MB+1]);Gs=MB;wG=Sm[Ms];Ms=Ms+0X1;Ms=wG[0X00006];else do Ws[0]=Es[wG[0x2]];end;Ms=Ms+0X1;Ms=Ms+0X001;wG=Sm[Ms];do Ms=Ms+1;end;(Ws)[0]=Ws[0X000][wG[0X5]];do Ms=Ms+1;end;do Ms=Ms+1;end;wG=Sm[Ms];Ms=Ms+1;if Ws[0X0000]then Ms=wG[0X6];end;end;end;else if not(jG<0X06)then if jG>=0X0007 then if jG~=0X8 then repeat local TE,YE=Cm,Ws;do if#TE>0 then local s_={};for l0,K0 in I,TE do for lY,GY in I,K0 do if not(GY[0X001]==YE and GY[2]>=0X0)then else local mQ=(GY[0x2]);if not s_[mQ]then do(s_)[mQ]={YE[mQ]};end;end;(GY)[1]=s_[mQ];(GY)[2]=1;end;end;end;end;end;until true;local ew=(wG[7]);return false,ew,ew;else local Wb=(wG[7]);local tb=(Ws[Wb]);local Rb,ub=Ws[Wb+1],(Ws[Wb+0X2]);do(Ws)[Wb]=r(function()for qy=tb,Rb,ub do(C)(true,qy);end;end);end;Ms=wG[6];end;else(Ws)[wG[7]]=wG[2];end;else if jG==5 then Ms=wG[6];else do for il=wG[7],wG[6]do do(Ws)[il]=nil;end;end;end;end;end;end;end;end;end;end);if as then if ks then if ss~=0X1 then return Ws[Ds](f(Ws,Ds+1,Gs));else return Ws[Ds]();end;elseif Ds then do return f(Ws,Ds,ss);end;end;else if e(ks)~='\str\105n\g'then(V)(ks,0);else if not(p(ks,"at\116\e\m\p\116\ to \y\ie\108\100\ acr\111\ss\032m\e\116am\101th\o\d\047\067\%\-ca\l\l\032boun\da\114\121"))then else do return coroutine.yield();end;end;if p(ks,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[Ms-0X1]or'(\i\110t\101\114na\108\)')..": "..v(ks),0X00000);else(V)(ks,0);end;end;end;end;else do Km=function(...)local SX=({});local zX=0X1;local wX=(K());local uX={[1]=Xm,[2]=SX};local PX,UX=eH(...);PX=PX-0X1;for u0=0,PX do if km>u0 then(SX)[u0]=UX[u0+0X01];else break;end;end;if not Lm then UX=nil;elseif Um then do SX[km]={n=PX>=km and PX-km+0X0001 or 0,f(UX,km+1,PX+1)};end;end;local xX,QX=(wX==g and Qm or wX),0X0;if xX~=wX then w(Km,xX);end;local sX,lX,yX,pX=o(function()while true do local e7=(Sm[zX]);local p7=e7[4];zX=zX+1;if p7>=0x8 then do if p7>=12 then if not(p7>=0XE)then if p7==13 then(uX)[e7[6]]=SX[e7[0X07]];else do SX[e7[7]]=xX[e7[0X2]];end;end;else if p7~=0X00F then do SX[e7[7]]=SX[e7[0x6]]<=SX[e7[0X001]];end;else(SX)[e7[7]]={f({},0X0001,e7[6])};end;end;else if p7>=10 then do if p7==0Xb then(SX)[e7[7]]=uX[e7[6]];else local ow=Zm[e7[6]];local pw=(nil);local sw=(ow[0X3]);local nw=(#sw);if nw>0 then do pw={};end;for KT=1,nw do local WT=sw[KT];if WT[0x001]==0x0 then pw[KT-1]={SX,WT[0X2]};else do pw[KT-1]=bm[WT[0x2]];end;end;end;M(Cm,pw);end;do(SX)[e7[7]]=dH(ow,pw,xX);end;end;end;else if p7==0X9 then SX[0X000]=xX[e7[2]];zX=zX+1;local fJ=0x0000;do zX=zX+0x0001;end;do e7=Sm[zX];end;zX=zX+0X1;(SX)[0]=SX[0x0][e7[0X00005]];do zX=zX+1;end;zX=zX+0X0001;e7=Sm[zX];local sJ=Zm[e7[6]];local MJ=sJ[0X3];zX=zX+1;local qJ,bJ=nil,(#MJ);if bJ>0X0 then do qJ={};end;for SL=1,bJ do local UL=MJ[SL];if UL[0X00001]==0x00000 then do qJ[SL-0X0001]={SX,UL[2]};end;else do qJ[SL-0X1]=bm[UL[0X00002]];end;end;end;M(Cm,qJ);end;(SX)[0X1]=dH(sJ,qJ,xX);zX=zX+0x0001;(SX[fJ])(SX[fJ+0x0001]);QX=fJ-1;zX=zX+0X1;zX=zX+1;zX=zX+1;repeat local RW,QW=Cm,(SX);do if not(#RW>0)then else local LL={};for WQ,DQ in I,RW do for mH,OH in I,DQ do do if OH[0X01]==QW and OH[2]>=0X00000 then local Jk=OH[0X2];if not LL[Jk]then(LL)[Jk]={QW[Jk]};end;OH[0X01]=LL[Jk];(OH)[0X2]=1;end;end;end;end;end;end;until true;return;else SX[e7[0X07]]=e7[0X2];end;end;end;end;else if p7<4 then if p7>=2 then if p7==3 then local Wv=e7[0X007];local wv=r(function(...)C();for HG,aG,jG,zG,KG,YG,GG,FG,lG,yG in...do(C)(true,{HG,aG,jG,zG,KG,YG,GG,FG,lG,yG});end;end);wv(SX[Wv],SX[Wv+1],SX[Wv+0X2]);QX=Wv;do SX[Wv]=wv;end;zX=e7[6];else for Tq=e7[7],e7[0X00006]do(SX)[Tq]=nil;end;end;else if p7~=1 then else local xA=e7[0X7];local bA,fA=SX[xA],(e7[1]-1)*0X032;for UJ=1,e7[6]do(bA)[fA+UJ]=SX[xA+UJ];end;end;end;else if p7>=6 then do if p7==7 then(SX)[e7[7]]=SX[e7[0x6]]-SX[e7[0X1]];else zX=e7[0X00006];end;end;else if p7~=0X5 then if not(not(SX[e7[0X06]]<=SX[e7[0X00001]]))then else zX=e7[0X007];end;else SX[e7[7]]=SX[e7[6]]+SX[e7[1]];end;end;end;end;end;end);do if not(sX)then if e(lX)~="string"then(V)(lX,0);else if not(p(lX,'\097t\116\em\112t\ t\o\032\y\i\101\l\d\ acr\o\s\s\032\m\etam\et\104\od\047C%\-\099al\108\ \098\111un\100\097\114\121'))then else return coroutine.yield();end;if not(p(lX,"^.-:%d+: "))then(V)(lX,0);else V('\076\117\114a\ph \083\cr\105\pt\058'..(Dm[zX-0x001]or"\(\i\110te\114\110a\l\)")..": "..v(lX),0);end;end;else if lX then if pX~=1 then do return SX[yX](f(SX,yX+1,QX));end;else return SX[yX]();end;elseif yX then do return f(SX,yX,pX);end;end;end;end;end;end;end;end;else if not(xm<111)then do if xm~=0X70 then Km=function(...)local uD=0;local FD,PD=0X1,({});local eD=({[1]=Xm,[2]=PD});local mD=(K());local oD=(mD==g and Qm or mD);local gD,hD=eH(...);gD=gD-1;do for PR=0x000,gD do do if not(km>PR)then break;else PD[PR]=hD[PR+1];end;end;end;end;if not Lm then hD=nil;elseif Um then PD[km]={n=gD>=km and gD-km+1 or 0x0,f(hD,km+0x00001,gD+0x01)};end;if oD~=mD then w(Km,oD);end;while true do local ZL=(Sm[FD]);local YL=(ZL[4]);FD=FD+1;return(function(F,L,...)local s=Client.Backpack:GetChildren();for z=1,#s do local E=s[z];if E.Name:lower():find("microchip")then return true;end;end;local v=Client.Character:GetChildren();for V=1,#v do local x=v[V];if x:IsA("Tool")and x.Name:lower():find("microchip")then return true;end;end;end)(PD,bm,...);end;end;else Km=function(...)local TQ,AQ=0X0,{};local JQ=(K());local PQ,RQ={[1]=Xm,[2]=AQ},((JQ==g and Qm or JQ));local HQ,uQ=eH(...);local GQ=0X001;do HQ=HQ-1;end;for VW=0X0000,HQ do if km>VW then(AQ)[VW]=uQ[VW+1];else break;end;end;if not Lm then uQ=nil;elseif not(Um)then else(AQ)[km]={n=HQ>=km and HQ-km+1 or 0,f(uQ,km+0x00001,HQ+1)};end;if RQ==JQ then else w(Km,RQ);end;local CQ,BQ,bQ,lQ=o(function()while true do local sE=(Sm[GQ]);local ME=sE[0X004];do GQ=GQ+1;end;do if not(ME<8)then if ME>=12 then do if ME>=14 then if ME~=0X0F then(AQ)[sE[0X7]]=sE[0X00002];else do if AQ[sE[6]]<AQ[sE[0X001]]then GQ=sE[7];end;end;end;else do if ME~=13 then(AQ)[0X0000]=RQ[sE[0X2]];do GQ=GQ+1;end;GQ=GQ+0X1;sE=Sm[GQ];local rY=(0X0);GQ=GQ+1;AQ[0]=AQ[0X0000][sE[5]];sE=Sm[GQ];local qY=Zm[sE[6]];local GY=qY[0X03];do GQ=GQ+0X1;end;local fY,eY=nil,#GY;if eY>0 then fY={};for o_=0X0001,eY do local b_=(GY[o_]);if b_[1]==0 then fY[o_-0X1]={AQ,b_[2]};else fY[o_-1]=bm[b_[0X0002]];end;end;M(Cm,fY);end;AQ[0X01]=dH(qY,fY,RQ);GQ=GQ+0X1;(AQ[rY])(AQ[rY+0x01]);TQ=rY-0x01;GQ=GQ+1;repeat local Bw,rw=Cm,(AQ);if#Bw>0X0 then local Qe=({});for uM,TM in I,Bw do do for NW,oW in I,TM do if not(oW[1]==rw and oW[0X2]>=0X0)then else local WW=(oW[2]);if not Qe[WW]then(Qe)[WW]={rw[WW]};end;(oW)[1]=Qe[WW];do(oW)[0x002]=0x1;end;end;end;end;end;end;until true;do return;end;else local ck=(sE[6]);local qk=(AQ[ck]);for DL=ck+1,sE[0X1]do qk=qk..AQ[DL];end;(AQ)[sE[7]]=qk;end;end;end;end;else do if not(ME<10)then if ME==11 then do AQ[sE[0X7]]=AQ[sE[6]]%AQ[sE[1]];end;else(AQ)[sE[7]]=RQ[sE[2]];end;else if ME~=9 then AQ[sE[7]]=AQ[sE[6]]-AQ[sE[1]];else GQ=sE[6];end;end;end;end;else if ME<0X4 then do if not(ME<2)then do if ME~=0X00003 then local aO=(sE[0X01]-1)*0X32;local BO=(sE[7]);local KO=(AQ[BO]);for zi=1,sE[6]do do(KO)[aO+zi]=AQ[BO+zi];end;end;else(AQ)[sE[0X7]]=AQ[sE[6]]+AQ[sE[1]];end;end;else do if ME~=0X1 then else do if not(not(AQ[sE[0X6]]<=AQ[sE[1]]))then else do GQ=sE[7];end;end;end;end;end;end;end;else if ME>=6 then if ME~=0X7 then(AQ)[sE[0X0007]]=W(AQ[sE[0X06]],AQ[sE[1]]);else local Ri=(Zm[sE[0X0006]]);local ri=(nil);local ii=Ri[3];local Ci=(#ii);if not(Ci>0X0)then else ri={};do for SI=0X001,Ci do local ZI=(ii[SI]);if ZI[1]==0 then(ri)[SI-0X1]={AQ,ZI[0X0002]};else(ri)[SI-0X1]=bm[ZI[2]];end;end;end;(M)(Cm,ri);end;AQ[sE[7]]=dH(Ri,ri,RQ);end;else if ME==5 then AQ[sE[7]]=AQ[sE[6]]>AQ[sE[0X1]];else AQ[sE[7]]={f({},1,sE[0X00006])};end;end;end;end;end;end;end);if CQ then if BQ then if lQ~=1 then return AQ[bQ](f(AQ,bQ+0x1,TQ));else return AQ[bQ]();end;elseif not(bQ)then else return f(AQ,bQ,lQ);end;else do if e(BQ)=="s\116r\105\110\g"then do if p(BQ,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(BQ,"^\.\-\058\%\100\043\: ")then V("Luraph Script:"..(Dm[GQ-0X1]or"(internal)").."\: "..v(BQ),0X0);else V(BQ,0);end;end;else V(BQ,0X0);end;end;end;end;end;end;else Km=function(...)local Tn=1;local An={};local Un=(K());local On,cn=eH(...);local Hn={[2]=An,[1]=Xm};On=On-1;local xn=((Un==g and Qm or Un));for yj=0,On do if not(km>yj)then do break;end;else do An[yj]=cn[yj+1];end;end;end;local In=0;if not Lm then cn=nil;elseif Um then do(An)[km]={n=On>=km and On-km+1 or 0,f(cn,km+1,On+1)};end;end;if xn==Un then else w(Km,xn);end;local qn,Cn,ln,bn=o(function()do while true do local Ei=Sm[Tn];local ti=Ei[0x04];Tn=Tn+1;if ti<7 then if not(ti>=3)then if ti<1 then do(An)[Ei[0X7]]=An[Ei[0X6]]-An[Ei[1]];end;else do if ti~=2 then do if not(not(An[Ei[6]]<=An[Ei[0X001]]))then else Tn=Ei[7];end;end;else for I3=Ei[0X7],Ei[0X6]do do An[I3]=nil;end;end;end;end;end;else if not(ti>=0X00005)then if ti==0X4 then do Tn=Ei[0X06];end;else local WQ=Zm[Ei[6]];local uQ=(WQ[0X0003]);local AQ,vQ=#uQ,nil;do if AQ>0X000 then vQ={};for iL=1,AQ do local vL=(uQ[iL]);if vL[1]==0 then do vQ[iL-0X0001]={An,vL[0X2]};end;else vQ[iL-1]=bm[vL[2]];end;end;M(Cm,vQ);end;end;An[Ei[0X7]]=dH(WQ,vQ,xn);end;else if ti==0x6 then(An)[Ei[7]]=An[Ei[6]];else end;end;end;else if not(ti<0XB)then do if not(ti<0X00d)then if ti~=0xE then local Gl=(Ei[0X7]);local Wl,Ql=An[Gl]();do if Wl then do Tn=Ei[6];end;(An)[Gl+3]=Ql;end;end;else(An)[Ei[0x7]]=Ei[2];end;else if ti~=12 then local Fu=(Ei[1]-0X1)*50;local Ju=Ei[7];local du=(An[Ju]);for Nf=1,Ei[0X00006]do do du[Fu+Nf]=An[Ju+Nf];end;end;else(An)[Ei[7]]=An[Ei[0X006]]<An[Ei[0X1]];end;end;end;else if ti>=0X00009 then if ti~=0X000a then(An)[Ei[0X7]]=xn[Ei[2]];else An[0x0]=xn[Ei[2]];Ei=Sm[Tn];local DW=(0);Tn=Tn+0x1;local NW=An[0];(An)[DW+0x00001]=NW;An[DW]=NW[Ei[0X5]];do Ei=Sm[Tn];end;Tn=Tn+0X0001;(An)[0X2]=Ei[0X2];Tn=Tn+1;DW=0;An[DW]=An[DW](An[DW+1],An[DW+0x2]);In=DW;do Tn=Tn+0X1;end;Tn=Tn+0X1;local EW=nil;Ei=Sm[Tn];Tn=Tn+1;An[0X1]=xn[Ei[2]];Ei=Sm[Tn];Tn=Tn+0X00001;An[1]=An[0X1][Ei[5]];do Tn=Tn+1;end;Tn=Tn+0X0001;do Ei=Sm[Tn];end;Tn=Tn+0x001;local hW=(Zm[Ei[0x6]]);local JW=hW[0x00003];local FW=(#JW);do if FW>0 then EW={};for wi=0X1,FW do local ci=(JW[wi]);if ci[1]==0 then do EW[wi-0X1]={An,ci[2]};end;else(EW)[wi-1]=bm[ci[0X2]];end;end;M(Cm,EW);end;end;An[2]=dH(hW,EW,xn);Tn=Tn+1;DW=0X01;(An[DW])(An[DW+1]);do In=DW-1;end;Tn=Tn+0X1;do Tn=Tn+1;end;do Tn=Tn+0X1;end;repeat local Dj,Nj=Cm,(An);do if not(#Dj>0)then else local VA={};for uN,zN in I,Dj do for A4,F4 in I,zN do do if F4[0X1]==Nj and F4[0X0002]>=0 then local oJ=(F4[2]);if not VA[oJ]then VA[oJ]={Nj[oJ]};end;F4[0X001]=VA[oJ];F4[0X002]=1;end;end;end;end;end;end;until true;return;end;else if ti~=8 then An[Ei[7]]={f({},0X1,Ei[6])};else repeat local PU,VU=Cm,(An);if not(#PU>0X0)then else local EA={};for bV,sV in I,PU do for u9,z9 in I,sV do if z9[1]==VU and z9[2]>=0 then local xO=(z9[2]);if not(not EA[xO])then else do EA[xO]={VU[xO]};end;end;do(z9)[0x1]=EA[xO];end;(z9)[0X2]=1;end;end;end;end;until true;local cm=(Ei[7]);do return false,cm,cm+Ei[6]-2;end;end;end;end;end;end;end;end);if not(qn)then if e(Cn)~='\st\114i\110\103'then(V)(Cn,0X0);else if not(p(Cn,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(p(Cn,"^.-:%d+: "))then V(Cn,0);else V("Luraph Script:"..(Dm[Tn-1]or"(internal)")..": "..v(Cn),0);end;end;else if Cn then if bn==1 then return An[ln]();else do return An[ln](f(An,ln+0X0001,In));end;end;elseif not(ln)then else return f(An,ln,bn);end;end;end;end;end;end;end;end;else if xm>=0x7f then if not(xm<133)then do if xm<0x88 then if not(xm>=134)then Km=function(...)local DM,zM=0x00000,{};local tM=(0x1);local LM=K();local qM={[2]=zM,[1]=Xm};local kM,HM=eH(...);kM=kM-1;local hM=((LM==g and Qm or LM));do for FM=0X00,kM do if km>FM then do(zM)[FM]=HM[FM+0X01];end;else do break;end;end;end;end;if not Lm then HM=nil;elseif not(Um)then else do zM[km]={n=kM>=km and kM-km+0X1 or 0,f(HM,km+0X1,kM+0X1)};end;end;if hM==LM then else w(Km,hM);end;local XM,mM,KM,fM=o(function()do while true do local WL=Sm[tM];local vL=(WL[4]);tM=tM+1;do if vL<8 then do if not(vL>=4)then do if not(vL<2)then do if vL~=3 then zM[WL[7]]={f({},0X1,WL[6])};else hM[WL[2]]=zM[WL[7]];end;end;else if vL~=0X01 then else(zM)[WL[0X7]]=WL[2];end;end;end;else if not(vL>=6)then if vL==0x5 then do(zM)[WL[7]]=-zM[WL[0X6]];end;else repeat local IF,XF=Cm,(zM);if not(#IF>0x0)then else local W_=({});for lm,am in I,IF do for CZ,MZ in I,am do do if MZ[0x1]==XF and MZ[0X002]>=0X0 then local BX=(MZ[0X02]);if not W_[BX]then W_[BX]={XF[BX]};end;MZ[1]=W_[BX];(MZ)[0X2]=1;end;end;end;end;end;until true;local LG=WL[7];do return false,LG,LG+WL[6]-0X2;end;end;else do if vL==7 then zM[WL[0x07]]=zM[WL[6]]%zM[WL[0X1]];else do if not(zM[WL[0X7]])then else tM=WL[0X0006];end;end;end;end;end;end;end;else if not(vL<12)then if vL>=0Xe then do if not(vL<0XF)then do if vL==16 then(qM)[WL[6]]=zM[WL[0X7]];else local OU=(Zm[WL[0x6]]);local mU=nil;local VU=OU[3];local EU=#VU;do if not(EU>0X0)then else do mU={};end;for B3=0X00001,EU do local d3=(VU[B3]);do if d3[0X00001]~=0X0 then(mU)[B3-1]=bm[d3[0X0002]];else(mU)[B3-0X1]={zM,d3[2]};end;end;end;M(Cm,mU);end;end;do(zM)[WL[7]]=dH(OU,mU,hM);end;end;end;else do tM=WL[0x6];end;end;end;else if vL~=0Xd then do if zM[WL[0X6]]<zM[WL[1]]then tM=WL[7];end;end;else local MW,pW=WL[7],(zM[WL[6]]);do(zM)[MW+1]=pW;end;zM[MW]=pW[WL[5]];end;end;else if not(vL<10)then if vL==0x0b then zM[0x00000]=hM[WL[0x2]];tM=tM+1;local HW=(0X000);tM=tM+1;WL=Sm[tM];tM=tM+0X1;local mW=(zM[0X00000]);zM[HW+0x1]=mW;do zM[HW]=mW[WL[5]];end;WL=Sm[tM];tM=tM+1;zM[2]=WL[2];tM=tM+0X1;HW=0;zM[HW]=zM[HW](zM[HW+0X00001],zM[HW+2]);DM=HW;tM=tM+0X1;tM=tM+0X01;WL=Sm[tM];tM=tM+1;do zM[0X00001]=hM[WL[0X0002]];end;do WL=Sm[tM];end;local cW=(nil);do tM=tM+1;end;zM[0X1]=zM[1][WL[5]];tM=tM+0X1;tM=tM+0X1;WL=Sm[tM];do tM=tM+1;end;local AW=(Zm[WL[0X006]]);local hW=(AW[0x3]);local NW=#hW;do if NW>0X000 then do cW={};end;for MV=1,NW do local ZV=hW[MV];do if ZV[0X00001]==0X0 then do cW[MV-1]={zM,ZV[2]};end;else(cW)[MV-0X1]=bm[ZV[2]];end;end;end;(M)(Cm,cW);end;end;(zM)[2]=dH(AW,cW,hM);tM=tM+0X1;do HW=0X1;end;(zM[HW])(zM[HW+0X00001]);DM=HW-0x01;tM=tM+0X1;tM=tM+1;do tM=tM+1;end;repeat local An,fn=Cm,zM;if#An>0 then local WR=({});for rp,Dp in I,An do do for s_,X_ in I,Dp do do if not(X_[0X1]==fn and X_[2]>=0X0)then else local aG=(X_[0X2]);do if not WR[aG]then(WR)[aG]={fn[aG]};end;end;X_[1]=WR[aG];X_[0X00002]=1;end;end;end;end;end;end;until true;return;else(zM)[WL[7]]=zM[WL[0x6]][zM[WL[0X001]]];end;else if vL==9 then zM[WL[0x7]]=hM[WL[2]];else for ZI=WL[0X0007],WL[0X06]do zM[ZI]=nil;end;end;end;end;end;end;end;end;end);do if XM then if mM then if fM~=1 then do return zM[KM](f(zM,KM+1,DM));end;else return zM[KM]();end;elseif not(KM)then else return f(zM,KM,fM);end;else do if e(mM)=='\str\105\110\103'then if p(mM,"a\116t\101\mp\116\ t\o y\105\e\108\100\ a\cro\115s\ \109\eta\m\et\h\o\d/\C\%\045c\097\l\l bou\110dar\y")then return coroutine.yield();end;do if not(p(mM,'\^.\-\058%\100\+:\ '))then V(mM,0);else(V)('\L\117\114\097\p\h \S\c\114\105\pt\:'..(Dm[tM-0x001]or"(internal)")..": "..v(mM),0);end;end;else(V)(mM,0);end;end;end;end;end;else do if xm~=0x87 then do Km=function(...)local tc=0x1;local Vc={};local Rc=K();local jc,Zc={[2]=Vc,[1]=Xm},(0);local Uc,qc=eH(...);local Sc=(Rc==g and Qm or Rc);Uc=Uc-0X1;do for OH=0X0,Uc do if km>OH then do(Vc)[OH]=qc[OH+1];end;else break;end;end;end;if not Lm then qc=nil;elseif not(Um)then else(Vc)[km]={n=Uc>=km and Uc-km+1 or 0,f(qc,km+1,Uc+0X1)};end;if Sc==Rc then else w(Km,Sc);end;local dc,hc,Qc,fc=o(function()while true do local IU=(Sm[tc]);local gU=IU[4];tc=tc+1;do if not(gU<12)then if gU<18 then do if not(gU<15)then if not(gU>=0X10)then else do if gU==0X0011 then(Sc)[IU[0X02]]=Vc[IU[0X00007]];else Vc[IU[7]]={f({},0X1,IU[0x6])};end;end;end;else if not(gU>=13)then local b5=Vc[IU[6]];local s5=IU[0X7];(Vc)[s5+1]=b5;Vc[s5]=b5[IU[0X5]];else if gU==0xe then local cr=(Zm[IU[0X0006]]);local Fr=cr[3];local gr,Gr=#Fr,(nil);if gr>0X0 then do Gr={};end;for JD=1,gr do local sD=Fr[JD];if sD[1]==0 then(Gr)[JD-0X1]={Vc,sD[0x0002]};else Gr[JD-0X1]=bm[sD[2]];end;end;M(Cm,Gr);end;(Vc)[IU[0x0007]]=dH(cr,Gr,Sc);else repeat local p5,M5=Cm,(Vc);do if not(#p5>0)then else local EB={};for cy,Py in I,p5 do for s8,E8 in I,Py do if not(E8[0x01]==M5 and E8[0X00002]>=0)then else local OH=(E8[0X2]);if not(not EB[OH])then else EB[OH]={M5[OH]};end;do E8[0X001]=EB[OH];end;E8[2]=1;end;end;end;end;end;until true;return;end;end;end;end;else if gU>=0X15 then if gU<23 then if gU==0X0016 then repeat local hG,tG,sG=Cm,Vc,IU[7];do if#hG>0 then local nT={};do for Rx,Tx in I,hG do for PK,YK in I,Tx do if YK[0X00001]==tG and YK[2]>=sG then local tv=YK[0X2];do if not(not nT[tv])then else(nT)[tv]={tG[tv]};end;end;(YK)[0x1]=nT[tv];(YK)[0X00002]=0X1;end;end;end;end;end;end;until true;else(Vc)[IU[7]]=Vc[IU[6]]<=Vc[IU[0X1]];end;else do if gU==24 then do Vc[IU[7]]=Vc[IU[0X6]]/Vc[IU[1]];end;else(Vc)[0]=Sc[IU[0X002]];tc=tc+0X1;do tc=tc+0x1;end;IU=Sm[tc];tc=tc+1;do(Vc)[0]=Vc[0][IU[0X0005]];end;tc=tc+1;do tc=tc+0x1;end;IU=Sm[tc];tc=tc+1;if not Vc[0X0]then tc=IU[0x6];end;end;end;end;else do if gU>=19 then if gU~=0X14 then local W1=(bm[0]);(Vc)[0]=W1[0X00001][W1[0X2]];tc=tc+1;local t1=0X0;tc=tc+1;IU=Sm[tc];tc=tc+0X0001;local B1=(Vc[0]);do Vc[t1+0X0001]=B1;end;Vc[t1]=B1[IU[5]];tc=tc+1;do t1=0X00;end;Vc[t1]=Vc[t1](Vc[t1+0x0001]);Zc=t1;do IU=Sm[tc];end;tc=tc+0X01;if not(not Vc[0X0])then else do tc=IU[0X6];end;end;else(Vc)[IU[7]]=IU[2];end;else do(jc)[IU[6]]=Vc[IU[7]];end;end;end;end;end;else if gU>=0X6 then if not(gU<9)then if not(gU>=10)then local TX,ZX=IU[0x7],(IU[6]);do Zc=TX+ZX-0X00001;end;repeat local ss,Bs=Cm,(Vc);if not(#ss>0)then else local eg={};for kM,hM in I,ss do for ZS,AS in I,hM do if AS[0x0001]==Bs and AS[2]>=0 then local Js=AS[2];if not eg[Js]then(eg)[Js]={Bs[Js]};end;(AS)[1]=eg[Js];AS[0x2]=0X1;end;end;end;end;until true;return true,TX,ZX;else if gU==0Xb then(Vc)[0x0]=Sc[IU[2]];tc=tc+1;tc=tc+0X1;IU=Sm[tc];tc=tc+0X1;Vc[0X0]=Vc[0X00000][IU[5]];do tc=tc+0X00001;end;tc=tc+1;IU=Sm[tc];do tc=tc+0X1;end;(Vc)[1]=IU[0X2];tc=tc+0X1;local Sg=(0X0);(Vc)[Sg]=Vc[Sg](Vc[Sg+1]);do Zc=Sg;end;tc=tc+1;tc=tc+1;IU=Sm[tc];tc=tc+0X001;if not(not Vc[0])then else tc=IU[6];end;else do Vc[IU[7]]=Vc[IU[6]]==Vc[IU[0X001]];end;end;end;else do if not(gU<7)then if gU==8 then(Vc)[0]=Sc[IU[2]];tc=tc+1;tc=tc+1;IU=Sm[tc];do tc=tc+1;end;(Vc)[0]=Vc[0][IU[0X5]];IU=Sm[tc];do tc=tc+0X001;end;if not(not Vc[0x0])then else tc=IU[0X00006];end;else do if not(Vc[IU[7]])then else tc=IU[0x6];end;end;end;else for sV=IU[7],IU[6]do Vc[sV]=nil;end;end;end;end;else if not(gU<0X3)then do if gU>=4 then if gU~=5 then(Vc)[0X0]=Sc[IU[0x2]];tc=tc+0X1;do tc=tc+0X01;end;tc=tc+0X1;Zc=0X0;do Vc[Zc]=Vc[Zc]();end;do IU=Sm[tc];end;tc=tc+1;if not(Vc[0x0000])then else tc=IU[0x6];end;else(Vc)[0X0]=Sc[IU[0x2]];IU=Sm[tc];local bQ=(Zm[IU[0X6]]);tc=tc+1;local WQ,JQ=nil,(bQ[3]);local mQ=(#JQ);if not(mQ>0X0)then else do WQ={};end;do for Yc=0X001,mQ do local Ec=JQ[Yc];if Ec[0x1]==0 then WQ[Yc-1]={Vc,Ec[0x0002]};else WQ[Yc-1]=bm[Ec[2]];end;end;end;M(Cm,WQ);end;do(Vc)[0X1]=dH(bQ,WQ,Sc);end;local GQ=(0X00000);tc=tc+1;Vc[GQ](Vc[GQ+1]);Zc=GQ-1;IU=Sm[tc];tc=tc+0X00001;tc=IU[0X6];end;else tc=IU[0x06];end;end;else do if gU<0X1 then Vc[IU[0X7]]=Sc[IU[2]];else if gU~=2 then do(Vc)[IU[0X00007]]=l(Vc[IU[6]],Vc[IU[1]]);end;else local ic=(bm[0]);do Vc[0X0]=ic[1][ic[2]];end;IU=Sm[tc];local pc=0X0;tc=tc+0X00001;local nc=(Vc[0X0]);(Vc)[pc+1]=nc;(Vc)[pc]=nc[IU[5]];do tc=tc+0x1;end;pc=0;(Vc[pc])(Vc[pc+1]);Zc=pc-1;do tc=tc+0x00001;end;do repeat local VC,AC=Cm,(Vc);do if not(#VC>0)then else local er=({});for BL,PL in I,VC do for VG,DG in I,PL do if DG[1]==AC and DG[0X00002]>=0X0 then local WA=(DG[2]);if not er[WA]then(er)[WA]={AC[WA]};end;do(DG)[0X01]=er[WA];end;do DG[0X02]=1;end;end;end;end;end;end;until true;end;do return;end;end;end;end;end;end;end;end;end;end);if not(dc)then if e(hc)~="string"then V(hc,0);else if not(p(hc,"\097t\116e\109\pt\032t\o\ y\i\el\100 \097\cro\s\s\ \m\eta\met\ho\100/\C\037-\099\097\l\l\ bou\110\da\114\y"))then else return coroutine.yield();end;if not(p(hc,'\094\046-\:\%\d+\:\ '))then(V)(hc,0);else V("\Lura\112\h\032\083c\114ip\116\:"..(Dm[tc-1]or"(\in\116\er\110al)")..'\:\ '..v(hc),0);end;end;else if hc then if fc==1 then do return Vc[Qc]();end;else return Vc[Qc](f(Vc,Qc+1,Zc));end;elseif Qc then return f(Vc,Qc,fc);end;end;end;end;else Km=function(...)local Z2,I2=0x1,{};local u2={[2]=I2,[1]=Xm};local Y2=(K());local E2,V2=eH(...);E2=E2-1;for v4=0,E2 do if km>v4 then do I2[v4]=V2[v4+1];end;else do break;end;end;end;local q2=((Y2==g and Qm or Y2));if not Lm then V2=nil;elseif Um then I2[km]={n=E2>=km and E2-km+0X01 or 0X0,f(V2,km+1,E2+1)};end;if q2==Y2 then else w(Km,q2);end;local c2=(0);while true do local sc=(Sm[Z2]);local dc=(sc[0X4]);Z2=Z2+1;do return(function(p,Z,...)local n={...};local k=network:Send("CommE",...);return k;end)(I2,bm,...);end;end;end;end;end;end;else if not(xm<137)then if xm~=138 then do Km=function(...)local BB={};local uB=(1);local pB=K();local MB=({[2]=BB,[1]=Xm});local qB,TB=eH(...);qB=qB-0X1;do for v8=0,qB do if not(km>v8)then break;else do BB[v8]=TB[v8+1];end;end;end;end;local GB,XB=(pB==g and Qm or pB),(0);if not Lm then TB=nil;elseif not(Um)then else(BB)[km]={n=qB>=km and qB-km+0x1 or 0,f(TB,km+0X01,qB+1)};end;if GB~=pB then(w)(Km,GB);end;local ZB,AB,CB,hB=o(function()do while true do local TW=Sm[uB];local vW=(TW[4]);uB=uB+1;if not(vW<0X7)then if not(vW<10)then if vW>=12 then if vW==0X000D then local RD=TW[6];local iD=BB[RD];for K4=RD+1,TW[1]do do iD=iD..BB[K4];end;end;(BB)[TW[7]]=iD;else repeat local NF,eF,SF=Cm,BB,(TW[0X7]);if#NF>0 then local Rx=({});do for Ok,ck in I,NF do for mm,Am in I,ck do do if not(Am[1]==eF and Am[0X2]>=SF)then else local i0=(Am[0X2]);do if not(not Rx[i0])then else(Rx)[i0]={eF[i0]};end;end;do Am[1]=Rx[i0];end;Am[2]=1;end;end;end;end;end;end;until true;end;else if vW==11 then repeat local eP,CP=Cm,(BB);if#eP>0x0 then local cA={};do for Av,Pv in I,eP do for Y1,V1 in I,Pv do do if V1[1]==CP and V1[0X002]>=0x00000 then local yo=V1[0X00002];if not(not cA[yo])then else(cA)[yo]={CP[yo]};end;V1[1]=cA[yo];do V1[0x2]=0X001;end;end;end;end;end;end;end;until true;return;else do if not(not BB[TW[7]])then else do uB=TW[0X6];end;end;end;end;end;else if vW>=8 then if vW==9 then if not(BB[TW[6]]<=BB[TW[0X01]])then else do uB=TW[7];end;end;else local Pp,Hp,hp=TW[7],TW[6],TW[0X1];if Hp==0 then else XB=Pp+Hp-0X1;end;local Np,zp=nil,(nil);do if Hp==1 then Np,zp=eH(BB[Pp]());else Np,zp=eH(BB[Pp](f(BB,Pp+0X00001,XB)));end;end;do if hp~=1 then if hp==0X0 then Np=Np+Pp-1;XB=Np;else do Np=Pp+hp-2;end;XB=Np+0X1;end;local H4=0;for RO=Pp,Np do H4=H4+1;(BB)[RO]=zp[H4];end;else do XB=Pp-1;end;end;end;end;else BB[TW[0X00007]]=BB[TW[6]]*BB[TW[0x1]];end;end;else if not(vW>=0X3)then do if not(vW>=0X1)then(BB)[TW[7]]=TW[2];else if vW~=0X2 then uB=TW[0x6];else local eB=bm[0];BB[0]=eB[0x1][eB[0X2]];uB=uB+0x1;uB=uB+1;uB=uB+0x1;(BB)[0]=not BB[0];uB=uB+1;do repeat local Ib,zb=Cm,BB;if not(#Ib>0X0)then else local WO=({});for Ze,Re in I,Ib do do for Bq,dq in I,Re do if not(dq[1]==zb and dq[0X2]>=0X00)then else local im=(dq[2]);if not(not WO[im])then else do(WO)[im]={zb[im]};end;end;do(dq)[1]=WO[im];end;dq[2]=1;end;end;end;end;end;until true;end;local QB=(0x0);return false,QB,QB;end;end;end;else if vW>=0X5 then if vW==6 then BB[TW[7]]=GB[TW[0X2]];else BB[TW[0X0007]]={f({},0X1,TW[0X6])};end;else do if vW~=0X0004 then else local SX=(Zm[TW[6]]);local gX=SX[0X3];local YX=nil;local pX=(#gX);if pX>0X0 then do YX={};end;do for Hx=1,pX do local Bx=(gX[Hx]);if Bx[1]~=0 then(YX)[Hx-0X1]=bm[Bx[2]];else(YX)[Hx-1]={BB,Bx[0X2]};end;end;end;M(Cm,YX);end;BB[TW[7]]=dH(SX,YX,GB);end;end;end;end;end;end;end;end);if not(ZB)then if e(AB)=="\s\116rin\103"then if p(AB,"a\116\116\e\m\pt\ \116o \yi\e\l\d\ \097\099\114\o\s\s\032\meta\me\116\h\111\d\/\C\037\-ca\ll\032\098\o\117\110\d\097\114\121")then do return coroutine.yield();end;end;if not(p(AB,"\094.\-\:\%\d\+\:\032"))then(V)(AB,0X00);else(V)("Luraph Script:"..(Dm[uB-1]or'\(\105\110\116e\114\110\097l)')..": "..v(AB),0);end;else V(AB,0);end;else do if AB then do if hB==1 then return BB[CB]();else return BB[CB](f(BB,CB+1,XB));end;end;elseif CB then return f(BB,CB,hB);end;end;end;end;end;else Km=function(...)local lo={};local fo=1;local oo=(K());local io=({[2]=lo,[1]=Xm});local Io,eo=eH(...);local No=0;Io=Io-0X1;local Jo=((oo==g and Qm or oo));do for WU=0,Io do if not(km>WU)then break;else(lo)[WU]=eo[WU+0X01];end;end;end;do if not Lm then eo=nil;elseif not(Um)then else(lo)[km]={n=Io>=km and Io-km+1 or 0X0,f(eo,km+1,Io+0X00001)};end;end;do if Jo~=oo then w(Km,Jo);end;end;local To,ao,po,to=o(function()while true do local KO=(Sm[fo]);local LO=(KO[4]);fo=fo+1;if not(LO<0X8)then if LO>=12 then if not(LO<0X0000E)then if LO==15 then for H1=KO[0X7],KO[0X6]do lo[H1]=nil;end;else do repeat local Nt,Mt=Cm,lo;if not(#Nt>0)then else local v0=({});for Ry,Zy in I,Nt do do for Wp,bp in I,Zy do if bp[0X1]==Mt and bp[2]>=0 then local jp=bp[2];if not v0[jp]then(v0)[jp]={Mt[jp]};end;(bp)[0X1]=v0[jp];do bp[0X2]=1;end;end;end;end;end;end;until true;end;return;end;else do if LO~=0Xd then(lo)[KO[0X007]]=l(lo[KO[0X6]],lo[KO[1]]);else fo=KO[6];end;end;end;else do if not(LO<10)then if LO~=0x000b then local v3=(KO[0X7]);local Z3,F3=lo[v3]();if not(Z3)then else for n9=0X00001,KO[1]do lo[v3+n9]=F3[n9];end;do fo=KO[0X06];end;end;else do Jo[KO[2]]=lo[KO[0X00007]];end;end;else if LO==0x00009 then else lo[KO[0x7]]=lo[KO[0X6]]+lo[KO[1]];end;end;end;end;else if not(LO>=0X004)then do if not(LO<0X0002)then if LO~=3 then(lo)[KO[0X00007]]=KO[0X002];else(lo)[0x000]=Jo[KO[0X0002]];fo=fo+1;local H8=0X0000;fo=fo+1;KO=Sm[fo];fo=fo+0X1;lo[1]=KO[2];fo=fo+0X00001;(lo)[H8]=lo[H8](lo[H8+1]);local r8=0;do No=H8;end;do fo=fo+1;end;fo=fo+0x1;fo=fo+0X01;lo[0]=not lo[0X0];fo=fo+0X1;repeat local s5,X5=Cm,lo;if not(#s5>0x0)then else local dZ={};for ui,Qi in I,s5 do for YZ,yZ in I,Qi do if not(yZ[1]==X5 and yZ[2]>=0X00000)then else local ZQ=(yZ[0X2]);if not dZ[ZQ]then(dZ)[ZQ]={X5[ZQ]};end;(yZ)[0x1]=dZ[ZQ];(yZ)[0X02]=0X1;end;end;end;end;until true;return false,r8,r8;end;else if LO~=1 then lo[KO[7]]=lo[KO[6]]>=lo[KO[0X1]];else local zA=(Zm[KO[0X6]]);local jA=nil;local lA=zA[0x03];local BA=#lA;if not(BA>0)then else jA={};for pE=1,BA do local OE=lA[pE];if OE[1]~=0 then do jA[pE-0X00001]=bm[OE[2]];end;else jA[pE-1]={lo,OE[0x2]};end;end;(M)(Cm,jA);end;do(lo)[KO[0X07]]=dH(zA,jA,Jo);end;end;end;end;else do if LO>=0X00006 then do if LO==7 then(lo)[KO[0X7]]={f({},0X1,KO[6])};else lo[KO[7]]=Jo[KO[2]];end;end;else if LO==5 then local Ny=(KO[6]);local Vy=(lo[Ny]);do for JS=Ny+1,KO[0X001]do do Vy=Vy..lo[JS];end;end;end;lo[KO[7]]=Vy;else lo[KO[0X7]][lo[KO[6]]]=lo[KO[1]];end;end;end;end;end;end;end);if not(To)then if e(ao)=="string"then if not(p(ao,"\097tt\101\109\112\116\ \116\o\ y\105\101l\d\032a\cr\oss \109\101ta\109\101\116\104o\d\047\C%\-\c\097l\l\032\098o\117n\d\097r\y"))then else return coroutine.yield();end;if not(p(ao,"^.-:%d+: "))then(V)(ao,0x00000);else V('\Lura\112\h \S\cr\i\p\116\:'..(Dm[fo-1]or"(internal)")..':\032'..v(ao),0);end;else(V)(ao,0X00000);end;else if ao then if to~=1 then return lo[po](f(lo,po+1,No));else return lo[po]();end;elseif po then return f(lo,po,to);end;end;end;end;else Km=function(...)local eu={};local Ku=(1);local hu=(K());local Mu,Fu={[1]=Xm,[2]=eu},(0X0000);local Uu,cu=eH(...);do Uu=Uu-0x0001;end;local Ju=((hu==g and Qm or hu));for tO=0X0000,Uu do if not(km>tO)then break;else eu[tO]=cu[tO+0X01];end;end;if not Lm then do cu=nil;end;elseif not(Um)then else eu[km]={n=Uu>=km and Uu-km+0X00001 or 0X0000,f(cu,km+1,Uu+1)};end;do if Ju~=hu then w(Km,Ju);end;end;local Su,Qu,Tu,Hu=o(function()while true do local KL=(Sm[Ku]);local WL=KL[4];Ku=Ku+1;do if not(WL>=13)then if not(WL<6)then do if not(WL>=9)then if not(WL<7)then if WL==8 then eu[0X00]=Ju[KL[0X02]];KL=Sm[Ku];Ku=Ku+0x1;local XY=0;(eu)[0X001]=KL[2];Ku=Ku+0X1;(eu)[XY]=eu[XY](eu[XY+0X00001]);Fu=XY;Ku=Ku+1;Ku=Ku+1;KL=Sm[Ku];Ku=Ku+1;do if not eu[0]then Ku=KL[6];end;end;else(eu)[KL[0X00007]]=KL[0X02];end;else(eu)[KL[7]]=j(eu[KL[6]],eu[KL[1]]);end;else if WL<11 then if WL==0XA then eu[0]=Ju[KL[0X2]];Ku=Ku+0X00001;do Ku=Ku+0X01;end;KL=Sm[Ku];do Ku=Ku+1;end;(eu)[0X0]=eu[0x0][KL[5]];do KL=Sm[Ku];end;Ku=Ku+1;eu[0]=eu[0X0][KL[5]];Ku=Ku+1;Ku=Ku+1;KL=Sm[Ku];Ku=Ku+1;(eu)[0X1]=Ju[KL[2]];KL=Sm[Ku];Ku=Ku+1;(eu)[0X1]=eu[0x1][KL[0X00005]];do Ku=Ku+0X1;end;Ku=Ku+1;KL=Sm[Ku];Ku=Ku+1;if not(eu[0X0]<eu[1])then do Ku=KL[0X7];end;end;else(eu)[0]=Ju[KL[2]];do KL=Sm[Ku];end;Ku=Ku+1;(eu)[0X0]=eu[0X00000][KL[0X5]];Ku=Ku+1;Ku=Ku+0X001;KL=Sm[Ku];Ku=Ku+0x01;do if not(not eu[0])then else Ku=KL[6];end;end;end;else if WL==0x0000c then eu[KL[0X7]]=O(eu[KL[0X6]],eu[KL[0X00001]]);else Ku=KL[0X00006];end;end;end;end;else do if WL>=0x003 then if WL<4 then if not(not eu[KL[0x07]])then else do Ku=KL[0X6];end;end;else if WL==5 then repeat local hQ,WQ,PQ=Cm,eu,KL[0X00007];if#hQ>0X0 then local Kf={};for e0,R0 in I,hQ do for Nf,Qf in I,R0 do do if Qf[1]==WQ and Qf[2]>=PQ then local QB=Qf[0X00002];if not Kf[QB]then(Kf)[QB]={WQ[QB]};end;(Qf)[1]=Kf[QB];(Qf)[2]=1;end;end;end;end;end;until true;else do(eu)[KL[7]]=Ju[KL[2]];end;end;end;else if not(WL<1)then if WL~=0X2 then do(eu)[KL[7]]={f({},0X1,KL[6])};end;else local T8=bm[0];eu[0]=T8[0x00001][T8[2]];Ku=Ku+1;do Ku=Ku+0X1;end;local i8=(0);KL=Sm[Ku];Ku=Ku+1;local W8=eu[0];eu[i8+0X0001]=W8;eu[i8]=W8[KL[5]];Ku=Ku+1;i8=0;eu[i8](eu[i8+1]);Fu=i8-1;Ku=Ku+1;Ku=Ku+1;Ku=Ku+0x1;repeat local mY,FY=Cm,(eu);do if#mY>0X0 then local r_={};for CC,yC in I,mY do for Z0,W0 in I,yC do do if W0[1]==FY and W0[0x02]>=0 then local mC=W0[2];if not r_[mC]then(r_)[mC]={FY[mC]};end;W0[1]=r_[mC];do W0[2]=0X01;end;end;end;end;end;end;end;until true;return;end;else do(eu)[KL[0x7]]=l(eu[KL[0x6]],eu[KL[0X1]]);end;end;end;end;end;else if WL>=0X13 then do if not(WL>=0X16)then if WL<20 then local im=(Zm[KL[6]]);local Fm=(im[0X3]);local Om=nil;local mm=(#Fm);if not(mm>0X0000)then else Om={};for k8=0X001,mm do local W8=Fm[k8];if W8[1]~=0 then Om[k8-1]=bm[W8[0X2]];else Om[k8-1]={eu,W8[2]};end;end;M(Cm,Om);end;(eu)[KL[7]]=dH(im,Om,Ju);else do if WL==0X015 then eu[0]=true;KL=Sm[Ku];do Ku=Ku+0X1;end;(Ju)[KL[2]]=eu[0X0];Ku=Ku+0X1;repeat local xn,Pn=Cm,eu;if not(#xn>0)then else local Lo={};do for Wp,Jp in I,xn do do for pb,Tb in I,Jp do if not(Tb[0X1]==Pn and Tb[2]>=0X0)then else local h3=(Tb[2]);if not Lo[h3]then(Lo)[h3]={Pn[h3]};end;do(Tb)[1]=Lo[h3];end;(Tb)[0x2]=0X1;end;end;end;end;end;end;until true;return;else if eu[KL[0X007]]then Ku=KL[0x6];end;end;end;end;else if not(WL>=24)then if WL~=23 then else(eu)[1]=Ju[KL[0x2]];Ku=Ku+1;Ku=Ku+1;do KL=Sm[Ku];end;Ku=Ku+0X0001;eu[2]=Ju[KL[0X002]];KL=Sm[Ku];Ku=Ku+1;do eu[0X2]=eu[0X0002][KL[0X5]];end;Ku=Ku+0X01;local hJ=1;Ku=Ku+1;Ku=Ku+1;eu[hJ]=eu[hJ](eu[hJ+1]);Fu=hJ;Ku=Ku+1;Ku=Ku+1;do KL=Sm[Ku];end;Ku=Ku+0X0001;if eu[1]then Ku=KL[6];end;end;else if WL~=0X19 then do if not(not(eu[KL[6]]<eu[KL[0x00001]]))then else Ku=KL[7];end;end;else do eu[2]=Ju[KL[0X002]];end;Ku=Ku+1;Ku=Ku+1;KL=Sm[Ku];do Ku=Ku+0X1;end;eu[0x2]=eu[0X2][KL[5]];do KL=Sm[Ku];end;Ku=Ku+1;if not eu[0x2]then Ku=KL[0X6];end;end;end;end;end;else if WL>=0X10 then if WL>=0X011 then do if WL~=0X12 then if not(not(eu[KL[6]]<=eu[KL[1]]))then else Ku=KL[7];end;else local G0=(bm[0X0]);eu[0]=G0[1][G0[2]];do Ku=Ku+0x00001;end;Ku=Ku+0X1;KL=Sm[Ku];Ku=Ku+1;local e0=(0);local a0=(eu[0X00]);do(eu)[e0+0X01]=a0;end;(eu)[e0]=a0[KL[0x5]];Ku=Ku+0X001;e0=0X00;(eu[e0])(eu[e0+1]);Fu=e0-0X1;KL=Sm[Ku];Ku=Ku+1;Ku=KL[6];end;end;else eu[KL[7]]=eu[KL[6]]>eu[KL[1]];end;else do if WL>=0XE then if WL~=0x00f then(eu)[0x0]=true;KL=Sm[Ku];Ku=Ku+1;do Ju[KL[0X02]]=eu[0];end;KL=Sm[Ku];Ku=Ku+1;eu[0]=Ju[KL[0X02]];Ku=Ku+0X01;Ku=Ku+1;KL=Sm[Ku];Ku=Ku+0X1;if not(eu[0X0])then else Ku=KL[0x0006];end;else for da=KL[7],KL[0X0006]do do(eu)[da]=nil;end;end;end;else eu[0]=false;KL=Sm[Ku];Ku=Ku+1;Ju[KL[0X2]]=eu[0];KL=Sm[Ku];do Ku=Ku+0x1;end;do(eu)[0x0]=Ju[KL[2]];end;Ku=Ku+1;Ku=Ku+1;KL=Sm[Ku];local uy=Zm[KL[0x6]];local ey=(uy[3]);Ku=Ku+1;local Ny,Sy=#ey,(0X0);local By=(nil);do if Ny>0 then do By={};end;for Rz=0X1,Ny do local mz=ey[Rz];if mz[0X1]==0X00 then do By[Rz-1]={eu,mz[2]};end;else By[Rz-1]=bm[mz[2]];end;end;M(Cm,By);end;end;do eu[1]=dH(uy,By,Ju);end;do Ku=Ku+0X0001;end;eu[Sy](eu[Sy+0X01]);Fu=Sy-0X0001;Ku=Ku+1;Ku=Ku+1;do KL=Sm[Ku];end;Ku=Ku+0X00001;do Ku=KL[0X06];end;end;end;end;end;end;end;end;end);do if Su then do if Qu then if Hu==1 then return eu[Tu]();else return eu[Tu](f(eu,Tu+1,Fu));end;elseif not(Tu)then else do return f(eu,Tu,Hu);end;end;end;else if e(Qu)~='str\in\g'then(V)(Qu,0x0000);else if p(Qu,'\097\116\116\e\109\p\116\ \116\111\ \y\i\e\l\100 \097\099\114\o\s\s\032\109\eta\109\101\116\h\111\d\047\C%\-c\097\l\108\ \098\o\117\110\d\097\114y')then return coroutine.yield();end;if p(Qu,"^.-:%d+: ")then V("Luraph Script:"..(Dm[Ku-0x1]or"(internal)").."\:\032"..v(Qu),0);else(V)(Qu,0X0);end;end;end;end;end;end;end;end;else if xm<0X82 then do if xm<128 then do Km=function(...)local sr,er=0,({});local nr={[2]=er,[1]=Xm};local Rr=(K());local kr=((Rr==g and Qm or Rr));local Er,Kr=eH(...);local Ur=0x00001;do Er=Er-0X1;end;do for aU=0x0,Er do if not(km>aU)then break;else do(er)[aU]=Kr[aU+0X1];end;end;end;end;if not Lm then do Kr=nil;end;elseif not(Um)then else er[km]={n=Er>=km and Er-km+0x1 or 0,f(Kr,km+0X1,Er+0x1)};end;if kr~=Rr then(w)(Km,kr);end;local Dr,zr,xr,Hr=o(function()do while true do local EJ=(Sm[Ur]);local sJ=(EJ[4]);Ur=Ur+1;do if sJ<17 then if not(sJ>=8)then if sJ>=4 then do if not(sJ<0X6)then if sJ~=0X7 then local Vl,Ul=0X003,(er[2]);er[Vl+1]=Ul;(er)[Vl]=Ul[EJ[5]];do EJ=Sm[Ur];end;Ur=Ur+0X1;do er[5]=EJ[0x2];end;Ur=Ur+1;Vl=3;er[Vl]=er[Vl](er[Vl+0X00001],er[Vl+0X2]);sr=Vl;Ur=Ur+1;Ur=Ur+0X1;EJ=Sm[Ur];Ur=Ur+0x1;if not er[3]then Ur=EJ[6];end;else(er)[7]=kr[EJ[2]];Ur=Ur+0X00001;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+0X01;(er)[0x0007]=er[0x00007][EJ[0X0005]];Ur=Ur+1;Ur=Ur+0X1;do EJ=Sm[Ur];end;Ur=Ur+0X1;if not(er[7])then else do Ur=EJ[6];end;end;end;else if sJ~=0X5 then do er[0X0]=true;end;EJ=Sm[Ur];Ur=Ur+0X1;local LE=bm[0X00000];(kr)[EJ[2]]=er[0X000];Ur=Ur+0x00001;(er)[0]=LE[0X1][LE[0x02]];EJ=Sm[Ur];Ur=Ur+1;(er)[0]=er[0x0][EJ[0X5]];Ur=Ur+0X1;Ur=Ur+0X00001;Ur=Ur+0x0001;sr=0x0;(er[sr])();sr=sr-0X01;local OE=0x000;Ur=Ur+0x01;do Ur=Ur+0x1;end;Ur=Ur+1;LE=bm[0X1];do er[0X000]=LE[0X1][LE[2]];end;EJ=Sm[Ur];Ur=Ur+1;local QE=er[0];do(er)[OE+0X1]=QE;end;er[OE]=QE[EJ[5]];do Ur=Ur+0X001;end;do OE=0;end;(er[OE])(er[OE+0x1]);sr=OE-0X01;Ur=Ur+1;LE=bm[0];er[0X0]=LE[1][LE[0X2]];do EJ=Sm[Ur];end;Ur=Ur+1;er[0X0]=er[0][EJ[0x5]];Ur=Ur+0x001;do Ur=Ur+0X001;end;EJ=Sm[Ur];do Ur=Ur+0X00001;end;do if not(not er[0X0000])then else Ur=EJ[0x6];end;end;else(er)[0X00000]=kr[EJ[0X2]];Ur=Ur+0X001;sr=0X0;er[sr]=er[sr]();do Ur=Ur+1;end;Ur=Ur+0X1;do EJ=Sm[Ur];end;Ur=Ur+1;if not er[0X0]then Ur=EJ[0X6];end;end;end;end;else if sJ>=2 then if sJ==0X00003 then do er[EJ[0X7]]=er[EJ[0X6]]<=er[EJ[1]];end;else end;else do if sJ~=0X1 then er[4]=false;EJ=Sm[Ur];do Ur=Ur+0X01;end;(kr)[EJ[0X0002]]=er[0x4];EJ=Sm[Ur];Ur=Ur+0X1;Ur=EJ[6];else do(er)[7]=kr[EJ[2]];end;EJ=Sm[Ur];local Ar=0X07;do Ur=Ur+0X1;end;(er)[0X008]=er[3][EJ[0X5]];Ur=Ur+1;Ur=Ur+0X1;Ur=Ur+0X0001;er[Ar]=er[Ar](er[Ar+0X01]);sr=Ar;Ur=Ur+0X1;Ur=Ur+0X1;do EJ=Sm[Ur];end;Ur=Ur+0x1;do if not(not er[0X7])then else do Ur=EJ[0X0006];end;end;end;end;end;end;end;else do if sJ<12 then if not(sJ>=10)then do if sJ==9 then do er[EJ[0X07]]=er[EJ[6]]~=er[EJ[1]];end;else local R8=bm[0x1];do(er)[1]=R8[0X1][R8[0X00002]];end;local J8=0X001;EJ=Sm[Ur];Ur=Ur+0X00001;local r8=(er[0x00001]);do er[J8+1]=r8;end;er[J8]=r8[EJ[0X5]];Ur=Ur+1;J8=1;(er)[J8]=er[J8](er[J8+1]);sr=J8;Ur=Ur+1;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+0X001;do if er[1]then Ur=EJ[0x0006];end;end;end;end;else if sJ~=0xb then do(er)[EJ[7]]=kr[EJ[0X2]];end;else(er)[EJ[0X7]]={f({},0X1,EJ[6])};end;end;else if not(sJ<0x0E)then if not(sJ>=15)then(er)[0X0]=kr[EJ[2]];do Ur=Ur+0X01;end;Ur=Ur+0x0001;EJ=Sm[Ur];Ur=Ur+1;if not(not er[0])then else Ur=EJ[6];end;else if sJ==16 then local z0=Zm[EJ[0X006]];local j0=nil;local f0=z0[3];local i0=#f0;if not(i0>0)then else j0={};for fq=0x1,i0 do local bq=f0[fq];do if bq[1]~=0 then j0[fq-0X1]=bm[bq[0X2]];else j0[fq-1]={er,bq[0X2]};end;end;end;M(Cm,j0);end;(er)[EJ[7]]=dH(z0,j0,kr);else do Ur=EJ[6];end;end;end;else if sJ==13 then er[EJ[7]]=l(er[EJ[0x06]],er[EJ[0X1]]);else for r8=EJ[7],EJ[6]do er[r8]=nil;end;end;end;end;end;end;else if sJ<26 then if sJ>=21 then do if not(sJ<23)then if sJ<24 then local EI=(bm[0X001]);do er[7]=EI[0X1][EI[2]];end;local xI=(7);Ur=Ur+1;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+0X1;local TI=(er[7]);(er)[xI+1]=TI;(er)[xI]=TI[EJ[0X0005]];Ur=Ur+0X1;xI=0X7;do er[xI]=er[xI](er[xI+1]);end;sr=xI;EJ=Sm[Ur];Ur=Ur+1;if er[0x007]then do Ur=EJ[6];end;end;else do if sJ~=0x19 then do(er)[4]=kr[EJ[2]];end;do EJ=Sm[Ur];end;Ur=Ur+0X1;(er)[5]=er[3][EJ[0X5]];EJ=Sm[Ur];Ur=Ur+1;(er)[0x005]=er[5][EJ[0X5]];do Ur=Ur+0X1;end;Ur=Ur+0X01;local Xz=(0X00004);Ur=Ur+1;(er)[Xz]=er[Xz](er[Xz+0X0001]);sr=Xz;Ur=Ur+1;Ur=Ur+0X0001;do EJ=Sm[Ur];end;do Ur=Ur+0X00001;end;do if not(not(er[0X4]<=EJ[5]))then else Ur=EJ[0X7];end;end;else(er)[EJ[0X7]]=er[EJ[6]][er[EJ[1]]];end;end;end;else do if sJ~=22 then do er[EJ[7]]=not er[EJ[0X00006]];end;else do(er)[0X4]=er[0x0003][EJ[5]];end;do Ur=Ur+1;end;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+1;if not(not(EJ[0X00002]<er[4]))then else Ur=EJ[0X7];end;end;end;end;end;else do if sJ>=0X13 then if sJ~=20 then repeat local k8,x8=Cm,(er);if#k8>0X0000 then local FA={};do for YR,xR in I,k8 do for Xe,me in I,xR do do if not(me[0x01]==x8 and me[0X2]>=0X0)then else local ly=(me[0X2]);if not(not FA[ly])then else FA[ly]={x8[ly]};end;me[0X001]=FA[ly];me[2]=0X1;end;end;end;end;end;end;until true;return;else local KF=(EJ[7]);local LF,UF,TF=er[KF],er[KF+1],er[KF+0X2];er[KF]=r(function()for tV=LF,UF,TF do(C)(true,tV);end;end);Ur=EJ[6];end;else if sJ==0X12 then(er)[0X0]=kr[EJ[2]];Ur=Ur+1;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+1;er[0]=er[0][EJ[0X5]];EJ=Sm[Ur];local KL=(0x0);Ur=Ur+1;(er)[0x1]=EJ[0X2];Ur=Ur+1;er[KL](er[KL+1]);sr=KL-1;EJ=Sm[Ur];do Ur=Ur+1;end;(er)[0X0]=kr[EJ[2]];Ur=Ur+0x001;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+1;(er)[0X0]=er[0X000][EJ[0x5]];Ur=Ur+1;do Ur=Ur+1;end;EJ=Sm[Ur];Ur=Ur+0X001;do if not(er[0])then else Ur=EJ[0X00006];end;end;else(er)[0x5]=er[0X3][EJ[5]];Ur=Ur+1;Ur=Ur+1;do EJ=Sm[Ur];end;do Ur=Ur+0X1;end;if not er[5]then Ur=EJ[0x06];end;end;end;end;end;else if not(sJ<0X00001E)then if not(sJ>=32)then do if sJ~=0x01f then er[4]=kr[EJ[0X00002]];do Ur=Ur+0X1;end;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+1;er[0X5]=er[0x3][EJ[5]];local RZ=(0X4);do Ur=Ur+0X0001;end;(er)[RZ]=er[RZ](er[RZ+0X1]);do sr=RZ;end;EJ=Sm[Ur];Ur=Ur+1;do if er[0X4]then Ur=EJ[0x6];end;end;else er[5]=er[0X02][EJ[0X5]];EJ=Sm[Ur];Ur=Ur+0x1;er[6]=kr[EJ[0X02]];Ur=Ur+0X01;Ur=Ur+1;EJ=Sm[Ur];do Ur=Ur+0X1;end;do(er)[6]=er[0X00006][EJ[0X00005]];end;do Ur=Ur+1;end;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+0X0001;if er[0X5]==er[6]then else do Ur=EJ[0x007];end;end;end;end;else if not(sJ<33)then if sJ==34 then do(er)[EJ[0X7]]=EJ[0X2];end;else er[0X0004]=kr[EJ[0X0002]];Ur=Ur+1;Ur=Ur+0X01;EJ=Sm[Ur];Ur=Ur+1;(er)[0X4]=er[4][EJ[5]];do Ur=Ur+0x1;end;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+0X001;if not er[4]then Ur=EJ[0X00006];end;end;else local Os=bm[1];er[4]=Os[0X1][Os[0x2]];EJ=Sm[Ur];local Es=3;Ur=Ur+0X1;local As,ls=4,er[4];(er)[As+1]=ls;do(er)[As]=ls[EJ[0X0005]];end;do Ur=Ur+1;end;do As=0X4;end;(er[As])(er[As+0X1]);sr=As-0X1;do Ur=Ur+1;end;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+0X00001;er[4]=kr[EJ[0x2]];Ur=Ur+0X001;Ur=Ur+1;Ur=Ur+0X01;sr=4;(er[sr])();do sr=sr-0X001;end;EJ=Sm[Ur];Ur=Ur+1;er[0X4]=er[3][EJ[5]];do Ur=Ur+0X1;end;Ur=Ur+0X001;EJ=Sm[Ur];do Ur=Ur+0X1;end;er[4]=er[0X004][EJ[0x5]];do Ur=Ur+1;end;do Ur=Ur+0X00001;end;EJ=Sm[Ur];Ur=Ur+1;do(er)[5]=kr[EJ[2]];end;do Ur=Ur+1;end;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+1;er[0x0006]=kr[EJ[0x2]];EJ=Sm[Ur];do Ur=Ur+0x1;end;(er)[0X00006]=er[0X6][EJ[0X05]];Ur=Ur+0X1;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+1;er[0x7]=er[0x04][EJ[5]];do EJ=Sm[Ur];end;do Ur=Ur+1;end;(er)[8]=kr[EJ[0x02]];Ur=Ur+0X1;Ur=Ur+1;do EJ=Sm[Ur];end;Ur=Ur+1;er[0X008]=er[0X8][EJ[0X5]];EJ=Sm[Ur];Ur=Ur+1;(er)[9]=er[4][EJ[5]];do EJ=Sm[Ur];end;Ur=Ur+0X0001;local vs=(nil);do er[10]=EJ[0X2];end;do EJ=Sm[Ur];end;Ur=Ur+1;er[11]=EJ[2]/EJ[5];Ur=Ur+1;do As=0X00008;end;sr=As+0X004-1;(er)[As]=er[As](f(er,As+0X1,sr));do sr=As;end;EJ=Sm[Ur];Ur=Ur+0X1;er[0X9]=er[0X4][EJ[5]];Ur=Ur+0x1;As=0X6;sr=As+4-1;er[As]=er[As](f(er,As+0X1,sr));sr=As;Ur=Ur+1;Ur=Ur+0X1;EJ=Sm[Ur];Ur=Ur+0x1;er[7]=kr[EJ[0X2]];Ur=Ur+0X00001;Ur=Ur+1;EJ=Sm[Ur];do Ur=Ur+1;end;(er)[7]=er[7][EJ[0X5]];EJ=Sm[Ur];do Ur=Ur+0X1;end;er[8]=kr[EJ[2]];do Ur=Ur+0X001;end;do Ur=Ur+0X1;end;EJ=Sm[Ur];Ur=Ur+1;(er)[8]=er[8][EJ[0x5]];EJ=Sm[Ur];do Ur=Ur+0X1;end;do er[0X009]=EJ[2];end;EJ=Sm[Ur];Ur=Ur+0X1;(er)[0XA]=EJ[2];Ur=Ur+1;do As=0X00008;end;er[As]=er[As](er[As+0X01],er[As+0X002]);do sr=As;end;EJ=Sm[Ur];Ur=Ur+1;do(er)[0x9]=EJ[0X02];end;EJ=Sm[Ur];Ur=Ur+0X1;er[10]=kr[EJ[0x2]];EJ=Sm[Ur];Ur=Ur+0X0001;(er)[0XA]=er[10][EJ[0x05]];EJ=Sm[Ur];Ur=Ur+0X1;er[11]=EJ[2];EJ=Sm[Ur];Ur=Ur+1;do er[12]=EJ[2];end;Ur=Ur+1;As=10;local ss=(0);if Es==0 then else sr=As+Es-0X0001;end;local Hs,Ls=nil,(nil);if Es~=0X1 then Hs,Ls=eH(er[As](f(er,As+1,sr)));else Hs,Ls=eH(er[As]());end;if ss==1 then sr=As-0x0001;else if ss~=0X000 then Hs=As+ss-2;do sr=Hs+0X0001;end;else Hs=Hs+As-0X1;sr=Hs;end;local pw=0;for QD=As,Hs do pw=pw+0X1;er[QD]=Ls[pw];end;end;Ur=Ur+1;do Ur=Ur+1;end;do Ur=Ur+0X1;end;As=0x0007;er[As]=er[As](f(er,As+1,sr));sr=As;Ur=Ur+1;er[6]=er[6]*er[0X7];EJ=Sm[Ur];do Ur=Ur+0X1;end;local as=(Zm[EJ[0x6]]);local Xs=(as[0X3]);local Us=#Xs;do if not(Us>0)then else vs={};do for tA=0x1,Us do local JA=(Xs[tA]);if JA[1]~=0 then vs[tA-0x00001]=bm[JA[0X2]];else vs[tA-0x1]={er,JA[2]};end;end;end;M(Cm,vs);end;end;er[0X0007]=dH(as,vs,kr);Ur=Ur+1;do(er)[0X8]=true;end;do Ur=Ur+0X00001;end;(er)[9]=true;do Ur=Ur+0X1;end;Os=bm[0x1];do(er)[10]=Os[0X1][Os[2]];end;Ur=Ur+1;do As=0x5;end;do sr=As+6-0X0001;end;er[As](f(er,As+0x1,sr));sr=As-0X1;do Ur=Ur+1;end;(er)[0X00005]=true;EJ=Sm[Ur];Ur=Ur+0X1;(kr)[EJ[0x2]]=er[5];do EJ=Sm[Ur];end;Ur=Ur+0X001;er[5]=kr[EJ[2]];Ur=Ur+0X1;do Ur=Ur+1;end;EJ=Sm[Ur];Ur=Ur+1;er[0X6]=kr[EJ[2]];Ur=Ur+0X1;Ur=Ur+0X1;EJ=Sm[Ur];Ur=Ur+1;er[0X7]=kr[EJ[2]];EJ=Sm[Ur];Ur=Ur+0x1;er[0x007]=er[7][EJ[0x5]];Ur=Ur+1;Ur=Ur+0X1;Ur=Ur+0X1;As=6;Es=2;ss=0;do if Es~=0 then do sr=As+Es-0X00001;end;end;end;Hs,Ls=nil;if Es==1 then Hs,Ls=eH(er[As]());else Hs,Ls=eH(er[As](f(er,As+1,sr)));end;if ss~=0X001 then if ss==0 then Hs=Hs+As-0X0001;do sr=Hs;end;else Hs=As+ss-0X00002;sr=Hs+0X1;end;local Cb=0;do for n8=As,Hs do Cb=Cb+1;(er)[n8]=Ls[Cb];end;end;else sr=As-1;end;Ur=Ur+1;As=5;(er[As])(f(er,As+1,sr));sr=As-0x1;do Ur=Ur+0X1;end;Ur=Ur+0x001;do EJ=Sm[Ur];end;Ur=Ur+0X001;er[5]=kr[EJ[2]];EJ=Sm[Ur];Ur=Ur+1;do(er)[0x0005]=er[5][EJ[5]];end;Ur=Ur+1;do Ur=Ur+1;end;EJ=Sm[Ur];Ur=Ur+1;er[6]=EJ[2];do Ur=Ur+0X1;end;As=0X00005;(er[As])(er[As+1]);sr=As-0X1;EJ=Sm[Ur];Ur=Ur+0x001;if not(not er[0X0003])then else Ur=EJ[6];end;end;end;else if not(sJ>=28)then if sJ==0X01b then er[EJ[7]]=S(er[EJ[6]],er[EJ[0X1]]);else local DP=EJ[0X7];local PP,NP,QP=er[DP]();if not(PP)then else er[DP+1]=NP;er[DP+2]=QP;Ur=EJ[6];end;end;else if sJ==29 then(er)[0X0]=kr[EJ[0x2]];Ur=Ur+0X00001;local OG=(bm[0]);do er[0X0001]=OG[0X00001][OG[2]];end;Ur=Ur+1;Ur=Ur+0x1;EJ=Sm[Ur];Ur=Ur+1;er[0X00001]=er[1][EJ[0X0005]];local CG=(0X02);do EJ=Sm[Ur];end;Ur=Ur+0X1;do(er)[1]=er[0x1][EJ[5]];end;do Ur=Ur+1;end;Ur=Ur+0X1;local UG=0X0002;EJ=Sm[Ur];Ur=Ur+0X1;er[0X2]=kr[EJ[0X2]];Ur=Ur+1;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+0X1;do er[2]=er[2][EJ[0X05]];end;EJ=Sm[Ur];Ur=Ur+1;(er)[0X3]=EJ[2];EJ=Sm[Ur];do Ur=Ur+0X1;end;do(er)[4]=EJ[0X0002];end;EJ=Sm[Ur];do Ur=Ur+1;end;(er)[5]=EJ[2];Ur=Ur+1;sr=CG+4-0X00001;do er[CG]=er[CG](f(er,CG+1,sr));end;sr=CG;Ur=Ur+0X01;do er[0X00001]=er[1]*er[2];end;EJ=Sm[Ur];local oG=Zm[EJ[6]];local dG=(oG[3]);Ur=Ur+0X001;local VG=(nil);local MG=#dG;do if not(MG>0X00000)then else do VG={};end;do for rl=1,MG do local Il=dG[rl];do if Il[0X1]==0X0 then(VG)[rl-1]={er,Il[0X0002]};else(VG)[rl-0X001]=bm[Il[0x02]];end;end;end;end;M(Cm,VG);end;end;(er)[2]=dH(oG,VG,kr);Ur=Ur+0X01;er[3]=true;Ur=Ur+1;(er)[0X4]=true;do Ur=Ur+0X1;end;OG=bm[0x001];er[5]=OG[0X001][OG[2]];Ur=Ur+0X001;do CG=0;end;do sr=CG+6-1;end;(er[CG])(f(er,CG+1,sr));sr=CG-1;Ur=Ur+0X1;Ur=Ur+1;EJ=Sm[Ur];Ur=Ur+1;do er[0X00000]=kr[EJ[2]];end;EJ=Sm[Ur];do Ur=Ur+0x1;end;er[0X1]=kr[EJ[2]];EJ=Sm[Ur];Ur=Ur+1;do(er)[1]=er[0X0001][EJ[5]];end;EJ=Sm[Ur];Ur=Ur+0X1;local BG=(er[0X1]);CG=1;do(er)[CG+0X1]=BG;end;er[CG]=BG[EJ[5]];Ur=Ur+0X1;CG=0X01;local JG=(0X0);if UG~=0X0 then sr=CG+UG-0X001;end;local rG,uG=nil,(nil);do if UG~=0X00001 then rG,uG=eH(er[CG](f(er,CG+1,sr)));else rG,uG=eH(er[CG]());end;end;if JG~=1 then if JG==0 then rG=rG+CG-0X1;sr=rG;else do rG=CG+JG-0X02;end;do sr=rG+0X1;end;end;local MF=(0);for CJ=CG,rG do MF=MF+0X1;er[CJ]=uG[MF];end;else sr=CG-1;end;do Ur=Ur+1;end;CG=0x0;do UG=0X0;end;do JG=0x4;end;if UG~=0X0 then sr=CG+UG-0X01;end;rG,uG=nil;do if UG~=0x1 then rG,uG=eH(er[CG](f(er,CG+0X1,sr)));else do rG,uG=eH(er[CG]());end;end;end;if JG~=1 then if JG==0 then rG=rG+CG-1;sr=rG;else rG=CG+JG-2;do sr=rG+1;end;end;local jT=0x0;for Gw=CG,rG do jT=jT+1;(er)[Gw]=uG[jT];end;else sr=CG-1;end;EJ=Sm[Ur];Ur=Ur+1;CG=0;local IG=(r(function(...)(C)();for NJ,mJ in...do C(true,NJ,mJ);end;end));IG(er[CG],er[CG+0X01],er[CG+0x2]);sr=CG;(er)[CG]=IG;Ur=EJ[6];else er[0]=kr[EJ[2]];EJ=Sm[Ur];do Ur=Ur+0X00001;end;(er)[0X0]=er[0x00000][EJ[5]];EJ=Sm[Ur];Ur=Ur+1;do er[0]=er[0X00][EJ[5]];end;Ur=Ur+0X01;Ur=Ur+0X00001;EJ=Sm[Ur];Ur=Ur+1;do er[0]=er[0][EJ[0X5]];end;do EJ=Sm[Ur];end;Ur=Ur+1;if not(er[0]<=EJ[0X5])then else Ur=EJ[7];end;end;end;end;end;end;end;end;end;end);do if not(Dr)then if e(zr)=="\115\116\114\i\110\g"then if not(p(zr,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(p(zr,"^.-:%d+: "))then V(zr,0X0);else V('\Lu\114ap\h \S\c\114\i\p\116\:'..(Dm[Ur-1]or'\(\105n\116er\110a\l)').."\:\ "..v(zr),0X0);end;else(V)(zr,0);end;else if zr then if Hr==0X1 then return er[xr]();else return er[xr](f(er,xr+1,sr));end;elseif not(xr)then else return f(er,xr,Hr);end;end;end;end;end;else do if xm~=129 then Km=function(...)local p1=0x0001;local j1={};local f1=({[1]=Xm,[2]=j1});local B1=(K());local b1,O1=eH(...);local g1=(B1==g and Qm or B1);b1=b1-1;do for pl=0,b1 do do if not(km>pl)then break;else j1[pl]=O1[pl+1];end;end;end;end;if not Lm then do O1=nil;end;elseif Um then j1[km]={n=b1>=km and b1-km+0X1 or 0,f(O1,km+1,b1+0X001)};end;if g1~=B1 then w(Km,g1);end;local a1=0;while true do local tZ=Sm[p1];local FZ=(tZ[0X00004]);p1=p1+1;return(function(E,F,...)local o=E[0];if not o then return;end;local u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";o=string.gsub(deCustomCrypt(o:split("!")),"[^"..u.."=]","");return(o:gsub(".",function(C)if C=="="then return"";end;local H,B="",(u:find(C)-1);for m=6,1,-1.0 do H=H..(B%2^m-B%2^(m-1)>0 and"1"or"0");end;return H;end):gsub("%d%d%d?%d?%d?%d?%d?%d?",function(R)if#R~=8 then return"";end;local h=0;for V=1,8 do h=h+(R:sub(V,V)=="1"and 2^(8-V)or 0);end;return string.char(h);end));end)(j1,bm,...);end;end;else Km=function(...)local Dr=(1);local Wr={};local Er={[1]=Xm,[2]=Wr};local wr=(K());local Mr=(0X00);local Br,Fr=eH(...);local Hr=((wr==g and Qm or wr));Br=Br-0X001;for YZ=0,Br do do if km>YZ then(Wr)[YZ]=Fr[YZ+1];else break;end;end;end;if not Lm then Fr=nil;elseif not(Um)then else(Wr)[km]={n=Br>=km and Br-km+0X1 or 0X00,f(Fr,km+1,Br+1)};end;do if Hr==wr then else(w)(Km,Hr);end;end;local Rr,dr,nr,Jr=o(function()while true do local N1=(Sm[Dr]);local d1=N1[4];do Dr=Dr+1;end;do if d1>=0X8 then do if not(d1>=0X00C)then if not(d1>=0Xa)then if d1==0X9 then local rt=(Zm[N1[0X06]]);local It=nil;local xt=(rt[3]);local jt=(#xt);if jt>0 then It={};do for pZ=0x01,jt do local oZ=xt[pZ];do if oZ[1]==0 then(It)[pZ-0X1]={Wr,oZ[0X2]};else(It)[pZ-1]=bm[oZ[0X0002]];end;end;end;end;(M)(Cm,It);end;Wr[N1[0x7]]=dH(rt,It,Hr);else end;else do if d1==11 then(Wr)[N1[0X7]]={f({},1,N1[6])};else repeat local s6,n6,S6=Cm,Wr,N1[7];if not(#s6>0)then else local Oe={};do for SR,NR in I,s6 do for sU,yU in I,NR do if yU[1]==n6 and yU[2]>=S6 then local vv=(yU[2]);do if not Oe[vv]then Oe[vv]={n6[vv]};end;end;(yU)[0X1]=Oe[vv];(yU)[2]=1;end;end;end;end;end;until true;end;end;end;else if d1<0xE then if d1==0x0000D then do Dr=N1[0x6];end;else(Wr)[N1[0x7]]=j(Wr[N1[0X6]],Wr[N1[1]]);end;else if d1==0XF then(Wr)[0X0]=Hr[N1[2]];Dr=Dr+1;Dr=Dr+0X001;do N1=Sm[Dr];end;local Gh=0X0;do Dr=Dr+0X001;end;Wr[0X00000]=Wr[0X0][N1[5]];Dr=Dr+1;Dr=Dr+0x1;N1=Sm[Dr];Dr=Dr+0X0001;do Wr[0x00]=Wr[0x0][N1[5]];end;do Dr=Dr+1;end;Dr=Dr+1;N1=Sm[Dr];do Dr=Dr+0X00001;end;local Ph=(Wr[0X0]);do Wr[Gh+1]=Ph;end;(Wr)[Gh]=Ph[N1[0x0005]];local xh=nil;N1=Sm[Dr];Dr=Dr+1;local sh=Zm[N1[0X00006]];local qh=(sh[0X3]);local Xh=#qh;if Xh>0 then xh={};for oK=1,Xh do local VK=(qh[oK]);do if VK[0X1]==0x000 then xh[oK-1]={Wr,VK[2]};else(xh)[oK-0x01]=bm[VK[0X2]];end;end;end;M(Cm,xh);end;(Wr)[0x2]=dH(sh,xh,Hr);Dr=Dr+0X001;do Gh=0;end;(Wr[Gh])(Wr[Gh+1],Wr[Gh+0X0002]);Mr=Gh-0X1;Dr=Dr+1;do Dr=Dr+0x1;end;N1=Sm[Dr];Dr=Dr+0X1;do(Wr)[0]=Hr[N1[2]];end;N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[0X6]];xh=nil;qh=sh[0X3];Xh=#qh;if Xh>0 then xh={};for Hl=1,Xh do local nl=(qh[Hl]);do if nl[1]~=0x00000 then(xh)[Hl-0X1]=bm[nl[0x02]];else(xh)[Hl-0X1]={Wr,nl[0X2]};end;end;end;M(Cm,xh);end;Wr[0X1]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+1;end;(Wr[0])[N1[0x2]]=Wr[0X1];N1=Sm[Dr];Dr=Dr+1;Wr[0X00]=Hr[N1[0X2]];do N1=Sm[Dr];end;Dr=Dr+1;sh=Zm[N1[0X06]];xh=nil;qh=sh[0X00003];Xh=#qh;if not(Xh>0)then else xh={};for VR=1,Xh do local ER=(qh[VR]);if ER[0X1]~=0x0 then(xh)[VR-0X1]=bm[ER[2]];else do xh[VR-1]={Wr,ER[2]};end;end;end;(M)(Cm,xh);end;Wr[1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+0X001;(Wr[0])[N1[2]]=Wr[1];N1=Sm[Dr];Dr=Dr+1;Wr[0]=Hr[N1[2]];N1=Sm[Dr];Dr=Dr+1;do sh=Zm[N1[0X006]];end;xh=nil;do qh=sh[3];end;Xh=#qh;if not(Xh>0)then else xh={};do for IO=0X1,Xh do local nO=qh[IO];if nO[0X0001]==0X0 then(xh)[IO-1]={Wr,nO[0X00002]};else(xh)[IO-1]=bm[nO[2]];end;end;end;M(Cm,xh);end;Wr[0X00001]=dH(sh,xh,Hr);do N1=Sm[Dr];end;do Dr=Dr+1;end;do(Wr[0X0000])[N1[2]]=Wr[0X0001];end;do N1=Sm[Dr];end;Dr=Dr+0X00001;(Wr)[0]=Hr[N1[2]];N1=Sm[Dr];Dr=Dr+0X01;do sh=Zm[N1[6]];end;xh=nil;qh=sh[0X0003];Xh=#qh;do if Xh>0 then xh={};for yg=0X1,Xh do local ng=qh[yg];if ng[1]==0X0 then(xh)[yg-0X1]={Wr,ng[0X002]};else(xh)[yg-1]=bm[ng[2]];end;end;(M)(Cm,xh);end;end;Wr[1]=dH(sh,xh,Hr);do N1=Sm[Dr];end;Dr=Dr+1;(Wr[0X0])[N1[0X0002]]=Wr[1];do N1=Sm[Dr];end;Dr=Dr+1;Wr[0]=Hr[N1[2]];Dr=Dr+1;Dr=Dr+0X1;N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[0X6]];do xh=nil;end;do qh=sh[0X0003];end;do Xh=#qh;end;if not(Xh>0X000)then else do xh={};end;do for br=0X01,Xh do local Ur=(qh[br]);if Ur[0X01]~=0 then xh[br-1]=bm[Ur[0X2]];else(xh)[br-1]={Wr,Ur[0X002]};end;end;end;(M)(Cm,xh);end;Wr[0X1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;Wr[0X0][N1[2]]=Wr[1];do N1=Sm[Dr];end;Dr=Dr+1;(Wr)[0]=Hr[N1[2]];do N1=Sm[Dr];end;Dr=Dr+0X1;do sh=Zm[N1[0X06]];end;do xh=nil;end;qh=sh[3];Xh=#qh;if not(Xh>0)then else xh={};do for rU=0X0001,Xh do local UU=(qh[rU]);if UU[1]~=0 then xh[rU-1]=bm[UU[2]];else do xh[rU-1]={Wr,UU[0X2]};end;end;end;end;(M)(Cm,xh);end;(Wr)[0x001]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+0X01;end;(Wr[0])[N1[2]]=Wr[0X0001];N1=Sm[Dr];Dr=Dr+1;Wr[0]=Hr[N1[2]];N1=Sm[Dr];do Dr=Dr+1;end;sh=Zm[N1[6]];xh=nil;qh=sh[3];Xh=#qh;do if Xh>0 then xh={};for H9=0X1,Xh do local l9=qh[H9];if l9[1]~=0X00000 then xh[H9-0X1]=bm[l9[2]];else do xh[H9-0X1]={Wr,l9[0X2]};end;end;end;(M)(Cm,xh);end;end;Wr[1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+0X00001;Wr[0x0][N1[2]]=Wr[0X1];N1=Sm[Dr];Dr=Dr+0X1;(Wr)[0]=Hr[N1[2]];Dr=Dr+1;Dr=Dr+1;do N1=Sm[Dr];end;Dr=Dr+0X1;do sh=Zm[N1[0X006]];end;do xh=nil;end;qh=sh[0x00003];do Xh=#qh;end;if Xh>0 then xh={};for SF=0x1,Xh do local wF=qh[SF];if wF[1]~=0 then(xh)[SF-0X1]=bm[wF[0x2]];else(xh)[SF-1]={Wr,wF[2]};end;end;M(Cm,xh);end;Wr[0X01]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;do Wr[0X0][N1[2]]=Wr[1];end;N1=Sm[Dr];do Dr=Dr+1;end;(Wr)[0X00000]=Hr[N1[0x2]];do Dr=Dr+0X00001;end;Dr=Dr+0x001;N1=Sm[Dr];do Dr=Dr+1;end;do sh=Zm[N1[0x6]];end;xh=nil;do qh=sh[0X0003];end;Xh=#qh;if not(Xh>0x000)then else xh={};for p0=1,Xh do local b0=qh[p0];if b0[1]~=0 then(xh)[p0-0X1]=bm[b0[2]];else xh[p0-1]={Wr,b0[0X002]};end;end;M(Cm,xh);end;do(Wr)[1]=dH(sh,xh,Hr);end;N1=Sm[Dr];Dr=Dr+1;(Wr[0])[N1[0X00002]]=Wr[1];N1=Sm[Dr];Dr=Dr+1;Wr[0]=Hr[N1[0X2]];do Dr=Dr+0X1;end;Dr=Dr+1;do N1=Sm[Dr];end;Dr=Dr+0x1;sh=Zm[N1[0X6]];do xh=nil;end;qh=sh[0x3];Xh=#qh;if Xh>0X000 then xh={};for Lr=0x1,Xh do local lr=qh[Lr];do if lr[1]==0 then(xh)[Lr-1]={Wr,lr[0X2]};else xh[Lr-0X1]=bm[lr[0X2]];end;end;end;(M)(Cm,xh);end;(Wr)[1]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+0x1;end;do Wr[0X0][N1[0X0002]]=Wr[0X00001];end;N1=Sm[Dr];do Dr=Dr+1;end;(Wr)[0X0]=Hr[N1[0x02]];Dr=Dr+0X1;Dr=Dr+0x1;do N1=Sm[Dr];end;Dr=Dr+0X1;sh=Zm[N1[0x6]];xh=nil;do qh=sh[0X03];end;Xh=#qh;do if Xh>0 then xh={};for jK=1,Xh do local tK=(qh[jK]);if tK[1]==0 then(xh)[jK-0x1]={Wr,tK[2]};else xh[jK-1]=bm[tK[2]];end;end;M(Cm,xh);end;end;Wr[0x1]=dH(sh,xh,Hr);do N1=Sm[Dr];end;do Dr=Dr+0x001;end;(Wr[0X000])[N1[0X2]]=Wr[0x01];do N1=Sm[Dr];end;do Dr=Dr+1;end;(Wr)[0]=Hr[N1[0X2]];Dr=Dr+0X1;Dr=Dr+1;N1=Sm[Dr];Dr=Dr+0X001;do sh=Zm[N1[6]];end;do xh=nil;end;qh=sh[0X003];Xh=#qh;if Xh>0 then xh={};for RT=0x1,Xh do local IT=(qh[RT]);if IT[1]~=0X0 then(xh)[RT-1]=bm[IT[2]];else do(xh)[RT-1]={Wr,IT[0X2]};end;end;end;M(Cm,xh);end;do(Wr)[0X1]=dH(sh,xh,Hr);end;N1=Sm[Dr];Dr=Dr+1;(Wr[0])[N1[0X2]]=Wr[0X1];N1=Sm[Dr];Dr=Dr+0x1;do(Wr)[0X00000]=Hr[N1[2]];end;N1=Sm[Dr];do Dr=Dr+0X00001;end;sh=Zm[N1[0X06]];do xh=nil;end;qh=sh[0x3];Xh=#qh;do if Xh>0 then xh={};for Fm=1,Xh do local Ym=qh[Fm];if Ym[1]~=0X0 then(xh)[Fm-0X1]=bm[Ym[2]];else xh[Fm-0X1]={Wr,Ym[0x2]};end;end;M(Cm,xh);end;end;do(Wr)[1]=dH(sh,xh,Hr);end;N1=Sm[Dr];Dr=Dr+1;do(Wr[0X0])[N1[2]]=Wr[0X1];end;N1=Sm[Dr];do Dr=Dr+1;end;do Wr[0]=Hr[N1[0X02]];end;Dr=Dr+0X1;do Dr=Dr+0X1;end;N1=Sm[Dr];do Dr=Dr+1;end;sh=Zm[N1[0X06]];xh=nil;qh=sh[0x0003];do Xh=#qh;end;do if Xh>0 then xh={};for PU=0X00001,Xh do local zU=qh[PU];if zU[1]==0x0 then(xh)[PU-0X1]={Wr,zU[0X00002]};else xh[PU-1]=bm[zU[0X00002]];end;end;M(Cm,xh);end;end;(Wr)[0X001]=dH(sh,xh,Hr);do N1=Sm[Dr];end;Dr=Dr+1;do(Wr[0X0])[N1[0X2]]=Wr[0X01];end;N1=Sm[Dr];Dr=Dr+1;Wr[0]=Hr[N1[2]];do Dr=Dr+1;end;Dr=Dr+0x00001;N1=Sm[Dr];Dr=Dr+0X0001;sh=Zm[N1[6]];do xh=nil;end;qh=sh[0X0003];Xh=#qh;do if not(Xh>0)then else xh={};for ru=1,Xh do local Wu=(qh[ru]);if Wu[0X01]==0X0 then xh[ru-1]={Wr,Wu[2]};else do(xh)[ru-0X00001]=bm[Wu[2]];end;end;end;(M)(Cm,xh);end;end;(Wr)[0x1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;do Wr[0X0][N1[2]]=Wr[1];end;N1=Sm[Dr];Dr=Dr+1;do(Wr)[0]=Hr[N1[0X2]];end;N1=Sm[Dr];do Dr=Dr+1;end;sh=Zm[N1[6]];xh=nil;qh=sh[3];Xh=#qh;if Xh>0x00000 then do xh={};end;for yJ=1,Xh do local VJ=qh[yJ];do if VJ[0X1]==0 then do(xh)[yJ-1]={Wr,VJ[2]};end;else(xh)[yJ-1]=bm[VJ[2]];end;end;end;M(Cm,xh);end;do Wr[0X01]=dH(sh,xh,Hr);end;N1=Sm[Dr];do Dr=Dr+1;end;Wr[0][N1[0X2]]=Wr[0X0001];do N1=Sm[Dr];end;Dr=Dr+0X1;do Wr[0x0000]=Hr[N1[0X0002]];end;N1=Sm[Dr];Dr=Dr+0X1;sh=Zm[N1[0X06]];xh=nil;do qh=sh[0X03];end;Xh=#qh;if Xh>0 then do xh={};end;for Of=1,Xh do local Zf=(qh[Of]);if Zf[0X0001]~=0 then xh[Of-0X1]=bm[Zf[0X2]];else xh[Of-0X1]={Wr,Zf[0X00002]};end;end;M(Cm,xh);end;(Wr)[1]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+1;end;do(Wr[0])[N1[2]]=Wr[1];end;N1=Sm[Dr];Dr=Dr+0X1;(Wr)[0]=Hr[N1[2]];Dr=Dr+0x01;Dr=Dr+1;N1=Sm[Dr];Dr=Dr+0X0001;do sh=Zm[N1[6]];end;xh=nil;qh=sh[3];Xh=#qh;do if not(Xh>0)then else xh={};for Pf=1,Xh do local uf=qh[Pf];if uf[0X0001]~=0 then do xh[Pf-0x1]=bm[uf[2]];end;else xh[Pf-1]={Wr,uf[0x002]};end;end;M(Cm,xh);end;end;(Wr)[0X00001]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;(Wr[0X0])[N1[2]]=Wr[0X1];do N1=Sm[Dr];end;Dr=Dr+1;(Wr)[0]=Hr[N1[2]];do Dr=Dr+1;end;Dr=Dr+1;N1=Sm[Dr];do Dr=Dr+1;end;sh=Zm[N1[6]];xh=nil;do qh=sh[0X003];end;do Xh=#qh;end;if not(Xh>0X000)then else xh={};for Wf=1,Xh do local ef=(qh[Wf]);if ef[1]~=0 then xh[Wf-0x1]=bm[ef[2]];else do(xh)[Wf-0X1]={Wr,ef[2]};end;end;end;(M)(Cm,xh);end;Wr[0X0001]=dH(sh,xh,Hr);do N1=Sm[Dr];end;Dr=Dr+1;(Wr[0x0])[N1[0X2]]=Wr[1];N1=Sm[Dr];do Dr=Dr+0X1;end;(Wr)[0X0]=Hr[N1[2]];do N1=Sm[Dr];end;Dr=Dr+0X00001;sh=Zm[N1[0X6]];xh=nil;qh=sh[0X3];do Xh=#qh;end;if Xh>0X00000 then xh={};do for K8=1,Xh do local y8=qh[K8];if y8[1]~=0X0 then(xh)[K8-1]=bm[y8[2]];else(xh)[K8-0X0001]={Wr,y8[2]};end;end;end;M(Cm,xh);end;(Wr)[0X001]=dH(sh,xh,Hr);do N1=Sm[Dr];end;Dr=Dr+1;Wr[0x0][N1[2]]=Wr[1];N1=Sm[Dr];Dr=Dr+0X1;(Wr)[0x00000]=Hr[N1[2]];Dr=Dr+1;Dr=Dr+0X1;N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[0x6]];xh=nil;qh=sh[0X03];Xh=#qh;if not(Xh>0)then else do xh={};end;do for nC=0X1,Xh do local GC=(qh[nC]);if GC[1]==0 then xh[nC-0X1]={Wr,GC[2]};else xh[nC-0x1]=bm[GC[2]];end;end;end;(M)(Cm,xh);end;Wr[1]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+0X1;end;Wr[0][N1[2]]=Wr[1];N1=Sm[Dr];do Dr=Dr+0X1;end;Wr[0]=Hr[N1[0X2]];Dr=Dr+1;Dr=Dr+0X1;do N1=Sm[Dr];end;Dr=Dr+0x1;sh=Zm[N1[6]];xh=nil;do qh=sh[0X00003];end;do Xh=#qh;end;do if Xh>0x00000 then xh={};for fN=1,Xh do local LN=(qh[fN]);if LN[0x1]~=0X000 then do(xh)[fN-1]=bm[LN[2]];end;else xh[fN-0X00001]={Wr,LN[2]};end;end;(M)(Cm,xh);end;end;Wr[1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+0x01;(Wr[0X0])[N1[2]]=Wr[1];do N1=Sm[Dr];end;Dr=Dr+0X1;do Wr[0]=Hr[N1[0X2]];end;do Dr=Dr+0X1;end;Dr=Dr+0x001;N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[0x6]];xh=nil;qh=sh[3];Xh=#qh;if Xh>0 then xh={};for J7=0x01,Xh do local L7=(qh[J7]);if L7[1]==0X0 then xh[J7-0X1]={Wr,L7[2]};else xh[J7-0X001]=bm[L7[2]];end;end;(M)(Cm,xh);end;Wr[0X1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;do(Wr[0X0])[N1[0X2]]=Wr[0X0001];end;N1=Sm[Dr];Dr=Dr+1;Wr[0X0]=Hr[N1[0X2]];Dr=Dr+0x1;Dr=Dr+0x001;N1=Sm[Dr];do Dr=Dr+1;end;sh=Zm[N1[0X00006]];xh=nil;do qh=sh[0X00003];end;Xh=#qh;if Xh>0 then xh={};for CN=0x01,Xh do local KN=qh[CN];if KN[0X0001]~=0X000 then do(xh)[CN-1]=bm[KN[0X002]];end;else xh[CN-1]={Wr,KN[2]};end;end;M(Cm,xh);end;do(Wr)[1]=dH(sh,xh,Hr);end;N1=Sm[Dr];Dr=Dr+0X1;do Wr[0x000][N1[2]]=Wr[1];end;N1=Sm[Dr];do Dr=Dr+1;end;do Wr[0X00]=Hr[N1[2]];end;N1=Sm[Dr];do Dr=Dr+0X1;end;sh=Zm[N1[6]];do xh=nil;end;qh=sh[3];Xh=#qh;if Xh>0 then xh={};for jH=0x1,Xh do local NH=(qh[jH]);do if NH[1]~=0X0 then xh[jH-1]=bm[NH[0X00002]];else xh[jH-0X001]={Wr,NH[0X2]};end;end;end;(M)(Cm,xh);end;Wr[0x0001]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;Wr[0x0][N1[0x0002]]=Wr[0X001];N1=Sm[Dr];Dr=Dr+0x1;Wr[0x0]=Hr[N1[2]];N1=Sm[Dr];do Dr=Dr+0X001;end;sh=Zm[N1[0X6]];xh=nil;do qh=sh[0X3];end;Xh=#qh;do if Xh>0 then do xh={};end;for Q3=0X1,Xh do local H3=qh[Q3];if H3[1]~=0X0 then do(xh)[Q3-1]=bm[H3[0x00002]];end;else xh[Q3-1]={Wr,H3[2]};end;end;M(Cm,xh);end;end;do Wr[0X1]=dH(sh,xh,Hr);end;N1=Sm[Dr];Dr=Dr+1;Wr[0x0][N1[2]]=Wr[1];N1=Sm[Dr];Dr=Dr+0x1;do(Wr)[0]=Hr[N1[0X02]];end;N1=Sm[Dr];Dr=Dr+0X1;sh=Zm[N1[6]];xh=nil;qh=sh[3];Xh=#qh;if not(Xh>0X0000)then else xh={};for ZP=0x001,Xh do local LP=qh[ZP];do if LP[1]~=0 then xh[ZP-1]=bm[LP[2]];else xh[ZP-1]={Wr,LP[2]};end;end;end;M(Cm,xh);end;(Wr)[0X1]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;do(Wr[0])[N1[0X02]]=Wr[1];end;N1=Sm[Dr];Dr=Dr+0x1;(Wr)[0X0]=Hr[N1[0X2]];Dr=Dr+0x1;Dr=Dr+0x1;N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[0x6]];xh=nil;qh=sh[3];do Xh=#qh;end;do if Xh>0X0 then xh={};do for o6=1,Xh do local e6=qh[o6];if e6[1]~=0x0000 then xh[o6-0X1]=bm[e6[2]];else do(xh)[o6-0X001]={Wr,e6[0X2]};end;end;end;end;(M)(Cm,xh);end;end;do(Wr)[0X1]=dH(sh,xh,Hr);end;N1=Sm[Dr];do Dr=Dr+0X0001;end;Wr[0][N1[2]]=Wr[0X01];N1=Sm[Dr];Dr=Dr+1;(Wr)[0]=Hr[N1[2]];Dr=Dr+0X1;Dr=Dr+0X1;N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[6]];xh=nil;do qh=sh[0X3];end;Xh=#qh;do if not(Xh>0x0)then else xh={};do for wn=1,Xh do local an=qh[wn];do if an[0X0001]~=0x0000 then(xh)[wn-0x1]=bm[an[0X0002]];else do(xh)[wn-0X1]={Wr,an[0X2]};end;end;end;end;end;(M)(Cm,xh);end;end;Wr[0X1]=dH(sh,xh,Hr);do N1=Sm[Dr];end;Dr=Dr+1;(Wr[0])[N1[2]]=Wr[0X1];N1=Sm[Dr];Dr=Dr+1;do(Wr)[0]=Hr[N1[2]];end;N1=Sm[Dr];Dr=Dr+0X01;sh=Zm[N1[0X6]];xh=nil;qh=sh[0X3];Xh=#qh;if Xh>0X0 then xh={};for Xl=0X00001,Xh do local gl=(qh[Xl]);if gl[0X0001]~=0 then(xh)[Xl-0X1]=bm[gl[2]];else do(xh)[Xl-1]={Wr,gl[2]};end;end;end;(M)(Cm,xh);end;Wr[1]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+0X1;end;(Wr[0X0])[N1[2]]=Wr[0X1];do N1=Sm[Dr];end;Dr=Dr+0X00001;do(Wr)[0X000]=Hr[N1[2]];end;N1=Sm[Dr];Dr=Dr+0X1;sh=Zm[N1[6]];xh=nil;qh=sh[3];Xh=#qh;if not(Xh>0X0)then else xh={};do for Ic=0X1,Xh do local Gc=qh[Ic];if Gc[0X1]~=0 then(xh)[Ic-0X00001]=bm[Gc[0X2]];else(xh)[Ic-0X1]={Wr,Gc[0X2]};end;end;end;M(Cm,xh);end;(Wr)[0X001]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;(Wr[0])[N1[2]]=Wr[1];N1=Sm[Dr];Dr=Dr+1;(Wr)[0X0]=Hr[N1[2]];do Dr=Dr+0X1;end;Dr=Dr+0x0001;N1=Sm[Dr];Dr=Dr+0x1;sh=Zm[N1[6]];xh=nil;qh=sh[3];do Xh=#qh;end;if Xh>0 then xh={};for Dz=1,Xh do local Tz=(qh[Dz]);do if Tz[1]==0X000 then do(xh)[Dz-1]={Wr,Tz[2]};end;else(xh)[Dz-0X0001]=bm[Tz[2]];end;end;end;(M)(Cm,xh);end;Wr[1]=dH(sh,xh,Hr);do N1=Sm[Dr];end;do Dr=Dr+0X0001;end;Wr[0X0][N1[2]]=Wr[1];N1=Sm[Dr];do Dr=Dr+1;end;(Wr)[0]=Hr[N1[0X2]];N1=Sm[Dr];do Dr=Dr+0x1;end;sh=Zm[N1[6]];do xh=nil;end;qh=sh[0X3];Xh=#qh;if not(Xh>0)then else xh={};for uP=0X1,Xh do local hP=(qh[uP]);if hP[0X00001]~=0X00 then xh[uP-1]=bm[hP[2]];else do xh[uP-0x1]={Wr,hP[0X2]};end;end;end;(M)(Cm,xh);end;(Wr)[1]=dH(sh,xh,Hr);N1=Sm[Dr];do Dr=Dr+1;end;(Wr[0X0])[N1[0X0002]]=Wr[1];N1=Sm[Dr];Dr=Dr+1;Wr[0X00000]=Hr[N1[2]];N1=Sm[Dr];Dr=Dr+1;sh=Zm[N1[0x6]];do xh=nil;end;qh=sh[0x3];do Xh=#qh;end;if Xh>0X0000 then xh={};for c0=1,Xh do local B0=(qh[c0]);if B0[0X1]~=0 then xh[c0-1]=bm[B0[2]];else do(xh)[c0-1]={Wr,B0[0X002]};end;end;end;M(Cm,xh);end;(Wr)[0X01]=dH(sh,xh,Hr);N1=Sm[Dr];Dr=Dr+1;do(Wr[0])[N1[2]]=Wr[1];end;Dr=Dr+1;do repeat local yt,vt=Cm,Wr;if#yt>0x0 then local GN={};for Cl,Ml in I,yt do do for o7,j7 in I,Ml do if j7[1]==vt and j7[2]>=0X00 then local WT=(j7[0X2]);if not(not GN[WT])then else GN[WT]={vt[WT]};end;j7[0X1]=GN[WT];do j7[0X2]=1;end;end;end;end;end;end;until true;end;do return;end;else do for RV=N1[7],N1[0x6]do do Wr[RV]=nil;end;end;end;end;end;end;end;else do if d1<0X004 then do if d1<0X2 then do if d1~=1 then Wr[N1[7]]=Er[N1[0X00006]];else Wr[N1[0X7]]=Wr[N1[6]]<Wr[N1[1]];end;end;else if d1==3 then if Wr[N1[0x6]]~=Wr[N1[0X01]]then else Dr=N1[0X7];end;else Wr[N1[0X0007]]=Wr[N1[6]]%Wr[N1[1]];end;end;end;else if not(d1<6)then do if d1==7 then Wr[N1[7]]=Hr[N1[2]];else do Wr[N1[7]]=N1[2];end;end;end;else do if d1~=5 then Wr[N1[0X7]]=N1[2];else do Wr[N1[7]]=Wr[N1[0x06]]^Wr[N1[1]];end;end;end;end;end;end;end;end;end;end);if not(Rr)then if e(dr)=='s\116r\105\110g'then if p(dr,'\097\116\116\e\m\p\116\ t\111\ \y\105\101\108\100 a\cr\111\s\s\ me\116a\m\eth\o\100\/\C%-\ca\l\l\032\098\o\117n\100a\114y')then return coroutine.yield();end;if p(dr,"^.-:%d+: ")then V('\L\117\114aph\ \083\c\114ipt\:'..(Dm[Dr-0X00001]or"(internal)")..": "..v(dr),0X0);else V(dr,0);end;else V(dr,0);end;else do if dr then do if Jr~=1 then return Wr[nr](f(Wr,nr+1,Mr));else return Wr[nr]();end;end;elseif not(nr)then else return f(Wr,nr,Jr);end;end;end;end;end;end;end;end;else if not(xm>=0x83)then Km=function(...)local OH=1;local WH={};local jH=(K());local mH=({[2]=WH,[1]=Xm});local NH=((jH==g and Qm or jH));local uR,fR=eH(...);uR=uR-1;for BQ=0X000,uR do if not(km>BQ)then break;else do(WH)[BQ]=fR[BQ+0X1];end;end;end;local aH=0X0;if not Lm then fR=nil;elseif not(Um)then else(WH)[km]={n=uR>=km and uR-km+1 or 0X000,f(fR,km+1,uR+1)};end;if NH==jH then else(w)(Km,NH);end;local KR,GR,QR,hR=o(function()do while true do local cp=Sm[OH];local bp=(cp[4]);OH=OH+1;if not(bp>=0X6)then do if not(bp>=0x003)then if not(bp>=1)then do(WH)[cp[7]]=WH[cp[6]]<WH[cp[1]];end;else if bp==2 then do(WH)[0X00000]=NH[cp[2]];end;local sP=0X00000;OH=OH+0X1;do OH=OH+0x1;end;cp=Sm[OH];do OH=OH+0X1;end;(WH)[0X0]=WH[0X0][cp[0x5]];do cp=Sm[OH];end;local XP=Zm[cp[0X6]];local IP=(XP[0X3]);OH=OH+0X1;local bP,zP=nil,(#IP);if not(zP>0)then else do bP={};end;do for l9=1,zP do local G9=(IP[l9]);if G9[0x1]==0X0000 then do bP[l9-0X1]={WH,G9[0x2]};end;else do(bP)[l9-1]=bm[G9[2]];end;end;end;end;(M)(Cm,bP);end;(WH)[1]=dH(XP,bP,NH);OH=OH+1;WH[sP](WH[sP+0X00001]);aH=sP-0x1;OH=OH+1;do OH=OH+1;end;OH=OH+1;do repeat local mt,bt=Cm,WH;do if not(#mt>0)then else local Di=({});do for q1,Y1 in I,mt do for xO,VO in I,Y1 do if VO[1]==bt and VO[0X02]>=0 then local Kx=VO[0X2];if not Di[Kx]then do Di[Kx]={bt[Kx]};end;end;(VO)[1]=Di[Kx];do(VO)[2]=0x1;end;end;end;end;end;end;end;until true;end;do return;end;else(WH)[cp[0x0007]]=NH[cp[0X00002]];end;end;else if not(bp>=4)then OH=cp[0X6];else if bp==5 then for PT=cp[0X7],cp[6]do WH[PT]=nil;end;else local pP=(Zm[cp[0X6]]);local uP,tP=pP[3],(nil);local zP=#uP;if not(zP>0)then else tP={};for jR=1,zP do local rR=uP[jR];if rR[0X00001]==0 then(tP)[jR-0X00001]={WH,rR[2]};else(tP)[jR-0X1]=bm[rR[2]];end;end;(M)(Cm,tP);end;do(WH)[cp[0X07]]=dH(pP,tP,NH);end;end;end;end;end;else if bp<9 then if not(bp>=0x7)then do(WH)[cp[7]]=cp[2];end;else if bp~=8 then do WH[cp[0X7]]=WH[cp[0X6]]==WH[cp[1]];end;else end;end;else do if bp<11 then if bp==0Xa then WH[cp[7]]={f({},0X1,cp[6])};else(mH)[cp[6]]=WH[cp[0X7]];end;else if bp~=12 then local eW=cp[6];local zW=WH[eW];for s0=eW+1,cp[1]do zW=zW..WH[s0];end;(WH)[cp[7]]=zW;else do repeat local IG,lG,GG=Cm,WH,cp[7];do if#IG>0X0000 then local Yc={};for CT,xT in I,IG do for n3,j3 in I,xT do do if j3[1]==lG and j3[0x2]>=GG then local NG=j3[2];if not Yc[NG]then(Yc)[NG]={lG[NG]};end;j3[0x001]=Yc[NG];j3[2]=0x1;end;end;end;end;end;end;until true;end;end;end;end;end;end;end;end;end);if not(KR)then if e(GR)~="string"then V(GR,0);else do if not(p(GR,"\097\116t\em\pt\032to\ \yi\e\l\d \097\099r\o\115\s m\e\116am\et\h\od\/C\%\-\099a\108l \098\ound\097\114\121"))then else return coroutine.yield();end;end;if p(GR,"\^\046\045:\%d\043\:\032")then V("Luraph Script:"..(Dm[OH-1]or'\040intern\097l\)')..": "..v(GR),0);else V(GR,0);end;end;else if GR then do if hR==1 then return WH[QR]();else return WH[QR](f(WH,QR+1,aH));end;end;elseif not(QR)then else return f(WH,QR,hR);end;end;end;else do if xm==132 then Km=function(...)local UE,IE=1,({});local QE=(K());local rE={[2]=IE,[1]=Xm};local bE,ME=eH(...);bE=bE-1;do for J3=0X0,bE do do if not(km>J3)then break;else IE[J3]=ME[J3+0X01];end;end;end;end;local TE=((QE==g and Qm or QE));if not Lm then ME=nil;elseif Um then do(IE)[km]={n=bE>=km and bE-km+0X001 or 0,f(ME,km+1,bE+1)};end;end;local mE=(0X0);if TE==QE then else(w)(Km,TE);end;local BE,YE,hE,nE=o(function()while true do local cm=Sm[UE];local hm=cm[4];do UE=UE+0X1;end;if hm>=8 then if hm>=0x0C then if hm>=14 then if hm==0Xf then IE[cm[0X7]]=TE[cm[0X2]];else(IE)[0]=TE[cm[0X02]];local t2=IE[0];cm=Sm[UE];UE=UE+1;local k2=(0X0);(IE)[k2+0X1]=t2;do(IE)[k2]=t2[cm[0X005]];end;cm=Sm[UE];UE=UE+0X1;do IE[2]=cm[2];end;UE=UE+1;k2=0;do IE[k2]=IE[k2](IE[k2+0x00001],IE[k2+2]);end;mE=k2;UE=UE+1;UE=UE+1;do cm=Sm[UE];end;UE=UE+0X1;(IE)[1]=TE[cm[2]];cm=Sm[UE];do UE=UE+0X01;end;(IE)[0x1]=IE[0X1][cm[0X5]];cm=Sm[UE];local L2=(Zm[cm[0X6]]);local X2=L2[0X3];do UE=UE+0X1;end;local J2=nil;local l2=#X2;if l2>0 then J2={};for cE=1,l2 do local eE=(X2[cE]);if eE[0X1]==0 then J2[cE-1]={IE,eE[2]};else(J2)[cE-1]=bm[eE[0X2]];end;end;(M)(Cm,J2);end;IE[0x002]=dH(L2,J2,TE);do UE=UE+1;end;k2=1;(IE[k2])(IE[k2+0X1]);mE=k2-0X00001;do UE=UE+0X1;end;repeat local F0,G0=Cm,(IE);do if#F0>0X00000 then local yU={};for eA,UA in I,F0 do for up,op in I,UA do if not(op[0X1]==G0 and op[0x2]>=0x00000)then else local Vc=op[2];if not yU[Vc]then(yU)[Vc]={G0[Vc]};end;do(op)[0X01]=yU[Vc];end;(op)[2]=1;end;end;end;end;end;until true;return;end;else do if hm~=13 then(IE)[cm[7]]=cm[2];else local LW=(cm[0x7]);local vW,aW=IE[LW],IE[LW+0X1];local jW=(IE[LW+2]);do(IE)[LW]=r(function()for kt=vW,aW,jW do(C)(true,kt);end;end);end;do UE=cm[0X6];end;end;end;end;else if hm>=10 then if hm~=0XB then UE=cm[0x6];else IE[cm[0X7]]=IE[cm[6]][IE[cm[0X1]]];end;else do if hm~=9 then IE[cm[0X7]]={f({},1,cm[0X6])};else end;end;end;end;else if hm>=0x4 then do if not(hm<0X006)then do if hm==0x7 then if not(IE[cm[0X6]]<=IE[cm[0X1]])then UE=cm[7];end;else local AW=Zm[cm[6]];local FW,kW=AW[3],nil;local xW=(#FW);if xW>0 then kW={};do for UB=1,xW do local gB=FW[UB];if gB[0X01]~=0 then kW[UB-1]=bm[gB[2]];else kW[UB-1]={IE,gB[2]};end;end;end;M(Cm,kW);end;(IE)[cm[0X7]]=dH(AW,kW,TE);end;end;else if hm==5 then do for dF=cm[7],cm[0X6]do IE[dF]=nil;end;end;else local rG=(cm[0X7]);for uk=rG,rG+(cm[6]-1)do(IE)[uk]=ME[km+(uk-rG)+0x1];end;end;end;end;else do if hm>=0X2 then if hm~=0X3 then(IE)[cm[0X00007]]=IE[cm[6]]==IE[cm[1]];else local fu=cm[0X0006];local Yu=cm[7];if fu==0X0 then else mE=Yu+fu-1;end;local au=(cm[1]);local Du,Ou=nil,(nil);if fu~=1 then Du,Ou=eH(IE[Yu](f(IE,Yu+1,mE)));else Du,Ou=eH(IE[Yu]());end;if au==0x1 then mE=Yu-0X1;else if au==0X00000 then Du=Du+Yu-1;do mE=Du;end;else Du=Yu+au-2;mE=Du+0x1;end;local HE=0;for nZ=Yu,Du do HE=HE+1;IE[nZ]=Ou[HE];end;end;end;else do if hm~=1 then IE[cm[0x7]][IE[cm[0X6]]]=IE[cm[0x00001]];else repeat local Rl,Kl=Cm,IE;do if not(#Rl>0)then else local Tw=({});for xO,AO in I,Rl do do for tk,bk in I,AO do do if not(bk[1]==Kl and bk[0X0002]>=0X0)then else local uK=bk[0X2];do if not(not Tw[uK])then else do Tw[uK]={Kl[uK]};end;end;end;bk[1]=Tw[uK];bk[2]=1;end;end;end;end;end;end;end;until true;local FQ=cm[0x7];do return false,FQ,FQ+cm[6]-0x2;end;end;end;end;end;end;end;end;end);if BE then if YE then do if nE~=0x1 then return IE[hE](f(IE,hE+1,mE));else return IE[hE]();end;end;elseif hE then return f(IE,hE,nE);end;else do if e(YE)~='s\116\114in\103'then(V)(YE,0);else if not(p(YE,"a\116t\e\109pt \116\o \y\105\e\108\100\ \097\099r\o\s\115 \109et\097m\eth\od/\C\%\-\099a\108\l\032b\o\117\110\dar\y"))then else return coroutine.yield();end;if p(YE,"^.-:%d+: ")then(V)("\L\117\114a\112h\032\S\cr\105\pt:"..(Dm[UE-1]or'\(i\110t\e\114\110\097\l\041')..": "..v(YE),0X0);else V(YE,0);end;end;end;end;end;else Km=function(...)local x4={};local y4=(0x001);local T4=(K());local L4,P4=0,{[1]=Xm,[2]=x4};local D4,I4=eH(...);D4=D4-1;local J4=((T4==g and Qm or T4));for Us=0,D4 do if km>Us then(x4)[Us]=I4[Us+1];else do break;end;end;end;do if not Lm then I4=nil;elseif Um then(x4)[km]={n=D4>=km and D4-km+0x00001 or 0X0,f(I4,km+1,D4+0x1)};end;end;do if J4~=T4 then w(Km,J4);end;end;local Y4,C4,U4,m4=o(function()while true do local vX=(Sm[y4]);local iX=(vX[0X4]);y4=y4+1;if iX>=0X012 then if iX<0X01B then if not(iX>=22)then do if iX<0X0014 then if iX~=19 then repeat local xM,RM=Cm,(x4);do if#xM>0 then local MD={};for MC,PC in I,xM do for C6,Z6 in I,PC do if Z6[0X1]==RM and Z6[2]>=0 then local wi=Z6[0X2];do if not MD[wi]then MD[wi]={RM[wi]};end;end;Z6[0x0001]=MD[wi];(Z6)[2]=0X1;end;end;end;end;end;until true;do return;end;else x4[vX[0X007]]=not x4[vX[0x6]];end;else if iX==0X15 then x4[1]=J4[vX[2]];vX=Sm[y4];y4=y4+1;(x4)[0X1]=x4[0X1][vX[5]];y4=y4+1;y4=y4+0X00001;vX=Sm[y4];y4=y4+1;x4[0X1]=x4[1][vX[0X5]];y4=y4+1;y4=y4+1;vX=Sm[y4];y4=y4+1;if not(x4[0x001]<vX[0X5])then else y4=vX[7];end;else do y4=vX[6];end;end;end;end;else do if not(iX<24)then if iX<25 then do x4[vX[7]]=x4[vX[6]][vX[0X5]];end;else if iX==0X1A then local dl=(bm[0]);local hl=(2);x4[0X2]=dl[0X1][dl[0X2]];vX=Sm[y4];do y4=y4+1;end;local Rl=(x4[0X2]);x4[hl+1]=Rl;(x4)[hl]=Rl[vX[0X5]];y4=y4+0X1;do hl=0X2;end;x4[hl](x4[hl+0x1]);L4=hl-1;y4=y4+1;repeat local N5,n5=Cm,(x4);if not(#N5>0x000)then else local LN=({});do for gC,cC in I,N5 do do for vw,Ow in I,cC do do if not(Ow[1]==n5 and Ow[0X2]>=1)then else local I6=Ow[2];do if not(not LN[I6])then else(LN)[I6]={n5[I6]};end;end;Ow[1]=LN[I6];Ow[0x2]=0X1;end;end;end;end;end;end;end;until true;vX=Sm[y4];do y4=y4+0X0001;end;y4=vX[6];else local fx=(nil);local Wx=(Zm[vX[6]]);local dx=(Wx[0X3]);local Rx=#dx;if Rx>0 then do fx={};end;do for Dp=0X1,Rx do local Kp=dx[Dp];do if Kp[0X1]==0 then do fx[Dp-0X00001]={x4,Kp[2]};end;else do(fx)[Dp-1]=bm[Kp[2]];end;end;end;end;end;(M)(Cm,fx);end;x4[vX[7]]=dH(Wx,fx,J4);end;end;else if iX~=23 then do for yW=vX[7],vX[6]do x4[yW]=nil;end;end;else end;end;end;end;else if not(iX<0X20)then if iX>=34 then if not(iX>=0x23)then x4[1]=J4[vX[2]];y4=y4+0X1;y4=y4+1;vX=Sm[y4];y4=y4+0X0001;do if not(not x4[1])then else y4=vX[6];end;end;else if iX==36 then if x4[vX[0X00006]]==x4[vX[1]]then y4=vX[0X00007];end;else x4[vX[0X07]]={f({},0X1,vX[0X00006])};end;end;else if iX==0x021 then(x4)[3]=J4[vX[2]];vX=Sm[y4];y4=y4+1;(x4)[0X03]=x4[3][vX[0x5]];y4=y4+1;y4=y4+1;vX=Sm[y4];do y4=y4+1;end;x4[3]=x4[3][vX[5]];y4=y4+0X1;do y4=y4+0X1;end;vX=Sm[y4];y4=y4+1;do if not(not(vX[0X2]<x4[3]))then else y4=vX[0x00007];end;end;else do x4[2]=true;end;vX=Sm[y4];local VY=(2);y4=y4+1;do J4[vX[2]]=x4[0X002];end;do vX=Sm[y4];end;y4=y4+1;x4[0x2]=J4[vX[2]];y4=y4+1;y4=y4+0X0001;vX=Sm[y4];y4=y4+1;do x4[0X3]=vX[0X2];end;y4=y4+0X001;x4[VY]=x4[VY](x4[VY+0x01]);L4=VY;vX=Sm[y4];y4=y4+0x001;do if not(not x4[0x2])then else do y4=vX[0X0006];end;end;end;end;end;else if iX<0X0001d then if iX~=0X0001C then(x4)[1]={f({},1,1)};local A_=0X003;vX=Sm[y4];do y4=y4+1;end;local s_=(2);(x4)[2]=J4[vX[0X2]];vX=Sm[y4];y4=y4+0X01;local x_=(x4[0X2]);(x4)[s_+0X1]=x_;x4[s_]=x_[vX[5]];vX=Sm[y4];do y4=y4+1;end;x4[4]=vX[0X2];y4=y4+1;s_=2;x4[s_]=x4[s_](x4[s_+1],x4[s_+0x2]);L4=s_;do vX=Sm[y4];end;y4=y4+0x1;do x4[3]=J4[vX[0x2]];end;vX=Sm[y4];y4=y4+1;s_=0X3;local m_=((1-1)*0X32);x_=x4[3];x4[s_+1]=x_;do x4[s_]=x_[vX[5]];end;vX=Sm[y4];do y4=y4+1;end;do(x4)[0X005]=vX[0x2];end;y4=y4+1;do s_=3;end;local l_=(0);if A_==0X00 then else do L4=s_+A_-1;end;end;local e_,H_=nil,nil;if A_~=1 then e_,H_=eH(x4[s_](f(x4,s_+1,L4)));else e_,H_=eH(x4[s_]());end;if l_==0X001 then L4=s_-0X1;else do if l_==0X000 then e_=e_+s_-1;L4=e_;else e_=s_+l_-2;L4=e_+0X1;end;end;local yd=(0X00000);do for Em=s_,e_ do do yd=yd+1;end;(x4)[Em]=H_[yd];end;end;end;y4=y4+1;y4=y4+1;y4=y4+0X1;s_=0x1;local R_=x4[s_];do for Kw=1,L4-s_ do R_[m_+Kw]=x4[s_+Kw];end;end;vX=Sm[y4];y4=y4+1;x4[2]=J4[vX[0x00002]];do vX=Sm[y4];end;y4=y4+1;x4[3]=vX[2];do vX=Sm[y4];end;y4=y4+0X1;(x4)[0X00004]=vX[0X2];y4=y4+0X001;s_=0x2;x4[s_](x4[s_+1],x4[s_+0X002]);do L4=s_-1;end;y4=y4+0x1;y4=y4+1;vX=Sm[y4];do y4=y4+0X00001;end;(x4)[0X0002]=x4[0X1][vX[5]];do vX=Sm[y4];end;y4=y4+0X0001;do if not(not x4[2])then else do y4=vX[0x6];end;end;end;else(x4)[0X2]=J4[vX[0x2]];local HJ=nil;y4=y4+1;do y4=y4+0X01;end;vX=Sm[y4];y4=y4+1;local DJ=(Zm[vX[6]]);local CJ=(DJ[3]);local kJ=(#CJ);do if not(kJ>0)then else HJ={};do for ns=1,kJ do local as=CJ[ns];if as[1]==0 then do HJ[ns-1]={x4,as[2]};end;else HJ[ns-0x1]=bm[as[2]];end;end;end;(M)(Cm,HJ);end;end;(x4)[3]=dH(DJ,HJ,J4);y4=y4+0X1;local VJ=(2);x4[VJ](x4[VJ+1]);do L4=VJ-0X001;end;do y4=y4+1;end;y4=y4+0X001;vX=Sm[y4];do y4=y4+0x1;end;(x4)[2]=J4[vX[2]];y4=y4+0X00001;local MJ=(x4[2]);do y4=y4+1;end;vX=Sm[y4];do y4=y4+1;end;VJ=0X00002;do(x4)[VJ+0X00001]=MJ;end;x4[VJ]=MJ[vX[5]];do vX=Sm[y4];end;y4=y4+1;(x4)[0X4]=vX[2];vX=Sm[y4];y4=y4+0X001;do x4[0X5]=vX[0x2];end;vX=Sm[y4];y4=y4+1;x4[6]=vX[0x2];y4=y4+0X1;do VJ=2;end;do L4=VJ+5-0X0001;end;(x4[VJ])(f(x4,VJ+1,L4));L4=VJ-0X1;do y4=y4+0X01;end;y4=y4+1;do vX=Sm[y4];end;y4=y4+0X1;y4=vX[6];end;else do if not(iX>=30)then do if not(x4[vX[6]]<=x4[vX[1]])then else do y4=vX[0X7];end;end;end;else do if iX~=0x001F then x4[2]=J4[vX[0X2]];do y4=y4+1;end;y4=y4+1;vX=Sm[y4];y4=y4+1;(x4)[2]=x4[0X0002][vX[5]];vX=Sm[y4];y4=y4+1;x4[2]=x4[2][vX[0X00005]];vX=Sm[y4];do y4=y4+1;end;if not(x4[2]<vX[0X5])then y4=vX[7];end;else(x4)[0x0]=J4[vX[2]];y4=y4+1;y4=y4+1;y4=y4+1;L4=0X00;do(x4)[L4]=x4[L4]();end;vX=Sm[y4];y4=y4+0X0001;if x4[0X0]<vX[5]then y4=vX[0X7];end;end;end;end;end;end;end;end;else if iX<0X009 then if iX<4 then do if iX>=2 then do if iX~=3 then(x4)[vX[7]]={};else(x4)[vX[7]]=J4[vX[2]];end;end;else if iX==1 then x4[0]=J4[vX[0X2]];vX=Sm[y4];local lc=0;y4=y4+1;(x4)[0x1]=vX[0x2];vX=Sm[y4];y4=y4+1;(x4)[2]=vX[2];y4=y4+1;x4[lc]=x4[lc](x4[lc+1],x4[lc+2]);L4=lc;vX=Sm[y4];y4=y4+1;if not(not x4[0x0])then else y4=vX[0X6];end;else(x4)[0]=J4[vX[2]];vX=Sm[y4];y4=y4+0X1;x4[0X0]=x4[0X0][vX[5]];do y4=y4+0x1;end;y4=y4+0x1;do vX=Sm[y4];end;y4=y4+0X0001;if not(not x4[0X0])then else y4=vX[0X6];end;end;end;end;else if not(iX<0X6)then if iX>=0x7 then do if iX==8 then do x4[3]=x4[1][vX[0X05]];end;vX=Sm[y4];y4=y4+0X1;x4[0X3]=x4[3][vX[0x00005]];vX=Sm[y4];y4=y4+1;if x4[0X00003]~=vX[5]then else y4=vX[7];end;else(x4)[0]=J4[vX[2]];y4=y4+1;y4=y4+0x1;vX=Sm[y4];y4=y4+0X00001;do(x4)[0x0]=x4[0][vX[5]];end;do vX=Sm[y4];end;y4=y4+0X1;if not(not x4[0])then else y4=vX[0X6];end;end;end;else do(x4)[2]=J4[vX[2]];end;y4=y4+1;y4=y4+1;vX=Sm[y4];y4=y4+1;x4[0X3]=vX[2];y4=y4+0x1;local wJ=(2);(x4[wJ])(x4[wJ+0X0001]);L4=wJ-1;vX=Sm[y4];y4=y4+1;y4=vX[6];end;else do if iX~=5 then do x4[1]=J4[vX[2]];end;y4=y4+0X1;do y4=y4+1;end;vX=Sm[y4];y4=y4+1;x4[0x1]=x4[0X1][vX[0X0005]];y4=y4+0X1;local DF=(0x1);y4=y4+0X1;do vX=Sm[y4];end;do y4=y4+1;end;local pF=x4[1];(x4)[DF+0X1]=pF;x4[DF]=pF[vX[0X05]];vX=Sm[y4];do y4=y4+0x1;end;x4[0X00003]=vX[2];y4=y4+1;DF=0x00001;do x4[DF]=x4[DF](x4[DF+0X1],x4[DF+2]);end;L4=DF;y4=y4+1;y4=y4+0X1;do vX=Sm[y4];end;do y4=y4+1;end;do if not(x4[0X1])then else y4=vX[0X00006];end;end;else x4[0]=J4[vX[0X02]];local Rf=(0x0);vX=Sm[y4];y4=y4+0x1;(x4)[0X0]=x4[0][vX[5]];vX=Sm[y4];y4=y4+0x1;do x4[0X1]=vX[0X2];end;y4=y4+0X001;x4[Rf]=x4[Rf](x4[Rf+1]);L4=Rf;vX=Sm[y4];y4=y4+0X0001;if not(not x4[0])then else y4=vX[0X6];end;end;end;end;end;else do if not(iX>=0X0000d)then if not(iX>=11)then if iX==10 then local RK=(bm[0]);do(x4)[1]=RK[1][RK[0x2]];end;do y4=y4+1;end;do y4=y4+0x1;end;do vX=Sm[y4];end;local fK=0X1;y4=y4+0X1;local zK=x4[1];do x4[fK+1]=zK;end;x4[fK]=zK[vX[5]];y4=y4+1;fK=0X1;x4[fK]=x4[fK](x4[fK+1]);do L4=fK;end;do vX=Sm[y4];end;y4=y4+0X01;if not(not x4[1])then else y4=vX[6];end;else if not x4[vX[0X007]]then do y4=vX[6];end;end;end;else if iX==12 then(x4)[2]=x4[1][vX[0X5]];y4=y4+0X1;y4=y4+1;vX=Sm[y4];do y4=y4+1;end;(x4)[2]=x4[0X002][vX[0X5]];do y4=y4+0x001;end;y4=y4+0X1;do vX=Sm[y4];end;do y4=y4+1;end;if x4[0X02]==vX[5]then y4=vX[7];end;else local bF=(vX[0x07]);local DF,qF=x4[bF]();if not(DF)then else y4=vX[6];(x4)[bF+3]=qF;end;end;end;else do if iX<0Xf then if iX~=14 then x4[2]=false;do vX=Sm[y4];end;do y4=y4+0X01;end;(J4)[vX[0X002]]=x4[2];vX=Sm[y4];y4=y4+0X1;y4=vX[6];else(x4)[vX[7]]=x4[vX[6]]-x4[vX[1]];end;else if not(iX<16)then if iX~=0X011 then local M1=x4[0];local Q1=1;do(x4)[Q1+0X1]=M1;end;x4[Q1]=M1[vX[5]];do vX=Sm[y4];end;y4=y4+1;x4[0X00003]=vX[2];do y4=y4+0X001;end;Q1=1;x4[Q1]=x4[Q1](x4[Q1+1],x4[Q1+2]);L4=Q1;y4=y4+0X1;y4=y4+1;do vX=Sm[y4];end;y4=y4+1;do if not x4[0X1]then y4=vX[6];end;end;else local Lb,ub=vX[7],(vX[6]);local Gb=(vX[1]);if ub==0 then else L4=Lb+ub-1;end;local Qb,Jb=nil,nil;if ub~=1 then Qb,Jb=eH(x4[Lb](f(x4,Lb+0X1,L4)));else Qb,Jb=eH(x4[Lb]());end;if Gb~=1 then if Gb==0X00000 then Qb=Qb+Lb-0X0001;L4=Qb;else do Qb=Lb+Gb-0X2;end;L4=Qb+0X001;end;local Pw=0;for uz=Lb,Qb do Pw=Pw+0x1;x4[uz]=Jb[Pw];end;else do L4=Lb-0x00001;end;end;end;else do(x4)[vX[0x7]]=vX[0x2];end;end;end;end;end;end;end;end;end;end);if not(Y4)then if e(C4)~='\115\116rin\103'then(V)(C4,0);else if not(p(C4,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if p(C4,"^.-:%d+: ")then(V)('Lu\114a\112\104\032\S\c\114\ip\116\058'..(Dm[y4-1]or"(internal)")..'\058 '..v(C4),0x0);else(V)(C4,0X0);end;end;else do if C4 then if m4~=0x0001 then return x4[U4](f(x4,U4+1,L4));else return x4[U4]();end;elseif not(U4)then else return f(x4,U4,m4);end;end;end;end;end;end;end;end;end;else do if not(xm<121)then if xm>=124 then if xm>=0X00007d then if xm~=126 then Km=function(...)local se,Ee=1,{};local ie=K();local qe,Te=eH(...);qe=qe-1;local ue,Ke={[1]=Xm,[2]=Ee},(0);for sJ=0x000,qe do if not(km>sJ)then break;else do(Ee)[sJ]=Te[sJ+0X00001];end;end;end;local fe=((ie==g and Qm or ie));do if not Lm then Te=nil;elseif not(Um)then else do Ee[km]={n=qe>=km and qe-km+0X01 or 0X0,f(Te,km+1,qe+1)};end;end;end;if fe~=ie then(w)(Km,fe);end;local Je,Le,Me,ye=o(function()while true do local Ju=(Sm[se]);local Du=(Ju[4]);do se=se+1;end;if Du>=0X1d then if not(Du<0X2B)then if not(Du<50)then if Du>=0X36 then do if Du>=56 then do if Du~=57 then if not(Ee[Ju[7]])then else do se=Ju[0x00006];end;end;else Ee[Ju[0X7]]=Ju[2];end;end;else if Du~=0X37 then do for FI=Ju[7],Ju[6]do(Ee)[FI]=nil;end;end;else Ee[3]=fe[Ju[2]];Ju=Sm[se];do se=se+1;end;(Ee)[0x003]=Ee[3][Ju[0x005]];se=se+0X1;se=se+1;Ju=Sm[se];se=se+1;do if Ee[0X3]then se=Ju[6];end;end;end;end;end;else do if Du<0X34 then if Du~=0x033 then Ee[0X2]=Ee[0X1];Ju=Sm[se];se=se+0X1;(Ee)[3]=Ee[0X1]==Ju[0X005];Ju=Sm[se];se=se+0X01;if not(Ee[3])then else se=Ju[6];end;else do Ee[0X3]=fe[Ju[0x2]];end;se=se+0X1;do se=se+1;end;Ju=Sm[se];se=se+1;do if not Ee[3]then se=Ju[6];end;end;end;else do if Du==0X00035 then if not Ee[Ju[0x7]]then se=Ju[6];end;else local Rn=(Ju[0X6]);local ln=Ee[Rn];for NH=Rn+0X1,Ju[1]do do ln=ln..Ee[NH];end;end;(Ee)[Ju[0X7]]=ln;end;end;end;end;end;else if not(Du<0x2e)then if not(Du<0X30)then do if Du~=0X31 then do Ee[0X0003]=fe[Ju[2]];end;se=se+0X1;se=se+0x1;Ju=Sm[se];se=se+0X1;if not(not Ee[0X0003])then else do se=Ju[0X6];end;end;else Ee[3]=fe[Ju[2]];se=se+1;se=se+1;Ju=Sm[se];se=se+1;(Ee)[0X3]=Ee[3][Ju[5]];se=se+0x1;se=se+1;Ju=Sm[se];se=se+1;if not(Ee[3])then else se=Ju[0x6];end;end;end;else if Du==0x2f then Ee[0X4]=fe[Ju[2]];do Ju=Sm[se];end;se=se+0x1;Ee[5]=Ju[0X00002];local sI=0X4;se=se+1;Ee[sI]=Ee[sI](Ee[sI+1]);Ke=sI;se=se+0X001;se=se+0x1;Ju=Sm[se];se=se+0X1;if not Ee[4]then se=Ju[6];end;else(Ee)[4]=fe[Ju[0X0002]];se=se+0X1;se=se+0x1;Ju=Sm[se];se=se+0x1;Ee[5]=Ju[2];se=se+0x1;local mK=(4);Ee[mK](Ee[mK+0X1]);Ke=mK-1;se=se+0x1;se=se+1;Ju=Sm[se];se=se+0X01;do se=Ju[6];end;end;end;else do if Du>=0X02C then if Du==45 then Ee[0X5]=fe[Ju[0X02]];do Ju=Sm[se];end;se=se+1;(Ee)[5]=Ee[0X00005][Ju[5]];Ju=Sm[se];se=se+1;do Ee[0X005]=Ee[0X5][Ju[5]];end;Ju=Sm[se];se=se+0X00001;if not(not(Ju[0X2]<=Ee[0X0005]))then else se=Ju[7];end;else local xb=bm[1];(Ee)[0X4]=xb[1][xb[0X0002]];Ju=Sm[se];se=se+1;Ee[0X004]=Ee[4][Ju[5]];se=se+1;se=se+1;do se=se+1;end;Ee[0X0005]=Ee[3];se=se+0X1;local jb=0X00004;Ee[jb]=Ee[jb](Ee[jb+0X0001]);Ke=jb;do se=se+0x0001;end;se=se+1;Ju=Sm[se];se=se+0X1;if not Ee[4]then se=Ju[0x6];end;end;else local xT=(Ju[7]);for Ct=xT,xT+(Ju[6]-0x1)do(Ee)[Ct]=Te[km+(Ct-xT)+0X001];end;end;end;end;end;else if Du>=0X024 then if not(Du>=0X27)then if Du<0X25 then(fe)[Ju[0X02]]=Ee[0X3];Ju=Sm[se];se=se+1;(Ee)[3]=fe[Ju[2]];do Ju=Sm[se];end;do se=se+1;end;if not(Ee[3])then else do se=Ju[0X6];end;end;else if Du==38 then Ee[Ju[0X00007]]=Ee[Ju[0X06]]/Ee[Ju[0x1]];else Ee[0X03]=fe[Ju[2]];Ju=Sm[se];se=se+1;Ee[3]=Ee[3][Ju[0X005]];Ju=Sm[se];se=se+0X1;if not Ee[0X003]then se=Ju[6];end;end;end;else if not(Du>=41)then if Du~=40 then Ee[Ju[0X7]]=fe[Ju[2]];else(Ee)[0X003]=fe[Ju[0X00002]];se=se+0X1;se=se+1;Ju=Sm[se];do se=se+1;end;Ee[0X3]=Ee[3][Ju[0X05]];Ju=Sm[se];se=se+1;if Ee[0X00003]then se=Ju[6];end;end;else do if Du==0X00002A then Ee[0X04]=fe[Ju[0X2]];do se=se+0X001;end;do se=se+0X1;end;Ju=Sm[se];se=se+1;(Ee)[4]=Ee[0X4][Ju[0X5]];se=se+1;se=se+0X001;Ju=Sm[se];se=se+0x1;do Ee[0X004]=Ee[4][Ju[0X5]];end;Ju=Sm[se];do se=se+0X00001;end;if not(Ju[2]<Ee[4])then se=Ju[7];end;else do Ee[3]=fe[Ju[0X2]];end;Ju=Sm[se];se=se+1;Ee[0X00003]=Ee[0X00003][Ju[5]];Ju=Sm[se];do se=se+1;end;if not Ee[0x00003]then se=Ju[0X06];end;end;end;end;end;else do if Du<32 then if not(Du<30)then do if Du~=31 then Ee[3]=fe[Ju[2]];do Ju=Sm[se];end;se=se+1;Ee[0X3]=Ee[0X3][Ju[5]];Ju=Sm[se];se=se+1;if not(Ee[3])then else se=Ju[6];end;else do(Ee)[3]=fe[Ju[0X0002]];end;Ju=Sm[se];se=se+0x1;Ee[3]=Ee[0X3][Ju[0X5]];se=se+1;se=se+1;Ju=Sm[se];do se=se+1;end;if not(Ee[0x003])then else do se=Ju[0X6];end;end;end;end;else Ee[0X0003]=fe[Ju[0X00002]];se=se+1;se=se+0X01;Ju=Sm[se];se=se+1;if not(Ee[0X3])then else se=Ju[6];end;end;else if Du>=0x022 then if Du~=35 then do fe[Ju[2]]=Ee[0x0003];end;local uo=bm[0];se=se+1;local To=3;Ee[3]=uo[1][uo[0X02]];se=se+0X1;se=se+1;Ju=Sm[se];se=se+1;local Qo=Ee[3];do(Ee)[To+0X00001]=Qo;end;do Ee[To]=Qo[Ju[0X05]];end;se=se+1;do To=0x3;end;do Ee[To]=Ee[To](Ee[To+1]);end;Ke=To;se=se+0X1;se=se+0X01;Ju=Sm[se];se=se+1;if not(not Ee[3])then else se=Ju[0X00006];end;else do(Ee)[0X2]=fe[Ju[2]];end;se=se+1;Ke=2;(Ee[Ke])();do Ke=Ke-1;end;se=se+1;se=se+1;Ju=Sm[se];do se=se+1;end;(Ee)[0X2]=fe[Ju[2]];se=se+1;se=se+0X01;Ju=Sm[se];se=se+1;(Ee[2])[Ju[2]]=Ju[0X5];do Ju=Sm[se];end;do se=se+0X1;end;(Ee)[2]=fe[Ju[2]];do Ju=Sm[se];end;se=se+1;Ee[2][Ju[2]]=Ju[5];se=se+0X1;repeat local ms,Fs=Cm,Ee;if#ms>0X0 then local hb={};for G3,w3 in I,ms do for sI,eI in I,w3 do if not(eI[1]==Fs and eI[0x2]>=0X0)then else local ho=(eI[0X2]);if not(not hb[ho])then else(hb)[ho]={Fs[ho]};end;eI[0X1]=hb[ho];do(eI)[2]=1;end;end;end;end;end;until true;do return;end;end;else if Du==0x21 then(Ee)[0X4]=fe[Ju[2]];se=se+1;se=se+1;Ju=Sm[se];se=se+0X1;do(Ee)[5]=Ju[2];end;se=se+1;Ee[6]=true;do se=se+0x1;end;local EX=(0x0004);(Ee)[EX]=Ee[EX](Ee[EX+0X1],Ee[EX+0X2]);Ke=EX;se=se+1;(Ee)[2]=Ee[0x4];do Ju=Sm[se];end;se=se+1;se=Ju[6];else(Ee)[6]=fe[Ju[0X2]];se=se+0X1;se=se+0x1;Ju=Sm[se];se=se+0X1;if not Ee[0X6]then se=Ju[0X6];end;end;end;end;end;end;end;else if Du<14 then do if not(Du>=0X0007)then if Du>=3 then if Du>=5 then do if Du==6 then(Ee)[3]=fe[Ju[2]];se=se+1;se=se+1;do Ju=Sm[se];end;do se=se+0X00001;end;if Ee[0X03]then se=Ju[0X06];end;else do(Ee)[0X03]=fe[Ju[2]];end;Ju=Sm[se];se=se+0X01;(Ee)[0x0003]=Ee[3][Ju[0X00005]];Ju=Sm[se];se=se+0X1;if not Ee[0x3]then se=Ju[6];end;end;end;else if Du~=4 then Ee[Ju[0X007]]=ue[Ju[6]];else do(Ee)[0X0004]=fe[Ju[0X00002]];end;do Ju=Sm[se];end;do se=se+0x001;end;do(Ee)[0X05]=Ju[0X00002];end;se=se+1;local RU=0X004;Ee[RU](Ee[RU+0X01]);Ke=RU-0X00001;se=se+0X01;se=se+1;do Ju=Sm[se];end;se=se+0X01;se=Ju[6];end;end;else if Du<0X0001 then Ee[6]=fe[Ju[2]];Ju=Sm[se];se=se+0X1;Ee[6]=Ee[6][Ju[0X5]];do Ju=Sm[se];end;se=se+1;if not Ee[6]then se=Ju[6];end;else if Du~=0X2 then Ee[0X6]=fe[Ju[0X02]];se=se+1;se=se+1;do Ju=Sm[se];end;se=se+0x1;(Ee)[6]=Ee[0X6][Ju[0X5]];do se=se+1;end;se=se+1;Ju=Sm[se];se=se+1;if Ee[0X006]then se=Ju[6];end;else Ee[3]=fe[Ju[0x2]];do Ju=Sm[se];end;se=se+0X001;do(Ee)[0X3]=Ee[0x3][Ju[0x0005]];end;Ju=Sm[se];se=se+1;if not Ee[0X003]then se=Ju[0X00006];end;end;end;end;else do if not(Du>=10)then if not(Du<8)then do if Du~=9 then Ee[3]=fe[Ju[0X2]];se=se+0X1;se=se+0X1;Ju=Sm[se];local aD=0X3;do se=se+0X1;end;(Ee)[4]=Ju[0X002];do se=se+1;end;(Ee)[aD]=Ee[aD](Ee[aD+1]);do Ke=aD;end;se=se+0X01;se=se+1;Ju=Sm[se];se=se+0X1;do if not Ee[3]then se=Ju[0X006];end;end;else(Ee)[0X00004]=fe[Ju[0X2]];do se=se+0X1;end;se=se+0x1;Ju=Sm[se];do se=se+1;end;Ee[4]=Ee[4][Ju[0X005]];Ju=Sm[se];se=se+0X01;do Ee[4]=Ee[0X004][Ju[0x005]];end;do Ju=Sm[se];end;se=se+1;do if Ju[0X2]<Ee[4]then se=Ju[7];end;end;end;end;else Ee[3]=fe[Ju[2]];se=se+0X1;se=se+1;Ju=Sm[se];do se=se+0X1;end;do Ee[3]=Ee[0X03][Ju[0x5]];end;se=se+1;se=se+1;Ju=Sm[se];se=se+1;if not(Ee[0X3])then else se=Ju[6];end;end;else if Du<12 then if Du~=11 then se=Ju[6];else local Mb=(Ju[7]);local Wb,ub,nb=Ee[Mb],Ee[Mb+1],(Ee[Mb+0X2]);Ee[Mb]=r(function()for p5=Wb,ub,nb do C(true,p5);end;end);do se=Ju[6];end;end;else if Du~=13 then(Ee)[3]=fe[Ju[0X2]];Ju=Sm[se];se=se+1;Ee[0x3]=Ee[0x3][Ju[0X5]];se=se+0X01;se=se+0X1;Ju=Sm[se];se=se+1;if not(Ee[0X3])then else se=Ju[0x6];end;else Ee[Ju[7]]={f({},1,Ju[0x06])};end;end;end;end;end;end;else do if Du<0X15 then do if not(Du<17)then if Du<19 then if Du~=0X000012 then local gE=Ju[7];local jE,EE=Ee[gE]();if not(jE)then else se=Ju[6];(Ee)[gE+3]=EE;end;else local sW=(bm[1]);Ee[4]=sW[0X1][sW[2]];do Ju=Sm[se];end;se=se+0X1;(Ee)[4]=Ee[4][Ju[5]];do se=se+0X1;end;local oW=(0x4);do Ee[0x05]=Ee[3];end;do se=se+1;end;sW=bm[0];do(Ee)[6]=sW[0x1][sW[2]];end;se=se+1;se=se+0X0001;Ju=Sm[se];local KW=(Zm[Ju[0x6]]);se=se+0X1;local YW=nil;local UW=(KW[3]);local MW=(#UW);do if MW>0 then YW={};do for WY=0X1,MW do local hY=(UW[WY]);if hY[1]~=0x0 then YW[WY-1]=bm[hY[0x2]];else do YW[WY-1]={Ee,hY[0x2]};end;end;end;end;M(Cm,YW);end;end;do Ee[0x7]=dH(KW,YW,fe);end;se=se+1;do Ke=oW+4-0x1;end;Ee[oW](f(Ee,oW+0X00001,Ke));Ke=oW-1;se=se+0X0001;do se=se+0X001;end;se=se+0X1;sW=bm[0X0];(Ee)[0X4]=sW[1][sW[2]];Ju=Sm[se];se=se+0X1;oW=4;local vW=(Ee[0X4]);(Ee)[oW+1]=vW;Ee[oW]=vW[Ju[5]];se=se+1;oW=0X4;Ee[oW](Ee[oW+0x1]);Ke=oW-0X001;Ju=Sm[se];do se=se+0X1;end;do se=Ju[0x006];end;end;else if Du~=20 then(Ee)[3]=fe[Ju[2]];local G4=(nil);se=se+0X1;do se=se+0X1;end;Ju=Sm[se];se=se+0X001;local a4=(Zm[Ju[6]]);local L4=a4[3];local w4=(#L4);if not(w4>0)then else G4={};do for iP=0X01,w4 do local zP=(L4[iP]);if zP[1]==0X0 then do G4[iP-0X00001]={Ee,zP[2]};end;else G4[iP-0x1]=bm[zP[0x002]];end;end;end;(M)(Cm,G4);end;(Ee)[0X04]=dH(a4,G4,fe);local P4=(3);se=se+0X1;Ee[P4](Ee[P4+0X01]);Ke=P4-1;do se=se+0x001;end;do se=se+1;end;do Ju=Sm[se];end;do se=se+1;end;do se=Ju[0x6];end;else(Ee)[Ju[0X7]]=Ee[Ju[6]]==Ju[0x005];end;end;else if Du<15 then Ee[5]=fe[Ju[0x002]];do Ju=Sm[se];end;se=se+1;(Ee)[0x5]=Ee[5][Ju[0x5]];Ju=Sm[se];se=se+0x1;do(Ee)[0X5]=Ee[5][Ju[5]];end;se=se+1;se=se+1;do Ju=Sm[se];end;se=se+1;do if not(Ju[2]<=Ee[5])then se=Ju[7];end;end;else if Du~=0x10 then Ee[Ju[7]]=Ee[Ju[0x6]]<Ee[Ju[1]];else Ee[3]=fe[Ju[0X2]];se=se+0X0001;se=se+1;Ju=Sm[se];se=se+0X1;(Ee)[4]=Ju[2];se=se+0X0001;(Ee)[0X05]=true;se=se+1;local Lx=(0X03);do(Ee)[Lx]=Ee[Lx](Ee[Lx+1],Ee[Lx+2]);end;Ke=Lx;se=se+0X1;do Ee[0X00002]=Ee[0x3];end;Ju=Sm[se];do se=se+0x1;end;Ee[0X03]=Ee[2]==Ju[0X5];Ju=Sm[se];se=se+0x1;if not(Ee[3])then else do se=Ju[6];end;end;end;end;end;end;else if not(Du>=25)then if not(Du>=23)then do if Du~=22 then Ee[0X05]=fe[Ju[2]];do Ju=Sm[se];end;se=se+1;Ee[0X005]=Ee[0X05][Ju[5]];se=se+0X1;se=se+1;Ju=Sm[se];se=se+0X001;if not Ee[0X05]then se=Ju[6];end;else local tS=Zm[Ju[0X6]];local rS=tS[3];local sS=nil;local bS=#rS;do if not(bS>0)then else do sS={};end;for HB=0X1,bS do local NB=(rS[HB]);if NB[1]==0x00 then sS[HB-1]={Ee,NB[2]};else(sS)[HB-1]=bm[NB[0X2]];end;end;M(Cm,sS);end;end;do(Ee)[Ju[7]]=dH(tS,sS,fe);end;end;end;else if Du==24 then local R_=(bm[0]);(Ee)[3]=R_[0X00001][R_[2]];local y_=(Ee[3]);do se=se+0X1;end;do se=se+1;end;Ju=Sm[se];se=se+0x1;local C_=(3);(Ee)[C_+0X00001]=y_;Ee[C_]=y_[Ju[5]];se=se+0x01;C_=3;(Ee[C_])(Ee[C_+1]);Ke=C_-1;do Ju=Sm[se];end;se=se+0X1;(Ee)[3]=fe[Ju[2]];Ju=Sm[se];se=se+1;Ee[4]=Ju[0X2];do se=se+1;end;C_=0X003;Ee[C_]=Ee[C_](Ee[C_+0x1]);Ke=C_;Ju=Sm[se];se=se+1;(Ee)[4]=fe[Ju[0X2]];Ju=Sm[se];se=se+0X1;Ee[0X4]=Ee[4][Ju[5]];se=se+0X1;se=se+1;Ju=Sm[se];do se=se+0x01;end;if not(Ee[0X004])then else se=Ju[6];end;else end;end;else if not(Du>=0x1b)then if Du~=26 then repeat local AY,ZY=Cm,Ee;if not(#AY>0X000)then else local HD=({});do for W_,l_ in I,AY do for OH,WH in I,l_ do if WH[1]==ZY and WH[0X2]>=0 then local U8=WH[0X2];if not HD[U8]then HD[U8]={ZY[U8]};end;(WH)[0x1]=HD[U8];WH[0x2]=0X1;end;end;end;end;end;until true;return;else if Ee[Ju[6]]~=Ju[0X5]then se=Ju[0X7];end;end;else if Du==0X01C then Ee[0X00000]=fe[Ju[2]];Ju=Sm[se];do se=se+0x1;end;do(Ee)[1]=fe[Ju[2]];end;do se=se+1;end;se=se+1;Ju=Sm[se];do se=se+0X1;end;(Ee)[2]=Ju[2];do Ju=Sm[se];end;do se=se+0X1;end;(Ee)[0X3]=fe[Ju[0X00002]];Ju=Sm[se];se=se+1;Ee[0X3]=Ee[0x3][Ju[5]];se=se+0X1;local tt,Lt=0X4,0X0000;if tt==0x0 then else do Ke=Lt+tt-0X1;end;end;local Dt,ot,It=nil,nil,(3);do if tt==1 then Dt,ot=eH(Ee[Lt]());else Dt,ot=eH(Ee[Lt](f(Ee,Lt+0x01,Ke)));end;end;if It==0X1 then do Ke=Lt-1;end;else do if It==0 then Dt=Dt+Lt-0X1;do Ke=Dt;end;else do Dt=Lt+It-0X2;end;Ke=Dt+1;end;end;local xo=(0);for rd=Lt,Dt do do xo=xo+0X0001;end;(Ee)[rd]=ot[xo];end;end;Ju=Sm[se];se=se+0X1;do if Ee[1]==Ju[0X5]then do se=Ju[0X0007];end;end;end;else(Ee)[3]=fe[Ju[2]];se=se+0X1;se=se+0X1;Ju=Sm[se];se=se+1;if not(Ee[0x3])then else se=Ju[0X6];end;end;end;end;end;end;end;end;end;end);if Je then if Le then if ye~=1 then return Ee[Me](f(Ee,Me+0x00001,Ke));else return Ee[Me]();end;elseif Me then return f(Ee,Me,ye);end;else if e(Le)~='\s\116ri\110\103'then(V)(Le,0);else do if p(Le,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if p(Le,"^\046\-\058\%\d\+: ")then V("Luraph Script:"..(Dm[se-0x1]or"\(\105n\116\ern\097\l\041")..": "..v(Le),0X00000);else V(Le,0X00000);end;end;end;end;else Km=function(...)local No=({});local go=(1);local zo=(K());local Fo={[1]=Xm,[2]=No};local qo,Ro=eH(...);qo=qo-1;local eo,Mo=(zo==g and Qm or zo),(0);for aN=0,qo do do if km>aN then(No)[aN]=Ro[aN+0x0001];else break;end;end;end;if not Lm then Ro=nil;elseif not(Um)then else do No[km]={n=qo>=km and qo-km+1 or 0,f(Ro,km+0X1,qo+1)};end;end;if eo~=zo then w(Km,eo);end;local Wo,Do,Eo,Go=o(function()do while true do local og=(Sm[go]);local fg=og[0X00004];go=go+1;if fg<0X0000F then if not(fg<7)then if fg>=0x00B then if not(fg<0Xd)then if fg==14 then local jW=bm[0X0];No[0X0]=jW[1][jW[0X2]];local QW=(0X0000);go=go+0x1;go=go+1;do og=Sm[go];end;go=go+0X1;local kW=(No[0X0]);do No[QW+0X1]=kW;end;(No)[QW]=kW[og[0X5]];go=go+1;QW=0;No[QW]=No[QW](No[QW+1]);Mo=QW;og=Sm[go];go=go+1;if not(not No[0x00])then else do go=og[6];end;end;else repeat local k2,V2=Cm,(No);if not(#k2>0X00)then else local NH={};for ZE,XE in I,k2 do for Mf,ff in I,XE do if not(ff[1]==V2 and ff[2]>=0)then else local jH=(ff[0X02]);if not(not NH[jH])then else(NH)[jH]={V2[jH]};end;ff[0x1]=NH[jH];do ff[2]=0X1;end;end;end;end;end;until true;return;end;else if fg~=12 then(No)[0X0]=eo[og[2]];local ab=(0x0);og=Sm[go];do go=go+0x00001;end;(No)[1]=og[0x002];go=go+1;No[ab]=No[ab](No[ab+1]);do Mo=ab;end;og=Sm[go];go=go+0X00001;if not No[0X0]then go=og[0x00006];end;else(No)[0]=eo[og[2]];go=go+0X1;do go=go+1;end;og=Sm[go];do go=go+0X1;end;(No)[0]=No[0X0][og[5]];og=Sm[go];go=go+0X01;if not(not No[0X00])then else go=og[0X00006];end;end;end;else do if fg>=9 then if fg~=10 then No[og[0X00007]]={f({},0X1,og[0X6])};else local rO=og[7];local CO,xO,eO=No[rO]();if CO then do No[rO+1]=xO;end;(No)[rO+2]=eO;go=og[6];end;end;else do if fg~=8 then(No)[0X0005]=No[0x0004][og[0X5]];do go=go+0X1;end;go=go+0X01;og=Sm[go];do go=go+1;end;if No[0X5]then go=og[6];end;else if No[og[0x006]]~=No[og[0X1]]then else go=og[7];end;end;end;end;end;end;else if fg<0X3 then if fg<1 then local Io=bm[0X0001];(No)[0X2]=Io[1][Io[0X00002]];og=Sm[go];go=go+0X00001;No[0X02]=No[2][og[5]];go=go+0X1;go=go+1;go=go+1;(No)[0x3]=No[1];go=go+1;Io=bm[0];(No)[4]=Io[0X1][Io[2]];do go=go+0X1;end;go=go+1;og=Sm[go];local to,Yo=0X2,(Zm[og[0X6]]);go=go+0X001;local Vo,Ko=Yo[3],nil;local Jo=#Vo;if Jo>0X0 then Ko={};do for hR=0X1,Jo do local jR=Vo[hR];if jR[1]==0 then do(Ko)[hR-1]={No,jR[2]};end;else(Ko)[hR-1]=bm[jR[2]];end;end;end;M(Cm,Ko);end;(No)[5]=dH(Yo,Ko,eo);go=go+1;do Mo=to+4-0X1;end;No[to](f(No,to+0X1,Mo));do Mo=to-1;end;do go=go+0X01;end;go=go+0x1;go=go+1;do Io=bm[0X0];end;do(No)[2]=Io[0X0001][Io[2]];end;local Zo=No[2];do og=Sm[go];end;go=go+1;do to=0X02;end;do No[to+0X001]=Zo;end;(No)[to]=Zo[og[5]];do go=go+1;end;to=0X2;(No[to])(No[to+0X1]);Mo=to-1;do go=go+1;end;go=go+0x1;og=Sm[go];do go=go+0X1;end;do go=og[6];end;else if fg~=0x2 then(No)[0]=eo[og[0X02]];og=Sm[go];go=go+0x1;No[0]=No[0X000][og[5]];local nh=(0);og=Sm[go];go=go+0X00001;do No[1]=og[2];end;go=go+0X001;(No)[nh]=No[nh](No[nh+0X1]);do Mo=nh;end;og=Sm[go];do go=go+1;end;if not(not No[0X00])then else go=og[0X0006];end;else do(No)[og[0X7]]=No[og[0x6]]/No[og[0X1]];end;end;end;else if fg>=0X00005 then do if fg~=6 then(No)[0X0]=eo[og[2]];go=go+1;go=go+0x1;do go=go+0X01;end;Mo=0;(No)[Mo]=No[Mo]();og=Sm[go];go=go+0X0001;if not(not(No[0]<og[5]))then else go=og[0x0007];end;else local uE=(Zm[og[0x6]]);local IE=uE[3];local gE,ZE=#IE,nil;if not(gE>0X0)then else do ZE={};end;do for N7=1,gE do local C7=(IE[N7]);if C7[1]==0X0 then ZE[N7-0X01]={No,C7[2]};else ZE[N7-1]=bm[C7[0X2]];end;end;end;M(Cm,ZE);end;No[og[0X07]]=dH(uE,ZE,eo);end;end;else if fg==4 then No[0]=eo[og[2]];go=go+0X1;Mo=0;No[Mo]=No[Mo]();og=Sm[go];go=go+1;if not(not(No[0]<og[5]))then else go=og[7];end;else local Z_=bm[0X0];(No)[0]=Z_[1][Z_[0X2]];og=Sm[go];go=go+0X01;local G_,g_=No[0X0],(0);No[g_+0X1]=G_;(No)[g_]=G_[og[5]];go=go+0x0001;do g_=0x00;end;(No[g_])(No[g_+0X001]);Mo=g_-0x1;do go=go+0X0001;end;do go=go+0X1;end;do go=go+1;end;repeat local DM,RM=Cm,(No);do if#DM>0 then local Lh=({});for wR,QR in I,DM do for bX,ZX in I,QR do do if ZX[0X1]==RM and ZX[0X2]>=0X00000 then local MW=(ZX[0X2]);do if not(not Lh[MW])then else do(Lh)[MW]={RM[MW]};end;end;end;do ZX[0X1]=Lh[MW];end;ZX[2]=0X1;end;end;end;end;end;end;until true;do return;end;end;end;end;end;else do if not(fg<0X017)then do if not(fg>=0X1b)then if fg>=0X19 then if fg==0X1a then do(No)[0x0]=eo[og[0X002]];end;do og=Sm[go];end;go=go+1;No[0X00]=No[0][og[5]];do og=Sm[go];end;do go=go+0x0001;end;if not No[0]then go=og[6];end;else local QI=(bm[0X1]);do No[2]=QI[0X00001][QI[0X02]];end;og=Sm[go];go=go+0X1;No[2]=No[2][og[0x5]];local LI=(0X02);go=go+1;do go=go+0X1;end;do go=go+0x001;end;No[3]=No[0X0001];go=go+1;do No[LI]=No[LI](No[LI+0X01]);end;Mo=LI;do go=go+0x1;end;do go=go+0X001;end;og=Sm[go];go=go+0x01;do if not(not No[2])then else do go=og[6];end;end;end;end;else if fg~=0x000018 then No[2]=eo[og[2]];og=Sm[go];do go=go+0X1;end;local aR=(2);do(No)[2]=No[0X00002][og[0X05]];end;go=go+0x1;do go=go+1;end;og=Sm[go];go=go+0X1;local MR=No[0X2];No[aR+1]=MR;do(No)[aR]=MR[og[0X5]];end;og=Sm[go];go=go+1;No[0X4]=og[0X00002];go=go+0X1;aR=2;do No[aR]=No[aR](No[aR+0X01],No[aR+2]);end;do Mo=aR;end;og=Sm[go];go=go+0X001;if not No[2]then go=og[0x006];end;else local n_,t_=bm[0X0],5;No[5]=n_[0X00001][n_[0X2]];og=Sm[go];go=go+1;local S_=(No[0X05]);No[t_+1]=S_;No[t_]=S_[og[5]];go=go+0X0001;t_=5;No[t_](No[t_+0X00001]);Mo=t_-0X001;go=go+0X1;go=go+1;og=Sm[go];go=go+0X1;No[0X05]=No[4][og[0X05]];go=go+0X0001;go=go+1;go=go+1;Mo=0X00005;No[Mo]();do Mo=Mo-1;end;og=Sm[go];do go=go+1;end;go=og[0X006];end;end;else do if not(fg>=0X1D)then if fg==0X001c then(No)[og[0x0007]]=og[0X0002];else(No)[0X00]=eo[og[2]];go=go+1;Mo=0X0;No[Mo]=No[Mo]();do og=Sm[go];end;go=go+1;if No[0x0]then do go=og[6];end;end;end;else if fg==0x0001e then No[og[0X007]]=eo[og[2]];else(No)[0]=eo[og[0X0002]];og=Sm[go];go=go+0x1;No[0X0000]=No[0][og[5]];og=Sm[go];do go=go+1;end;do if not(not No[0X0])then else go=og[0X06];end;end;end;end;end;end;end;else do if not(fg<19)then if not(fg>=21)then do if fg==0X0014 then go=og[6];else No[0x5]=No[4][og[5]];go=go+0x1;(No)[0X001]=No[5];og=Sm[go];do go=go+0X001;end;do if not No[1]then go=og[6];end;end;end;end;else if fg~=0x0016 then local jy=bm[0X0];No[2]=jy[1][jy[0x2]];do go=go+1;end;go=go+1;do og=Sm[go];end;local Ry=(0x2);do go=go+0X1;end;local Ey=No[2];No[Ry+0X1]=Ey;No[Ry]=Ey[og[0x05]];go=go+0x0001;Ry=0X0002;No[Ry](No[Ry+0X0001]);do Mo=Ry-0X1;end;go=go+1;go=go+0X001;og=Sm[go];do go=go+1;end;go=og[6];else do for vS=og[0X7],og[6]do do No[vS]=nil;end;end;end;end;end;else do if not(fg<0X11)then if fg~=18 then(No)[2]=eo[og[2]];local jI,NI=0X2,bm[0];go=go+1;go=go+0X1;og=Sm[go];go=go+1;No[3]=og[0x2];do go=go+0X1;end;(No)[jI]=No[jI](No[jI+1]);Mo=jI;og=Sm[go];do go=go+1;end;(eo)[og[2]]=No[2];do go=go+1;end;do(No)[2]=NI[0X1][NI[0x002]];end;go=go+1;go=go+0x1;og=Sm[go];go=go+1;jI=2;local UI=No[0X02];(No)[jI+0X1]=UI;(No)[jI]=UI[og[0X05]];do go=go+0x1;end;do jI=0x2;end;No[jI](No[jI+0X0001]);Mo=jI-1;do og=Sm[go];end;go=go+1;do go=og[0X6];end;else end;else do if fg==0X0010 then local xC=og[0X007];for Te=xC,xC+(og[0X6]-0X1)do(No)[Te]=Ro[km+(Te-xC)+0x1];end;else(No)[0]=eo[og[2]];go=go+1;go=go+0X1;go=go+0X1;local eu=0x03;No[0X01]={f({},1,3)};og=Sm[go];go=go+1;No[2]=og[0x2];og=Sm[go];do go=go+1;end;No[3]=og[0X002];og=Sm[go];go=go+0X1;local ou=(1);do(No)[4]=og[2];end;do go=go+0X1;end;local au=(0X001-0X1)*0x32;local ju=No[ou];do for ct=1,3 do ju[au+ct]=No[ou+ct];end;end;og=Sm[go];local lu=Zm[og[6]];go=go+1;local uu=nil;local hu=(lu[3]);local iu=(#hu);if not(iu>0X0)then else uu={};for pv=1,iu do local Hv=(hu[pv]);do if Hv[1]~=0 then do(uu)[pv-0X1]=bm[Hv[2]];end;else do(uu)[pv-1]={No,Hv[2]};end;end;end;end;M(Cm,uu);end;(No)[0X00002]=dH(lu,uu,eo);do go=go+0X0001;end;ou=0;local Ku=3;if eu~=0 then Mo=ou+eu-0X1;end;local su,vu=nil,(nil);if eu==0X1 then do su,vu=eH(No[ou]());end;else su,vu=eH(No[ou](f(No,ou+0x00001,Mo)));end;if Ku==0X0001 then do Mo=ou-1;end;else if Ku==0 then su=su+ou-0X0001;Mo=su;else su=ou+Ku-2;do Mo=su+1;end;end;local bE=(0);for mj=ou,su do bE=bE+0X00001;(No)[mj]=vu[bE];end;end;go=go+0X001;go=go+0x1;og=Sm[go];do go=go+0X1;end;(No)[0X00002]=eo[og[0x02]];go=go+1;do go=go+1;end;go=go+0X01;do No[3]=No[0];end;go=go+1;ou=2;eu=0X0002;Ku=0X4;if eu~=0 then Mo=ou+eu-1;end;do su,vu=nil;end;if eu==0X1 then su,vu=eH(No[ou]());else su,vu=eH(No[ou](f(No,ou+1,Mo)));end;do if Ku~=0X1 then do if Ku==0 then su=su+ou-0X1;do Mo=su;end;else su=ou+Ku-2;Mo=su+1;end;end;local Cq=(0X0);for CU=ou,su do Cq=Cq+0X1;do(No)[CU]=vu[Cq];end;end;else Mo=ou-1;end;end;og=Sm[go];go=go+0X1;ou=0X0002;local Eu=(r(function(...)(C)();for Is,zs in...do C(true,Is,zs);end;end));Eu(No[ou],No[ou+1],No[ou+0x2]);do Mo=ou;end;(No)[ou]=Eu;go=og[0X006];end;end;end;end;end;end;end;end;end;end;end;end);do if not(Wo)then if e(Do)~="string"then V(Do,0);else if not(p(Do,'\097t\116e\m\p\116\032t\111 \y\i\el\d \097\c\114\111\115\s\ \109\e\116a\109\101\116\104o\d\047\C%-c\097\l\l b\ou\110\100ar\y'))then else return coroutine.yield();end;if not(p(Do,"\^.\-\:%\d\+:\ "))then(V)(Do,0);else V("Luraph Script:"..(Dm[go-1]or'\040\i\110t\e\114na\l\)')..": "..v(Do),0);end;end;else if Do then if Go==0X1 then return No[Eo]();else return No[Eo](f(No,Eo+0X01,Mo));end;elseif Eo then return f(No,Eo,Go);end;end;end;end;end;else Km=function(...)local BT=0X0001;local gT=({});local ZT=(K());local JT={[2]=gT,[1]=Xm};local LT,PT=eH(...);LT=LT-1;for SX=0X00000,LT do do if not(km>SX)then break;else gT[SX]=PT[SX+1];end;end;end;if not Lm then do PT=nil;end;elseif Um then do(gT)[km]={n=LT>=km and LT-km+0X0001 or 0x0000,f(PT,km+1,LT+0X1)};end;end;local KT,XT=(ZT==g and Qm or ZT),(0X0);do if KT~=ZT then w(Km,KT);end;end;while true do local P8=(Sm[BT]);do BT=BT+0X1;end;local e8=P8[4];return(function(H,E,...)local K,x,G=H[0],H[1],H[2];if type(x)=="boolean"then G=x;x=nil;end;if not x then x=Root.Position;end;return(Vector3.new(K.X,not G and K.Y,K.Z)-Vector3.new(x.X,not G and x.Y,x.Z)).magnitude;end)(gT,bm,...);end;end;end;else if xm<122 then Km=function(...)local AX,PX=0X00001,{};local lX=(0X0);local mX=K();local DX,NX=eH(...);local eX=({[2]=PX,[1]=Xm});do DX=DX-0x1;end;for LU=0X00000,DX do if km>LU then(PX)[LU]=NX[LU+0X01];else break;end;end;local RX=((mX==g and Qm or mX));if not Lm then NX=nil;elseif Um then PX[km]={n=DX>=km and DX-km+1 or 0,f(NX,km+0X01,DX+1)};end;if RX==mX then else(w)(Km,RX);end;local uX,JX,hX,wX=o(function()do while true do local OQ=(Sm[AX]);local YQ=(OQ[4]);AX=AX+1;if not(YQ>=0X000b)then if YQ<0X05 then do if not(YQ<0X2)then if YQ>=3 then if YQ==0x0004 then local pb,nb=bm[1],0x0;PX[0X00000]=pb[0X1][pb[0x0002]];OQ=Sm[AX];AX=AX+0X01;local Ab=PX[0];(PX)[nb+0X1]=Ab;(PX)[nb]=Ab[OQ[0X0005]];AX=AX+1;nb=0;PX[nb]=PX[nb](PX[nb+0X01]);lX=nb;AX=AX+1;do AX=AX+0x1;end;do OQ=Sm[AX];end;do AX=AX+1;end;AX=OQ[6];else do repeat local FK,SK=Cm,PX;if not(#FK>0)then else local Gq={};for U3,A3 in I,FK do do for Gf,xf in I,A3 do if xf[0X1]==SK and xf[0X2]>=0X0 then local iq=(xf[2]);if not(not Gq[iq])then else(Gq)[iq]={SK[iq]};end;do(xf)[0X1]=Gq[iq];end;do(xf)[2]=1;end;end;end;end;end;end;until true;end;return;end;else local eV=bm[0];(PX)[0]=eV[1][eV[0x2]];OQ=Sm[AX];do AX=AX+0X1;end;do(PX)[0]=PX[0X0000][OQ[5]];end;do OQ=Sm[AX];end;do AX=AX+0X1;end;PX[0X0]=PX[0]<OQ[0X5];OQ=Sm[AX];do AX=AX+0X00001;end;AX=OQ[0x6];end;else if YQ~=0x1 then else(PX)[0]=RX[OQ[0x2]];OQ=Sm[AX];do AX=AX+0X1;end;(PX)[0X000]=PX[0][OQ[5]];AX=AX+0X1;do(PX)[0X0000]=not PX[0X000];end;OQ=Sm[AX];AX=AX+1;AX=OQ[6];end;end;end;else if YQ>=8 then if not(YQ>=9)then(PX)[OQ[7]]=O(PX[OQ[0X0006]],PX[OQ[1]]);else if YQ==0x0a then do if not(PX[OQ[6]]<PX[OQ[0X1]])then else AX=OQ[0X0007];end;end;else local QT=(Zm[OQ[6]]);local ET=(QT[3]);local RT=nil;local HT=#ET;do if HT>0 then RT={};for e0=0x01,HT do local c0=(ET[e0]);if c0[1]~=0 then(RT)[e0-0X1]=bm[c0[0X02]];else RT[e0-0X1]={PX,c0[0X2]};end;end;M(Cm,RT);end;end;(PX)[OQ[0x7]]=dH(QT,RT,RX);end;end;else if not(YQ<0X6)then if YQ~=7 then PX[OQ[7]]=W(PX[OQ[0x6]],PX[OQ[0x1]]);else do for m9=OQ[0X7],OQ[6]do(PX)[m9]=nil;end;end;end;else if not(not PX[OQ[0X7]])then else AX=OQ[6];end;end;end;end;else if YQ>=0X11 then if not(YQ>=0X14)then do if not(YQ<0X0012)then if YQ~=0X13 then AX=OQ[6];else if PX[OQ[6]]<=PX[OQ[1]]then do AX=OQ[0X0007];end;end;end;else do(PX)[OQ[0x0007]]={f({},0x0001,OQ[6])};end;end;end;else do if YQ>=21 then if YQ==0X16 then(eX)[OQ[6]]=PX[OQ[0X0007]];else(PX)[OQ[0X7]]=not PX[OQ[0X006]];end;else PX[OQ[7]]=RX[OQ[0X002]];end;end;end;else if not(YQ>=0XE)then if not(YQ<0x0C)then if YQ~=0X0000D then do if PX[OQ[7]]then AX=OQ[6];end;end;else local Nc=(OQ[0X007]);local jc=(OQ[1]-1)*50;local Ic=PX[Nc];for Qe=0X1,OQ[0X00006]do do Ic[jc+Qe]=PX[Nc+Qe];end;end;end;else do PX[OQ[7]]=OQ[0X2];end;end;else if YQ>=0x0000F then if YQ~=16 then local PV=(OQ[0X7]);local VV,bV=PX[PV]();if not(VV)then else for PG=1,OQ[1]do do(PX)[PV+PG]=bV[PG];end;end;AX=OQ[6];end;else local eC=bm[0X0];(PX)[0X0]=eC[1][eC[2]];AX=AX+1;AX=AX+1;do AX=AX+0X1;end;(PX)[0X0]=not PX[0];do OQ=Sm[AX];end;AX=AX+0X1;do if not(PX[0])then else do AX=OQ[6];end;end;end;end;else repeat local Ed,jd=Cm,PX;if#Ed>0x00000 then local Cg={};for v4,r4 in I,Ed do for qW,vW in I,r4 do if vW[1]==jd and vW[0X2]>=0x00 then local J7=(vW[2]);if not Cg[J7]then do(Cg)[J7]={jd[J7]};end;end;do(vW)[1]=Cg[J7];end;do(vW)[2]=0X1;end;end;end;end;end;until true;local Bc=OQ[7];do return false,Bc,Bc;end;end;end;end;end;end;end;end);if uX then if JX then if wX~=1 then return PX[hX](f(PX,hX+1,lX));else do return PX[hX]();end;end;elseif not(hX)then else return f(PX,hX,wX);end;else if e(JX)=='\115tr\105\110g'then if not(p(JX,"att\101\m\112t\ \116\111\032\121\ie\108\d\ acr\o\115\115\032\m\101\116am\101\116h\o\d\047\C\%\045\c\097\108l\ \098\ou\110\da\114\y"))then else do return coroutine.yield();end;end;if p(JX,"^\046\-\058\%\d\+\:\ ")then(V)("\L\117\114a\p\h\ \083c\114\i\pt\:"..(Dm[AX-0X1]or"\(\105\110tern\097\l\)")..'\: '..v(JX),0);else(V)(JX,0);end;else(V)(JX,0X0000);end;end;end;else do if xm~=123 then Km=function(...)local Xa,Ya=0X1,{};local ua=0;local ya=K();local Ga={[1]=Xm,[2]=Ya};local Ba,ba=eH(...);Ba=Ba-0X001;for zG=0,Ba do if km>zG then(Ya)[zG]=ba[zG+1];else break;end;end;local xa=((ya==g and Qm or ya));if not Lm then do ba=nil;end;elseif Um then(Ya)[km]={n=Ba>=km and Ba-km+1 or 0x0,f(ba,km+1,Ba+1)};end;if xa==ya then else w(Km,xa);end;local aa,da,ta,la=o(function()do while true do local Ht=Sm[Xa];local Yt=Ht[0X00004];Xa=Xa+0X00001;if Yt<8 then if Yt>=4 then if not(Yt<0X06)then if Yt==7 then else repeat local Vm,vm=Cm,Ya;if#Vm>0X00 then local nx={};do for XD,rD in I,Vm do for L5,K5 in I,rD do if not(K5[1]==vm and K5[2]>=0)then else local A8=(K5[0x002]);do if not nx[A8]then(nx)[A8]={vm[A8]};end;end;(K5)[1]=nx[A8];K5[2]=0X001;end;end;end;end;end;until true;local tA=(Ht[0X7]);return false,tA,tA;end;else if Yt==0X5 then repeat local OS,sS=Cm,Ya;if not(#OS>0X00)then else local kr=({});for Dd,Od in I,OS do for yI,AI in I,Od do if not(AI[0X001]==sS and AI[2]>=0X0000)then else local Cf=AI[0X002];if not(not kr[Cf])then else do kr[Cf]={sS[Cf]};end;end;(AI)[1]=kr[Cf];(AI)[2]=1;end;end;end;end;until true;return;else(Ya)[0X00000]=xa[Ht[0X2]];Ht=Sm[Xa];local fW=0x0;Xa=Xa+0X1;do Ya[0x00001]=Ht[2];end;Xa=Xa+0x1;(Ya)[fW]=Ya[fW](Ya[fW+1]);do ua=fW;end;Xa=Xa+0X00001;Xa=Xa+0X0001;Xa=Xa+1;Ya[0]=not Ya[0];Ht=Sm[Xa];Xa=Xa+0X1;Xa=Ht[0X6];end;end;else if Yt<2 then if Yt==1 then Ya[Ht[0X00007]]=Ht[0x00002];else if not Ya[Ht[7]]then Xa=Ht[0X006];end;end;else if Yt==3 then(Ya)[Ht[0x7]]=xa[Ht[2]];else(Ya)[Ht[7]]={f({},0X01,Ht[6])};end;end;end;else if not(Yt<0X0c)then if Yt<0XE then do if Yt==13 then Ya[0]=xa[Ht[0X02]];do Xa=Xa+0X01;end;Xa=Xa+1;Ht=Sm[Xa];Xa=Xa+1;(Ya)[0]=Ya[0][Ht[0X0005]];do Xa=Xa+1;end;do Xa=Xa+0X1;end;do Ht=Sm[Xa];end;Xa=Xa+0X001;if not Ya[0]then Xa=Ht[6];end;else Ya[Ht[7]]=true;end;end;else if Yt==0X000F then local O9=(nil);local D9=Zm[Ht[0X6]];local Q9=D9[0X3];local B9=(#Q9);if B9>0X0 then O9={};do for xY=0x1,B9 do local LY=Q9[xY];if LY[1]==0 then(O9)[xY-1]={Ya,LY[0X02]};else(O9)[xY-0x0001]=bm[LY[2]];end;end;end;(M)(Cm,O9);end;Ya[Ht[0X07]]=dH(D9,O9,xa);else Ya[Ht[7]]=O(Ya[Ht[6]],Ya[Ht[1]]);end;end;else if not(Yt>=10)then do if Yt~=0x9 then Ya[Ht[7]]=Ya[Ht[6]]<=Ya[Ht[1]];else Ya[Ht[0X7]]=Ya[Ht[6]]>Ya[Ht[1]];end;end;else if Yt==0XB then for ox=Ht[0X7],Ht[0X6]do do(Ya)[ox]=nil;end;end;else Xa=Ht[6];end;end;end;end;end;end;end);do if aa then if da then if la~=1 then return Ya[ta](f(Ya,ta+0X1,ua));else return Ya[ta]();end;elseif ta then do return f(Ya,ta,la);end;end;else if e(da)~="\115tr\105ng"then(V)(da,0X0);else if p(da,'a\116t\e\109\p\116\ t\o\ \yi\e\ld\ \097\c\114\111s\s\ m\101\116\097m\et\hod\047\C%\-\ca\108\l\ \098\o\117n\100\097\114\y')then return coroutine.yield();end;do if p(da,"^.-:%d+: ")then V("Luraph Script:"..(Dm[Xa-0X00001]or"(internal)")..':\ '..v(da),0);else(V)(da,0X0);end;end;end;end;end;end;else Km=function(...)local Xr,xr=0X1,({});local Nr={[1]=Xm,[2]=xr};local br=(K());local Dr=0X0;local hr=((br==g and Qm or br));local Er,ur=eH(...);Er=Er-0X1;do for kl=0,Er do do if km>kl then xr[kl]=ur[kl+1];else do break;end;end;end;end;end;do if not Lm then ur=nil;elseif not(Um)then else xr[km]={n=Er>=km and Er-km+1 or 0x00000,f(ur,km+1,Er+0X01)};end;end;do if hr~=br then(w)(Km,hr);end;end;local ir,yr,Ir,fr=o(function()while true do local S4=Sm[Xr];local O4=S4[4];Xr=Xr+1;if not(O4<9)then if O4<13 then if O4>=11 then do if O4==0X0c then do(xr)[S4[0X7]]={f({},0X1,S4[0X6])};end;else(xr)[S4[7]]=a(xr[S4[0x6]]);end;end;else if O4~=10 then do xr[S4[7]]=hr[S4[0x2]];end;else local Q9=(Zm[S4[6]]);local B9,W9=Q9[3],nil;local M9=(#B9);if not(M9>0)then else W9={};for fM=1,M9 do local SM=B9[fM];if SM[1]~=0 then(W9)[fM-1]=bm[SM[0x2]];else W9[fM-0X1]={xr,SM[0X2]};end;end;(M)(Cm,W9);end;xr[S4[7]]=dH(Q9,W9,hr);end;end;else if not(O4<15)then do if O4>=16 then if O4==0x0011 then Xr=S4[0X06];else end;else local T1=(S4[7]);local n1,G1=xr[T1]();if not(n1)then else for hn=0X0001,S4[0x01]do do xr[T1+hn]=G1[hn];end;end;Xr=S4[6];end;end;end;else if O4==14 then if not(xr[S4[6]]<=xr[S4[1]])then else Xr=S4[0x7];end;else do Nr[S4[0X00006]]=xr[S4[7]];end;end;end;end;else if not(O4>=0x0004)then if not(O4>=2)then do if O4==0X1 then do(xr)[S4[7]]=true;end;else xr[S4[7]][xr[S4[6]]]=xr[S4[1]];end;end;else if O4~=3 then local Zt=bm[0X0000];do xr[0]=Zt[1][Zt[0X2]];end;S4=Sm[Xr];Xr=Xr+0X1;local Tt=(0X0);(xr)[1]=S4[2];do Xr=Xr+0X1;end;repeat local Vz,iz=Cm,xr;do if#Vz>0 then local VX={};for k9,e9 in I,Vz do for G4,m4 in I,e9 do do if not(m4[0x1]==iz and m4[0X2]>=0)then else local Md=(m4[2]);do if not(not VX[Md])then else(VX)[Md]={iz[Md]};end;end;(m4)[0X0001]=VX[Md];do m4[0X2]=1;end;end;end;end;end;end;end;until true;Dr=Tt+1;return true,Tt,2;else do if not(xr[S4[0X006]]<=xr[S4[1]])then Xr=S4[0X007];end;end;end;end;else do if O4>=0X6 then if O4<0X7 then repeat local sM,wM=Cm,(xr);if not(#sM>0)then else local fQ={};for xl,cl in I,sM do for AG,bG in I,cl do if bG[0X1]==wM and bG[2]>=0X0000 then local zi=(bG[2]);if not fQ[zi]then fQ[zi]={wM[zi]};end;(bG)[1]=fQ[zi];bG[2]=0x1;end;end;end;end;until true;return false,S4[7],Dr;else if O4~=0x8 then(xr)[S4[7]]=S(xr[S4[6]],xr[S4[1]]);else do repeat local Rp,fp=Cm,(xr);if#Rp>0x0 then local Dz=({});do for wj,Jj in I,Rp do for Bv,Wv in I,Jj do if Wv[0X00001]==fp and Wv[0X0002]>=0X0 then local Ua=(Wv[0X2]);do if not Dz[Ua]then Dz[Ua]={fp[Ua]};end;end;do(Wv)[1]=Dz[Ua];end;(Wv)[0X2]=0X00001;end;end;end;end;end;until true;end;return;end;end;else if O4==5 then xr[S4[7]]=S4[2];else local Eg=S4[7];local wg=(S4[1]-0x1)*50;local kg=(xr[Eg]);for U5=0X01,S4[0X6]do(kg)[wg+U5]=xr[Eg+U5];end;end;end;end;end;end;end;end);do if not(ir)then do if e(yr)=="string"then if p(yr,'att\101\109pt\ t\o \121\i\e\108\d\ a\099r\o\115\115\ \m\101t\097\me\116h\111\d\047C\%\-\c\097\108\l\ \098\ou\110dar\y')then return coroutine.yield();end;do if not(p(yr,'\^\.\-:\%\100\+\:\ '))then V(yr,0X0);else V('\L\117ra\p\104\032\083\c\114\i\pt\:'..(Dm[Xr-1]or"(internal)")..": "..v(yr),0);end;end;else V(yr,0x0);end;end;else if yr then do if fr~=0x001 then do return xr[Ir](f(xr,Ir+1,Dr));end;else do return xr[Ir]();end;end;end;elseif Ir then do return f(xr,Ir,fr);end;end;end;end;end;end;end;end;end;else do if xm>=118 then if xm>=119 then if xm~=0x00078 then Km=function(...)local yl=0;local Kl,pl=1,{};local kl=K();local Il=(kl==g and Qm or kl);local Ul={[1]=Xm,[2]=pl};local Sl,Xl=eH(...);Sl=Sl-1;for wk=0x0,Sl do if not(km>wk)then break;else do(pl)[wk]=Xl[wk+0X1];end;end;end;if not Lm then Xl=nil;elseif Um then pl[km]={n=Sl>=km and Sl-km+0X00001 or 0,f(Xl,km+0X01,Sl+1)};end;if Il~=kl then(w)(Km,Il);end;local Vl,Ll,Gl,gl=o(function()while true do local RW=(Sm[Kl]);local aW=(RW[0X4]);Kl=Kl+0X1;if aW>=10 then if aW<0Xf then if not(aW>=0X0000c)then if aW~=0X00B then local JQ=RW[0X7];local WQ,pQ=pl[JQ]();do if not(WQ)then else do Kl=RW[0x6];end;do(pl)[JQ+0X3]=pQ;end;end;end;else local jT=(RW[0X7]);for LS=jT,jT+(RW[0X0006]-1)do do pl[LS]=Xl[km+(LS-jT)+1];end;end;end;else if not(aW<13)then do if aW==0xE then do pl[RW[7]]=pl[RW[6]]<pl[RW[1]];end;else local SN=(Zm[RW[0X6]]);local YN=SN[0x3];local eN=nil;local PN=(#YN);if PN>0 then do eN={};end;for n5=1,PN do local M5=(YN[n5]);if M5[0X1]~=0X0 then(eN)[n5-0X1]=bm[M5[0x0002]];else(eN)[n5-1]={pl,M5[2]};end;end;M(Cm,eN);end;pl[RW[7]]=dH(SN,eN,Il);end;end;else repeat local vs,ks=Cm,(pl);if not(#vs>0X0)then else local Pq=({});do for fx,ux in I,vs do for AF,RF in I,ux do if not(RF[1]==ks and RF[2]>=0)then else local g9=RF[0X2];if not Pq[g9]then(Pq)[g9]={ks[g9]};end;RF[0x001]=Pq[g9];do RF[2]=1;end;end;end;end;end;end;until true;return;end;end;else if aW<18 then if not(aW<16)then do if aW==0X00011 then pl[RW[7]]=pl[RW[6]]~=pl[RW[1]];else(pl)[RW[7]]=true;end;end;else repeat local q2,X2=Cm,pl;if not(#q2>0)then else local Jl=({});for TU,vU in I,q2 do do for mo,Ro in I,vU do if Ro[0X01]==X2 and Ro[2]>=0X00 then local Sv=Ro[0X2];if not Jl[Sv]then do Jl[Sv]={X2[Sv]};end;end;do(Ro)[0X1]=Jl[Sv];end;(Ro)[2]=0X001;end;end;end;end;end;until true;local cW=(RW[7]);do return false,cW,cW;end;end;else if not(aW<0X13)then if aW==20 then Kl=RW[6];else end;else local yw,Rw=RW[7],(RW[6]);if Rw==0X0000 then else yl=yw+Rw-0X1;end;local mw,ew,ow=nil,nil,RW[0X1];if Rw~=0X0001 then mw,ew=eH(pl[yw](f(pl,yw+0X1,yl)));else do mw,ew=eH(pl[yw]());end;end;if ow==0X001 then yl=yw-1;else do if ow==0 then mw=mw+yw-1;yl=mw;else do mw=yw+ow-0X0002;end;yl=mw+1;end;end;local Q9=(0);do for Y2=yw,mw do do Q9=Q9+1;end;pl[Y2]=ew[Q9];end;end;end;end;end;end;else if not(aW>=0x0005)then if not(aW<2)then if aW>=3 then do if aW==4 then(pl)[RW[0x07]]=pl[RW[0X06]]-pl[RW[0X1]];else(pl)[RW[7]]=not pl[RW[0X00006]];end;end;else do(pl)[0X000]=Il[RW[0X0002]];end;do Kl=Kl+0X001;end;yl=0x000;pl[yl]=pl[yl]();Kl=Kl+0X01;(pl)[0x00]=not pl[0X000];do RW=Sm[Kl];end;Kl=Kl+0X00001;do Kl=RW[6];end;end;else if aW==1 then pl[RW[7]]=Il[RW[0X02]];else if not(not pl[RW[7]])then else Kl=RW[0x6];end;end;end;else if aW<7 then do if aW==0X06 then(pl)[RW[0X0007]]={f({},1,RW[6])};else pl[RW[7]]=RW[0X2];end;end;else if not(aW>=8)then(pl)[0X0]=Il[RW[0X2]];RW=Sm[Kl];do Kl=Kl+1;end;(pl)[0]=pl[0][RW[5]];do RW=Sm[Kl];end;Kl=Kl+0X1;do if not pl[0]then Kl=RW[0X6];end;end;else do if aW~=9 then local E3=bm[0];pl[0]=E3[1][E3[2]];Kl=Kl+1;Kl=Kl+0x1;local M3=0;RW=Sm[Kl];Kl=Kl+1;local o3=(pl[0]);do(pl)[M3+0X001]=o3;end;pl[M3]=o3[RW[0x5]];do Kl=Kl+1;end;do M3=0x0;end;(pl)[M3]=pl[M3](pl[M3+1]);do yl=M3;end;Kl=Kl+0X1;Kl=Kl+0X01;RW=Sm[Kl];Kl=Kl+1;Kl=RW[0X6];else for v7=RW[7],RW[6]do do pl[v7]=nil;end;end;end;end;end;end;end;end;end;end);if Vl then do if Ll then if gl~=0X01 then return pl[Gl](f(pl,Gl+1,yl));else return pl[Gl]();end;elseif Gl then return f(pl,Gl,gl);end;end;else if e(Ll)~='\115\116r\105n\103'then V(Ll,0x00);else if p(Ll,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(Ll,"^.-:%d+: "))then V(Ll,0X0000);else V('\076\117\114\097\112h\ Scr\ip\116:'..(Dm[Kl-1]or"(internal)")..": "..v(Ll),0x0000);end;end;end;end;else Km=function(...)local cQ=1;local WQ={};local LQ=K();local pQ=((LQ==g and Qm or LQ));local JQ,ZQ=eH(...);local EQ={[2]=WQ,[1]=Xm};JQ=JQ-1;for aq=0X0000,JQ do if km>aq then WQ[aq]=ZQ[aq+0X00001];else do break;end;end;end;local OQ=(0X0);if not Lm then ZQ=nil;elseif Um then do WQ[km]={n=JQ>=km and JQ-km+1 or 0,f(ZQ,km+0X1,JQ+0X001)};end;end;if pQ==LQ then else(w)(Km,pQ);end;local yQ,BQ,GQ,xQ=o(function()while true do local L9=(Sm[cQ]);local z9=(L9[0X0004]);cQ=cQ+1;if not(z9>=0Xa)then if z9>=5 then if not(z9<0X07)then if not(z9>=0X8)then local WB=(bm[0]);WQ[0]=WB[1][WB[0X2]];cQ=cQ+1;(WQ)[0x0]=not WQ[0x000];L9=Sm[cQ];cQ=cQ+1;do if WQ[0]then do cQ=L9[6];end;end;end;else if z9~=9 then if WQ[L9[7]]then cQ=L9[0X00006];end;else local vP=bm[0X0];WQ[0X0]=vP[1][vP[2]];L9=Sm[cQ];cQ=cQ+0x1;do(WQ)[0x0]=WQ[0X00000][L9[5]];end;L9=Sm[cQ];cQ=cQ+0X0001;(WQ)[0]=WQ[0X0]<L9[5];L9=Sm[cQ];cQ=cQ+1;cQ=L9[0X006];end;end;else if z9~=6 then WQ[L9[7]]=L9[2];else local Jl,Vl=Zm[L9[0x6]],(nil);local Dl=Jl[0X0003];local Cl=(#Dl);do if not(Cl>0X0)then else Vl={};for lN=1,Cl do local iN=(Dl[lN]);if iN[1]~=0 then(Vl)[lN-0X1]=bm[iN[0X2]];else do(Vl)[lN-0X01]={WQ,iN[2]};end;end;end;(M)(Cm,Vl);end;end;(WQ)[L9[0X007]]=dH(Jl,Vl,pQ);end;end;else if z9<2 then if z9==1 then else(WQ)[L9[7]]={f({},0x1,L9[6])};end;else if not(z9<0x3)then if z9~=4 then do for Jr=L9[7],L9[0X6]do WQ[Jr]=nil;end;end;else cQ=L9[6];end;else do WQ[0]=pQ[L9[2]];end;local EB=1;cQ=cQ+1;do cQ=cQ+1;end;L9=Sm[cQ];cQ=cQ+0x1;(WQ)[0X00001]=pQ[L9[0x00002]];L9=Sm[cQ];local ZB=(0);cQ=cQ+0x1;do(WQ)[2]=pQ[L9[0X2]];end;do L9=Sm[cQ];end;cQ=cQ+0X01;WQ[2]=WQ[0x2][L9[0X5]];cQ=cQ+1;local hB=0X0002;if hB==0 then else OQ=EB+hB-1;end;local SB,fB=nil,(nil);if hB==0x1 then SB,fB=eH(WQ[EB]());else do SB,fB=eH(WQ[EB](f(WQ,EB+0X1,OQ)));end;end;if ZB==1 then OQ=EB-1;else if ZB~=0 then SB=EB+ZB-0x2;OQ=SB+1;else SB=SB+EB-1;OQ=SB;end;local GR=0X0;for Gb=EB,SB do GR=GR+0X1;WQ[Gb]=fB[GR];end;end;do cQ=cQ+1;end;EB=0X0;WQ[EB]=WQ[EB](f(WQ,EB+0X00001,OQ));OQ=EB;cQ=cQ+1;cQ=cQ+1;L9=Sm[cQ];cQ=cQ+0X1;WQ[0X0000]=WQ[0x00]~=L9[5];L9=Sm[cQ];cQ=cQ+0x01;cQ=L9[0X6];end;end;end;else if z9>=15 then if z9<0X000011 then if z9~=16 then if not(not WQ[L9[0X007]])then else cQ=L9[6];end;else pQ[L9[0X2]]=WQ[L9[0X7]];end;else if not(z9<18)then if z9~=0x13 then(WQ)[0X0]=pQ[L9[2]];do cQ=cQ+0X1;end;cQ=cQ+0X1;do L9=Sm[cQ];end;cQ=cQ+1;WQ[0]=WQ[0][L9[0X5]];cQ=cQ+0X1;cQ=cQ+1;cQ=cQ+1;(WQ)[0]=not WQ[0X0];L9=Sm[cQ];cQ=cQ+1;cQ=L9[0X00006];else local S6,p6=bm[1],0X0000;do WQ[0]=S6[1][S6[0x02]];end;L9=Sm[cQ];cQ=cQ+0X1;local A6=(WQ[0X0]);do(WQ)[p6+0X0001]=A6;end;WQ[p6]=A6[L9[0X00005]];do cQ=cQ+1;end;do p6=0X00000;end;WQ[p6]=WQ[p6](WQ[p6+1]);do OQ=p6;end;L9=Sm[cQ];cQ=cQ+0X1;cQ=L9[6];end;else do repeat local SG,RG=Cm,WQ;do if not(#SG>0)then else local VT={};for qM,tM in I,SG do do for Ya,pa in I,tM do if not(pa[1]==RG and pa[2]>=0X0)then else local lo=(pa[2]);if not VT[lo]then(VT)[lo]={RG[lo]};end;(pa)[0X1]=VT[lo];pa[2]=1;end;end;end;end;end;end;until true;end;return;end;end;else if not(z9<0Xc)then do if z9>=0XD then if z9==14 then repeat local dJ,UJ=Cm,WQ;do if#dJ>0 then local jT=({});for aY,BY in I,dJ do for j7,X7 in I,BY do if not(X7[0x1]==UJ and X7[0X02]>=0X0)then else local Gj=X7[0x2];if not jT[Gj]then(jT)[Gj]={UJ[Gj]};end;do X7[0X1]=jT[Gj];end;X7[0X2]=0x1;end;end;end;end;end;until true;local I5=L9[7];return false,I5,I5;else WQ[L9[7]]=WQ[L9[6]]-WQ[L9[0X1]];end;else(WQ)[L9[0X7]]=not WQ[L9[0X6]];end;end;else if z9~=11 then do EQ[L9[6]]=WQ[L9[0x7]];end;else WQ[L9[0x07]]=pQ[L9[0X2]];end;end;end;end;end;end);if yQ then if BQ then if xQ~=0x0001 then return WQ[GQ](f(WQ,GQ+0X1,OQ));else return WQ[GQ]();end;elseif not(GQ)then else return f(WQ,GQ,xQ);end;else do if e(BQ)=="\stri\110\103"then if p(BQ,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;if p(BQ,"^\.\-\:\%\100\+\: ")then(V)("Luraph Script:"..(Dm[cQ-0X0001]or"\040in\116\101\114\110\097l\041")..": "..v(BQ),0);else(V)(BQ,0);end;else V(BQ,0x00000);end;end;end;end;end;else Km=function(...)local wW,TW,LW=0x1,{},(0);local nW=({[2]=TW,[1]=Xm});local jW=K();local bW,lW=eH(...);bW=bW-0X1;local IW=(jW==g and Qm or jW);for yA=0,bW do if km>yA then(TW)[yA]=lW[yA+0X01];else break;end;end;do if not Lm then lW=nil;elseif Um then do TW[km]={n=bW>=km and bW-km+1 or 0,f(lW,km+0X1,bW+1)};end;end;end;if IW==jW then else(w)(Km,IW);end;while true do local Kc=Sm[wW];local nc=Kc[0X4];do wW=wW+0x00001;end;do return(function(C,V,...)for N,K in pairs(Backpack:GetChildren())do if K:IsA("Tool")and not K:FindFirstChildOfClass("RemoteFunction")then return true;end;end;end)(TW,bm,...);end;end;end;end;else if xm~=117 then Km=function(...)local AR={};local SR=0X0001;local cR=0;local ER=K();local FR=({[1]=Xm,[2]=AR});local tR=((ER==g and Qm or ER));local kR,nR=eH(...);kR=kR-0X1;do for ib=0x0,kR do if km>ib then AR[ib]=nR[ib+1];else break;end;end;end;if not Lm then do nR=nil;end;elseif not(Um)then else AR[km]={n=kR>=km and kR-km+0X1 or 0,f(nR,km+0x0001,kR+1)};end;if tR~=ER then w(Km,tR);end;local VR,gR,fR,qR=o(function()while true do local PG=Sm[SR];local gG=(PG[0X4]);SR=SR+1;if not(gG>=58)then do if not(gG>=0x1D)then if gG>=0Xe then do if not(gG>=21)then if not(gG>=17)then if gG>=0x000F then do if gG==16 then AR[9]=tR[PG[0X2]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+0X1;do AR[0X009]=AR[9][PG[5]];end;PG=Sm[SR];SR=SR+1;do SR=PG[6];end;else SR=PG[0X6];end;end;else do(AR)[0X7]=false;end;PG=Sm[SR];local GB=7;SR=SR+0X00001;tR[PG[2]]=AR[0X7];SR=SR+0x1;AR[0x7]=false;PG=Sm[SR];SR=SR+0X001;do tR[PG[0x2]]=AR[7];end;PG=Sm[SR];SR=SR+1;local UB=AR[1];AR[GB+1]=UB;(AR)[GB]=UB[PG[0X0005]];SR=SR+0X001;GB=0X7;(AR[GB])(AR[GB+0x1]);cR=GB-0X01;SR=SR+0x1;SR=SR+1;do SR=SR+1;end;repeat local mk,ik=Cm,(AR);if not(#mk>0X0)then else local F1={};for Bn,Wn in I,mk do for T9,g9 in I,Wn do do if not(g9[1]==ik and g9[0x2]>=3)then else local aA=g9[2];if not(not F1[aA])then else F1[aA]={ik[aA]};end;g9[1]=F1[aA];g9[2]=1;end;end;end;end;end;until true;do PG=Sm[SR];end;do SR=SR+1;end;SR=PG[6];end;else do if not(gG<0x13)then if gG==20 then do(AR)[0X4]=tR[PG[0X2]];end;SR=SR+0X1;SR=SR+1;PG=Sm[SR];do SR=SR+1;end;AR[4]=AR[0X4][PG[0X00005]];do PG=Sm[SR];end;SR=SR+0X01;if not(AR[0X4])then else SR=PG[6];end;else AR[2]=tR[PG[0x2]];PG=Sm[SR];SR=SR+0X1;do(AR)[2]=AR[0X2][PG[0X5]];end;do PG=Sm[SR];end;SR=SR+1;do if not(not AR[0X2])then else SR=PG[0x06];end;end;end;else if gG~=18 then AR[4]=tR[PG[2]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+0X1;local lf=0X0004;(AR)[5]=tR[PG[0X2]];SR=SR+0X1;SR=SR+0X1;PG=Sm[SR];SR=SR+1;AR[0x5]=AR[0X05][PG[5]];SR=SR+0X0001;SR=SR+1;PG=Sm[SR];SR=SR+0X1;(AR)[5]=AR[5][PG[5]];PG=Sm[SR];SR=SR+0x1;(AR)[5]=AR[0X0005][PG[5]];SR=SR+1;(AR)[lf]=AR[lf](AR[lf+1]);do cR=lf;end;SR=SR+0X1;SR=SR+1;PG=Sm[SR];do SR=SR+0X1;end;AR[0x5]=tR[PG[2]];SR=SR+0X00001;SR=SR+0X1;do PG=Sm[SR];end;do SR=SR+1;end;AR[6]=PG[0X2];PG=Sm[SR];SR=SR+1;AR[7]=PG[0X2];PG=Sm[SR];SR=SR+0X1;(AR)[0X8]=tR[PG[0x2]];SR=SR+0X0001;do SR=SR+0x01;end;PG=Sm[SR];SR=SR+1;AR[0X8]=AR[8][PG[0X005]];PG=Sm[SR];do SR=SR+1;end;(AR)[0X0008]=AR[0X8]==PG[5];PG=Sm[SR];SR=SR+0X1;if not(not AR[8])then else SR=PG[6];end;else(AR)[8]=AR[0X07];SR=SR+1;AR[0X4]=AR[8];PG=Sm[SR];SR=SR+1;do SR=PG[6];end;end;end;end;end;else if not(gG>=25)then do if not(gG>=0x017)then if gG~=0X016 then AR[0X3]=tR[PG[2]];do PG=Sm[SR];end;SR=SR+1;do(AR)[3]=AR[3][PG[0X5]];end;do PG=Sm[SR];end;SR=SR+0x1;do(AR)[3]=AR[0X0003][PG[5]];end;PG=Sm[SR];SR=SR+1;AR[0X00003]=AR[0X3][PG[0X5]];SR=SR+0X00001;do SR=SR+0X0001;end;do PG=Sm[SR];end;do SR=SR+0X1;end;AR[0X4]=tR[PG[2]];PG=Sm[SR];do SR=SR+1;end;(AR)[4]=AR[0x004][PG[0X5]];SR=SR+0X1;SR=SR+0X0001;PG=Sm[SR];do SR=SR+1;end;AR[5]=tR[PG[2]];PG=Sm[SR];SR=SR+1;(AR)[5]=AR[5][PG[5]];PG=Sm[SR];SR=SR+0X1;if AR[0X5]then SR=PG[6];end;else local Et=(PG[0X007]);AR[Et]=AR[Et](AR[Et+0X1]);cR=Et;end;else if gG~=0x00018 then(AR[PG[7]])[AR[PG[0X006]]]=AR[PG[0X0001]];else(AR)[7]=tR[PG[2]];do SR=SR+0X001;end;SR=SR+1;SR=SR+1;cR=7;(AR)[cR]=AR[cR]();SR=SR+0X1;do SR=SR+1;end;PG=Sm[SR];SR=SR+1;if not(AR[0X007])then else SR=PG[6];end;end;end;end;else if gG<0X0001B then if gG~=26 then(AR)[5]=tR[PG[2]];PG=Sm[SR];SR=SR+1;local Oy=0X005;(AR)[6]=PG[2];PG=Sm[SR];SR=SR+0X00001;AR[7]=AR[4][PG[5]];SR=SR+1;(AR[Oy])(AR[Oy+1],AR[Oy+0X0002]);cR=Oy-0X00001;SR=SR+0X00001;SR=SR+1;do PG=Sm[SR];end;do SR=SR+0X1;end;SR=PG[0x006];else do AR[6]=tR[PG[0X2]];end;SR=SR+1;SR=SR+1;PG=Sm[SR];do SR=SR+1;end;AR[0X0005][PG[2]]=AR[0x6];PG=Sm[SR];SR=SR+1;SR=PG[0X06];end;else if gG~=0X1C then(AR)[0X04]=tR[PG[0X2]];SR=SR+1;SR=SR+0x1;PG=Sm[SR];SR=SR+0X01;AR[5]=PG[2];local aj=0x0004;PG=Sm[SR];SR=SR+0x1;AR[0X6]=PG[2];PG=Sm[SR];SR=SR+1;AR[0x7]=PG[0X2];do SR=SR+0X001;end;cR=aj+4-1;do AR[aj]=AR[aj](f(AR,aj+1,cR));end;cR=aj;do SR=SR+0x0001;end;AR[0x3]=AR[4];PG=Sm[SR];do SR=SR+0X001;end;do SR=PG[0X6];end;else do(AR)[PG[7]]={f({},1,PG[6])};end;end;end;end;end;end;else if not(gG>=7)then if gG<3 then if gG>=0X1 then if gG==2 then(AR)[0x7]=AR[6][PG[5]];PG=Sm[SR];local mm=0X0007;SR=SR+0X1;local im=AR[7];AR[mm+1]=im;do(AR)[mm]=im[PG[0X5]];end;PG=Sm[SR];do SR=SR+0X00001;end;AR[0X9]=PG[2];SR=SR+1;do mm=0X07;end;(AR)[mm]=AR[mm](AR[mm+1],AR[mm+0x2]);cR=mm;do SR=SR+1;end;SR=SR+0x1;PG=Sm[SR];SR=SR+1;if not(not AR[7])then else SR=PG[6];end;else do(AR)[0x4]=tR[PG[0X002]];end;SR=SR+0X1;cR=4;AR[cR]=AR[cR]();PG=Sm[SR];do SR=SR+1;end;if not(AR[4])then else do SR=PG[6];end;end;end;else(AR)[2]=tR[PG[2]];do SR=SR+1;end;SR=SR+1;PG=Sm[SR];do SR=SR+1;end;(AR)[2]=AR[2][PG[5]];PG=Sm[SR];SR=SR+1;AR[2]=AR[0x0002][PG[5]];PG=Sm[SR];SR=SR+1;if not(AR[0x0002]<PG[0X5])then SR=PG[7];end;end;else if not(gG>=5)then if gG~=0X4 then AR[0X003]=tR[PG[2]];SR=SR+1;SR=SR+0x1;PG=Sm[SR];do SR=SR+0X1;end;(AR)[0x3]=AR[3][PG[5]];SR=SR+0x01;SR=SR+1;PG=Sm[SR];SR=SR+1;if not(AR[0X003])then else SR=PG[6];end;else AR[0x2]=tR[PG[0X2]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+0x1;(AR)[2]=AR[2][PG[0X00005]];PG=Sm[SR];SR=SR+1;if not AR[2]then SR=PG[6];end;end;else if gG~=0x6 then AR[0x5]=tR[PG[0X2]];SR=SR+1;SR=SR+1;SR=SR+0X1;cR=0X5;(AR)[cR]=AR[cR]();PG=Sm[SR];do SR=SR+0X1;end;do if AR[0x5]then do SR=PG[0X06];end;end;end;else do AR[0X00004]=tR[PG[0X2]];end;PG=Sm[SR];SR=SR+0x01;AR[4]=AR[4][PG[5]];do SR=SR+0X001;end;do SR=SR+1;end;PG=Sm[SR];SR=SR+0x1;do(AR)[4]=AR[4][PG[5]];end;do PG=Sm[SR];end;do SR=SR+1;end;do if not(AR[4]<PG[5])then SR=PG[0X7];end;end;end;end;end;else if gG>=0Xa then do if not(gG>=12)then if gG==0XB then local rZ=(AR[1]);local IZ=(0x004);(AR)[IZ+1]=rZ;(AR)[IZ]=rZ[PG[0x05]];do SR=SR+0X0001;end;do IZ=0X4;end;AR[IZ](AR[IZ+1]);cR=IZ-0X0001;do SR=SR+0X1;end;SR=SR+0X0001;do PG=Sm[SR];end;do SR=SR+0X1;end;do SR=PG[0X6];end;else do AR[0X3]=tR[PG[2]];end;do SR=SR+1;end;SR=SR+1;PG=Sm[SR];do SR=SR+0x00001;end;if not(AR[3])then else do SR=PG[0X6];end;end;end;else if gG~=13 then(AR)[6]=tR[PG[2]];PG=Sm[SR];SR=SR+1;(AR)[7]=tR[PG[0X00002]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+1;local DR=0X6;AR[7]=AR[7][PG[0x00005]];SR=SR+1;SR=SR+1;SR=SR+0X1;(AR)[DR]=AR[DR](AR[DR+1]);do cR=DR;end;SR=SR+1;do SR=SR+1;end;PG=Sm[SR];do SR=SR+0x00001;end;SR=PG[6];else(AR)[0x2]=true;local AY=(2);PG=Sm[SR];SR=SR+1;do(tR)[PG[0X0002]]=AR[2];end;PG=Sm[SR];SR=SR+1;AR[2]=tR[PG[0x2]];do PG=Sm[SR];end;SR=SR+0X0001;local JY=AR[2];(AR)[AY+1]=JY;(AR)[AY]=JY[PG[0X5]];do PG=Sm[SR];end;SR=SR+1;AR[0X4]=PG[2];SR=SR+0X01;AY=0X2;AR[AY](AR[AY+0X0001],AR[AY+2]);cR=AY-0X1;do PG=Sm[SR];end;SR=SR+0X1;SR=PG[0X6];end;end;end;else do if not(gG>=0x8)then local bj,Pj=0X06,AR[5];do AR[bj+1]=Pj;end;(AR)[bj]=Pj[PG[5]];PG=Sm[SR];SR=SR+0X0001;(AR)[8]=PG[2];SR=SR+0X001;bj=6;AR[bj]=AR[bj](AR[bj+1],AR[bj+2]);cR=bj;PG=Sm[SR];SR=SR+0X1;do if not(not AR[6])then else SR=PG[6];end;end;else do if gG==0X0009 then AR[4]=tR[PG[0X002]];SR=SR+1;cR=0x4;do AR[cR]=AR[cR]();end;SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+1;do if not(AR[4])then else SR=PG[0X6];end;end;else AR[3]=tR[PG[0X002]];PG=Sm[SR];local Rb=(0X3);SR=SR+1;(AR)[0x04]=PG[2];SR=SR+1;AR[Rb]=AR[Rb](AR[Rb+1]);cR=Rb;SR=SR+0X001;do AR[4]={};end;PG=Sm[SR];SR=SR+1;(AR)[5]=PG[2]/PG[0X5];PG=Sm[SR];do SR=SR+0X1;end;AR[4][PG[0X02]]=AR[0X005];PG=Sm[SR];do SR=SR+1;end;(AR)[5]=tR[PG[2]];SR=SR+0X001;do SR=SR+0x0001;end;SR=SR+1;AR[0x6]=AR[3];PG=Sm[SR];do SR=SR+1;end;do if not(AR[6])then else do SR=PG[0x6];end;end;end;end;end;end;end;end;end;end;else if not(gG<43)then if gG<0X032 then if not(gG>=46)then if gG>=0X2C then do if gG==0x00002d then AR[7]=tR[PG[0X002]];PG=Sm[SR];SR=SR+1;(AR)[0X7]=AR[7][PG[5]];PG=Sm[SR];local K8=AR[0X7];SR=SR+1;local Z8=7;AR[Z8+1]=K8;(AR)[Z8]=K8[PG[0X05]];PG=Sm[SR];SR=SR+0X1;(AR)[0x009]=PG[2];PG=Sm[SR];SR=SR+1;AR[10]=PG[0X2];do SR=SR+0X001;end;do Z8=7;end;cR=Z8+4-0X1;(AR[Z8])(f(AR,Z8+0x1,cR));cR=Z8-0X1;PG=Sm[SR];SR=SR+0X01;do SR=PG[6];end;else(AR)[4]=tR[PG[0X2]];PG=Sm[SR];SR=SR+0x01;AR[0X05]=PG[0X2];SR=SR+0X00001;local Wg=(4);AR[Wg](AR[Wg+0X01]);cR=Wg-1;SR=SR+0X0001;SR=SR+0x1;do PG=Sm[SR];end;SR=SR+0X0001;AR[0X4]=tR[PG[2]];SR=SR+0X1;SR=SR+1;PG=Sm[SR];SR=SR+1;if not(not AR[4])then else do SR=PG[0x06];end;end;end;end;else AR[PG[0X7]]=AR[PG[6]][PG[5]];end;else if not(gG>=48)then do if gG~=0x002F then AR[PG[7]]=AR[PG[6]];else repeat local PT,MT=Cm,(AR);if not(#PT>0)then else local hN={};for pz,Qz in I,PT do for Yd,Ad in I,Qz do do if not(Ad[0x00001]==MT and Ad[2]>=0)then else local ae=(Ad[0X2]);if not(not hN[ae])then else(hN)[ae]={MT[ae]};end;(Ad)[1]=hN[ae];(Ad)[0X2]=1;end;end;end;end;end;until true;return;end;end;else do if gG~=49 then do if not(AR[PG[0X00006]]<AR[PG[1]])then SR=PG[0X007];end;end;else AR[0X0006]=PG[2];PG=Sm[SR];do SR=SR+0X1;end;(AR)[0X07]=PG[2]/PG[0x0005];SR=SR+1;local pZ=0X4;do cR=pZ+4-0X0001;end;(AR)[pZ]=AR[pZ](f(AR,pZ+1,cR));do cR=pZ;end;PG=Sm[SR];SR=SR+0X01;if not(AR[3]<AR[0X004])then SR=PG[0X7];end;end;end;end;end;else do if gG>=54 then if not(gG<56)then if gG~=0X39 then(AR)[0X4]=false;PG=Sm[SR];do SR=SR+0X1;end;do tR[PG[0X0002]]=AR[4];end;PG=Sm[SR];SR=SR+0x0001;do AR[4]=tR[PG[0x2]];end;do SR=SR+0X001;end;SR=SR+0x1;do SR=SR+1;end;cR=4;AR[cR]=AR[cR]();do PG=Sm[SR];end;SR=SR+0x1;if not(not AR[0x04])then else SR=PG[0x00006];end;else AR[PG[0X7]]={};end;else if gG==0X37 then do AR[0X3]=tR[PG[2]];end;SR=SR+0x1;cR=0X00003;AR[cR]=AR[cR]();SR=SR+1;SR=SR+0X1;PG=Sm[SR];do SR=SR+0X1;end;if AR[3]then do SR=PG[0X6];end;end;else local Fp=AR[1];local Mp=(0X4);AR[Mp+0X01]=Fp;do AR[Mp]=Fp[PG[0X5]];end;SR=SR+1;(AR)[0X6]=true;do SR=SR+1;end;Mp=4;(AR[Mp])(AR[Mp+1],AR[Mp+0X2]);do cR=Mp-0X0001;end;PG=Sm[SR];SR=SR+0X01;do(AR)[4]=tR[PG[2]];end;SR=SR+0X1;do SR=SR+1;end;do PG=Sm[SR];end;SR=SR+1;(AR)[0x00005]=tR[PG[0x002]];PG=Sm[SR];SR=SR+1;(AR)[0X05]=AR[0X5][PG[5]];SR=SR+1;SR=SR+1;PG=Sm[SR];do SR=SR+0X01;end;do Mp=0x5;end;Fp=AR[5];local Bp=nil;AR[Mp+1]=Fp;do(AR)[Mp]=Fp[PG[0X00005]];end;do PG=Sm[SR];end;SR=SR+0X1;AR[0X00007]=PG[0X002];SR=SR+1;(AR)[8]=true;SR=SR+1;Mp=0X0005;cR=Mp+0X4-1;AR[Mp]=AR[Mp](f(AR,Mp+0X00001,cR));cR=Mp;PG=Sm[SR];SR=SR+1;(AR)[0X0005]=AR[5][PG[0X5]];PG=Sm[SR];SR=SR+0X00001;AR[5]=AR[5][PG[0X5]];PG=Sm[SR];SR=SR+0X1;AR[0X005]=AR[0x5][PG[0X05]];do SR=SR+1;end;SR=SR+1;SR=SR+1;Mp=4;AR[Mp](AR[Mp+1]);cR=Mp-1;PG=Sm[SR];SR=SR+1;(AR)[0x0004]=tR[PG[0X2]];do PG=Sm[SR];end;do SR=SR+1;end;Mp=0x4;Fp=AR[0X0004];(AR)[Mp+1]=Fp;(AR)[Mp]=Fp[PG[5]];PG=Sm[SR];SR=SR+0X1;AR[0X6]=PG[0x2];SR=SR+0X1;Mp=4;(AR)[Mp]=AR[Mp](AR[Mp+0x01],AR[Mp+0X2]);cR=Mp;SR=SR+0X001;SR=SR+1;PG=Sm[SR];do SR=SR+1;end;Mp=4;Fp=AR[0x04];AR[Mp+1]=Fp;AR[Mp]=Fp[PG[0X5]];SR=SR+1;Mp=4;do AR[Mp]=AR[Mp](AR[Mp+0X1]);end;do cR=Mp;end;SR=SR+1;AR[0x5]=AR[4];SR=SR+0X01;(AR)[0x000]=AR[0X5];do SR=SR+1;end;AR[5]=true;do PG=Sm[SR];end;SR=SR+1;do tR[PG[0X00002]]=AR[5];end;PG=Sm[SR];do SR=SR+0x1;end;do(AR)[0X05]=tR[PG[0X2]];end;do SR=SR+0X1;end;SR=SR+0X1;PG=Sm[SR];SR=SR+1;(AR)[5]=AR[5][PG[5]];do SR=SR+1;end;do SR=SR+0x1;end;do PG=Sm[SR];end;SR=SR+1;AR[0X6]=PG[2];PG=Sm[SR];SR=SR+0X01;local sp=(Zm[PG[0X006]]);local hp=sp[3];local Rp=(#hp);if not(Rp>0)then else Bp={};for tQ=0X1,Rp do local lQ=hp[tQ];if lQ[1]~=0 then Bp[tQ-0X1]=bm[lQ[0X2]];else(Bp)[tQ-0X01]={AR,lQ[2]};end;end;(M)(Cm,Bp);end;AR[7]=dH(sp,Bp,tR);SR=SR+0X01;do Mp=5;end;AR[Mp](AR[Mp+1],AR[Mp+2]);cR=Mp-1;do SR=SR+1;end;repeat local rv,Jv=Cm,AR;if not(#rv>0x00)then else local Vp={};for OQ,GQ in I,rv do for cU,EU in I,GQ do if not(EU[0X1]==Jv and EU[0X2]>=4)then else local yx=EU[0x00002];do if not(not Vp[yx])then else Vp[yx]={Jv[yx]};end;end;EU[0X1]=Vp[yx];(EU)[2]=0X1;end;end;end;end;until true;PG=Sm[SR];SR=SR+0X1;do SR=PG[0X06];end;end;end;else do if gG>=52 then if gG~=53 then(AR)[0X3]=tR[PG[2]];local am=AR[3];do PG=Sm[SR];end;SR=SR+0X1;local Rm=3;do(AR)[Rm+1]=am;end;AR[Rm]=am[PG[0x5]];PG=Sm[SR];SR=SR+1;do AR[5]=PG[0x2];end;SR=SR+1;Rm=3;(AR)[Rm]=AR[Rm](AR[Rm+1],AR[Rm+2]);do cR=Rm;end;PG=Sm[SR];SR=SR+0X0001;if not(AR[3])then else SR=PG[6];end;else AR[10]=AR[0X0007][PG[5]];do SR=SR+1;end;SR=SR+0X0001;PG=Sm[SR];SR=SR+1;AR[11]=AR[4][PG[0x5]];SR=SR+0X1;SR=SR+0x1;PG=Sm[SR];SR=SR+0X1;if not(not(AR[10]<AR[11]))then else SR=PG[0X7];end;end;else if gG==0X00033 then local Lf=0X04;local Zf=(AR[1]);AR[Lf+0X0001]=Zf;do(AR)[Lf]=Zf[PG[0X5]];end;SR=SR+0X1;Lf=0X4;do(AR)[Lf]=AR[Lf](AR[Lf+1]);end;do cR=Lf;end;do PG=Sm[SR];end;SR=SR+0X00001;if not AR[4]then SR=PG[6];end;else(AR)[8]=tR[PG[2]];PG=Sm[SR];SR=SR+0x001;AR[8]=AR[8][PG[0x05]];SR=SR+1;do SR=SR+1;end;PG=Sm[SR];SR=SR+0X1;local BZ=0X08;AR[9]=tR[PG[2]];SR=SR+1;do(AR)[10]=AR[0X0004];end;SR=SR+0x01;AR[BZ]=AR[BZ](AR[BZ+0X1],AR[BZ+0X2]);cR=BZ;SR=SR+1;SR=SR+1;PG=Sm[SR];do SR=SR+0X1;end;SR=PG[0X00006];end;end;end;end;end;end;else if gG>=0X24 then do if not(gG<0X27)then if not(gG>=41)then do if gG~=0X28 then do AR[0X3]=tR[PG[2]];end;SR=SR+0X0001;(AR)[0X4]=AR[1];local P5=(3);SR=SR+0X1;(AR)[P5]=AR[P5](AR[P5+0X001]);cR=P5;PG=Sm[SR];SR=SR+0x1;if AR[0X3]then do SR=PG[0X6];end;end;else AR[0x4]=tR[PG[0X0002]];SR=SR+0x0001;SR=SR+1;do PG=Sm[SR];end;SR=SR+0X1;AR[4]=AR[4][PG[0X5]];PG=Sm[SR];SR=SR+0X1;AR[0x4]=AR[0X4][PG[5]];do PG=Sm[SR];end;SR=SR+1;if not(not(AR[0X00004]<PG[5]))then else SR=PG[7];end;end;end;else do if gG~=42 then(AR)[0X00004]=tR[PG[0X0002]];do SR=SR+1;end;cR=0X4;AR[cR]=AR[cR]();do SR=SR+0X01;end;SR=SR+0x00001;SR=SR+1;AR[3]=AR[4];PG=Sm[SR];local BF=(0x4);SR=SR+1;local yF=AR[0X01];AR[BF+1]=yF;AR[BF]=yF[PG[5]];SR=SR+1;do BF=0X4;end;(AR[BF])(AR[BF+1]);do cR=BF-1;end;do SR=SR+1;end;SR=SR+0X00001;PG=Sm[SR];do SR=SR+0X1;end;AR[4]=tR[PG[0X2]];SR=SR+0x1;do SR=SR+0x1;end;do PG=Sm[SR];end;SR=SR+1;(AR)[0x4]=AR[0X04][PG[0X05]];do SR=SR+1;end;SR=SR+1;do PG=Sm[SR];end;do SR=SR+1;end;do AR[5]=PG[2];end;SR=SR+0x1;BF=0X4;AR[BF](AR[BF+0x1]);do cR=BF-0X01;end;SR=SR+1;SR=SR+0X1;PG=Sm[SR];do SR=SR+0x001;end;do(AR)[0X4]=AR[3][PG[0x5]];end;do SR=SR+0x0001;end;SR=SR+0x1;PG=Sm[SR];do SR=SR+0X1;end;do if not(AR[4])then else SR=PG[6];end;end;else AR[PG[0X0007]]=tR[PG[0X2]];end;end;end;else if gG>=37 then do if gG==0X26 then local mt=(0X05);cR=mt+0X0004-1;do(AR)[mt]=AR[mt](f(AR,mt+1,cR));end;cR=mt;do SR=SR+1;end;(AR)[0X3]=AR[5];PG=Sm[SR];do SR=SR+0x1;end;SR=PG[6];else AR[0X008]=tR[PG[0X2]];PG=Sm[SR];do SR=SR+0X1;end;do(AR)[8]=AR[8][PG[0X5]];end;PG=Sm[SR];SR=SR+1;AR[8]=AR[8][PG[5]];SR=SR+0X001;SR=SR+1;PG=Sm[SR];SR=SR+1;(AR)[0X08]=AR[0X8][PG[0X0005]];SR=SR+1;do SR=SR+0X01;end;PG=Sm[SR];SR=SR+1;AR[8]=AR[8]~=PG[5];do PG=Sm[SR];end;SR=SR+1;SR=PG[6];end;end;else(AR)[PG[0X007]]=PG[0x002];end;end;end;else do if not(gG<32)then if gG<0x22 then if gG==0X21 then do AR[0X8]=tR[PG[2]];end;do SR=SR+1;end;SR=SR+1;PG=Sm[SR];do SR=SR+1;end;do AR[0X9]=tR[PG[0X2]];end;SR=SR+0x001;do SR=SR+1;end;PG=Sm[SR];do SR=SR+0x1;end;AR[0X9]=AR[0X9][PG[5]];SR=SR+0X1;SR=SR+0X1;PG=Sm[SR];SR=SR+0X1;AR[0X9]=AR[0x9]~=PG[5];PG=Sm[SR];SR=SR+0X1;do if not AR[0X9]then SR=PG[0X6];end;end;else(AR)[0x03]=tR[PG[0X2]];do PG=Sm[SR];end;SR=SR+0X001;(AR)[3]=AR[3][PG[5]];PG=Sm[SR];SR=SR+0X1;if AR[3]then SR=PG[6];end;end;else if gG~=0X23 then(AR)[0X4]=tR[PG[2]];SR=SR+0x1;SR=SR+0x1;SR=SR+0X1;cR=4;AR[cR]=AR[cR]();SR=SR+1;SR=SR+1;PG=Sm[SR];do SR=SR+0X1;end;if AR[4]then do SR=PG[6];end;end;else do AR[0X3]=tR[PG[0X2]];end;local Pv=(3);do PG=Sm[SR];end;SR=SR+0X00001;(AR)[0X4]=PG[0X00002];SR=SR+1;AR[Pv](AR[Pv+0x00001]);cR=Pv-1;do SR=SR+0x1;end;do AR[0X00003]=nil;end;PG=Sm[SR];SR=SR+1;AR[0X0004]=tR[PG[2]];PG=Sm[SR];do SR=SR+0X1;end;if not AR[0X004]then SR=PG[0X6];end;end;end;else if not(gG>=0x1e)then AR[0x4]=tR[PG[0X2]];SR=SR+0X001;SR=SR+0X1;PG=Sm[SR];do SR=SR+1;end;do(AR)[0x004]=AR[4][PG[5]];end;PG=Sm[SR];do SR=SR+0X1;end;do(AR)[4]=AR[4][PG[0X005]];end;PG=Sm[SR];SR=SR+1;do AR[4]=AR[0X4][PG[5]];end;do SR=SR+1;end;SR=SR+1;do PG=Sm[SR];end;do SR=SR+1;end;if AR[4]==PG[0x5]then do SR=PG[7];end;end;else do if gG~=0X1F then AR[0X00002]=tR[PG[2]];SR=SR+0x0001;do SR=SR+1;end;do PG=Sm[SR];end;SR=SR+0X1;AR[0x0002]=AR[2][PG[0x5]];SR=SR+0X00001;SR=SR+0X001;PG=Sm[SR];SR=SR+0X001;do AR[0X2]=AR[0x2][PG[5]];end;do PG=Sm[SR];end;SR=SR+1;AR[0X00002]=AR[0X2][PG[0x5]];PG=Sm[SR];SR=SR+1;(AR)[0X00003]=tR[PG[2]];PG=Sm[SR];SR=SR+1;do AR[3]=AR[0X3][PG[5]];end;PG=Sm[SR];do SR=SR+1;end;if not(not(AR[0X0003]<=AR[2]))then else do SR=PG[7];end;end;else do AR[4]=tR[PG[0X2]];end;SR=SR+1;SR=SR+0X1;local xZ=0X04;PG=Sm[SR];SR=SR+1;AR[0X05]=PG[2];SR=SR+1;(AR[xZ])(AR[xZ+0X1]);cR=xZ-0X001;PG=Sm[SR];do SR=SR+0X01;end;SR=PG[0x6];end;end;end;end;end;end;end;end;end;else if gG>=0X000057 then if not(gG>=0X066)then do if not(gG<0x005e)then do if not(gG<98)then if not(gG<0X64)then if gG~=101 then AR[0X3]=tR[PG[2]];SR=SR+0X1;do SR=SR+1;end;PG=Sm[SR];do SR=SR+0X1;end;AR[0X3]=AR[3][PG[5]];PG=Sm[SR];SR=SR+1;if not(AR[0x3])then else SR=PG[6];end;else local Dy=PG[0X7];local ey,jy,By=AR[Dy]();if ey then AR[Dy+0X1]=jy;(AR)[Dy+0X0002]=By;do SR=PG[0X6];end;end;end;else if gG==99 then(AR)[0X02]=tR[PG[2]];local iq=(2);SR=SR+0x1;SR=SR+0X1;PG=Sm[SR];do SR=SR+0X1;end;local Lq=(AR[0X2]);do AR[iq+1]=Lq;end;AR[iq]=Lq[PG[0x5]];do PG=Sm[SR];end;SR=SR+1;(AR)[4]=PG[0X002];SR=SR+0X1;do iq=0x0002;end;do(AR)[iq]=AR[iq](AR[iq+0X1],AR[iq+0X2]);end;cR=iq;SR=SR+0x0001;SR=SR+0X1;PG=Sm[SR];SR=SR+0X00001;if not(AR[2])then else SR=PG[6];end;else(AR)[PG[0X007]]=AR[PG[0X6]]>=AR[PG[0X00001]];end;end;else if gG>=0X0060 then if gG~=97 then local Mb,Qb=2,AR[0X1];(AR)[Mb+1]=Qb;(AR)[Mb]=Qb[PG[5]];SR=SR+1;Mb=0X2;do AR[Mb]=AR[Mb](AR[Mb+0X1]);end;cR=Mb;PG=Sm[SR];SR=SR+0x1;do if AR[0X0002]then SR=PG[6];end;end;else(AR)[0x006]=tR[PG[0X2]];SR=SR+0x1;do cR=6;end;AR[cR]=AR[cR]();SR=SR+0X1;SR=SR+1;PG=Sm[SR];do SR=SR+0x1;end;if AR[0X6]then SR=PG[6];end;end;else do if gG~=95 then(AR)[0X5]=tR[PG[0X2]];SR=SR+0X1;do cR=0X00005;end;do AR[cR]=AR[cR]();end;PG=Sm[SR];do SR=SR+0x1;end;if not(AR[5])then else SR=PG[6];end;else local bL,WL=3,AR[1];AR[bL+1]=WL;AR[bL]=WL[PG[0X0005]];do SR=SR+1;end;bL=3;do AR[bL]=AR[bL](AR[bL+0X1]);end;cR=bL;SR=SR+0X1;do SR=SR+0x001;end;PG=Sm[SR];SR=SR+1;if not AR[3]then SR=PG[6];end;end;end;end;end;end;else do if gG<0X5A then do if not(gG<88)then if gG~=89 then AR[0x0004]=tR[PG[0X002]];PG=Sm[SR];SR=SR+0X1;do AR[0x04]=AR[0X4][PG[0x0005]];end;PG=Sm[SR];do SR=SR+0x1;end;if not(AR[0X4])then else SR=PG[0X006];end;else do if not(AR[PG[7]])then else SR=PG[0x6];end;end;end;else if AR[PG[0X6]]~=PG[0X5]then else do SR=PG[7];end;end;end;end;else do if not(gG<92)then if gG~=93 then AR[0X3]=tR[PG[2]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+1;if not(not AR[0X0003])then else SR=PG[6];end;else do(AR)[0x3]=false;end;do PG=Sm[SR];end;SR=SR+1;tR[PG[0X2]]=AR[3];do PG=Sm[SR];end;do SR=SR+1;end;SR=PG[6];end;else if gG~=0X05b then(AR)[0X004]=tR[PG[2]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+0X1;AR[4]=AR[0X4][PG[5]];local Qo=(0X4);PG=Sm[SR];SR=SR+1;do AR[4]=AR[0X00004][PG[5]];end;PG=Sm[SR];SR=SR+1;tR[PG[0X002]]=AR[0X4];PG=Sm[SR];SR=SR+0X1;local io=(AR[0X1]);AR[Qo+0X001]=io;AR[Qo]=io[PG[0X5]];do SR=SR+0X1;end;AR[0X6]=true;SR=SR+1;Qo=0X0004;(AR[Qo])(AR[Qo+0X1],AR[Qo+2]);cR=Qo-0X001;PG=Sm[SR];SR=SR+1;SR=PG[6];else AR[4]=tR[PG[0X2]];SR=SR+0x001;SR=SR+0X01;SR=SR+0X1;(AR)[0x05]=AR[0X003];SR=SR+0X001;local S9=0X04;AR[S9]=AR[S9](AR[S9+1]);do cR=S9;end;SR=SR+0X1;SR=SR+1;do PG=Sm[SR];end;SR=SR+1;do if AR[4]~=PG[0X5]then SR=PG[7];end;end;end;end;end;end;end;end;end;else if gG>=0X6d then if gG<113 then if not(gG>=0X006f)then if gG~=110 then do(AR)[0x3]=tR[PG[0x2]];end;PG=Sm[SR];SR=SR+0X001;AR[0x4]=tR[PG[2]];SR=SR+0X1;local Ti=(4);SR=SR+0X1;do PG=Sm[SR];end;SR=SR+0X1;local pi=(AR[0X00004]);(AR)[Ti+1]=pi;AR[Ti]=pi[PG[5]];local Ji=(2);SR=SR+0X01;do Ti=0X4;end;local Zi=0x0;do if Ji==0 then else cR=Ti+Ji-0X1;end;end;local gi,Bi=nil,(nil);if Ji~=0X0001 then gi,Bi=eH(AR[Ti](f(AR,Ti+1,cR)));else gi,Bi=eH(AR[Ti]());end;if Zi~=1 then if Zi==0 then gi=gi+Ti-1;cR=gi;else do gi=Ti+Zi-0x0002;end;cR=gi+0x1;end;local cx=0;for EL=Ti,gi do cx=cx+1;do(AR)[EL]=Bi[cx];end;end;else cR=Ti-1;end;SR=SR+1;do Ti=0x00003;end;Ji=0;Zi=4;if Ji==0x0 then else cR=Ti+Ji-1;end;gi,Bi=nil;do if Ji~=1 then gi,Bi=eH(AR[Ti](f(AR,Ti+0X1,cR)));else do gi,Bi=eH(AR[Ti]());end;end;end;if Zi==0X01 then cR=Ti-1;else if Zi~=0X0 then do gi=Ti+Zi-2;end;cR=gi+1;else gi=gi+Ti-1;cR=gi;end;local cx=0X0;for lt=Ti,gi do cx=cx+0X1;do(AR)[lt]=Bi[cx];end;end;end;SR=SR+1;SR=SR+0X00001;PG=Sm[SR];do SR=SR+0X1;end;do Ti=0X3;end;local Hi=(r(function(...)C();for r4,g4 in...do C(true,r4,g4);end;end));Hi(AR[Ti],AR[Ti+0X1],AR[Ti+2]);cR=Ti;(AR)[Ti]=Hi;do SR=PG[0x6];end;else(AR)[0X002]=tR[PG[0X2]];SR=SR+0X1;do SR=SR+0X1;end;PG=Sm[SR];SR=SR+1;do if not AR[0x00002]then SR=PG[6];end;end;end;else do if gG~=0X70 then(AR)[6]=AR[0X3][PG[5]];SR=SR+0x1;SR=SR+0x1;do PG=Sm[SR];end;SR=SR+1;(AR)[0X6]=AR[6][PG[5]];do PG=Sm[SR];end;SR=SR+0X001;do if not(not AR[6])then else SR=PG[0X6];end;end;else AR[0X3]=true;PG=Sm[SR];SR=SR+0X0001;(tR)[PG[0X2]]=AR[0x3];PG=Sm[SR];SR=SR+0X1;AR[0x3]=tR[PG[2]];do SR=SR+0X1;end;SR=SR+0x01;do PG=Sm[SR];end;SR=SR+0X1;do if not(not AR[0x0003])then else SR=PG[6];end;end;end;end;end;else if gG<0X000073 then if gG==114 then local vd=(PG[0X6]);local id=(PG[7]);do if vd~=0X0 then cR=id+vd-1;end;end;local Od,Sd,Kd=nil,nil,PG[0x0001];if vd==1 then Od,Sd=eH(AR[id]());else Od,Sd=eH(AR[id](f(AR,id+0X1,cR)));end;if Kd~=1 then if Kd==0X0 then Od=Od+id-1;cR=Od;else Od=id+Kd-0X2;do cR=Od+0x1;end;end;local Bd=(0x0);for Ys=id,Od do Bd=Bd+1;(AR)[Ys]=Sd[Bd];end;else cR=id-0x01;end;else AR[0X02]=tR[PG[2]];SR=SR+0X1;cR=0X2;do(AR)[cR]=AR[cR]();end;PG=Sm[SR];SR=SR+0X1;AR[0X003]=tR[PG[2]];SR=SR+1;(AR)[0X002]=AR[2]-AR[3];PG=Sm[SR];SR=SR+1;do(AR)[2]=AR[0x2]<PG[0X005];end;do PG=Sm[SR];end;SR=SR+1;if not AR[2]then do SR=PG[0X6];end;end;end;else do if gG~=116 then tR[PG[2]]=AR[PG[7]];else do AR[0x03]=tR[PG[2]];end;do SR=SR+1;end;do SR=SR+0X1;end;SR=SR+0X01;cR=3;(AR)[cR]=AR[cR]();SR=SR+0X1;SR=SR+0x1;PG=Sm[SR];SR=SR+1;if AR[0X03]then SR=PG[0X0006];end;end;end;end;end;else if not(gG<105)then if gG<0X6b then if gG==0X6A then(AR)[PG[7]]=nil;else AR[0X0]=tR[PG[0X2]];SR=SR+0X1;SR=SR+1;PG=Sm[SR];SR=SR+0X1;do if not AR[0]then SR=PG[0X6];end;end;end;else if gG==108 then local qe=PG[0x07];local ie,ae=AR[qe]();if not(ie)then else SR=PG[0X6];(AR)[qe+0X3]=ae;end;else do(AR)[0X002]=tR[PG[0X2]];end;SR=SR+0x00001;SR=SR+0X0001;PG=Sm[SR];do SR=SR+1;end;do(AR)[0X02]=AR[2][PG[0X5]];end;do PG=Sm[SR];end;do SR=SR+1;end;do(AR)[2]=AR[0x2][PG[0X5]];end;PG=Sm[SR];SR=SR+1;do if not(not(AR[0x2]<PG[0X5]))then else SR=PG[0X07];end;end;end;end;else if not(gG<0x000067)then if gG~=0x68 then(AR)[0X6]=tR[PG[0X2]];SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+0X1;AR[0x00007]=PG[0X002];SR=SR+0X01;AR[8]=AR[0X5];local c4=0X6;SR=SR+0X00001;(AR[c4])(AR[c4+1],AR[c4+0x002]);cR=c4-0x1;do PG=Sm[SR];end;SR=SR+1;do SR=PG[0X6];end;else AR[0X005]=tR[PG[2]];SR=SR+1;do SR=SR+0x1;end;SR=SR+0X1;do cR=0X5;end;do(AR)[cR]=AR[cR]();end;SR=SR+0X1;SR=SR+0x1;do PG=Sm[SR];end;do SR=SR+0X1;end;if AR[0X5]then SR=PG[6];end;end;else AR[2]=tR[PG[2]];do SR=SR+0X01;end;do SR=SR+0X1;end;do SR=SR+1;end;cR=0X2;do(AR)[cR]=AR[cR]();end;do SR=SR+0X1;end;SR=SR+0X1;PG=Sm[SR];do SR=SR+0x1;end;SR=PG[6];end;end;end;end;else do if gG>=72 then if not(gG>=79)then do if gG<75 then if not(gG<0X49)then if gG==74 then(AR)[0X00004]=tR[PG[2]];PG=Sm[SR];do SR=SR+1;end;AR[5]=PG[2];SR=SR+0X1;local yh=4;(AR[yh])(AR[yh+1]);do cR=yh-0X001;end;do PG=Sm[SR];end;do SR=SR+1;end;do AR[4]=tR[PG[0X2]];end;PG=Sm[SR];SR=SR+1;AR[0X0004]=AR[4][PG[0x5]];PG=Sm[SR];SR=SR+0x1;if not(AR[4])then else SR=PG[0X00006];end;else do(AR)[3]=tR[PG[2]];end;SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+1;AR[3]=AR[3][PG[5]];SR=SR+0X1;do SR=SR+0X01;end;PG=Sm[SR];SR=SR+0X00001;do(AR)[3]=AR[3][PG[0X5]];end;do PG=Sm[SR];end;SR=SR+0x00001;if not(AR[0X3]<PG[0x5])then SR=PG[0x7];end;end;else AR[4]=tR[PG[0X2]];SR=SR+1;local Wu=0X3;do SR=SR+1;end;PG=Sm[SR];do SR=SR+0X0001;end;local nu=(Zm[PG[0X6]]);local fu=nu[0X00003];local ku=0X4;local Ou=nil;local Hu=(#fu);if not(Hu>0X0)then else Ou={};do for w1=1,Hu do local X1=(fu[w1]);if X1[1]~=0X00000 then(Ou)[w1-1]=bm[X1[0X002]];else(Ou)[w1-0X1]={AR,X1[2]};end;end;end;(M)(Cm,Ou);end;AR[0X5]=dH(nu,Ou,tR);SR=SR+1;local mu=0X2;if mu~=0X00000 then cR=ku+mu-1;end;local bu,Uu=nil,(nil);if mu==0x001 then bu,Uu=eH(AR[ku]());else bu,Uu=eH(AR[ku](f(AR,ku+1,cR)));end;if Wu~=0X00001 then if Wu~=0X0 then bu=ku+Wu-2;cR=bu+1;else bu=bu+ku-0X00001;cR=bu;end;local BO=0x000;do for Yp=ku,bu do BO=BO+0X1;(AR)[Yp]=Uu[BO];end;end;else cR=ku-1;end;PG=Sm[SR];SR=SR+0X01;if AR[4]then SR=PG[0X06];end;end;else if not(gG<0X4D)then if gG~=0x4e then do AR[0X4]=tR[PG[2]];end;SR=SR+1;cR=0X4;AR[cR]=AR[cR]();SR=SR+1;do SR=SR+0X1;end;PG=Sm[SR];do SR=SR+1;end;if not(AR[4])then else SR=PG[6];end;else AR[0X3]=tR[PG[2]];PG=Sm[SR];do SR=SR+0X00001;end;do(AR)[4]=PG[2];end;PG=Sm[SR];local cx=0X3;SR=SR+1;AR[0X5]=PG[0X2];SR=SR+0X1;do(AR)[cx]=AR[cx](AR[cx+0x1],AR[cx+0x2]);end;cR=cx;PG=Sm[SR];do SR=SR+0X00001;end;do if AR[3]~=PG[0x5]then else do SR=PG[0X7];end;end;end;end;else if gG~=76 then else do for zx=PG[0X7],PG[6]do(AR)[zx]=nil;end;end;end;end;end;end;else if gG>=83 then if not(gG<0x55)then if gG==86 then do AR[0]=nil;end;PG=Sm[SR];do SR=SR+1;end;do(AR)[0X0001]=tR[PG[0x00002]];end;SR=SR+0X1;do SR=SR+1;end;PG=Sm[SR];local Wf=0X00001;SR=SR+1;local yf=AR[1];(AR)[Wf+0X1]=yf;do(AR)[Wf]=yf[PG[0x5]];end;PG=Sm[SR];SR=SR+1;do(AR)[0X3]=PG[0X00002];end;SR=SR+0X1;Wf=1;AR[Wf]=AR[Wf](AR[Wf+0x00001],AR[Wf+2]);do cR=Wf;end;SR=SR+0X1;do SR=SR+1;end;SR=SR+0X00001;do(AR)[2]=false;end;do PG=Sm[SR];end;SR=SR+1;tR[PG[2]]=AR[0x2];PG=Sm[SR];SR=SR+0X1;do SR=PG[0X6];end;else do AR[0x0003]=tR[PG[2]];end;do SR=SR+1;end;do SR=SR+0x00001;end;SR=SR+1;do cR=0X3;end;(AR)[cR]=AR[cR]();SR=SR+1;SR=SR+0X1;PG=Sm[SR];do SR=SR+0X1;end;if not(AR[0x3])then else do SR=PG[0X0006];end;end;end;else if gG~=84 then local aN=(0x5);local MN=AR[3];do AR[aN+1]=MN;end;AR[aN]=MN[PG[5]];PG=Sm[SR];SR=SR+1;AR[0X7]=PG[2];SR=SR+0X001;aN=0X0005;do(AR)[aN]=AR[aN](AR[aN+0x001],AR[aN+0x02]);end;do cR=aN;end;do PG=Sm[SR];end;do SR=SR+0x0001;end;if not(AR[0X05])then else SR=PG[0x6];end;else local xz=AR[0X1];local dz=(0x0004);do(AR)[dz+0x1]=xz;end;(AR)[dz]=xz[PG[0x5]];SR=SR+1;dz=4;AR[dz]=AR[dz](AR[dz+0X00001]);cR=dz;SR=SR+0X1;SR=SR+1;PG=Sm[SR];SR=SR+1;if not AR[0x00004]then SR=PG[0X6];end;end;end;else if gG>=0X51 then if gG~=0X52 then do(AR)[2]=tR[PG[2]];end;SR=SR+0X1;do SR=SR+1;end;do PG=Sm[SR];end;local hU=0X2;SR=SR+1;(AR)[0x00002]=AR[0X2][PG[0x05]];SR=SR+1;do SR=SR+0X00001;end;do PG=Sm[SR];end;do SR=SR+0X1;end;(AR)[3]=PG[2];SR=SR+1;AR[hU](AR[hU+1]);cR=hU-1;PG=Sm[SR];SR=SR+0x1;(AR)[2]=tR[PG[0x0002]];do SR=SR+0x1;end;SR=SR+0X1;PG=Sm[SR];do SR=SR+0X1;end;if not(not AR[0X02])then else SR=PG[0x6];end;else(AR)[0X4]=tR[PG[0X002]];do SR=SR+1;end;do SR=SR+1;end;do SR=SR+0X1;end;do cR=0x4;end;(AR)[cR]=AR[cR]();SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+1;if AR[4]then SR=PG[0x6];end;end;else do if gG==0X50 then repeat local HN,eN,lN=Cm,AR,PG[7];if#HN>0 then local uL=({});for zg,fg in I,HN do for Mp,Lp in I,fg do do if Lp[1]==eN and Lp[2]>=lN then local qX=Lp[2];if not(not uL[qX])then else uL[qX]={eN[qX]};end;(Lp)[0X0001]=uL[qX];do Lp[2]=0x00001;end;end;end;end;end;end;until true;else AR[3]=tR[PG[0X02]];SR=SR+1;SR=SR+0x01;SR=SR+0X0001;cR=3;(AR)[cR]=AR[cR]();PG=Sm[SR];SR=SR+0X01;do if not(not AR[3])then else SR=PG[6];end;end;end;end;end;end;end;else do if gG>=0X0041 then if gG<0x44 then do if gG>=0X00042 then if gG~=0X43 then AR[2]=tR[PG[0x2]];local ym=2;PG=Sm[SR];SR=SR+1;AR[0x3]=PG[0x2];SR=SR+1;do(AR)[ym]=AR[ym](AR[ym+0x1]);end;cR=ym;do SR=SR+0X01;end;do SR=SR+1;end;PG=Sm[SR];SR=SR+1;do if not(not AR[2])then else SR=PG[6];end;end;else AR[4]=tR[PG[0X2]];local dg=4;do SR=SR+0X1;end;SR=SR+1;PG=Sm[SR];SR=SR+1;AR[5]=PG[2];SR=SR+1;(AR[dg])(AR[dg+0X001]);cR=dg-0X1;SR=SR+0X0001;SR=SR+0X1;PG=Sm[SR];SR=SR+0X0001;if not(AR[2])then else SR=PG[0x0006];end;end;else(AR)[4]=tR[PG[0X2]];SR=SR+0X001;SR=SR+0X001;do PG=Sm[SR];end;SR=SR+0x0001;do if AR[4]then SR=PG[6];end;end;end;end;else if gG>=70 then do if gG~=71 then(AR)[0X7]=tR[PG[0X2]];SR=SR+0X1;SR=SR+0X1;do PG=Sm[SR];end;SR=SR+0x1;AR[8]=tR[PG[2]];PG=Sm[SR];SR=SR+1;local hJ=(0X7);AR[0X8]=AR[8][PG[0x5]];SR=SR+0X1;(AR)[hJ]=AR[hJ](AR[hJ+0x001]);cR=hJ;do SR=SR+1;end;SR=SR+1;SR=SR+1;AR[0X6]=AR[0X7];PG=Sm[SR];local MJ=(AR[1]);SR=SR+1;hJ=7;(AR)[hJ+1]=MJ;do AR[hJ]=MJ[PG[0x5]];end;SR=SR+1;hJ=7;AR[hJ](AR[hJ+0X1]);cR=hJ-1;SR=SR+0X01;SR=SR+1;PG=Sm[SR];SR=SR+1;(AR)[7]=tR[PG[2]];PG=Sm[SR];SR=SR+0X01;AR[8]=PG[0X2];SR=SR+1;do hJ=7;end;AR[hJ](AR[hJ+1]);cR=hJ-0x001;PG=Sm[SR];do SR=SR+1;end;if not AR[0x6]then SR=PG[0X0006];end;else local j_,q_=PG[0X00007],(AR[PG[6]]);do(AR)[j_+0X1]=q_;end;do AR[j_]=q_[PG[0X5]];end;end;end;else if gG==0X45 then AR[0X7]=tR[PG[2]];SR=SR+0X1;cR=7;(AR[cR])();do cR=cR-1;end;PG=Sm[SR];do SR=SR+0x1;end;do AR[0X7]=tR[PG[0X2]];end;SR=SR+1;SR=SR+1;PG=Sm[SR];local ph=(7);SR=SR+0X1;(AR)[7]=AR[7][PG[0X5]];SR=SR+1;SR=SR+0X0001;PG=Sm[SR];do SR=SR+1;end;local Ah=(AR[0X0007]);(AR)[ph+1]=Ah;do AR[ph]=Ah[PG[0X00005]];end;PG=Sm[SR];SR=SR+0x1;(AR)[0X9]=PG[0X002];SR=SR+1;do ph=7;end;do(AR)[ph]=AR[ph](AR[ph+1],AR[ph+0X00002]);end;cR=ph;SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+0X1;if AR[7]then do SR=PG[6];end;end;else local Ov=(PG[0X7]);local dv=(r(function(...)C();for pP,bP in...do(C)(true,pP,bP);end;end));(dv)(AR[Ov],AR[Ov+1],AR[Ov+2]);cR=Ov;(AR)[Ov]=dv;SR=PG[0X06];end;end;end;else if not(gG>=0X0003d)then if not(gG>=59)then do AR[0x0005]=tR[PG[0X02]];end;SR=SR+0X1;SR=SR+1;PG=Sm[SR];SR=SR+1;AR[5]=AR[0X5][PG[0X5]];do PG=Sm[SR];end;SR=SR+0x1;if not(not AR[5])then else SR=PG[6];end;else if gG~=0x3c then local mr=(Zm[PG[6]]);local Gr=mr[3];local dr=#Gr;local Dr=nil;if not(dr>0X00000)then else Dr={};for TO=1,dr do local vO=Gr[TO];if vO[1]==0X00 then Dr[TO-1]={AR,vO[0X2]};else do(Dr)[TO-1]=bm[vO[2]];end;end;end;(M)(Cm,Dr);end;AR[PG[0x7]]=dH(mr,Dr,tR);else local sM,xM=0X3,(AR[1]);(AR)[sM+0X01]=xM;do AR[sM]=xM[PG[5]];end;SR=SR+1;sM=0x3;(AR[sM])(AR[sM+1]);cR=sM-0X0001;PG=Sm[SR];SR=SR+0X1;AR[3]=tR[PG[2]];do SR=SR+1;end;SR=SR+0X1;SR=SR+0x1;cR=0X3;do AR[cR]=AR[cR]();end;SR=SR+1;SR=SR+1;PG=Sm[SR];SR=SR+1;SR=PG[0x6];end;end;else do if not(gG>=63)then if gG==62 then AR[0X006]=AR[3][PG[0X5]];do SR=SR+1;end;SR=SR+1;do SR=SR+0X1;end;cR=6;(AR[cR])();do cR=cR-1;end;PG=Sm[SR];do SR=SR+0X1;end;(AR)[0X6]=tR[PG[0X2]];SR=SR+1;cR=0X6;AR[cR]();cR=cR-1;PG=Sm[SR];SR=SR+0x001;AR[0x0006]=AR[3][PG[0X005]];PG=Sm[SR];do SR=SR+1;end;if not(not AR[0X6])then else SR=PG[6];end;else if not(not AR[PG[0X0007]])then else do SR=PG[0X6];end;end;end;else if gG==64 then do(AR)[0X8]=AR[0X7][PG[5]];end;PG=Sm[SR];do SR=SR+0x0001;end;AR[0X9]=tR[PG[0x0002]];SR=SR+1;SR=SR+0X1;local sq=(9);PG=Sm[SR];SR=SR+0X00001;(AR)[10]=tR[PG[0X00002]];SR=SR+0x001;SR=SR+0X1;PG=Sm[SR];SR=SR+0x00001;do AR[0XA]=AR[10][PG[0x0005]];end;SR=SR+1;(AR)[sq]=AR[sq](AR[sq+1]);do cR=sq;end;PG=Sm[SR];SR=SR+1;if AR[0X9]then SR=PG[0x06];end;else local BM,LM=5,(AR[0X1]);do AR[BM+0X1]=LM;end;do(AR)[BM]=LM[PG[5]];end;SR=SR+1;BM=0x05;AR[BM]=AR[BM](AR[BM+0X1]);cR=BM;do PG=Sm[SR];end;SR=SR+0x0001;if not AR[5]then SR=PG[0X06];end;end;end;end;end;end;end;end;end;end;end;end;end);if not(VR)then if e(gR)~="string"then V(gR,0);else if p(gR,"a\116\116\e\mpt\ to\ yi\e\l\d\ acr\o\s\115 \109\etame\116\h\od\/\C\037\045ca\108\108 \098o\117\110\dar\y")then do return coroutine.yield();end;end;if p(gR,"^.\-\:%\100\+\: ")then(V)("L\117\114a\112h\ Sc\114i\p\116\:"..(Dm[SR-1]or'\(\int\er\110\097\108\)')..'\:\032'..v(gR),0X00000);else V(gR,0);end;end;else if gR then do if qR~=1 then return AR[fR](f(AR,fR+0X1,cR));else do return AR[fR]();end;end;end;elseif fR then return f(AR,fR,qR);end;end;end;else Km=function(...)local tc,Hc=0X001,{};local Oc=K();local qc=(Oc==g and Qm or Oc);local Mc={[2]=Hc,[1]=Xm};local Dc,bc=eH(...);local xc=(0);Dc=Dc-0x0001;do for U3=0x0,Dc do do if km>U3 then Hc[U3]=bc[U3+0X1];else do break;end;end;end;end;end;if not Lm then bc=nil;elseif not(Um)then else Hc[km]={n=Dc>=km and Dc-km+1 or 0X0000,f(bc,km+0X1,Dc+1)};end;if qc~=Oc then(w)(Km,qc);end;local Cc,hc,Zc,Uc=o(function()do while true do local rM=(Sm[tc]);local JM=rM[0x4];tc=tc+1;if JM>=27 then do if JM<41 then if not(JM<34)then if not(JM<0X000025)then if JM>=0X0027 then do if JM~=40 then Hc[0X00]=qc[rM[0X0002]];tc=tc+0x1;do xc=0x000;end;(Hc)[xc]=Hc[xc]();do tc=tc+1;end;do tc=tc+0X1;end;rM=Sm[tc];do tc=tc+0X01;end;(qc)[rM[0X02]]=Hc[0X0];rM=Sm[tc];do tc=tc+0x1;end;(Hc)[0x00000]=qc[rM[0x0002]];tc=tc+0X001;xc=0;Hc[xc]=Hc[xc]();rM=Sm[tc];do tc=tc+1;end;(Hc)[0X1]=qc[rM[2]];rM=Sm[tc];do tc=tc+0x1;end;(Hc)[0X00002]=qc[rM[0X2]];tc=tc+0X1;tc=tc+0x1;do rM=Sm[tc];end;do tc=tc+0X1;end;(Hc)[2]=Hc[2][rM[5]];tc=tc+1;tc=tc+0X1;rM=Sm[tc];tc=tc+1;do if not(Hc[0X02])then else tc=rM[6];end;end;else local WX=bm[1];do Hc[0X0003]=WX[1][WX[0X00002]];end;do rM=Sm[tc];end;tc=tc+0x1;do(Hc)[0X00003]=Hc[0x3][rM[5]];end;local mX=3;do tc=tc+1;end;Hc[0X4]=Hc[0X2];tc=tc+1;WX=bm[0];(Hc)[0x5]=WX[0X1][WX[0X00002]];do tc=tc+0X1;end;tc=tc+0X1;rM=Sm[tc];local kX=(Zm[rM[0X6]]);tc=tc+0X001;local aX=nil;local AX=(kX[0x3]);local FX=#AX;if not(FX>0)then else aX={};for W0=0X1,FX do local I0=AX[W0];do if I0[1]~=0 then aX[W0-1]=bm[I0[2]];else(aX)[W0-1]={Hc,I0[2]};end;end;end;(M)(Cm,aX);end;do(Hc)[0X6]=dH(kX,aX,qc);end;do tc=tc+0X01;end;(Hc)[0X7]={};rM=Sm[tc];do tc=tc+0x1;end;kX=Zm[rM[0X0006]];aX=nil;AX=kX[0X0003];do FX=#AX;end;if not(FX>0X000)then else aX={};do for sS=1,FX do local lS=AX[sS];if lS[0X1]~=0 then(aX)[sS-1]=bm[lS[0X00002]];else aX[sS-1]={Hc,lS[0X2]};end;end;end;M(Cm,aX);end;(Hc)[8]=dH(kX,aX,qc);rM=Sm[tc];tc=tc+0x01;do Hc[0x00007][rM[0X2]]=Hc[8];end;do tc=tc+0X001;end;xc=mX+5-0X0001;Hc[mX](f(Hc,mX+0x1,xc));xc=mX-1;rM=Sm[tc];tc=tc+0X1;tc=rM[0X6];end;end;else do if JM==0X26 then Hc[rM[7]]=true;else(Hc)[rM[0x7]]=rM[0x2];end;end;end;else if JM<35 then(Hc)[0x6]=Hc[0X00005][rM[0X5]];tc=tc+0X1;tc=tc+1;do tc=tc+1;end;(Hc)[2]=Hc[0X6];rM=Sm[tc];do tc=tc+1;end;if not Hc[2]then tc=rM[6];end;else if JM~=36 then if not(not(Hc[rM[0X6]]<=Hc[rM[0X0001]]))then else tc=rM[0X7];end;else do Hc[0x1]=rM[2];end;rM=Sm[tc];tc=tc+0X001;do(Hc)[0X0002]=rM[2];end;do rM=Sm[tc];end;local z3=0X0001;tc=tc+1;(Hc)[3]=rM[0X2];rM=Sm[tc];do tc=tc+0x00001;end;local K3=(Hc[z3]);local p3,P3=Hc[z3+0x001],(Hc[z3+2]);Hc[z3]=r(function()for PJ=K3,p3,P3 do C(true,PJ);end;end);do tc=rM[6];end;end;end;end;else if JM<0X00001E then do if JM<28 then if not(Hc[rM[0X7]])then else tc=rM[0X6];end;else if JM==29 then(Hc)[0X2]=qc[rM[2]];rM=Sm[tc];do tc=tc+0x1;end;do Hc[2]=Hc[2][rM[5]];end;tc=tc+1;do tc=tc+0X001;end;do rM=Sm[tc];end;tc=tc+1;if not Hc[2]then tc=rM[6];end;else Hc[2]=qc[rM[0X2]];do tc=tc+1;end;tc=tc+0X01;rM=Sm[tc];do tc=tc+1;end;(Hc)[0X03]=qc[rM[0x002]];tc=tc+1;tc=tc+0X1;rM=Sm[tc];tc=tc+0X1;(Hc)[3]=Hc[0X3][rM[0X5]];do tc=tc+1;end;tc=tc+1;rM=Sm[tc];tc=tc+1;Hc[0x3]=Hc[3][rM[0X0005]];do tc=tc+1;end;do tc=tc+0x1;end;rM=Sm[tc];tc=tc+1;Hc[0x00004]=qc[rM[2]];do rM=Sm[tc];end;do tc=tc+1;end;(Hc)[0X4]=Hc[4][rM[5]];tc=tc+1;tc=tc+1;rM=Sm[tc];tc=tc+0x1;(Hc)[4]=Hc[0X4][rM[0X5]];rM=Sm[tc];tc=tc+1;(Hc)[4]=Hc[0X004][rM[0X5]];do tc=tc+1;end;do tc=tc+0X001;end;do rM=Sm[tc];end;tc=tc+0x1;(Hc)[0x4]=Hc[0X004][rM[5]];tc=tc+1;do tc=tc+0X1;end;local qO=0x0002;rM=Sm[tc];tc=tc+0X1;Hc[5]=rM[0X2];tc=tc+1;do xc=qO+0X4-0X0001;end;(Hc[qO])(f(Hc,qO+1,xc));xc=qO-0X1;do rM=Sm[tc];end;tc=tc+1;Hc[2]=qc[rM[2]];do tc=tc+1;end;tc=tc+1;rM=Sm[tc];tc=tc+0x01;do(Hc)[3]=qc[rM[0X2]];end;do rM=Sm[tc];end;tc=tc+1;Hc[3]=Hc[3][rM[0X0005]];do rM=Sm[tc];end;tc=tc+0x01;(Hc)[3]=Hc[3][rM[5]];rM=Sm[tc];do tc=tc+0x00001;end;do Hc[4]=qc[rM[2]];end;tc=tc+0X1;do tc=tc+1;end;do rM=Sm[tc];end;tc=tc+0X01;Hc[4]=Hc[0x4][rM[0X00005]];tc=tc+1;do tc=tc+1;end;rM=Sm[tc];tc=tc+0X01;(Hc)[4]=Hc[0X04][rM[5]];tc=tc+1;do tc=tc+1;end;rM=Sm[tc];tc=tc+1;Hc[4]=Hc[4][rM[0X005]];rM=Sm[tc];do tc=tc+1;end;do(Hc)[0X4]=Hc[4][rM[5]];end;tc=tc+0X01;tc=tc+1;rM=Sm[tc];do tc=tc+0x1;end;(Hc)[0X05]=rM[0X00002];tc=tc+0X01;do qO=0X2;end;xc=qO+4-0X1;Hc[qO](f(Hc,qO+1,xc));xc=qO-0X1;rM=Sm[tc];tc=tc+0x1;tc=rM[0X6];end;end;end;else if not(JM>=0X20)then if JM~=0X1F then(Hc)[6]=Hc[0x5][rM[0X5]];tc=tc+1;xc=0x6;Hc[xc]();do xc=xc-0X1;end;rM=Sm[tc];do tc=tc+1;end;tc=rM[6];else local xi,Xi=bm[0X0],0;Hc[0]=xi[0x1][xi[0X2]];do tc=tc+0X1;end;tc=tc+0X1;rM=Sm[tc];tc=tc+0X1;local Ri=Hc[0];(Hc)[Xi+1]=Ri;(Hc)[Xi]=Ri[rM[0X0005]];do tc=tc+0X01;end;do Xi=0x0;end;Hc[Xi](Hc[Xi+0x1]);xc=Xi-0x0001;tc=tc+0X1;tc=tc+0X00001;tc=tc+0x001;repeat local xN,iN=Cm,(Hc);if not(#xN>0)then else local jP=({});for CI,oI in I,xN do for Ya,Sa in I,oI do if Sa[0X1]==iN and Sa[2]>=0X0 then local Xt=Sa[2];if not jP[Xt]then jP[Xt]={iN[Xt]};end;do(Sa)[1]=jP[Xt];end;Sa[2]=0x1;end;end;end;end;until true;return;end;else if JM==0X21 then(Hc)[0x0]=qc[rM[0X2]];tc=tc+1;tc=tc+1;rM=Sm[tc];tc=tc+1;(Hc)[0]=Hc[0][rM[0X5]];do rM=Sm[tc];end;tc=tc+0x01;if not(not Hc[0])then else tc=rM[0X6];end;else Hc[0X2]=false;rM=Sm[tc];tc=tc+1;qc[rM[0X2]]=Hc[0X02];rM=Sm[tc];tc=tc+1;tc=rM[0X00006];end;end;end;end;else if JM>=48 then if JM<0x33 then do if not(JM>=0X031)then(Hc)[rM[7]]=qc[rM[0X02]];else do if JM~=0X32 then if not(not Hc[rM[7]])then else do tc=rM[6];end;end;else(Hc)[5]=qc[rM[2]];do tc=tc+1;end;local dD=0X005;tc=tc+1;do rM=Sm[tc];end;do tc=tc+1;end;Hc[0x6]=rM[2];tc=tc+0x1;(Hc[dD])(Hc[dD+1]);do xc=dD-1;end;rM=Sm[tc];tc=tc+1;do Hc[0X0005]=qc[rM[0X002]];end;rM=Sm[tc];local QD=(Hc[0X5]);tc=tc+1;dD=0X0005;(Hc)[dD+0X1]=QD;Hc[dD]=QD[rM[0x05]];rM=Sm[tc];tc=tc+0X1;do(Hc)[7]=rM[2];end;tc=tc+0X1;dD=0X05;Hc[dD]=Hc[dD](Hc[dD+1],Hc[dD+0X2]);xc=dD;tc=tc+1;do(Hc)[0X0]=Hc[0X0005];end;rM=Sm[tc];tc=tc+1;if not(Hc[0])then else do tc=rM[0X6];end;end;end;end;end;end;else if not(JM<0x35)then if JM==54 then local WN=rM[0X07];do(Hc)[WN]=Hc[WN](Hc[WN+0X1]);end;xc=WN;else do(Hc)[0X0001]=qc[rM[0X00002]];end;tc=tc+0x1;tc=tc+1;rM=Sm[tc];tc=tc+1;(Hc)[2]=rM[0X2];rM=Sm[tc];tc=tc+1;local Qy=3;(Hc)[0X00003]=qc[rM[0X2]];do tc=tc+0x1;end;tc=tc+0x0001;rM=Sm[tc];tc=tc+0x1;Hc[3]=Hc[3][rM[0x5]];rM=Sm[tc];local jy=2;tc=tc+1;local my=(Hc[3]);(Hc)[Qy+1]=my;(Hc)[Qy]=my[rM[5]];tc=tc+1;Qy=0X3;local Ey=(0);if jy==0X0 then else xc=Qy+jy-1;end;local xy,wy=nil,(nil);do if jy~=1 then xy,wy=eH(Hc[Qy](f(Hc,Qy+1,xc)));else xy,wy=eH(Hc[Qy]());end;end;if Ey==0X1 then do xc=Qy-0X001;end;else if Ey~=0 then xy=Qy+Ey-0x2;xc=xy+0X1;else xy=xy+Qy-0X001;xc=xy;end;local aH=(0);for nq=Qy,xy do do aH=aH+1;end;(Hc)[nq]=wy[aH];end;end;tc=tc+1;tc=tc+0X1;tc=tc+1;do Qy=0X1;end;(Hc)[Qy]=Hc[Qy](f(Hc,Qy+0X1,xc));xc=Qy;tc=tc+0x00001;tc=tc+1;do rM=Sm[tc];end;tc=tc+1;if Hc[1]then tc=rM[0x006];end;end;else if JM~=52 then local pX=(rM[7]);local PX,kX,mX=Hc[pX]();do if not(PX)then else Hc[pX+0X1]=kX;(Hc)[pX+2]=mX;tc=rM[6];end;end;else tc=rM[6];end;end;end;else if JM>=0X2C then do if JM>=0X2E then if JM~=47 then(Hc)[1]=qc[rM[2]];do tc=tc+1;end;do tc=tc+1;end;rM=Sm[tc];tc=tc+1;if not(not Hc[0X00001])then else do tc=rM[6];end;end;else do(Hc)[0X00001]=qc[rM[0X2]];end;do tc=tc+0X1;end;Hc[2]={f({},1,0x4)};rM=Sm[tc];tc=tc+0x1;Hc[3]=rM[0X2];rM=Sm[tc];tc=tc+0X1;(Hc)[4]=rM[2];do rM=Sm[tc];end;tc=tc+0x1;do Hc[5]=rM[2];end;local UI=(0x002);rM=Sm[tc];do tc=tc+1;end;Hc[6]=rM[2];tc=tc+1;local WI,YI,CI=(0X001-0X1)*0X00032,Hc[UI],(3);for c6=1,0X004 do do YI[WI+c6]=Hc[UI+c6];end;end;do rM=Sm[tc];end;local eI=(nil);tc=tc+0X1;local SI=(Zm[rM[0x6]]);local II=SI[3];local DI=#II;do if DI>0x0 then eI={};for kU=1,DI do local oU=II[kU];if oU[0x1]~=0x00 then do(eI)[kU-0X1]=bm[oU[0X2]];end;else do(eI)[kU-0X1]={Hc,oU[2]};end;end;end;(M)(Cm,eI);end;end;local sI=bm[0X0];Hc[0X0003]=dH(SI,eI,qc);tc=tc+1;UI=0X001;local LI=(0x00003);if CI==0X000 then else do xc=UI+CI-1;end;end;local nI,GI=nil,nil;do if CI~=0X00001 then nI,GI=eH(Hc[UI](f(Hc,UI+1,xc)));else do nI,GI=eH(Hc[UI]());end;end;end;if LI==0X00001 then do xc=UI-1;end;else if LI==0 then nI=nI+UI-1;xc=nI;else nI=UI+LI-0X2;xc=nI+1;end;local cc=(0X000);for vB=UI,nI do cc=cc+0x1;Hc[vB]=GI[cc];end;end;tc=tc+0X0001;tc=tc+1;tc=tc+0X0001;Hc[3]=sI[1][sI[0X2]];do rM=Sm[tc];end;tc=tc+1;do UI=3;end;local TI=(Hc[3]);Hc[UI+1]=TI;Hc[UI]=TI[rM[0X5]];tc=tc+0X1;UI=0X3;Hc[UI](Hc[UI+0x1]);do xc=UI-1;end;do tc=tc+0x1;end;tc=tc+1;do rM=Sm[tc];end;tc=tc+1;Hc[3]=qc[rM[2]];tc=tc+0X1;tc=tc+1;tc=tc+0x1;Hc[0X4]=Hc[1];tc=tc+0X01;do UI=0X03;end;CI=0x2;LI=4;do if CI==0X0 then else do xc=UI+CI-0X1;end;end;end;nI,GI=nil;if CI==0X1 then do nI,GI=eH(Hc[UI]());end;else nI,GI=eH(Hc[UI](f(Hc,UI+0X1,xc)));end;do if LI~=0X001 then if LI==0 then nI=nI+UI-1;xc=nI;else nI=UI+LI-2;xc=nI+0x1;end;local gu=0X0000;do for Ol=UI,nI do gu=gu+1;Hc[Ol]=GI[gu];end;end;else xc=UI-0X1;end;end;rM=Sm[tc];tc=tc+1;UI=3;local MI=(r(function(...)C();for xO,KO in...do C(true,xO,KO);end;end));(MI)(Hc[UI],Hc[UI+1],Hc[UI+0X0002]);xc=UI;do(Hc)[UI]=MI;end;tc=rM[0X06];end;else do if JM~=0X0002d then do for SW=rM[0X07],rM[6]do(Hc)[SW]=nil;end;end;else Hc[rM[0x007]]=Hc[rM[6]]>=Hc[rM[0X1]];end;end;end;end;else do if not(JM<0x00002a)then if JM~=43 then Hc[0]=qc[rM[2]];rM=Sm[tc];local Ba=(0);tc=tc+0X1;local ya=(Hc[0]);(Hc)[Ba+1]=ya;(Hc)[Ba]=ya[rM[5]];rM=Sm[tc];do tc=tc+0X00001;end;(Hc)[2]=rM[2];tc=tc+0X00001;Ba=0X0;do Hc[Ba]=Hc[Ba](Hc[Ba+1],Hc[Ba+2]);end;xc=Ba;rM=Sm[tc];do tc=tc+1;end;if Hc[0]then tc=rM[0X06];end;else local Om=(Zm[rM[0X06]]);local ym=(Om[0X03]);local gm,nm=#ym,(nil);if gm>0x000 then do nm={};end;for AE=1,gm do local KE=ym[AE];if KE[0X001]~=0 then do nm[AE-1]=bm[KE[2]];end;else do(nm)[AE-1]={Hc,KE[2]};end;end;end;M(Cm,nm);end;(Hc)[rM[0x7]]=dH(Om,nm,qc);end;else local zW=bm[0];local hW=2;Hc[0x0002]=zW[1][zW[0X02]];tc=tc+1;tc=tc+1;rM=Sm[tc];tc=tc+0X1;local rW=Hc[2];(Hc)[hW+1]=rW;Hc[hW]=rW[rM[5]];do tc=tc+0X1;end;do hW=0X2;end;Hc[hW]=Hc[hW](Hc[hW+0X01]);xc=hW;tc=tc+0x01;tc=tc+0X1;rM=Sm[tc];tc=tc+0X1;do if not(not Hc[2])then else tc=rM[6];end;end;end;end;end;end;end;end;else if JM>=0XD then if not(JM>=20)then do if JM>=16 then if JM<0X000012 then if JM==0X11 then local q3=bm[0];(Hc)[0x2]=q3[0X001][q3[2]];tc=tc+1;local Y3=(0X00002);tc=tc+0X1;rM=Sm[tc];do tc=tc+0X1;end;local n3=(Hc[2]);(Hc)[Y3+0x1]=n3;(Hc)[Y3]=n3[rM[5]];tc=tc+0X1;Y3=2;(Hc[Y3])(Hc[Y3+1]);do xc=Y3-0X1;end;tc=tc+0x1;do tc=tc+1;end;do rM=Sm[tc];end;do tc=tc+1;end;tc=rM[6];else do(Hc)[0]=qc[rM[0X2]];end;rM=Sm[tc];do tc=tc+1;end;local Ma=(0x0);(Hc)[1]=rM[2];do tc=tc+0X00001;end;Hc[Ma]=Hc[Ma](Hc[Ma+1]);do xc=Ma;end;rM=Sm[tc];do tc=tc+0X0001;end;if not(not Hc[0])then else tc=rM[6];end;end;else if JM==19 then(Hc)[rM[0X7]]=Hc[rM[0X006]][rM[5]];else do Hc[0X0002]=qc[rM[2]];end;tc=tc+0x001;tc=tc+1;tc=tc+1;xc=0X2;(Hc)[xc]=Hc[xc]();rM=Sm[tc];tc=tc+0x01;if Hc[0x2]then tc=rM[6];end;end;end;else do if JM>=14 then if JM==15 then do Hc[0x002]=qc[rM[0X2]];end;do tc=tc+0X01;end;do tc=tc+0x001;end;do rM=Sm[tc];end;do tc=tc+0X1;end;Hc[2]=Hc[0X0002][rM[0x005]];rM=Sm[tc];tc=tc+1;if not(Hc[2])then else tc=rM[0X6];end;else local tt=(bm[1]);Hc[0x2]=tt[0X001][tt[0X2]];rM=Sm[tc];tc=tc+0X1;(Hc)[2]=Hc[2][rM[5]];tc=tc+1;(Hc)[3]=Hc[1];tc=tc+0X1;local lt=nil;tt=bm[0];(Hc)[4]=tt[0X1][tt[2]];tc=tc+0X0001;Hc[5]=nil;do tc=tc+1;end;(Hc)[6]={};do rM=Sm[tc];end;do tc=tc+1;end;local jt=Zm[rM[6]];local Lt=(jt[3]);local Ht=#Lt;if Ht>0X0 then do lt={};end;do for o3=1,Ht do local S3=(Lt[o3]);if S3[0X1]==0X0 then(lt)[o3-0X1]={Hc,S3[0X2]};else lt[o3-0X1]=bm[S3[2]];end;end;end;(M)(Cm,lt);end;local Jt=2;do Hc[0x07]=dH(jt,lt,qc);end;do rM=Sm[tc];end;tc=tc+0x1;(Hc[0X006])[rM[2]]=Hc[0X7];tc=tc+1;do xc=Jt+0X00005-0X1;end;Hc[Jt](f(Hc,Jt+1,xc));xc=Jt-1;rM=Sm[tc];tc=tc+1;tc=rM[0x06];end;else do Hc[rM[0X7]]=a(Hc[rM[0X00006]]);end;end;end;end;end;else if JM<0X17 then if not(JM>=21)then do Hc[5]=qc[rM[0x02]];end;tc=tc+1;tc=tc+1;rM=Sm[tc];tc=tc+0X0001;(Hc)[5]=Hc[5][rM[5]];do tc=tc+1;end;tc=tc+1;rM=Sm[tc];tc=tc+0x1;do if Hc[5]then do tc=rM[0X00006];end;end;end;else if JM==22 then local KF=(bm[1]);(Hc)[3]=KF[1][KF[2]];do tc=tc+0x00001;end;tc=tc+1;do rM=Sm[tc];end;local rF=0X3;do tc=tc+0x1;end;do Hc[0X3]=Hc[0X003][rM[5]];end;tc=tc+1;tc=tc+0X01;tc=tc+1;Hc[4]=Hc[2];tc=tc+0x001;do(Hc)[rF]=Hc[rF](Hc[rF+1]);end;do xc=rF;end;rM=Sm[tc];tc=tc+0X01;if not(not Hc[3])then else tc=rM[0x6];end;else local fg=bm[1];Hc[2]=fg[0X00001][fg[2]];rM=Sm[tc];tc=tc+0X1;do(Hc)[2]=Hc[2][rM[5]];end;tc=tc+1;do tc=tc+0x1;end;tc=tc+0X0001;(Hc)[0x03]=Hc[0x01];local eg=0X2;tc=tc+1;Hc[eg]=Hc[eg](Hc[eg+0X001]);xc=eg;tc=tc+0X01;tc=tc+1;rM=Sm[tc];do tc=tc+1;end;if not(not Hc[2])then else tc=rM[0x6];end;end;end;else do if not(JM>=25)then do if JM~=0X18 then(Hc)[rM[0x7]]={f({},1,rM[0X6])};else(Hc)[0X00000]=qc[rM[0X2]];tc=tc+1;do tc=tc+1;end;do rM=Sm[tc];end;tc=tc+1;Hc[0]=Hc[0x0][rM[0x5]];rM=Sm[tc];tc=tc+0X1;do if not(Hc[0X0])then else do tc=rM[0x6];end;end;end;end;end;else if JM~=26 then(Hc)[0]=qc[rM[2]];do tc=tc+1;end;tc=tc+0X1;rM=Sm[tc];tc=tc+0X1;(Hc)[0X1]=rM[2];local mH=(0);tc=tc+0X1;do(Hc)[mH]=Hc[mH](Hc[mH+0X001]);end;xc=mH;rM=Sm[tc];tc=tc+0X0001;do if not Hc[0]then tc=rM[0X6];end;end;else Hc[2]=qc[rM[2]];rM=Sm[tc];local k0=2;tc=tc+0X1;local U0=(Hc[0X0002]);do Hc[k0+0X001]=U0;end;Hc[k0]=U0[rM[5]];rM=Sm[tc];do tc=tc+0x1;end;Hc[0x4]=rM[2];tc=tc+0X001;k0=0X2;Hc[k0]=Hc[k0](Hc[k0+0x1],Hc[k0+0X002]);xc=k0;tc=tc+1;tc=tc+1;rM=Sm[tc];do tc=tc+1;end;if not(not Hc[0X0002])then else tc=rM[0x6];end;end;end;end;end;end;else if JM<0X00006 then do if JM>=3 then if not(JM<0X4)then if JM~=5 then local zD=rM[7];for CE=zD,zD+(rM[0X006]-1)do(Hc)[CE]=bc[km+(CE-zD)+1];end;else end;else local Iu=rM[7];local pu,ou=Hc[Iu]();if not(pu)then else tc=rM[6];do Hc[Iu+0X3]=ou;end;end;end;else if not(JM>=1)then repeat local DW,eW=Cm,(Hc);do if#DW>0X00 then local aH={};for nr,yr in I,DW do for ou,su in I,yr do if su[1]==eW and su[2]>=0 then local TD=(su[2]);if not(not aH[TD])then else(aH)[TD]={eW[TD]};end;do su[0x1]=aH[TD];end;do su[2]=1;end;end;end;end;end;end;until true;do return;end;else if JM~=0X0002 then(Hc)[5]=qc[rM[0X2]];local RM=0x05;rM=Sm[tc];tc=tc+1;do Hc[0X6]=rM[2];end;do tc=tc+1;end;(Hc[RM])(Hc[RM+0X001]);xc=RM-1;rM=Sm[tc];tc=tc+1;tc=rM[0x6];else(Hc)[1]=qc[rM[0X002]];do tc=tc+0X01;end;tc=tc+0X00001;tc=tc+0X0001;do xc=0X1;end;do(Hc)[xc]=Hc[xc]();end;rM=Sm[tc];tc=tc+0x0001;do if not(Hc[1])then else do tc=rM[6];end;end;end;end;end;end;end;else if not(JM<9)then do if not(JM>=11)then if JM~=0X00a then(Hc)[0X1]=qc[rM[2]];local NH=(1);rM=Sm[tc];tc=tc+0X1;(Hc)[2]=rM[2];tc=tc+1;(Hc[NH])(Hc[NH+0X1]);xc=NH-0x1;rM=Sm[tc];tc=tc+1;tc=rM[0X6];else local Hq=(rM[0X007]);local Pq=(Hc[Hq]);local Xq,Rq=Hc[Hq+1],Hc[Hq+2];(Hc)[Hq]=r(function()for Fg=Pq,Xq,Rq do C(true,Fg);end;end);tc=rM[0X6];end;else if JM~=0Xc then(Hc)[0x001]=true;local XR=0x00001;do rM=Sm[tc];end;do tc=tc+1;end;(qc)[rM[0X0002]]=Hc[0X01];local SR=bm[0x0];tc=tc+0x01;Hc[0X1]=SR[0X1][SR[2]];rM=Sm[tc];tc=tc+1;local uR=Hc[0X0001];Hc[XR+1]=uR;do Hc[XR]=uR[rM[0x5]];end;tc=tc+0X00001;do XR=0X1;end;(Hc[XR])(Hc[XR+1]);do xc=XR-1;end;rM=Sm[tc];do tc=tc+1;end;if not(Hc[0])then else tc=rM[6];end;else do Hc[rM[0X0007]]=-Hc[rM[6]];end;end;end;end;else if JM<0x7 then do Hc[0X01]=qc[rM[0X2]];end;tc=tc+0X1;tc=tc+0X01;do tc=tc+1;end;xc=0x00001;Hc[xc]=Hc[xc]();do rM=Sm[tc];end;do tc=tc+1;end;do if not(Hc[0X1])then else tc=rM[0X0006];end;end;else if JM==8 then(Hc)[0]=qc[rM[2]];tc=tc+0x00001;do tc=tc+1;end;rM=Sm[tc];tc=tc+1;do Hc[0x00]=Hc[0X0][rM[0X5]];end;tc=tc+1;tc=tc+1;rM=Sm[tc];tc=tc+1;if not(not Hc[0])then else tc=rM[6];end;else(Hc)[1]=qc[rM[2]];do tc=tc+0X1;end;do tc=tc+0X1;end;tc=tc+1;xc=0X1;Hc[xc]=Hc[xc]();do tc=tc+1;end;tc=tc+0x1;rM=Sm[tc];do tc=tc+1;end;(Hc)[2]=qc[rM[2]];tc=tc+0X00001;tc=tc+1;tc=tc+1;(Hc)[1]=Hc[0X1]-Hc[0X2];rM=Sm[tc];do tc=tc+0X1;end;if not(not(rM[2]<Hc[0X01]))then else do tc=rM[0X07];end;end;end;end;end;end;end;end;end;end;end);do if not(Cc)then if e(hc)=='\115tr\in\103'then do if p(hc,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(hc,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[tc-0X1]or"(internal)")..": "..v(hc),0);else(V)(hc,0X0);end;end;else(V)(hc,0);end;else if hc then if Uc~=0X1 then do return Hc[Zc](f(Hc,Zc+0X0001,xc));end;else return Hc[Zc]();end;elseif not(Zc)then else do return f(Hc,Zc,Uc);end;end;end;end;end;end;end;end;end;end;end;end;else do if not(xm>=0X0000A2)then if xm<0x00096 then if not(xm>=0X90)then if not(xm>=0X8D)then do if xm~=0X08C then do Km=function(...)local UX=(0x0);local jX,qX=0X1,({});local mX=({[1]=Xm,[2]=qX});local NX=(K());local HX,DX=eH(...);HX=HX-0X1;local TX=(NX==g and Qm or NX);for xO=0,HX do if km>xO then(qX)[xO]=DX[xO+1];else break;end;end;do if not Lm then DX=nil;elseif not(Um)then else qX[km]={n=HX>=km and HX-km+0X00001 or 0,f(DX,km+0X1,HX+0X0001)};end;end;if TX==NX then else w(Km,TX);end;local CX,KX,VX,iX=o(function()do while true do local je=(Sm[jX]);local Te=(je[0X4]);jX=jX+0X1;if Te<7 then do if Te<0X03 then if Te<0X1 then local zm=(je[7]);local nm=(qX[zm+2]);local lm=qX[zm+0X01];local cm=(qX[zm]);do(qX)[zm]=r(function()for ns=cm,lm,nm do(C)(true,ns);end;end);end;jX=je[6];else do if Te==2 then do jX=je[6];end;else do(qX)[je[0X07]]=l(qX[je[0X00006]],qX[je[0x0001]]);end;end;end;end;else if not(Te>=5)then if Te~=0X4 then qX[je[7]]=TX[je[0X00002]];else do(qX)[je[7]]=je[0X2];end;end;else if Te==6 then do(qX)[je[0X007]]=qX[je[0X0006]]~=qX[je[0X0001]];end;else repeat local pR,qR=Cm,qX;do if#pR>0 then local gS={};do for C8,M8 in I,pR do for Z8,b8 in I,M8 do if not(b8[1]==qR and b8[2]>=0)then else local qv=(b8[2]);if not gS[qv]then(gS)[qv]={qR[qv]};end;(b8)[1]=gS[qv];do b8[2]=0x01;end;end;end;end;end;end;end;until true;return;end;end;end;end;else if not(Te>=10)then if not(Te<0X008)then if Te==0X09 then do repeat local s5,P5=Cm,qX;if#s5>0X0 then local eN=({});for i1,Z1 in I,s5 do do for yy,cy in I,Z1 do if not(cy[0X1]==P5 and cy[0X02]>=0x0)then else local MW=(cy[2]);if not eN[MW]then do(eN)[MW]={P5[MW]};end;end;cy[1]=eN[MW];(cy)[2]=0x001;end;end;end;end;end;until true;end;local Pp=je[0x7];return false,Pp,Pp+je[0X6]-0X2;else local M2=(Zm[je[0x00006]]);local l2=(M2[0x3]);local D2=nil;local W2=#l2;if W2>0X0 then do D2={};end;for rs=1,W2 do local ns=(l2[rs]);if ns[1]~=0X000 then D2[rs-1]=bm[ns[0x02]];else do(D2)[rs-1]={qX,ns[0x00002]};end;end;end;(M)(Cm,D2);end;qX[je[7]]=dH(M2,D2,TX);end;else(qX)[je[0X7]]=qX[je[6]]>qX[je[0X01]];end;else do if not(Te>=12)then if Te==11 then(qX)[je[7]]={f({},1,je[6])};else qX[je[0X00007]]=O(qX[je[6]],qX[je[0x0001]]);end;else if Te==13 then else do qX[0]=TX[je[0X02]];end;je=Sm[jX];local J7=0;do jX=jX+0X1;end;(qX)[0X1]=je[0X2];jX=jX+0X1;qX[J7]=qX[J7](qX[J7+0x00001]);local D7=0;do UX=J7;end;do jX=jX+1;end;(qX)[0x0]=not qX[0X00];jX=jX+1;repeat local PD,AD=Cm,qX;if not(#PD>0)then else local eU=({});for Wr,Xr in I,PD do for C0,W0 in I,Xr do if not(W0[0X00001]==AD and W0[0X2]>=0)then else local HV=(W0[2]);if not eU[HV]then do eU[HV]={AD[HV]};end;end;W0[1]=eU[HV];W0[2]=0X1;end;end;end;end;until true;do return false,D7,D7;end;end;end;end;end;end;end;end;end);if not(CX)then do if e(KX)~="string"then V(KX,0);else if p(KX,"a\116\116\em\112\116\ \116o\032\121\ie\l\d\032acr\o\s\s\ \m\eta\109e\116h\od\/\C\%\-\cal\108\ b\o\117\110\dar\121")then do return coroutine.yield();end;end;if not(p(KX,"^.-:%d+: "))then V(KX,0);else V("Luraph Script:"..(Dm[jX-0x1]or'\(\i\110\116\101rn\097\108\041')..": "..v(KX),0);end;end;end;else if KX then do if iX==1 then return qX[VX]();else do return qX[VX](f(qX,VX+0X1,UX));end;end;end;elseif not(VX)then else return f(qX,VX,iX);end;end;end;end;else Km=function(...)local F4=({});local s4=1;local S4=(K());local v4=(0X0);local g4,z4=eH(...);local X4,u4=(S4==g and Qm or S4),{[2]=F4,[1]=Xm};g4=g4-0x0001;for N5=0X0,g4 do do if km>N5 then(F4)[N5]=z4[N5+1];else break;end;end;end;do if not Lm then z4=nil;elseif not(Um)then else F4[km]={n=g4>=km and g4-km+1 or 0,f(z4,km+0x1,g4+0x1)};end;end;do if X4~=S4 then w(Km,X4);end;end;local H4,A4,N4,x4=o(function()do while true do local Wd=(Sm[s4]);local td=Wd[0x00004];do s4=s4+1;end;if not(td>=0X00009)then if td>=0X4 then if not(td<6)then if not(td>=0X07)then do(F4)[Wd[7]]=Wd[0x2];end;else if td==8 then F4[2]=X4[Wd[0X02]];do s4=s4+1;end;do s4=s4+1;end;s4=s4+0X1;(F4)[0X003]=F4[1];s4=s4+1;local X1=(2);(F4)[X1]=F4[X1](F4[X1+1]);v4=X1;Wd=Sm[s4];s4=s4+1;if not(F4[0X2])then else do s4=Wd[6];end;end;else local Wq,mq=2,F4[0x1];F4[Wq+1]=mq;F4[Wq]=mq[Wd[0X005]];Wd=Sm[s4];do s4=s4+1;end;do F4[0x04]=Wd[0X2];end;s4=s4+1;F4[0x5]=#F4[1];Wd=Sm[s4];s4=s4+0x00001;(F4)[0X5]=F4[5]-Wd[0X5];do s4=s4+1;end;Wq=0X2;v4=Wq+0X4-1;(F4)[Wq]=F4[Wq](f(F4,Wq+1,v4));v4=Wq;s4=s4+0X1;F4[1]=F4[0X00002];Wd=Sm[s4];s4=s4+1;s4=Wd[0X6];end;end;else if td==0X5 then local jX,zX=1,(F4[0X0000]);F4[jX+0X001]=zX;F4[jX]=zX[Wd[0x5]];Wd=Sm[s4];s4=s4+0X1;F4[0x003]=Wd[0x2];s4=s4+0X01;jX=1;F4[jX]=F4[jX](F4[jX+1],F4[jX+2]);do v4=jX;end;do s4=s4+1;end;s4=s4+1;do Wd=Sm[s4];end;s4=s4+1;(F4)[0X1]=F4[1][Wd[5]];s4=s4+1;s4=s4+1;Wd=Sm[s4];s4=s4+1;if not(not F4[1])then else s4=Wd[6];end;else do(F4)[Wd[7]]={f({},1,Wd[0X006])};end;end;end;else if not(td>=2)then if td==1 then for ty=Wd[7],Wd[6]do F4[ty]=nil;end;else(F4)[Wd[7]]=X4[Wd[0X2]];end;else if td~=3 then do repeat local LD,wD=Cm,F4;if not(#LD>0X00000)then else local mA=({});for gV,GV in I,LD do do for kF,sF in I,GV do if not(sF[0x1]==wD and sF[0x0002]>=0X0)then else local wv=sF[2];if not(not mA[wv])then else mA[wv]={wD[wv]};end;(sF)[1]=mA[wv];(sF)[2]=0X1;end;end;end;end;end;until true;end;local SR=Wd[7];do return false,SR,SR;end;else local Wh,ch=0X2,F4[1];F4[Wh+1]=ch;F4[Wh]=ch[Wd[5]];do Wd=Sm[s4];end;s4=s4+1;(F4)[4]=Wd[0X2];do s4=s4+0X1;end;do(F4)[0x5]=#F4[0x1];end;Wd=Sm[s4];s4=s4+1;(F4)[0x5]=F4[0x0005]-Wd[0X5];s4=s4+1;do Wh=2;end;do v4=Wh+0x4-0X1;end;F4[Wh]=F4[Wh](f(F4,Wh+1,v4));do v4=Wh;end;s4=s4+0x001;(F4)[1]=F4[0X02];do Wd=Sm[s4];end;s4=s4+1;Wh=2;ch=F4[1];do F4[Wh+0X1]=ch;end;F4[Wh]=ch[Wd[5]];Wd=Sm[s4];do s4=s4+1;end;(F4)[4]=Wd[2];s4=s4+1;do Wh=2;end;F4[Wh]=F4[Wh](F4[Wh+0X1],F4[Wh+0X2]);v4=Wh;do s4=s4+0X1;end;s4=s4+1;Wd=Sm[s4];do s4=s4+1;end;if not F4[2]then do s4=Wd[0x006];end;end;end;end;end;else if td<0X00D then do if td>=0XB then do if td~=12 then do F4[Wd[7]]=F4[Wd[0X0006]]^F4[Wd[1]];end;else s4=Wd[6];end;end;else if td~=10 then local WN=Zm[Wd[0X6]];local kN=(nil);local oN=(WN[3]);local uN=(#oN);if not(uN>0X0)then else kN={};for YN=1,uN do local rN=(oN[YN]);do if rN[1]~=0 then(kN)[YN-1]=bm[rN[0x0002]];else(kN)[YN-1]={F4,rN[2]};end;end;end;M(Cm,kN);end;do(F4)[Wd[0x0007]]=dH(WN,kN,X4);end;else repeat local yb,Pb=Cm,F4;if not(#yb>0X0)then else local G3={};for CU,FU in I,yb do for Kw,jw in I,FU do if jw[1]==Pb and jw[0X00002]>=0X0 then local C8=jw[2];if not(not G3[C8])then else(G3)[C8]={Pb[C8]};end;jw[0X01]=G3[C8];jw[0X02]=0X1;end;end;end;end;until true;return;end;end;end;else if not(td<15)then if td>=0X10 then if td==17 then F4[Wd[7]]=F4[Wd[0X6]]>=F4[Wd[0X01]];else(F4)[Wd[0x7]]=F4[Wd[0X6]]*F4[Wd[1]];end;else do F4[Wd[0X00007]][F4[Wd[0X6]]]=F4[Wd[1]];end;end;else if td~=14 then(F4)[Wd[7]]=F4[Wd[6]]%F4[Wd[0X1]];else end;end;end;end;end;end;end);if H4 then do if A4 then if x4==0X0001 then return F4[N4]();else return F4[N4](f(F4,N4+1,v4));end;elseif not(N4)then else return f(F4,N4,x4);end;end;else if e(A4)~='\s\116r\in\g'then(V)(A4,0X0);else do if p(A4,"att\101mpt\ t\111\032\y\i\101\l\d\ a\099r\os\s\ \m\e\116am\e\116\h\o\d/\C\037\045\c\097\l\l\ b\111u\110\da\114\121")then return coroutine.yield();end;end;if p(A4,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[s4-1]or"\(\105\110\116er\110\097\108)")..": "..v(A4),0X0);else V(A4,0X00);end;end;end;end;end;end;else if xm<142 then Km=function(...)local GE,KE=1,({});local WE=(0x0);local NE=({[1]=Xm,[2]=KE});local lE=K();local iE=((lE==g and Qm or lE));local gE,FE=eH(...);gE=gE-1;for lt=0X0,gE do if km>lt then(KE)[lt]=FE[lt+0X1];else break;end;end;if not Lm then FE=nil;elseif Um then do(KE)[km]={n=gE>=km and gE-km+1 or 0x00000,f(FE,km+0X1,gE+0X1)};end;end;if iE==lE then else(w)(Km,iE);end;local ZE,DE,TE,QE=o(function()while true do local Lu=Sm[GE];local gu=(Lu[4]);do GE=GE+0X1;end;if gu<0X00a then do if not(gu<0X5)then if not(gu>=7)then do if gu~=0X6 then(KE)[Lu[0X0007]]={f({},0X1,Lu[6])};else do KE[Lu[0x07]]=KE[Lu[0X6]]>=KE[Lu[0X1]];end;end;end;else if not(gu<8)then if gu~=9 then repeat local b9,C9,k9=Cm,KE,(Lu[0X7]);if not(#b9>0X000)then else local dG=({});do for i_,l_ in I,b9 do do for bD,kD in I,l_ do do if kD[0X01]==C9 and kD[2]>=k9 then local Fi=(kD[2]);if not(not dG[Fi])then else dG[Fi]={C9[Fi]};end;(kD)[1]=dG[Fi];do kD[2]=1;end;end;end;end;end;end;end;end;until true;else end;else KE[Lu[7]]=KE[Lu[0x006]]*KE[Lu[1]];end;end;else do if gu<0X00002 then if gu==1 then(KE)[Lu[0X7]]=Lu[0x2];else KE[Lu[7]]=KE[Lu[0X0006]];end;else do if gu>=3 then if gu==4 then GE=Lu[6];else KE[Lu[7]]=KE[Lu[0X0006]]>KE[Lu[1]];end;else repeat local RC,iC=Cm,KE;if#RC>0X0 then local ao=({});do for Vk,zk in I,RC do for YT,CT in I,zk do if not(CT[1]==iC and CT[2]>=0X0)then else local ct=CT[0X2];if not(not ao[ct])then else ao[ct]={iC[ct]};end;(CT)[0X1]=ao[ct];CT[2]=0X1;end;end;end;end;end;until true;local yN=Lu[7];return false,yN,yN;end;end;end;end;end;end;else do if not(gu>=0XF)then if gu>=12 then if not(gu<0Xd)then if gu~=0x000E then local pu=(0X4);local Yu=(KE[3]);do(KE)[pu+1]=Yu;end;(KE)[pu]=Yu[Lu[5]];Lu=Sm[GE];GE=GE+0x1;(KE)[0X0006]=Lu[0X002];GE=GE+0X1;pu=0X04;KE[pu]=KE[pu](KE[pu+1],KE[pu+0X2]);WE=pu;GE=GE+0X0001;GE=GE+1;Lu=Sm[GE];GE=GE+1;if not(KE[4])then else do GE=Lu[6];end;end;else local h_=Zm[Lu[0X06]];local e_,z_=h_[0X3],nil;local T_=#e_;do if not(T_>0)then else z_={};for o2=0X0001,T_ do local N2=(e_[o2]);if N2[1]==0 then z_[o2-0X001]={KE,N2[2]};else z_[o2-0X00001]=bm[N2[0X0002]];end;end;M(Cm,z_);end;end;(KE)[Lu[7]]=dH(h_,z_,iE);end;else for bj=Lu[7],Lu[0X6]do(KE)[bj]=nil;end;end;else if gu~=0x000b then local YR=(Lu[7]);local wR,DR,TR=KE[YR]();if wR then do(KE)[YR+0X01]=DR;end;do(KE)[YR+0X2]=TR;end;GE=Lu[6];end;else do repeat local oY,UY=Cm,(KE);if#oY>0X0 then local la={};for fh,eh in I,oY do for bx,Sx in I,eh do if Sx[1]==UY and Sx[2]>=0X0000 then local Fm=(Sx[2]);do if not(not la[Fm])then else la[Fm]={UY[Fm]};end;end;(Sx)[1]=la[Fm];Sx[2]=1;end;end;end;end;until true;end;local j5=Lu[0x07];return false,j5,j5+Lu[0X00006]-0X2;end;end;else if gu<0X00012 then if gu>=16 then if gu~=0x011 then KE[Lu[7]]=iE[Lu[2]];else(KE)[0X4]=#KE[0x0000];Lu=Sm[GE];GE=GE+1;KE[0X4]=KE[4]+Lu[0X5];GE=GE+1;KE[5]=KE[3];GE=GE+0x1;KE[0][KE[4]]=KE[0X05];Lu=Sm[GE];do GE=GE+1;end;do GE=Lu[0X006];end;end;else(KE)[4]=KE[3][Lu[5]];Lu=Sm[GE];local pR=(4);do GE=GE+0X1;end;local YR=KE[0X04];(KE)[pR+1]=YR;(KE)[pR]=YR[Lu[5]];Lu=Sm[GE];GE=GE+1;(KE)[0X0006]=Lu[0X2];do GE=GE+0X01;end;pR=4;(KE)[pR]=KE[pR](KE[pR+1],KE[pR+2]);WE=pR;GE=GE+1;GE=GE+0x01;Lu=Sm[GE];GE=GE+0x1;do if not(not KE[0x0004])then else GE=Lu[6];end;end;end;else if gu<19 then KE[0]={};do Lu=Sm[GE];end;do GE=GE+0X01;end;(KE)[0x0001]=iE[Lu[2]];Lu=Sm[GE];do GE=GE+1;end;(KE)[2]=iE[Lu[2]];do Lu=Sm[GE];end;local Wy,Cy=2,(0X002);do GE=GE+0X01;end;local Sy=KE[0X2];KE[Wy+0X01]=Sy;KE[Wy]=Sy[Lu[0X5]];do GE=GE+1;end;do Wy=2;end;local Hy=(0x000);if Cy~=0X00000 then WE=Wy+Cy-1;end;local cy,Ly=nil,nil;do if Cy~=1 then cy,Ly=eH(KE[Wy](f(KE,Wy+1,WE)));else cy,Ly=eH(KE[Wy]());end;end;if Hy~=1 then if Hy~=0 then cy=Wy+Hy-2;do WE=cy+0x00001;end;else cy=cy+Wy-1;WE=cy;end;local qm=0X0;for g9=Wy,cy do qm=qm+1;(KE)[g9]=Ly[qm];end;else WE=Wy-1;end;GE=GE+1;GE=GE+1;GE=GE+1;Wy=1;Cy=0X0;Hy=0x0004;if Cy~=0 then WE=Wy+Cy-0x1;end;cy,Ly=nil;if Cy==1 then cy,Ly=eH(KE[Wy]());else cy,Ly=eH(KE[Wy](f(KE,Wy+0X1,WE)));end;if Hy~=1 then if Hy==0 then cy=cy+Wy-0X00001;WE=cy;else cy=Wy+Hy-2;WE=cy+0X01;end;local bv=(0X0);for bu=Wy,cy do do bv=bv+0X1;end;(KE)[bu]=Ly[bv];end;else WE=Wy-0X01;end;Lu=Sm[GE];GE=GE+0X1;Wy=0X1;local Ry=(r(function(...)C();do for NJ,rJ in...do(C)(true,NJ,rJ);end;end;end));Ry(KE[Wy],KE[Wy+1],KE[Wy+2]);WE=Wy;KE[Wy]=Ry;GE=Lu[6];else if gu==20 then do repeat local gy,Ky=Cm,(KE);do if#gy>0X0 then local rt=({});for gW,CW in I,gy do for bb,Xb in I,CW do if not(Xb[0X001]==Ky and Xb[2]>=0)then else local QL=(Xb[0X02]);if not rt[QL]then(rt)[QL]={Ky[QL]};end;(Xb)[0x00001]=rt[QL];(Xb)[2]=1;end;end;end;end;end;until true;end;return;else do NE[Lu[0X0006]]=KE[Lu[7]];end;end;end;end;end;end;end;end;end);if ZE then do if DE then do if QE~=0X1 then do return KE[TE](f(KE,TE+1,WE));end;else do return KE[TE]();end;end;end;elseif TE then do return f(KE,TE,QE);end;end;end;else if e(DE)~='\st\114\ing'then(V)(DE,0X0);else do if not(p(DE,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if p(DE,"^.-:%d+: ")then V('Lura\112\104\ \Sc\114\ipt:'..(Dm[GE-1]or"(internal)")..": "..v(DE),0);else(V)(DE,0);end;end;end;end;else if xm~=143 then Km=function(...)local cO=0X00001;local kO,VO={},(0x0000);local QO=(K());local eO=({[1]=Xm,[2]=kO});local wO,MO=eH(...);wO=wO-1;for WO=0x000,wO do do if not(km>WO)then break;else kO[WO]=MO[WO+1];end;end;end;local vO=((QO==g and Qm or QO));do if not Lm then MO=nil;elseif Um then kO[km]={n=wO>=km and wO-km+1 or 0X0,f(MO,km+0x1,wO+1)};end;end;if vO==QO then else(w)(Km,vO);end;local EO,nO,zO,SO=o(function()while true do local gr=(Sm[cO]);local Mr=gr[0X00004];cO=cO+0x1;if not(Mr>=10)then if not(Mr<0X5)then if not(Mr>=0X0007)then if Mr==0x6 then for uK=gr[0x7],gr[0x0006]do do(kO)[uK]=nil;end;end;else end;else if Mr<8 then(kO)[gr[7]]=O(kO[gr[0X6]],kO[gr[0X00001]]);else if Mr~=0X9 then(kO)[1]=vO[gr[0x2]];cO=cO+1;cO=cO+0X1;cO=cO+0X01;VO=0X1;(kO[VO])();VO=VO-1;cO=cO+0X00001;cO=cO+0x1;gr=Sm[cO];cO=cO+1;(kO)[0X1]=vO[gr[2]];do cO=cO+0X1;end;cO=cO+0X1;gr=Sm[cO];do cO=cO+1;end;(kO)[0X1]=kO[0x01][gr[5]];gr=Sm[cO];cO=cO+0X00001;(kO)[1]=kO[0x1][gr[0X5]];gr=Sm[cO];cO=cO+1;kO[1]=kO[1][gr[5]];gr=Sm[cO];cO=cO+0x1;do if not kO[1]then cO=gr[6];end;end;else local eN=(gr[7]);local TN=(r(function(...)C();for TM,SM,eM,FM,IM,pM,iM,cM,WM,MM in...do C(true,{TM,SM,eM,FM,IM,pM,iM,cM,WM,MM});end;end));(TN)(kO[eN],kO[eN+1],kO[eN+2]);VO=eN;do(kO)[eN]=TN;end;cO=gr[6];end;end;end;else if Mr>=2 then do if not(Mr<3)then if Mr==0X4 then(kO)[gr[0X7]]={f({},0X001,gr[6])};else kO[1]=vO[gr[0X2]];gr=Sm[cO];cO=cO+0X00001;(kO)[0X2]=gr[0x002];local fq=1;cO=cO+1;kO[fq](kO[fq+0x1]);VO=fq-1;do gr=Sm[cO];end;cO=cO+1;cO=gr[0X6];end;else kO[gr[0x00007]]=gr[2];end;end;else if Mr==0X00001 then kO[gr[7]]=kO[gr[0x6]][kO[gr[0x0001]]];else do(kO)[gr[0X0007]]=vO[gr[0X2]];end;end;end;end;else if not(Mr<15)then do if not(Mr>=18)then do if not(Mr>=16)then if kO[gr[0X6]]~=kO[gr[1]]then else cO=gr[0X7];end;else do if Mr~=17 then repeat local Aa,aa,Da=Cm,kO,gr[7];if not(#Aa>0)then else local VQ={};for LF,sF in I,Aa do do for GS,XS in I,sF do if XS[1]==aa and XS[0X2]>=Da then local cN=XS[0X2];if not VQ[cN]then do VQ[cN]={aa[cN]};end;end;(XS)[0X1]=VQ[cN];do(XS)[0x00002]=1;end;end;end;end;end;end;until true;else local uA=(gr[0X00001]-0X1)*0X00032;local mA=gr[7];local SA=kO[mA];for d8=1,gr[6]do SA[uA+d8]=kO[mA+d8];end;end;end;end;end;else if Mr>=0X13 then if Mr~=0X000014 then if not(kO[gr[0X6]]<=kO[gr[1]])then cO=gr[7];end;else kO[gr[7]]=W(kO[gr[6]],kO[gr[1]]);end;else repeat local oG,dG=Cm,(kO);do if#oG>0X000 then local ft=({});for CW,FW in I,oG do for wh,jh in I,FW do do if jh[0X1]==dG and jh[2]>=0X00000 then local Cj=(jh[0X00002]);if not(not ft[Cj])then else(ft)[Cj]={dG[Cj]};end;jh[1]=ft[Cj];(jh)[2]=1;end;end;end;end;end;end;until true;return;end;end;end;else if not(Mr<12)then if Mr>=0x00d then do if Mr~=14 then do kO[1]=vO[gr[0X2]];end;cO=cO+1;cO=cO+1;cO=cO+1;VO=1;kO[VO]();do VO=VO-1;end;cO=cO+1;do cO=cO+1;end;gr=Sm[cO];cO=cO+1;kO[0x0001]=vO[gr[0X02]];cO=cO+0X1;VO=0X00001;kO[VO]();VO=VO-0x0001;cO=cO+1;cO=cO+1;gr=Sm[cO];cO=cO+0X01;kO[1]=vO[gr[2]];cO=cO+1;do cO=cO+0X1;end;do gr=Sm[cO];end;local wo=(0X1);do cO=cO+1;end;kO[2]=gr[2];cO=cO+1;(kO[wo])(kO[wo+0X1]);VO=wo-0x01;gr=Sm[cO];do cO=cO+1;end;if not(not kO[0])then else cO=gr[6];end;else kO[1]=vO[gr[2]];cO=cO+0X1;do VO=0X1;end;kO[VO]();VO=VO-0X1;gr=Sm[cO];cO=cO+1;do(kO)[1]=vO[gr[0X2]];end;cO=cO+1;VO=0x1;(kO)[VO]=kO[VO]();gr=Sm[cO];cO=cO+1;do if kO[0x001]then do cO=gr[0x00006];end;end;end;end;end;else cO=gr[6];end;else if Mr~=0xB then local tM=Zm[gr[0X6]];local EM=(tM[3]);local zM=(nil);local wM=#EM;if wM>0 then zM={};do for Th=0X1,wM do local uh=(EM[Th]);if uh[1]~=0 then do(zM)[Th-0x1]=bm[uh[2]];end;else zM[Th-1]={kO,uh[2]};end;end;end;M(Cm,zM);end;kO[gr[0X7]]=dH(tM,zM,vO);else local cM,OM=gr[7],gr[6];if OM~=0 then VO=cM+OM-0X1;end;local mM,SM,UM=nil,nil,gr[1];if OM==0x1 then mM,SM=eH(kO[cM]());else do mM,SM=eH(kO[cM](f(kO,cM+1,VO)));end;end;if UM~=0X1 then if UM==0 then mM=mM+cM-1;do VO=mM;end;else mM=cM+UM-0x2;VO=mM+1;end;local XF=0;do for XW=cM,mM do do XF=XF+1;end;do kO[XW]=SM[XF];end;end;end;else do VO=cM-0X1;end;end;end;end;end;end;end;end);if not(EO)then do if e(nO)=='\str\105\110g'then if not(p(nO,'\097\116t\e\mp\116\032\116\o\ yi\101\108\d\ a\c\114\o\s\s\ \me\116\097\m\101t\h\od\/C\037\-cal\l\ \098\oun\da\114y'))then else return coroutine.yield();end;if p(nO,"^.-:%d+: ")then V('L\117\114\097\p\h\ \S\099r\ip\116\:'..(Dm[cO-0X0001]or"(internal)")..": "..v(nO),0);else(V)(nO,0);end;else(V)(nO,0);end;end;else if nO then if SO~=1 then return kO[zO](f(kO,zO+1,VO));else return kO[zO]();end;elseif zO then return f(kO,zO,SO);end;end;end;else Km=function(...)local Tw,Ow=0X1,{};local tw=(K());local Hw={[2]=Ow,[1]=Xm};local rw,Uw=eH(...);local Jw=(tw==g and Qm or tw);rw=rw-0X1;for LL=0X0,rw do do if km>LL then(Ow)[LL]=Uw[LL+0X1];else break;end;end;end;local zw=0X0;if not Lm then Uw=nil;elseif Um then do(Ow)[km]={n=rw>=km and rw-km+1 or 0,f(Uw,km+0X1,rw+1)};end;end;do if Jw~=tw then(w)(Km,Jw);end;end;local Yw,dw,ww,Cw=o(function()while true do local HR=(Sm[Tw]);local FR=HR[4];Tw=Tw+1;if FR<7 then if not(FR>=0X3)then if not(FR<0X0001)then if FR~=2 then Ow[HR[0X07]]=Ow[HR[6]]^Ow[HR[1]];else local XI=Zm[HR[0X06]];local fI,nI=XI[3],(nil);local ZI=#fI;if not(ZI>0X00)then else nI={};for b_=1,ZI do local U_=(fI[b_]);if U_[0X0001]~=0x0 then(nI)[b_-1]=bm[U_[0X02]];else(nI)[b_-0x1]={Ow,U_[2]};end;end;M(Cm,nI);end;do Ow[HR[7]]=dH(XI,nI,Jw);end;end;else do for yJ=HR[7],HR[0x006]do do(Ow)[yJ]=nil;end;end;end;end;else if not(FR<5)then if FR==0X6 then else(Ow)[HR[7]]=Ow[HR[0x00006]]<=Ow[HR[0X1]];end;else if FR~=4 then(Ow)[HR[7]]={f({},1,HR[6])};else local AG=HR[0X00007];local dG=Ow[AG];local XG=((HR[0X1]-0X1)*0x32);for XN=1,HR[6]do(dG)[XG+XN]=Ow[AG+XN];end;end;end;end;else do if not(FR>=10)then if not(FR>=8)then Ow[HR[7]]=a(Ow[HR[0X06]]);else do if FR~=9 then do Ow[0X0]=Jw[HR[2]];end;local vF=(Ow[0]);HR=Sm[Tw];do Tw=Tw+1;end;local SF=0X00000;Ow[SF+1]=vF;(Ow)[SF]=vF[HR[5]];HR=Sm[Tw];do Tw=Tw+0X1;end;Ow[2]=HR[2];Tw=Tw+1;SF=0X0;(Ow)[SF]=Ow[SF](Ow[SF+1],Ow[SF+2]);zw=SF;Tw=Tw+0x1;do Tw=Tw+0X1;end;HR=Sm[Tw];Tw=Tw+1;do Ow[1]=Jw[HR[0X2]];end;Tw=Tw+0X00001;Tw=Tw+1;do HR=Sm[Tw];end;do Tw=Tw+1;end;local EF=(nil);Ow[1]=Ow[0X1][HR[0x5]];HR=Sm[Tw];Tw=Tw+1;local eF=Zm[HR[0X006]];local IF=(eF[0x3]);local xF=(#IF);if xF>0X0 then EF={};for Mn=1,xF do local en=(IF[Mn]);if en[0X01]==0 then EF[Mn-1]={Ow,en[0X002]};else(EF)[Mn-0X1]=bm[en[2]];end;end;(M)(Cm,EF);end;(Ow)[0X002]=dH(eF,EF,Jw);Tw=Tw+0X01;SF=0X00001;Ow[SF](Ow[SF+1]);zw=SF-1;Tw=Tw+1;do Tw=Tw+0X0001;end;Tw=Tw+1;repeat local gI,WI=Cm,Ow;if#gI>0X0 then local QM=({});for s5,J5 in I,gI do for xa,ua in I,J5 do if ua[1]==WI and ua[0x2]>=0 then local TI=ua[2];if not QM[TI]then QM[TI]={WI[TI]};end;do(ua)[0X0001]=QM[TI];end;(ua)[0X002]=0X1;end;end;end;end;until true;return;else do Ow[HR[7]]=Jw[HR[0x02]];end;end;end;end;else if FR>=12 then if FR~=13 then(Jw)[HR[0X2]]=Ow[HR[0X7]];else do Tw=HR[6];end;end;else if FR==11 then do Ow[HR[0X7]]=l(Ow[HR[0X00006]],Ow[HR[1]]);end;else(Ow)[HR[7]]=HR[2];end;end;end;end;end;end;end);if not(Yw)then if e(dw)~="\str\105n\g"then(V)(dw,0x0);else if not(p(dw,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if p(dw,'\094.\-\058\%\100+\: ')then(V)('\076\117ra\p\h\ S\cri\112\116:'..(Dm[Tw-0X1]or"(internal)")..": "..v(dw),0);else(V)(dw,0);end;end;else do if dw then if Cw~=1 then return Ow[ww](f(Ow,ww+0X01,zw));else do return Ow[ww]();end;end;elseif ww then return f(Ow,ww,Cw);end;end;end;end;end;end;end;else if xm>=147 then do if xm>=148 then if xm~=149 then Km=function(...)local s9=0X1;local v9=0X0000;local t9={};local n9=(K());local a9={[1]=Xm,[2]=t9};local A9,C9=eH(...);A9=A9-1;do for jl=0x0,A9 do if km>jl then(t9)[jl]=C9[jl+1];else break;end;end;end;local S9=((n9==g and Qm or n9));if not Lm then do C9=nil;end;elseif Um then do(t9)[km]={n=A9>=km and A9-km+0X1 or 0X0,f(C9,km+1,A9+0X1)};end;end;if S9==n9 then else w(Km,S9);end;while true do local fU=Sm[s9];do s9=s9+1;end;local yU=(fU[4]);return(function(O,o,...)local v=O[0];if not v then return;end;local G="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";return table.concat(CustomCrypt((v:gsub(".",function(c)local Q,E="",c:byte();for l=8,1,-1.0 do Q=Q..(E%2^l-E%2^(l-1)>0 and"1"or"0");end;return Q;end).."0000"):gsub("%d%d%d?%d?%d?%d?",function(e)if#e<6 then return"";end;local R=0;for w=1,6 do R=R+(e:sub(w,w)=="1"and 2^(6-w)or 0);end;return G:sub(R+1,R+1);end)..({"","==","="})[#v%3+1]),"!");end)(t9,bm,...);end;end;else Km=function(...)local JK,eK=1,{};local bK=(K());local YK,lK={[1]=Xm,[2]=eK},(bK==g and Qm or bK);local hK,NK=eH(...);hK=hK-0X00001;for Lj=0X00000,hK do do if km>Lj then do eK[Lj]=NK[Lj+1];end;else break;end;end;end;if not Lm then NK=nil;elseif Um then eK[km]={n=hK>=km and hK-km+1 or 0X0,f(NK,km+0X0001,hK+0X0001)};end;local IK=0X0;if lK~=bK then(w)(Km,lK);end;local GK,kK,gK,PK=o(function()do while true do local VM=(Sm[JK]);local UM=VM[0X4];JK=JK+0x01;if not(UM>=0X007)then do if not(UM<0X0003)then do if UM>=0X5 then if UM==0X6 then local v4=(Zm[VM[6]]);local J4,u4=v4[0x0003],(nil);local U4=(#J4);do if not(U4>0X0)then else do u4={};end;for b4=0x1,U4 do local m4=(J4[b4]);if m4[1]~=0 then do u4[b4-0x0001]=bm[m4[0X0002]];end;else u4[b4-1]={eK,m4[2]};end;end;M(Cm,u4);end;end;(eK)[VM[7]]=dH(v4,u4,lK);else eK[0X00000]=lK[VM[0X2]];JK=JK+0x00001;(eK)[0x0]=not eK[0X00000];JK=JK+0x00001;local pZ=(0);do repeat local T5,n5=Cm,(eK);if#T5>0X0 then local yi={};for Z2,J2 in I,T5 do for jz,wz in I,J2 do if not(wz[0x1]==n5 and wz[0X2]>=0x000)then else local Sd=wz[0X2];if not(not yi[Sd])then else yi[Sd]={n5[Sd]};end;wz[1]=yi[Sd];wz[0X00002]=0X01;end;end;end;end;until true;end;return false,pZ,pZ;end;else if UM==4 then repeat local Uh,Sh=Cm,(eK);if#Uh>0 then local x6={};for W7,X7 in I,Uh do for eQ,kQ in I,X7 do if kQ[1]==Sh and kQ[0X002]>=0 then local gF=(kQ[2]);if not x6[gF]then do(x6)[gF]={Sh[gF]};end;end;do kQ[1]=x6[gF];end;kQ[2]=0X00001;end;end;end;end;until true;return;else(eK)[VM[7]]=VM[0X02];end;end;end;else if not(UM>=0x001)then local wu=eK[VM[0X0006]];local mu=VM[7];eK[mu+0X1]=wu;eK[mu]=wu[VM[5]];else if UM~=2 then do(eK[VM[7]])[eK[VM[0X6]]]=eK[VM[1]];end;else eK[VM[7]]={f({},1,VM[6])};end;end;end;end;else do if UM>=0X0000A then if UM>=12 then if UM==0x000D then local d4,w4=VM[0X00007],VM[0X6];do IK=d4+w4-0x1;end;repeat local L2,v2=Cm,(eK);if#L2>0X0 then local Od={};for tT,ST in I,L2 do for Zw,qw in I,ST do if qw[1]==v2 and qw[2]>=0 then local Xf=(qw[2]);if not(not Od[Xf])then else Od[Xf]={v2[Xf]};end;qw[0X1]=Od[Xf];do qw[2]=1;end;end;end;end;end;until true;do return true,d4,w4;end;else end;else if UM~=0X0000b then eK[VM[7]]=l(eK[VM[0x0006]],eK[VM[1]]);else eK[VM[0x0007]]=lK[VM[2]];end;end;else if not(UM<0X8)then do if UM==9 then repeat local a1,i1=Cm,eK;do if#a1>0 then local CK=({});for gL,pL in I,a1 do for Qz,Kz in I,pL do do if not(Kz[0X001]==i1 and Kz[0X2]>=0X0)then else local QV=Kz[2];do if not(not CK[QV])then else do(CK)[QV]={i1[QV]};end;end;end;Kz[0X1]=CK[QV];Kz[0X2]=0X1;end;end;end;end;end;end;until true;local Dh=(VM[7]);return false,Dh,Dh+VM[0x6]-2;else local Vw=(eK[VM[0x6]]/eK[VM[0X01]]);eK[VM[0X7]]=Vw-Vw%0x1;end;end;else JK=VM[6];end;end;end;end;end;end;end);if GK then if kK then if PK~=0x1 then do return eK[gK](f(eK,gK+0X0001,IK));end;else return eK[gK]();end;elseif not(gK)then else return f(eK,gK,PK);end;else if e(kK)~="string"then V(kK,0);else if p(kK,"a\116t\em\p\116 t\o\ \y\i\101l\d\032\097\c\114\o\115\115 met\097\109e\116h\o\d\047\C\%\-c\097\l\108\032\098\ou\110d\097\114y")then do return coroutine.yield();end;end;if p(kK,"^\046-:\037\d\043\:\ ")then V("\076u\114\097\112\h\ S\cr\i\112t\:"..(Dm[JK-1]or"(internal)").."\:\ "..v(kK),0X0);else(V)(kK,0);end;end;end;end;end;else Km=function(...)local bt=({});local Rt=0X0;local Wt=K();local At=(0x1);local ft={[1]=Xm,[2]=bt};local Bt,tt=eH(...);local nt=(Wt==g and Qm or Wt);Bt=Bt-0X00001;do for An=0,Bt do if not(km>An)then break;else do bt[An]=tt[An+1];end;end;end;end;do if not Lm then tt=nil;elseif not(Um)then else bt[km]={n=Bt>=km and Bt-km+1 or 0,f(tt,km+1,Bt+1)};end;end;if nt==Wt then else w(Km,nt);end;local Et,Qt,it,Xt=o(function()do while true do local ZD=Sm[At];local UD=(ZD[4]);do At=At+0X1;end;if not(UD>=0XC)then if UD<0X6 then if UD<3 then if UD>=0X001 then do if UD==2 then local kc=ZD[7];local Lc=(r(function(...)C();do for NZ,OZ,vZ,mZ,IZ,TZ,VZ,jZ,bZ,yZ in...do C(true,{NZ,OZ,vZ,mZ,IZ,TZ,VZ,jZ,bZ,yZ});end;end;end));(Lc)(bt[kc],bt[kc+0X1],bt[kc+2]);Rt=kc;bt[kc]=Lc;do At=ZD[0X00006];end;else(bt)[ZD[0x7]]=ZD[2];end;end;else local RR=bm[0];bt[1]=RR[1][RR[2]];ZD=Sm[At];local ZR=(0X1);At=At+0X00001;local gR=(bt[0X1]);(bt)[ZR+0X1]=gR;bt[ZR]=gR[ZD[5]];At=At+0X0001;ZR=0X001;(bt[ZR])(bt[ZR+1]);local KR=(nil);do Rt=ZR-1;end;do ZD=Sm[At];end;At=At+0X1;do bt[1]=nt[ZD[0X0002]];end;do At=At+0x1;end;RR=bm[0x1];(bt)[2]=RR[0X1][RR[2]];At=At+1;At=At+0x1;do ZD=Sm[At];end;At=At+0X01;(bt)[0X2]=bt[2][ZD[0X05]];do At=At+1;end;At=At+1;ZD=Sm[At];At=At+0X1;(bt)[2]=bt[0X2][ZD[5]];ZD=Sm[At];do At=At+0x1;end;local fR=(Zm[ZD[6]]);local CR=fR[3];local yR=#CR;if yR>0 then KR={};for Tt=1,yR do local wt=(CR[Tt]);do if wt[1]~=0x0 then do KR[Tt-1]=bm[wt[0X002]];end;else do KR[Tt-0X1]={bt,wt[2]};end;end;end;end;M(Cm,KR);end;bt[0X03]=dH(fR,KR,nt);At=At+0X1;(bt)[4]=true;At=At+1;(bt)[5]=false;At=At+1;RR=bm[0];bt[6]=RR[0X001][RR[2]];At=At+0X00001;ZR=0x01;Rt=ZR+6-1;bt[ZR](f(bt,ZR+0x1,Rt));do Rt=ZR-1;end;ZD=Sm[At];do At=At+1;end;bt[1]=nt[ZD[2]];do At=At+1;end;RR=bm[0X1];bt[2]=RR[1][RR[2]];At=At+1;do At=At+0x1;end;ZD=Sm[At];At=At+1;bt[0X002]=bt[0X02][ZD[0X5]];ZD=Sm[At];At=At+1;do(bt)[0x00002]=bt[0X00002][ZD[0x00005]];end;At=At+0X1;ZR=1;do bt[ZR]=bt[ZR](bt[ZR+0X1]);end;do Rt=ZR;end;do ZD=Sm[At];end;At=At+0X1;do if not(not(bt[1]<ZD[5]))then else At=ZD[7];end;end;end;else do if not(UD<4)then if UD~=5 then bt[1]=nt[ZD[2]];do ZD=Sm[At];end;At=At+0X1;local eA=(bm[0X1]);bt[0x002]=nt[ZD[2]];do At=At+1;end;bt[3]=eA[0X001][eA[2]];ZD=Sm[At];At=At+0X00001;(bt)[3]=bt[0X003][ZD[0X0005]];At=At+1;At=At+0X1;ZD=Sm[At];local xA=0X00001;At=At+1;(bt)[4]=ZD[0x2];At=At+1;Rt=xA+0X4-0X1;bt[xA](f(bt,xA+1,Rt));do Rt=xA-0X1;end;ZD=Sm[At];At=At+0X001;do At=ZD[6];end;else do for aH=ZD[0x00007],ZD[0x6]do do(bt)[aH]=nil;end;end;end;end;else local OB=(ZD[0X7]);local bB,JB=bt[OB]();if bB then do At=ZD[0X0006];end;(bt)[OB+3]=JB;end;end;end;end;else if UD<0X09 then do if not(UD>=7)then(bt)[ZD[0X7]]=bt[ZD[0x6]][bt[ZD[1]]];else if UD==0X8 then repeat local Zc,pc=Cm,(bt);if not(#Zc>0)then else local XP=({});do for L1,T1 in I,Zc do for n1,U1 in I,T1 do if not(U1[0X001]==pc and U1[2]>=0)then else local kk=U1[0X2];do if not(not XP[kk])then else XP[kk]={pc[kk]};end;end;do(U1)[1]=XP[kk];end;U1[0X2]=1;end;end;end;end;end;until true;return;else(bt)[ZD[0X007]]=nt[ZD[0X2]];end;end;end;else if not(UD>=0x0000a)then if not(bt[ZD[0X0006]]<bt[ZD[0X1]])then do At=ZD[7];end;end;else do if UD==11 then(bt)[ZD[7]]=l(bt[ZD[0X06]],bt[ZD[1]]);else do bt[ZD[0x7]]=not bt[ZD[0X0006]];end;end;end;end;end;end;else if UD<0x000012 then do if UD>=0Xf then if not(UD<0X10)then if UD~=17 then bt[0X1]=nt[ZD[0x2]];At=At+0X0001;do At=At+0X1;end;At=At+1;do Rt=1;end;(bt[Rt])();Rt=Rt-1;local Jt=1;do ZD=Sm[At];end;At=At+0X1;(bt)[1]=nt[ZD[2]];At=At+0x00001;local rt=(bm[0x0001]);At=At+0x1;ZD=Sm[At];do At=At+1;end;bt[2]=nt[ZD[0x002]];do At=At+0X1;end;do bt[0X3]=rt[1][rt[0X00002]];end;do ZD=Sm[At];end;At=At+0X1;(bt)[0x3]=bt[3][ZD[0X005]];ZD=Sm[At];At=At+1;bt[4]=ZD[0x2];At=At+1;do Rt=Jt+4-1;end;(bt[Jt])(f(bt,Jt+0X00001,Rt));Rt=Jt-1;do At=At+1;end;bt[1]=bt[0X0];ZD=Sm[At];At=At+1;bt[2]=ZD[2];do At=At+0x001;end;Jt=1;(bt)[Jt]=bt[Jt](bt[Jt+1]);Rt=Jt;At=At+1;At=At+0X01;ZD=Sm[At];At=At+1;do if not(bt[0X01])then else At=ZD[6];end;end;else At=ZD[0X6];end;else if not(not bt[ZD[7]])then else At=ZD[6];end;end;else if not(UD>=0X0D)then(bt)[ZD[0X7]]=ZD[2];else if UD~=14 then(bt)[ZD[0x0007]]={f({},1,ZD[0X6])};else local a6=(Zm[ZD[6]]);local W6,k6=a6[3],nil;local V6=(#W6);if not(V6>0X00)then else k6={};for NS=1,V6 do local tS=W6[NS];do if tS[0X01]==0 then do k6[NS-0x1]={bt,tS[0X2]};end;else k6[NS-1]=bm[tS[2]];end;end;end;(M)(Cm,k6);end;bt[ZD[7]]=dH(a6,k6,nt);end;end;end;end;else if not(UD>=21)then if UD>=19 then do if UD==20 then do bt[1]=nt[ZD[2]];end;do At=At+0X0001;end;At=At+0X1;local wU=bm[0X1];ZD=Sm[At];do At=At+0X1;end;local ZU=0X1;bt[2]=nt[ZD[0X0002]];At=At+1;At=At+1;At=At+0x1;do(bt)[3]=wU[0X1][wU[0X2]];end;ZD=Sm[At];do At=At+0X0001;end;bt[3]=bt[0X3][ZD[5]];ZD=Sm[At];At=At+0X1;do bt[0X4]=ZD[0X2];end;do At=At+0X1;end;Rt=ZU+0X04-1;bt[ZU](f(bt,ZU+1,Rt));Rt=ZU-0X001;do At=At+0X00001;end;do At=At+0X1;end;ZD=Sm[At];do At=At+1;end;do At=ZD[6];end;else do if not(not(bt[ZD[6]]<=bt[ZD[0X01]]))then else At=ZD[7];end;end;end;end;else end;else do if not(UD<23)then if UD==0X00018 then local Wl=ZD[7];local sl,Fl=ZD[6],(ZD[0X1]);if sl~=0X0 then Rt=Wl+sl-1;end;local jl,kl=nil,nil;if sl==1 then jl,kl=eH(bt[Wl]());else do jl,kl=eH(bt[Wl](f(bt,Wl+1,Rt)));end;end;if Fl~=1 then if Fl==0X0 then do jl=jl+Wl-1;end;Rt=jl;else jl=Wl+Fl-0X2;Rt=jl+0x1;end;local KQ=(0);do for dQ=Wl,jl do KQ=KQ+1;bt[dQ]=kl[KQ];end;end;else Rt=Wl-0X01;end;else bt[0x1]=nt[ZD[0X2]];At=At+0X1;Rt=0X001;local F8=1;local S8=(bm[0X0]);bt[Rt]();do Rt=Rt-0X1;end;At=At+1;At=At+0x001;At=At+0x1;bt[0x1]=S8[0X001][S8[2]];At=At+1;At=At+0X1;ZD=Sm[At];At=At+1;local b8=(bt[0X1]);bt[F8+1]=b8;do bt[F8]=b8[ZD[0X5]];end;At=At+0X1;F8=0X1;bt[F8](bt[F8+0x1]);Rt=F8-1;ZD=Sm[At];At=At+1;do bt[0X1]=nt[ZD[0X2]];end;do At=At+0x0001;end;At=At+1;At=At+1;S8=bm[1];bt[2]=S8[1][S8[2]];do ZD=Sm[At];end;At=At+0X1;bt[0X2]=bt[0X2][ZD[5]];At=At+0X1;At=At+0X001;do ZD=Sm[At];end;At=At+0X1;do(bt)[2]=bt[0X2][ZD[5]];end;At=At+0x1;At=At+1;do ZD=Sm[At];end;local M8=Zm[ZD[6]];local U8=(M8[0X3]);At=At+0X0001;local u8=#U8;local r8=(nil);if u8>0X0 then r8={};for gi=1,u8 do local ii=(U8[gi]);if ii[0X01]~=0X00000 then r8[gi-1]=bm[ii[0X002]];else(r8)[gi-0X001]={bt,ii[2]};end;end;M(Cm,r8);end;do bt[0x3]=dH(M8,r8,nt);end;At=At+1;(bt)[0X04]=true;At=At+0x1;bt[5]=false;At=At+0X1;do S8=bm[0];end;bt[0X6]=S8[1][S8[2]];do At=At+1;end;At=At+1;At=At+1;F8=0X001;do Rt=F8+0X6-1;end;bt[F8](f(bt,F8+1,Rt));Rt=F8-1;do At=At+0X1;end;At=At+0X1;do ZD=Sm[At];end;At=At+1;bt[0X1]=nt[ZD[2]];do At=At+0X1;end;S8=bm[0X1];do bt[0X2]=S8[1][S8[0X02]];end;ZD=Sm[At];do At=At+0x1;end;(bt)[2]=bt[2][ZD[0X0005]];ZD=Sm[At];do At=At+0x01;end;do(bt)[2]=bt[2][ZD[5]];end;do At=At+0x1;end;do F8=0X1;end;(bt)[F8]=bt[F8](bt[F8+0X1]);Rt=F8;ZD=Sm[At];At=At+1;if not(bt[1]<ZD[5])then At=ZD[0X007];end;end;else if UD==0X16 then(bt)[0X1]=nt[ZD[0x2]];At=At+0x1;do Rt=1;end;bt[Rt]();Rt=Rt-0x1;do At=At+1;end;At=At+0X001;ZD=Sm[At];do At=At+1;end;(bt)[0X1]=nt[ZD[2]];At=At+0X1;At=At+0X1;ZD=Sm[At];At=At+0X001;local PN=(bm[1]);do(bt)[2]=nt[ZD[0x0002]];end;At=At+0X0001;(bt)[3]=PN[1][PN[0X0002]];local KN=(1);At=At+1;At=At+0X1;ZD=Sm[At];At=At+0X1;bt[3]=bt[3][ZD[0x05]];do At=At+0x1;end;At=At+1;do ZD=Sm[At];end;At=At+1;(bt)[4]=ZD[0X2];At=At+0X1;do Rt=KN+0X00004-0X1;end;(bt[KN])(f(bt,KN+1,Rt));Rt=KN-1;At=At+1;bt[1]=bt[0];ZD=Sm[At];At=At+1;(bt)[0X2]=ZD[0X0002];At=At+1;KN=1;bt[KN]=bt[KN](bt[KN+0X00001]);do Rt=KN;end;do At=At+0X1;end;At=At+0X1;do ZD=Sm[At];end;At=At+1;if not(bt[1])then else do At=ZD[0X6];end;end;else local hR=ZD[6];local wR=(bt[hR]);for Tt=hR+1,ZD[0x01]do wR=wR..bt[Tt];end;do(bt)[ZD[0x7]]=wR;end;end;end;end;end;end;end;end;end;end);if Et then if Qt then if Xt~=1 then return bt[it](f(bt,it+1,Rt));else return bt[it]();end;elseif it then return f(bt,it,Xt);end;else if e(Qt)~="string"then(V)(Qt,0);else if not(p(Qt,"a\116\116\e\109p\116 \116\111\ y\105\e\l\100 \097c\114\o\ss m\e\116\097\met\104\o\d\/C\037\045cal\108\ \098\o\117\110\d\097r\y"))then else do return coroutine.yield();end;end;do if p(Qt,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[At-0X1]or"(internal)")..": "..v(Qt),0X0);else(V)(Qt,0);end;end;end;end;end;end;end;else if not(xm<145)then do if xm==0x92 then Km=function(...)local Hm,Tm=0X00001,{};local ym=(K());local Am=({[1]=Xm,[2]=Tm});local hm,im=eH(...);hm=hm-1;local fm,em=0,((ym==g and Qm or ym));for Vj=0,hm do if km>Vj then Tm[Vj]=im[Vj+1];else break;end;end;if not Lm then im=nil;elseif Um then Tm[km]={n=hm>=km and hm-km+0x1 or 0X00000,f(im,km+0X001,hm+0x1)};end;if em~=ym then(w)(Km,em);end;local Vm,cm,Jm,am=o(function()do while true do local NN=(Sm[Hm]);local dN=(NN[4]);Hm=Hm+1;if not(dN>=7)then do if not(dN>=3)then if dN<0X1 then do(Tm)[NN[0X7]]=-Tm[NN[0X6]];end;else if dN~=0X2 then(Tm)[NN[7]]={f({},0X1,NN[6])};else if not(Tm[NN[6]]<=Tm[NN[0x00001]])then Hm=NN[0x7];end;end;end;else if dN<5 then if dN~=4 then Hm=NN[0X6];else Tm[NN[0X7]]=Tm[NN[0X0006]]<=Tm[NN[0X1]];end;else if dN==6 then repeat local YD,cD=Cm,Tm;do if not(#YD>0X0)then else local WK={};for m_,D_ in I,YD do for hc,Sc in I,D_ do if Sc[1]==cD and Sc[0X2]>=0X0 then local zX=Sc[2];do if not(not WK[zX])then else(WK)[zX]={cD[zX]};end;end;do Sc[1]=WK[zX];end;do Sc[0x2]=1;end;end;end;end;end;end;until true;do return;end;else local tD=(Zm[NN[6]]);local YD,LD=tD[0X3],nil;local ND=(#YD);if ND>0 then LD={};for vW=1,ND do local DW=YD[vW];if DW[0X1]~=0X0 then LD[vW-1]=bm[DW[2]];else LD[vW-0X001]={Tm,DW[0X0002]};end;end;M(Cm,LD);end;do Tm[NN[7]]=dH(tD,LD,em);end;end;end;end;end;else if dN>=10 then if dN<12 then if dN==0X00B then(Tm)[NN[7]]=NN[2];else(Tm)[NN[7]]=em[NN[2]];end;else if dN~=13 then do if Tm[NN[7]]then do Hm=NN[6];end;end;end;else local HO=(bm[0]);Tm[0]=HO[0X001][HO[0x0002]];Hm=Hm+1;fm=0;do(Tm)[fm]=Tm[fm]();end;Hm=Hm+1;(Tm)[0X0]=not Tm[0];local iO=(0X0);Hm=Hm+1;repeat local Da,Ga=Cm,(Tm);if not(#Da>0)then else local CF={};do for aH,OH in I,Da do for qS,PS in I,OH do if PS[0X1]==Ga and PS[2]>=0X0 then local RO=PS[0X02];if not CF[RO]then(CF)[RO]={Ga[RO]};end;PS[1]=CF[RO];do(PS)[0X2]=0x0001;end;end;end;end;end;end;until true;do return false,iO,iO;end;end;end;else if not(dN<8)then do if dN==9 then local Hw=(NN[7]);local rw,ow,jw=Tm[Hw],Tm[Hw+1],(Tm[Hw+2]);(Tm)[Hw]=r(function()for wz=rw,ow,jw do(C)(true,wz);end;end);do Hm=NN[6];end;else end;end;else local GM=(NN[0X07]);local eM,pM=Tm[GM]();if not(eM)then else for QT=0X1,NN[0X1]do Tm[GM+QT]=pM[QT];end;Hm=NN[0x6];end;end;end;end;end;end;end);if Vm then if cm then if am~=1 then return Tm[Jm](f(Tm,Jm+0X1,fm));else return Tm[Jm]();end;elseif not(Jm)then else return f(Tm,Jm,am);end;else do if e(cm)=="string"then if p(cm,'a\116\116\e\m\p\116\ to\032y\105\101l\100\ acr\111ss\ \m\et\097m\etho\d/C\%-\cal\108\ bo\117\110\100ar\y')then return coroutine.yield();end;if not(p(cm,"\094.\-\:\%\d\043:\ "))then(V)(cm,0);else V("L\117rap\h\032\Scr\105\pt\:"..(Dm[Hm-1]or"(internal)")..": "..v(cm),0);end;else(V)(cm,0);end;end;end;end;else Km=function(...)local Xe,Fe=1,{};local Qe=K();local Ee={[1]=Xm,[2]=Fe};local le=((Qe==g and Qm or Qe));local ge=(0x0000);local ee,se=eH(...);ee=ee-1;for Yn=0,ee do do if not(km>Yn)then break;else(Fe)[Yn]=se[Yn+0x1];end;end;end;if not Lm then se=nil;elseif Um then Fe[km]={n=ee>=km and ee-km+0X0001 or 0X00,f(se,km+0X0001,ee+0X1)};end;do if le==Qe then else(w)(Km,le);end;end;local Ye,Ue,je,ye=o(function()while true do local pc=(Sm[Xe]);local Nc=pc[4];do Xe=Xe+1;end;do if Nc<0x8 then if Nc>=4 then if not(Nc>=6)then do if Nc==5 then local kZ,aZ=pc[0X7],(pc[6]);do if aZ==0 then else ge=kZ+aZ-1;end;end;local FZ,yZ=nil,nil;local bZ=pc[0X01];do if aZ==1 then FZ,yZ=eH(Fe[kZ]());else FZ,yZ=eH(Fe[kZ](f(Fe,kZ+1,ge)));end;end;if bZ~=0X1 then if bZ==0 then FZ=FZ+kZ-1;ge=FZ;else FZ=kZ+bZ-0X2;ge=FZ+1;end;local t1=0X00000;for Dk=kZ,FZ do t1=t1+1;Fe[Dk]=yZ[t1];end;else do ge=kZ-1;end;end;else local cU,gU=Zm[pc[6]],(nil);local XU=cU[3];local DU=(#XU);if DU>0X000 then gU={};for wP=0X1,DU do local KP=XU[wP];if KP[1]==0X00000 then do gU[wP-1]={Fe,KP[0X2]};end;else do gU[wP-0X001]=bm[KP[0X02]];end;end;end;(M)(Cm,gU);end;Fe[pc[0X07]]=dH(cU,gU,le);end;end;else if Nc~=7 then local XY=(pc[7]);do for yi=XY,XY+(pc[6]-0X01)do Fe[yi]=se[km+(yi-XY)+0X1];end;end;else repeat local it,ct=Cm,(Fe);if#it>0X0 then local gD=({});for cY,nY in I,it do for by,wy in I,nY do if wy[0x1]==ct and wy[0X2]>=0 then local Mt=(wy[0X2]);if not gD[Mt]then(gD)[Mt]={ct[Mt]};end;do(wy)[0X00001]=gD[Mt];end;do(wy)[0x2]=0X1;end;end;end;end;end;until true;return;end;end;else if Nc>=2 then if Nc==0X00003 then do(Fe)[pc[0x0007]]=le[pc[0x2]];end;else if not(Fe[pc[6]]<=Fe[pc[0X01]])then do Xe=pc[7];end;end;end;else if Nc~=0x00001 then Xe=pc[0X0006];else do(Fe)[pc[0X7]]={f({},0x0001,pc[0X00006])};end;end;end;end;else do if Nc>=12 then if not(Nc>=14)then if Nc~=13 then if not(not Fe[pc[0X007]])then else do Xe=pc[6];end;end;else do for vb=pc[0X7],pc[6]do do(Fe)[vb]=nil;end;end;end;end;else do if not(Nc>=15)then(Fe)[pc[0X07]]=pc[0X2];else if Nc~=0X10 then else local nu,mu=pc[0x7],(pc[6]);ge=nu+mu-0X1;repeat local R_,O_=Cm,(Fe);if not(#R_>0x0)then else local GV={};do for KB,XB in I,R_ do for yN,NN in I,XB do if NN[0X00001]==O_ and NN[0X2]>=0 then local t0=(NN[2]);if not(not GV[t0])then else(GV)[t0]={O_[t0]};end;do(NN)[0X001]=GV[t0];end;(NN)[0X2]=0X1;end;end;end;end;end;until true;return true,nu,mu;end;end;end;end;else do if not(Nc>=0XA)then if Nc==9 then Fe[pc[7]]=O(Fe[pc[0X06]],Fe[pc[1]]);else local qL=(pc[7]);local VL,wL,LL=Fe[qL],Fe[qL+1],(Fe[qL+2]);(Fe)[qL]=r(function()for FY=VL,wL,LL do(C)(true,FY);end;end);do Xe=pc[0X6];end;end;else do if Nc~=11 then(Fe)[0X0001]=le[pc[0X02]];do Xe=Xe+1;end;Xe=Xe+1;local Rd=0X1;Xe=Xe+0X1;ge=0X1;do(Fe)[ge]=Fe[ge]();end;local gd=(bm[0]);do Xe=Xe+1;end;Xe=Xe+1;do Xe=Xe+1;end;(gd[0X01])[gd[2]]=Fe[1];do pc=Sm[Xe];end;Xe=Xe+0X1;(Fe)[0x1]=le[pc[0X002]];do pc=Sm[Xe];end;do Xe=Xe+0X001;end;do(Fe)[0X1]=Fe[1][pc[0X05]];end;pc=Sm[Xe];Xe=Xe+1;Fe[2]=pc[0X2];do pc=Sm[Xe];end;Xe=Xe+1;(Fe)[0x3]=pc[2];do Xe=Xe+0X1;end;do(Fe)[Rd]=Fe[Rd](Fe[Rd+0x1],Fe[Rd+2]);end;ge=Rd;local yd=(Fe[1]);pc=Sm[Xe];Xe=Xe+0X00001;Rd=1;do(Fe)[Rd+0X1]=yd;end;(Fe)[Rd]=yd[pc[5]];Xe=Xe+0X1;do Rd=0X01;end;Fe[Rd](Fe[Rd+0X01]);ge=Rd-1;Xe=Xe+1;Xe=Xe+1;do pc=Sm[Xe];end;Xe=Xe+1;(Fe)[0X1]=le[pc[0x2]];pc=Sm[Xe];Xe=Xe+0X1;(Fe)[0x1]=Fe[1][pc[5]];do Xe=Xe+0x0001;end;do Xe=Xe+0x0001;end;do pc=Sm[Xe];end;Xe=Xe+0x1;Fe[0X2]=pc[0X2];do pc=Sm[Xe];end;do Xe=Xe+0X00001;end;Fe[3]=pc[0x0002];do Xe=Xe+0x1;end;Rd=1;Fe[Rd]=Fe[Rd](Fe[Rd+1],Fe[Rd+0X002]);ge=Rd;do Xe=Xe+1;end;do Xe=Xe+1;end;do pc=Sm[Xe];end;do Xe=Xe+0X0001;end;local Yd=2;do Rd=1;end;yd=Fe[0x1];do Fe[Rd+0X01]=yd;end;do(Fe)[Rd]=yd[pc[0x005]];end;pc=Sm[Xe];Xe=Xe+0X001;do(Fe)[0X3]=pc[2];end;do Xe=Xe+1;end;Rd=1;(Fe[Rd])(Fe[Rd+0X1],Fe[Rd+0X2]);do ge=Rd-0x1;end;do Xe=Xe+1;end;Xe=Xe+0X1;pc=Sm[Xe];Xe=Xe+0x001;Fe[1]=le[pc[2]];pc=Sm[Xe];Xe=Xe+1;Fe[0X01]=Fe[0X001][pc[0x5]];pc=Sm[Xe];do Xe=Xe+1;end;do(Fe)[2]=pc[0X2];end;Xe=Xe+1;do Fe[3]=Fe[0X0];end;pc=Sm[Xe];Xe=Xe+1;(Fe)[4]=pc[0X2];Xe=Xe+0X01;local od=Fe[Yd];do for LV=Yd+1,0X4 do od=od..Fe[LV];end;end;(Fe)[0X0002]=od;pc=Sm[Xe];Xe=Xe+1;do(Fe)[0X00003]=pc[0X2];end;Xe=Xe+1;Rd=1;(Fe)[Rd]=Fe[Rd](Fe[Rd+1],Fe[Rd+2]);do ge=Rd;end;do pc=Sm[Xe];end;Xe=Xe+1;Rd=0x1;yd=Fe[1];Fe[Rd+1]=yd;(Fe)[Rd]=yd[pc[0x00005]];do Xe=Xe+0x1;end;Rd=0X001;(Fe[Rd])(Fe[Rd+0X00001]);ge=Rd-0X01;Xe=Xe+0X1;Xe=Xe+0X1;pc=Sm[Xe];Xe=Xe+1;do(Fe)[0X1]=le[pc[0X02]];end;pc=Sm[Xe];Xe=Xe+1;do(Fe)[1]=Fe[0x1][pc[5]];end;pc=Sm[Xe];do Xe=Xe+1;end;do(Fe)[2]=pc[0X2];end;pc=Sm[Xe];do Xe=Xe+1;end;Fe[3]=pc[0X00002];Xe=Xe+0x00001;do Rd=0x1;end;(Fe)[Rd]=Fe[Rd](Fe[Rd+1],Fe[Rd+0x2]);ge=Rd;Xe=Xe+1;Xe=Xe+1;pc=Sm[Xe];Xe=Xe+1;Rd=1;yd=Fe[1];do(Fe)[Rd+1]=yd;end;(Fe)[Rd]=yd[pc[5]];Xe=Xe+1;Rd=0x1;Fe[Rd](Fe[Rd+1]);ge=Rd-0X1;do Xe=Xe+0X01;end;repeat local B8,N8=Cm,(Fe);if not(#B8>0)then else local pk={};for c2,m2 in I,B8 do for Ay,By in I,m2 do if not(By[0X1]==N8 and By[0X2]>=0)then else local DS=(By[0X2]);do if not pk[DS]then(pk)[DS]={N8[DS]};end;end;By[1]=pk[DS];(By)[0X2]=1;end;end;end;end;until true;return;else Fe[0X1]=le[pc[2]];Xe=Xe+0X1;ge=1;do(Fe)[ge]=Fe[ge]();end;local LU=(bm[0]);Xe=Xe+1;do Fe[2]=LU[1][LU[2]];end;Xe=Xe+1;Xe=Xe+0X1;Xe=Xe+0X0001;do Fe[1]=Fe[1]-Fe[2];end;pc=Sm[Xe];Xe=Xe+0x1;if not(not(Fe[0x1]<pc[0X00005]))then else Xe=pc[0X007];end;end;end;end;end;end;end;end;end;end;end);if not(Ye)then if e(Ue)=="string"then if not(p(Ue,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;do if not(p(Ue,"\094\.-:%\d+\: "))then V(Ue,0);else V('Lu\114a\ph Sc\114\105\p\116:'..(Dm[Xe-1]or"(internal)")..": "..v(Ue),0X0);end;end;else V(Ue,0);end;else if Ue then do if ye==1 then return Fe[je]();else do return Fe[je](f(Fe,je+0X01,ge));end;end;end;elseif je then return f(Fe,je,ye);end;end;end;end;end;else Km=function(...)local br,Hr=0x1,({});local xr=K();local Yr,Or=eH(...);local kr={[2]=Hr,[1]=Xm};Yr=Yr-1;local Tr=(0);for Xe=0,Yr do if km>Xe then Hr[Xe]=Or[Xe+1];else break;end;end;local Kr=((xr==g and Qm or xr));if not Lm then Or=nil;elseif Um then do Hr[km]={n=Yr>=km and Yr-km+0X01 or 0,f(Or,km+1,Yr+0X1)};end;end;if Kr~=xr then(w)(Km,Kr);end;local gr,wr,Nr,Mr=o(function()while true do local zn=Sm[br];local Rn=(zn[4]);br=br+0x1;do if not(Rn<0X6)then do if Rn>=0X09 then if Rn<11 then do if Rn~=0X0a then do(Hr)[0]=Kr[zn[2]];end;zn=Sm[br];br=br+0X1;local FE=0x0000;local jE=nil;local OE=Hr[0];do(Hr)[FE+1]=OE;end;do(Hr)[FE]=OE[zn[0x5]];end;zn=Sm[br];br=br+0x1;Hr[0X2]=zn[0x2];br=br+0X1;do FE=0;end;Hr[FE]=Hr[FE](Hr[FE+0X1],Hr[FE+2]);Tr=FE;zn=Sm[br];do br=br+1;end;Hr[1]=Kr[zn[2]];zn=Sm[br];do br=br+0x0001;end;do(Hr)[1]=Hr[1][zn[0X5]];end;zn=Sm[br];do br=br+0X01;end;local dE=(Zm[zn[0X006]]);local gE=(dE[3]);local xE=(#gE);if not(xE>0)then else jE={};for M1=1,xE do local W1=(gE[M1]);if W1[1]~=0 then jE[M1-1]=bm[W1[0X0002]];else do(jE)[M1-0X1]={Hr,W1[0x2]};end;end;end;M(Cm,jE);end;(Hr)[0X2]=dH(dE,jE,Kr);do br=br+0X1;end;FE=0X1;Hr[FE](Hr[FE+1]);Tr=FE-1;br=br+1;repeat local H8,u8=Cm,Hr;if#H8>0x000 then local Bf=({});for pQ,qQ in I,H8 do for cJ,PJ in I,qQ do if PJ[1]==u8 and PJ[2]>=0X0 then local qK=PJ[0X2];do if not Bf[qK]then Bf[qK]={u8[qK]};end;end;PJ[1]=Bf[qK];do PJ[0x02]=0x0001;end;end;end;end;end;until true;do return;end;else(Hr)[zn[7]]=zn[2];end;end;else if Rn==0xc then br=zn[0x06];else Hr[zn[7]]=Kr[zn[2]];end;end;else if Rn>=7 then if Rn==0x008 then Hr[zn[0X00007]]={f({},0X00001,zn[0X6])};else for V2=zn[7],zn[0X6]do Hr[V2]=nil;end;end;else end;end;end;else do if Rn>=0x3 then do if Rn<4 then if not(Hr[zn[6]]<Hr[zn[0X1]])then br=zn[0x7];end;else if Rn==0X5 then(Hr)[zn[0X7]]=Hr[zn[0x6]]>Hr[zn[0X00001]];else Hr[zn[0X7]]=Hr[zn[0X6]]>=Hr[zn[1]];end;end;end;else if not(Rn>=0X1)then do Hr[zn[7]]=Hr[zn[0x00006]]/Hr[zn[0X01]];end;else if Rn~=0X2 then Hr[zn[0X7]]=Hr[zn[0x06]]==Hr[zn[0X1]];else local uN=(Zm[zn[0X6]]);local IN=(nil);local zN=(uN[3]);local pN=#zN;do if pN>0X0 then IN={};for vT=1,pN do local xT=(zN[vT]);do if xT[1]~=0X0000 then do(IN)[vT-1]=bm[xT[2]];end;else IN[vT-0X001]={Hr,xT[0X2]};end;end;end;(M)(Cm,IN);end;end;do(Hr)[zn[0X07]]=dH(uN,IN,Kr);end;end;end;end;end;end;end;end;end);if gr then if wr then do if Mr==1 then return Hr[Nr]();else return Hr[Nr](f(Hr,Nr+1,Tr));end;end;elseif Nr then return f(Hr,Nr,Mr);end;else do if e(wr)~="string"then(V)(wr,0);else do if p(wr,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(wr,'\^\.\045\058\037d\+:\ ')then V("Luraph Script:"..(Dm[br-0X1]or'\(\i\110\116\erna\l\)')..'\058\ '..v(wr),0);else V(wr,0);end;end;end;end;end;end;end;end;end;else if xm<156 then do if not(xm<153)then if not(xm>=0X09A)then do Km=function(...)local zs,Ms=1,({});local Ss=({[1]=Xm,[2]=Ms});local ds=(K());local ms,Cs=eH(...);ms=ms-1;local Bs=(ds==g and Qm or ds);local Us=0;do for SR=0,ms do if not(km>SR)then break;else Ms[SR]=Cs[SR+1];end;end;end;if not Lm then do Cs=nil;end;elseif not(Um)then else Ms[km]={n=ms>=km and ms-km+0X001 or 0X0,f(Cs,km+0X1,ms+0X1)};end;do if Bs==ds then else(w)(Km,Bs);end;end;local Ns,Is,Ws,us=o(function()while true do local BR=Sm[zs];local RR=(BR[4]);do zs=zs+0X1;end;if RR<11 then do if not(RR>=5)then if RR>=2 then if not(RR>=0X3)then(Ms)[BR[0X07]]=Bs[BR[0X2]];else if RR==0x4 then else(Ms)[BR[0X00007]]=Ms[BR[6]]>Ms[BR[1]];end;end;else if RR==0x1 then do Ms[0X0]=Bs[BR[2]];end;BR=Sm[zs];do zs=zs+1;end;(Ms)[0X0]=Ms[0X0][BR[0x5]];do BR=Sm[zs];end;zs=zs+0X00001;if not(not Ms[0])then else zs=BR[0X00006];end;else local wW=(Zm[BR[0X6]]);local EW=wW[0X00003];local CW=(nil);local rW=#EW;do if rW>0X00 then CW={};do for I9=0x01,rW do local w9=(EW[I9]);if w9[1]==0 then(CW)[I9-1]={Ms,w9[0X2]};else CW[I9-1]=bm[w9[2]];end;end;end;M(Cm,CW);end;end;(Ms)[BR[7]]=dH(wW,CW,Bs);end;end;else if not(RR<0X8)then if RR<9 then local XV=bm[0];do Ms[0]=XV[1][XV[2]];end;zs=zs+1;zs=zs+1;BR=Sm[zs];local NV=(0X0);zs=zs+0X1;local JV=(Ms[0X0000]);do Ms[NV+1]=JV;end;(Ms)[NV]=JV[BR[0X5]];do zs=zs+0x1;end;NV=0;Ms[NV](Ms[NV+0X001]);Us=NV-0X001;zs=zs+1;do zs=zs+1;end;do zs=zs+1;end;repeat local Cz,rz=Cm,(Ms);if#Cz>0x0 then local Yr={};for US,wS in I,Cz do for Xt,ht in I,wS do if not(ht[0X1]==rz and ht[2]>=0)then else local WK=ht[0X002];if not(not Yr[WK])then else(Yr)[WK]={rz[WK]};end;ht[0X1]=Yr[WK];do(ht)[2]=0X1;end;end;end;end;end;until true;return;else do if RR==10 then Ms[BR[7]]=BR[0X2];else do(Ms)[BR[7]]={f({},1,BR[0X0006])};end;end;end;end;else do if RR>=0X6 then do if RR==7 then if not Ms[BR[7]]then zs=BR[0X06];end;else do repeat local w_,i_=Cm,(Ms);do if not(#w_>0)then else local k5={};for t0,B0 in I,w_ do do for gL,FL in I,B0 do do if not(FL[0x1]==i_ and FL[0X002]>=0X0)then else local nW=(FL[2]);if not k5[nW]then k5[nW]={i_[nW]};end;FL[0X1]=k5[nW];do(FL)[0X2]=0X001;end;end;end;end;end;end;end;end;until true;end;do return;end;end;end;else local T1=(0);local W1=(bm[0]);Ms[0X00]=W1[1][W1[2]];zs=zs+1;zs=zs+0X1;do BR=Sm[zs];end;zs=zs+0X1;local r1=(Ms[0]);Ms[T1+1]=r1;do Ms[T1]=r1[BR[5]];end;do zs=zs+0X00001;end;T1=0;Ms[T1]=Ms[T1](Ms[T1+1]);do Us=T1;end;BR=Sm[zs];do zs=zs+0X00001;end;if not(not Ms[0])then else zs=BR[0X006];end;end;end;end;end;end;else if not(RR>=0x11)then if not(RR<0X0e)then if not(RR>=15)then do Ms[0]=Bs[BR[2]];end;zs=zs+0X1;Us=0X0;Ms[Us]=Ms[Us]();zs=zs+0X001;zs=zs+1;BR=Sm[zs];do zs=zs+0x1;end;if not(Ms[0X0])then else do zs=BR[6];end;end;else if RR==0X10 then local zD=(BR[0x7]);local nD=r(function(...)C();for u0,k0,A0,R0,s0,p0,b0,J0,V0,F0 in...do C(true,{u0,k0,A0,R0,s0,p0,b0,J0,V0,F0});end;end);nD(Ms[zD],Ms[zD+1],Ms[zD+0X2]);do Us=zD;end;do Ms[zD]=nD;end;zs=BR[6];else Ms[BR[0X7]]=Ss[BR[0X6]];end;end;else if RR<0Xc then(Ms)[0]=Bs[BR[0X2]];BR=Sm[zs];do zs=zs+0X1;end;do Ms[0]=Ms[0X0][BR[0X05]];end;local Zs=(0x0);BR=Sm[zs];zs=zs+0X1;do Ms[0X1]=BR[2];end;do zs=zs+0X1;end;Ms[Zs]=Ms[Zs](Ms[Zs+1]);Us=Zs;zs=zs+1;zs=zs+1;do BR=Sm[zs];end;do zs=zs+0X0001;end;if not Ms[0X0]then zs=BR[6];end;else if RR~=0xd then Ms[BR[0X00007]]=a(Ms[BR[0X6]]);else Ms[0]=Bs[BR[2]];do BR=Sm[zs];end;local Aa=Zm[BR[0X6]];zs=zs+1;local pa,Fa=nil,Aa[0X3];local La=#Fa;if La>0x0 then pa={};do for Io=1,La do local eo=Fa[Io];if eo[1]~=0 then pa[Io-1]=bm[eo[0X2]];else(pa)[Io-0X1]={Ms,eo[0X2]};end;end;end;M(Cm,pa);end;local sa=0;do(Ms)[0X1]=dH(Aa,pa,Bs);end;zs=zs+1;(Ms[sa])(Ms[sa+1]);do Us=sa-1;end;do BR=Sm[zs];end;zs=zs+0x01;zs=BR[0X006];end;end;end;else if RR<0X14 then if RR>=18 then if RR==0X13 then Ms[BR[7]]=Ms[BR[0X006]]<=Ms[BR[1]];else do zs=BR[6];end;end;else for Ad=BR[7],BR[6]do(Ms)[Ad]=nil;end;end;else if not(RR>=21)then if Ms[BR[6]]~=Ms[BR[1]]then else zs=BR[0X00007];end;else do if RR==0X0016 then local cs,Zs=BR[0x7],BR[6];do if Zs~=0 then Us=cs+Zs-1;end;end;local rs,qs,Hs=nil,nil,(BR[0X1]);do if Zs==1 then do rs,qs=eH(Ms[cs]());end;else do rs,qs=eH(Ms[cs](f(Ms,cs+1,Us)));end;end;end;if Hs==0X1 then Us=cs-0X00001;else if Hs~=0 then rs=cs+Hs-0X02;Us=rs+0X1;else rs=rs+cs-1;Us=rs;end;local jA=0;for Ow=cs,rs do jA=jA+0X1;Ms[Ow]=qs[jA];end;end;else if Ms[BR[0x07]]then do zs=BR[6];end;end;end;end;end;end;end;end;end;end);if Ns then do if Is then if us~=0X001 then do return Ms[Ws](f(Ms,Ws+0X1,Us));end;else return Ms[Ws]();end;elseif Ws then return f(Ms,Ws,us);end;end;else do if e(Is)~="\st\114in\g"then V(Is,0);else if not(p(Is,"at\116\101m\112\116\ t\o\ y\i\e\l\d\ \097\c\114o\s\s\ \m\101\116\097\m\eth\111\d\/C\%\-c\097l\108\ b\o\117\110\100\097r\y"))then else return coroutine.yield();end;do if p(Is,"^.-:%d+: ")then V('\Lura\ph \S\c\114i\112t\058'..(Dm[zs-0x001]or"(i\110t\101r\110al)")..'\: '..v(Is),0x000);else V(Is,0);end;end;end;end;end;end;end;else if xm~=0x09B then Km=function(...)local Ws=({});local Vs=(1);local Xs=(K());local Hs={[1]=Xm,[2]=Ws};local fs,Ls=eH(...);fs=fs-0x001;local zs,gs=(Xs==g and Qm or Xs),(0);do for xC=0,fs do if km>xC then do(Ws)[xC]=Ls[xC+0X1];end;else do break;end;end;end;end;if not Lm then Ls=nil;elseif Um then(Ws)[km]={n=fs>=km and fs-km+0X1 or 0x00000,f(Ls,km+1,fs+0X1)};end;if zs~=Xs then(w)(Km,zs);end;local os,ys,vs,is=o(function()while true do local Mu=Sm[Vs];local ru=(Mu[4]);Vs=Vs+1;do if ru<0X00012 then do if ru<9 then do if not(ru>=0X4)then do if not(ru>=2)then if ru~=0X1 then(Ws)[0X2]=zs[Mu[0X2]];Mu=Sm[Vs];local FE=2;Vs=Vs+0X0001;(Ws)[0x3]=Mu[0x2];Mu=Sm[Vs];Vs=Vs+1;(Ws)[0X4]=Mu[0X2];Vs=Vs+0x1;(Ws)[FE]=Ws[FE](Ws[FE+1],Ws[FE+2]);gs=FE;do Mu=Sm[Vs];end;Vs=Vs+1;if not(Ws[2])then else Vs=Mu[6];end;else Ws[0x2]=zs[Mu[2]];Vs=Vs+0x001;do Vs=Vs+1;end;do Mu=Sm[Vs];end;Vs=Vs+1;(Ws)[0X2]=Ws[0x02][Mu[0X5]];Vs=Vs+0X01;Vs=Vs+1;Mu=Sm[Vs];Vs=Vs+0X1;Ws[2]=Ws[2][Mu[0X5]];Vs=Vs+1;do Vs=Vs+1;end;Mu=Sm[Vs];Vs=Vs+1;do Ws[2]=Ws[2][Mu[5]];end;do Mu=Sm[Vs];end;Vs=Vs+0X0001;if not(Mu[0X02]<=Ws[2])then do Vs=Mu[0X7];end;end;end;else if ru==3 then Ws[0X0002]=zs[Mu[0X02]];Vs=Vs+1;Vs=Vs+1;Mu=Sm[Vs];Vs=Vs+0X01;Ws[0X2]=Ws[2][Mu[0X5]];Vs=Vs+1;Vs=Vs+0X0001;Mu=Sm[Vs];Vs=Vs+1;if not(not Ws[0X2])then else do Vs=Mu[6];end;end;else do(Ws)[0X2]=zs[Mu[0X2]];end;Vs=Vs+1;Vs=Vs+1;Mu=Sm[Vs];do Vs=Vs+1;end;do(Ws)[0x2]=Ws[2][Mu[0X05]];end;Mu=Sm[Vs];Vs=Vs+1;Ws[2]=Ws[0x02][Mu[0X5]];Mu=Sm[Vs];do Vs=Vs+1;end;if not(not(Mu[2]<=Ws[0x02]))then else Vs=Mu[0X7];end;end;end;end;else if not(ru<6)then if ru>=0X07 then if ru==0X8 then(Ws)[0x2]=zs[Mu[0X2]];Mu=Sm[Vs];Vs=Vs+1;local Df=2;do(Ws)[0X3]=Mu[2];end;do Vs=Vs+1;end;do Ws[0X4]=true;end;do Vs=Vs+1;end;(Ws)[Df]=Ws[Df](Ws[Df+1],Ws[Df+2]);gs=Df;do Vs=Vs+0X1;end;Vs=Vs+1;Mu=Sm[Vs];Vs=Vs+1;if Ws[0X2]==Mu[5]then else Vs=Mu[7];end;else do repeat local tx,ax=Cm,Ws;if#tx>0 then local Fj=({});for jU,gU in I,tx do for LI,TI in I,gU do if not(TI[1]==ax and TI[0X002]>=0)then else local Pm=(TI[0X00002]);do if not Fj[Pm]then Fj[Pm]={ax[Pm]};end;end;do(TI)[0x1]=Fj[Pm];end;TI[2]=1;end;end;end;end;until true;end;return;end;else Ws[Mu[7]]=Mu[2];end;else if ru==5 then if Ws[Mu[6]]==Ws[Mu[1]]then Vs=Mu[7];end;else Ws[0X02]=zs[Mu[2]];local iP=0X2;Vs=Vs+1;Vs=Vs+0X1;do Mu=Sm[Vs];end;do Vs=Vs+0X001;end;(Ws)[3]=Mu[0X02];Mu=Sm[Vs];Vs=Vs+1;(Ws)[4]=Mu[2];Vs=Vs+1;Ws[iP]=Ws[iP](Ws[iP+1],Ws[iP+0X0002]);gs=iP;do Vs=Vs+1;end;Vs=Vs+0X1;do Mu=Sm[Vs];end;Vs=Vs+0x1;do if Ws[0X2]then Vs=Mu[0x6];end;end;end;end;end;end;else if ru>=0X00D then if not(ru<0Xf)then do if ru<16 then Ws[0x2]=zs[Mu[2]];do Mu=Sm[Vs];end;Vs=Vs+0X01;do Ws[3]=Mu[0X2];end;Mu=Sm[Vs];local O_=0X00002;Vs=Vs+1;Ws[4]=Mu[2];Vs=Vs+0X0001;(Ws)[O_]=Ws[O_](Ws[O_+0x1],Ws[O_+0X00002]);gs=O_;do Mu=Sm[Vs];end;Vs=Vs+0X1;if not(Ws[2])then else Vs=Mu[6];end;else do if ru==17 then Ws[Mu[0X007]]={f({},0x1,Mu[6])};else do Vs=Mu[6];end;end;end;end;end;else do if ru==14 then do(Ws)[2]=zs[Mu[2]];end;Mu=Sm[Vs];Vs=Vs+0x1;Ws[0X2]=Ws[0X2][Mu[0x05]];Mu=Sm[Vs];Vs=Vs+0X1;if not Ws[2]then Vs=Mu[6];end;else Ws[0X2]=zs[Mu[2]];Mu=Sm[Vs];do Vs=Vs+0X01;end;(Ws[0X0002])[Mu[0X0002]]=Mu[0X00005];do Vs=Vs+1;end;repeat local CO,oO=Cm,Ws;if not(#CO>0X000)then else local HM={};for NR,hR in I,CO do do for Mv,gv in I,hR do if gv[0X0001]==oO and gv[0X2]>=0x00000 then local mH=(gv[2]);if not(not HM[mH])then else(HM)[mH]={oO[mH]};end;gv[1]=HM[mH];gv[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;else if ru>=11 then do if ru~=12 then local mu=(Zm[Mu[0X06]]);local Vu,ku=mu[3],nil;local uu=(#Vu);if uu>0 then do ku={};end;for K_=1,uu do local w_=Vu[K_];if w_[1]~=0X000 then(ku)[K_-0x1]=bm[w_[2]];else ku[K_-0X1]={Ws,w_[2]};end;end;M(Cm,ku);end;Ws[Mu[7]]=dH(mu,ku,zs);else Ws[2]=zs[Mu[0X002]];Mu=Sm[Vs];Vs=Vs+1;do Ws[2]=Ws[2][Mu[0X5]];end;Mu=Sm[Vs];Vs=Vs+0x1;do if not(not Ws[0X2])then else Vs=Mu[6];end;end;end;end;else do if ru==10 then(Ws)[0x2]=zs[Mu[2]];do Mu=Sm[Vs];end;Vs=Vs+1;Ws[2]=Ws[0x2][Mu[5]];Vs=Vs+1;Vs=Vs+1;Mu=Sm[Vs];Vs=Vs+1;if not Ws[2]then Vs=Mu[0X00006];end;else Ws[0X0002]=zs[Mu[2]];do Vs=Vs+0X001;end;Vs=Vs+1;do Vs=Vs+0x1;end;gs=2;Ws[gs]();gs=gs-0X1;Vs=Vs+0X1;Vs=Vs+1;do Mu=Sm[Vs];end;Vs=Vs+0X01;(Ws)[2]=zs[Mu[0X02]];do Mu=Sm[Vs];end;Vs=Vs+0X1;Ws[0X02][Mu[0X2]]=Mu[0X5];Vs=Vs+1;do repeat local Rv,gv=Cm,(Ws);if not(#Rv>0x0)then else local nt={};for jH,mH in I,Rv do for t2,L2 in I,mH do if not(L2[1]==gv and L2[0x2]>=0)then else local ZF=(L2[2]);if not(not nt[ZF])then else nt[ZF]={gv[ZF]};end;L2[0X1]=nt[ZF];do L2[2]=1;end;end;end;end;end;until true;end;do return;end;end;end;end;end;end;end;else if not(ru>=0X1B)then if not(ru>=0X16)then if ru>=20 then do if ru==21 then do(Ws)[Mu[0x7]]=Mu[2];end;else Ws[Mu[0X7]]=Ws[Mu[6]]^Ws[Mu[1]];end;end;else do if ru==19 then(Ws)[0X02]=zs[Mu[0X0002]];Mu=Sm[Vs];Vs=Vs+0X1;do Ws[2]=Ws[0X00002][Mu[5]];end;do Mu=Sm[Vs];end;Vs=Vs+1;if not Ws[0x0002]then do Vs=Mu[6];end;end;else do(Ws)[0X2]=zs[Mu[2]];end;do Mu=Sm[Vs];end;Vs=Vs+0X01;do Ws[2]=Ws[2][Mu[5]];end;Vs=Vs+0x1;Vs=Vs+0X01;Mu=Sm[Vs];do Vs=Vs+0X001;end;if not(not Ws[2])then else Vs=Mu[6];end;end;end;end;else if ru>=24 then if not(ru>=25)then Ws[0X2]=true;do Mu=Sm[Vs];end;do Vs=Vs+1;end;(zs)[Mu[0x02]]=Ws[0X2];Mu=Sm[Vs];Vs=Vs+1;Vs=Mu[6];else if ru~=0X0001a then if Ws[Mu[6]]==Mu[0X5]then else Vs=Mu[7];end;else Ws[0X2]=zs[Mu[0X2]];Vs=Vs+0X00001;Vs=Vs+1;local nS=(0x2);Mu=Sm[Vs];Vs=Vs+0X1;(Ws)[3]=Mu[2];Mu=Sm[Vs];Vs=Vs+1;(Ws)[0x4]=Mu[2];do Vs=Vs+1;end;Ws[nS]=Ws[nS](Ws[nS+1],Ws[nS+0X2]);do gs=nS;end;Vs=Vs+0X1;Vs=Vs+0X1;Mu=Sm[Vs];do Vs=Vs+0X001;end;if not(Ws[2])then else do Vs=Mu[0X06];end;end;end;end;else if ru~=23 then do for OF=Mu[0x7],Mu[6]do Ws[OF]=nil;end;end;else end;end;end;else if ru>=0X20 then do if not(ru<0X22)then if ru<0X23 then Ws[Mu[7]]=Ws[Mu[0X6]]>Ws[Mu[1]];else if ru~=0X24 then do Ws[0X3]=zs[Mu[2]];end;Vs=Vs+1;gs=0X0003;Ws[gs]=Ws[gs]();Vs=Vs+1;Vs=Vs+0X001;do Mu=Sm[Vs];end;Vs=Vs+0X1;if not(Ws[0X0003])then else do Vs=Mu[6];end;end;else do Ws[Mu[0x0007]]=Ws[Mu[6]]%Ws[Mu[1]];end;end;end;else if ru~=33 then Ws[Mu[7]]=zs[Mu[2]];else Ws[0X2]=zs[Mu[2]];do Vs=Vs+1;end;Vs=Vs+0X00001;Mu=Sm[Vs];do Vs=Vs+1;end;Ws[0x2]=Ws[0X2][Mu[0X5]];Vs=Vs+1;do Vs=Vs+0X00001;end;Mu=Sm[Vs];Vs=Vs+1;do if not Ws[2]then Vs=Mu[0X6];end;end;end;end;end;else if ru<0X1D then if ru==0X1c then local g4=Mu[0X6];local Z4=Ws[g4];do for Ss=g4+0x001,Mu[1]do do Z4=Z4..Ws[Ss];end;end;end;Ws[Mu[0X07]]=Z4;else Ws[2]=false;do Mu=Sm[Vs];end;Vs=Vs+0X0001;do zs[Mu[0x02]]=Ws[0x00002];end;Mu=Sm[Vs];Vs=Vs+0X1;(Ws)[2]=zs[Mu[0X2]];Vs=Vs+0X1;Vs=Vs+1;local CW=2;Mu=Sm[Vs];Vs=Vs+1;Ws[0x3]=Mu[2];Vs=Vs+0X1;Ws[CW]=Ws[CW](Ws[CW+0X1]);gs=CW;do Vs=Vs+1;end;Vs=Vs+1;Mu=Sm[Vs];Vs=Vs+1;if not Ws[2]then Vs=Mu[6];end;end;else if ru<0X1E then do Ws[0]=zs[Mu[2]];end;Vs=Vs+1;do Vs=Vs+0X0001;end;Mu=Sm[Vs];Vs=Vs+1;(Ws)[1]=zs[Mu[0x2]];do Mu=Sm[Vs];end;Vs=Vs+1;(Ws)[0x2]=Mu[0X00002];Mu=Sm[Vs];do Vs=Vs+0X1;end;Ws[3]=zs[Mu[2]];local sk=(0);Mu=Sm[Vs];Vs=Vs+1;do(Ws)[3]=Ws[0X3][Mu[5]];end;do Vs=Vs+1;end;Vs=Vs+0X1;Vs=Vs+0x1;local Uk,Kk=4,(3);if Uk==0X0 then else gs=sk+Uk-0x1;end;local Gk,nk=nil,nil;do if Uk~=1 then Gk,nk=eH(Ws[sk](f(Ws,sk+0X1,gs)));else Gk,nk=eH(Ws[sk]());end;end;if Kk~=0X001 then if Kk~=0X0 then Gk=sk+Kk-2;gs=Gk+1;else Gk=Gk+sk-0X1;gs=Gk;end;local LP=0;for pS=sk,Gk do LP=LP+0X1;Ws[pS]=nk[LP];end;else do gs=sk-0x1;end;end;Mu=Sm[Vs];Vs=Vs+1;if Ws[1]~=Mu[0x0005]then else do Vs=Mu[7];end;end;else if ru==31 then Ws[2]=zs[Mu[2]];do Mu=Sm[Vs];end;do Vs=Vs+1;end;(Ws)[3]=Mu[2];Mu=Sm[Vs];Vs=Vs+1;do Ws[4]=Mu[2];end;local Vi=0X2;do Vs=Vs+0X01;end;(Ws)[Vi]=Ws[Vi](Ws[Vi+0X0001],Ws[Vi+2]);gs=Vi;do Vs=Vs+1;end;Vs=Vs+1;Mu=Sm[Vs];do Vs=Vs+0X1;end;if not(Ws[2])then else Vs=Mu[0X6];end;else(Ws)[2]=zs[Mu[2]];Vs=Vs+0X00001;Vs=Vs+1;Mu=Sm[Vs];Vs=Vs+1;(Ws)[0x3]=Mu[2];local Rw=0X2;Vs=Vs+1;(Ws)[Rw]=Ws[Rw](Ws[Rw+0x1]);gs=Rw;Mu=Sm[Vs];do Vs=Vs+1;end;if not(not Ws[0X2])then else do Vs=Mu[0X06];end;end;end;end;end;end;end;end;end;end;end);if os then if ys then if is~=1 then return Ws[vs](f(Ws,vs+1,gs));else do return Ws[vs]();end;end;elseif not(vs)then else return f(Ws,vs,is);end;else if e(ys)=="\st\114\105ng"then if p(ys,'\097t\116\em\p\116\ to\ \y\i\101\108\d\ \097\cr\o\s\s\ \m\eta\m\eth\o\d\/\C\037-\099\097l\l\ \098\111\117\110\d\097\114\y')then return coroutine.yield();end;if p(ys,"^.-:%d+: ")then(V)("\076\117\114\097\112\104\ \083\cr\i\112\116\:"..(Dm[Vs-1]or'\040i\110\116ern\097l)')..": "..v(ys),0X0);else V(ys,0);end;else(V)(ys,0);end;end;end;else Km=function(...)local J_=({});local S_=0x00000;local n_=1;local p_=(K());local m_=({[1]=Xm,[2]=J_});local Y_,E_=eH(...);Y_=Y_-1;local j_=((p_==g and Qm or p_));for Cj=0,Y_ do if not(km>Cj)then break;else do(J_)[Cj]=E_[Cj+0X1];end;end;end;if not Lm then E_=nil;elseif not(Um)then else do(J_)[km]={n=Y_>=km and Y_-km+0x0001 or 0,f(E_,km+0X00001,Y_+0X1)};end;end;if j_~=p_ then w(Km,j_);end;local D_,L_,C_,d_=o(function()while true do local Gt=Sm[n_];local Mt=Gt[4];n_=n_+0x1;if Mt<0X00007 then if Mt<0X003 then if Mt<1 then do repeat local Za,ha,Ta=Cm,J_,(Gt[0X007]);do if#Za>0 then local Nz={};for go,wo in I,Za do for Qv,Jv in I,wo do if Jv[0x1]==ha and Jv[2]>=Ta then local UR=Jv[0x00002];do if not Nz[UR]then Nz[UR]={ha[UR]};end;end;(Jv)[0X0001]=Nz[UR];Jv[2]=1;end;end;end;end;end;until true;end;else if Mt~=0X002 then else local To=Gt[6];local ho=(Gt[0X7]);S_=ho+To-1;repeat local AT,LT=Cm,J_;if not(#AT>0X000)then else local op=({});do for LI,lI in I,AT do for OJ,pJ in I,lI do if not(pJ[0x00001]==LT and pJ[0X2]>=0)then else local dJ=(pJ[0X2]);do if not(not op[dJ])then else do op[dJ]={LT[dJ]};end;end;end;(pJ)[0X01]=op[dJ];pJ[2]=1;end;end;end;end;end;until true;return true,ho,To;end;end;else if not(Mt>=5)then if Mt~=4 then do(J_)[Gt[7]]=m_[Gt[0X06]];end;else do(J_)[Gt[7]]=J_[Gt[0x006]];end;end;else if Mt==6 then J_[Gt[7]]={f({},0x1,Gt[0X00006])};else do for V5=Gt[7],Gt[6]do(J_)[V5]=nil;end;end;end;end;end;else if Mt>=0xb then if not(Mt<13)then if Mt==14 then do if not(J_[Gt[0X00006]]<J_[Gt[0X0001]])then else n_=Gt[0X00007];end;end;else local G_,H_=Zm[Gt[0X006]],nil;local y_=G_[0X3];local c_=#y_;if not(c_>0)then else H_={};for Vb=1,c_ do local Zb=(y_[Vb]);if Zb[1]==0 then do(H_)[Vb-1]={J_,Zb[0X2]};end;else(H_)[Vb-0x1]=bm[Zb[0X2]];end;end;(M)(Cm,H_);end;J_[Gt[0x7]]=dH(G_,H_,j_);end;else if Mt~=12 then(J_)[Gt[0X7]]=j_[Gt[0X2]];else(J_)[Gt[7]]=Gt[0X2];end;end;else if Mt<9 then do if Mt==8 then n_=Gt[0X6];else J_[Gt[0X07]]=a(J_[Gt[6]]);end;end;else if Mt~=0X0000a then do J_[0x0000]=j_[Gt[2]];end;n_=n_+0X1;n_=n_+1;Gt=Sm[n_];n_=n_+1;local ib=(0);do J_[0]=J_[0][Gt[0X5]];end;Gt=Sm[n_];do n_=n_+0X1;end;local Xb=(Zm[Gt[6]]);local Nb=nil;local fb=Xb[3];local gb=(#fb);if not(gb>0X00000)then else do Nb={};end;for cF=0X1,gb do local ZF=fb[cF];if ZF[0X00001]==0x0 then Nb[cF-0X1]={J_,ZF[0x00002]};else do Nb[cF-0X1]=bm[ZF[0X2]];end;end;end;(M)(Cm,Nb);end;(J_)[1]=dH(Xb,Nb,j_);do n_=n_+1;end;J_[ib](J_[ib+0X001]);S_=ib-1;do n_=n_+1;end;n_=n_+1;do n_=n_+1;end;repeat local qK,aK=Cm,(J_);if#qK>0X0000 then local xO=({});for Vo,to in I,qK do for H1,Y1 in I,to do if Y1[1]==aK and Y1[2]>=0X0000 then local yN=(Y1[2]);do if not xO[yN]then xO[yN]={aK[yN]};end;end;(Y1)[1]=xO[yN];(Y1)[0X0002]=1;end;end;end;end;until true;return;else if J_[Gt[6]]~=J_[Gt[1]]then else n_=Gt[7];end;end;end;end;end;end;end);if D_ then if L_ then if d_~=1 then return J_[C_](f(J_,C_+1,S_));else return J_[C_]();end;elseif not(C_)then else do return f(J_,C_,d_);end;end;else if e(L_)~="\s\116r\i\110\103"then V(L_,0x0);else if not(p(L_,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if p(L_,"^\.\045\:\%\d+\058 ")then(V)("Luraph Script:"..(Dm[n_-1]or"(internal)").."\:\ "..v(L_),0X0);else(V)(L_,0);end;end;end;end;end;end;else if xm>=0X0097 then do if xm~=0X98 then do Km=function(...)local mY,zY=0X1,{};local sY={[2]=zY,[1]=Xm};local tY=(K());local NY,hY=eH(...);do NY=NY-0X1;end;for RM=0,NY do do if km>RM then zY[RM]=hY[RM+1];else break;end;end;end;do if not Lm then hY=nil;elseif Um then(zY)[km]={n=NY>=km and NY-km+0X1 or 0X0000,f(hY,km+1,NY+1)};end;end;local bY=0;local EY=((tY==g and Qm or tY));if EY~=tY then w(Km,EY);end;local rY,fY,xY,WY=o(function()while true do local xp=Sm[mY];local pp=xp[4];mY=mY+0X0001;if not(pp>=17)then do if not(pp>=0X8)then do if pp<0X00004 then if not(pp<0X2)then if pp==0X3 then(zY)[1]=EY[xp[0x2]];mY=mY+1;mY=mY+0X1;xp=Sm[mY];mY=mY+1;zY[1]=zY[1][xp[0X0005]];xp=Sm[mY];mY=mY+1;if not(not zY[0x1])then else mY=xp[0X00006];end;else sY[xp[6]]=zY[xp[7]];end;else if pp==1 then do repeat local X6,u6=Cm,zY;if not(#X6>0X0)then else local qC={};do for Dx,vx in I,X6 do do for y7,w7 in I,vx do if w7[1]==u6 and w7[0X2]>=0x0 then local CS=(w7[2]);do if not qC[CS]then qC[CS]={u6[CS]};end;end;w7[1]=qC[CS];(w7)[2]=1;end;end;end;end;end;end;until true;end;do return false,xp[0X0007],bY;end;else zY[7]=xp[0x00002];mY=mY+0X1;(zY)[5]=zY[0x7];xp=Sm[mY];mY=mY+1;mY=xp[6];end;end;else do if not(pp<6)then if pp~=0x7 then zY[6]=EY[xp[2]];mY=mY+1;mY=mY+1;xp=Sm[mY];local Xn=(6);mY=mY+0X1;zY[0x6]=zY[0X6][xp[5]];xp=Sm[mY];do mY=mY+1;end;local Rn=zY[6];zY[Xn+1]=Rn;(zY)[Xn]=Rn[xp[0X5]];mY=mY+1;Xn=0X6;(zY[Xn])(zY[Xn+0X1]);bY=Xn-1;mY=mY+0x1;do mY=mY+1;end;xp=Sm[mY];mY=mY+0X0001;mY=xp[0X6];else if not(zY[xp[0X7]])then else do mY=xp[6];end;end;end;else if pp~=0X5 then do(zY)[xp[7]]=zY[xp[6]]==zY[xp[0X1]];end;else(zY)[xp[0X7]]={f({},0X00001,xp[6])};end;end;end;end;end;else if pp>=0Xc then do if not(pp<14)then if pp<15 then local wz,Jz=Zm[xp[0x6]],(nil);local qz=wz[3];local xz=(#qz);if xz>0 then Jz={};for Ww=1,xz do local Uw=(qz[Ww]);if Uw[0X1]~=0 then do(Jz)[Ww-0X01]=bm[Uw[2]];end;else do(Jz)[Ww-0X1]={zY,Uw[0X002]};end;end;end;M(Cm,Jz);end;zY[xp[7]]=dH(wz,Jz,EY);else if pp~=0X000010 then mY=xp[6];else zY[1]=EY[xp[2]];mY=mY+0X1;mY=mY+1;local tF=(0X00001);xp=Sm[mY];mY=mY+1;zY[0X1]=zY[0X1][xp[5]];mY=mY+0X01;do mY=mY+0X1;end;do xp=Sm[mY];end;mY=mY+1;zY[2]=xp[2];xp=Sm[mY];mY=mY+1;zY[0X3]=EY[xp[2]];mY=mY+0x0001;do zY[tF]=zY[tF](zY[tF+0X1],zY[tF+0X2]);end;bY=tF;xp=Sm[mY];mY=mY+1;zY[0X2]=xp[0X002];mY=mY+1;(zY)[3]=zY[0x0];xp=Sm[mY];mY=mY+1;if zY[3]then mY=xp[0x006];end;end;end;else if pp==0X0000D then local aX=(2);do bY=aX+0X04-0X1;end;zY[aX]=zY[aX](f(zY,aX+0X1,bY));bY=aX;mY=mY+1;for VC=3,4 do(zY)[VC]=nil;end;xp=Sm[mY];mY=mY+1;do(zY)[0X00005]=xp[2];end;do xp=Sm[mY];end;mY=mY+1;mY=xp[6];else(zY)[xp[7]]=xp[2];end;end;end;else do if not(pp>=10)then do if pp==9 then zY[0X6]=EY[xp[0X2]];do mY=mY+0x0001;end;local Yl=(6);mY=mY+1;do xp=Sm[mY];end;mY=mY+0X00001;local Ml=(zY[0x06]);(zY)[Yl+1]=Ml;zY[Yl]=Ml[xp[5]];xp=Sm[mY];mY=mY+1;(zY)[8]=xp[0X2];mY=mY+0X1;do Yl=6;end;do(zY)[Yl]=zY[Yl](zY[Yl+0X01],zY[Yl+0X2]);end;bY=Yl;xp=Sm[mY];mY=mY+1;if not zY[0x6]then do mY=xp[0X6];end;end;else for Oj=xp[0X00007],xp[6]do do zY[Oj]=nil;end;end;end;end;else do if pp~=0X0B then local yK=(bm[1]);do zY[11]=yK[1][yK[2]];end;xp=Sm[mY];local LK=0XB;do mY=mY+0X1;end;(zY)[0X0000c]=zY[0X0009][xp[0X5]];mY=mY+1;zY[LK]=zY[LK](zY[LK+1]);bY=LK;xp=Sm[mY];do mY=mY+0X1;end;do if not(not zY[11])then else mY=xp[0X006];end;end;else local m1=bm[0];(zY)[0X6]=m1[1][m1[0X2]];xp=Sm[mY];local t1=zY[0X6];do mY=mY+1;end;local L1=(6);(zY)[L1+1]=t1;zY[L1]=t1[xp[5]];mY=mY+0X1;(zY)[0X8]=zY[0x4];do mY=mY+0x001;end;L1=0x0006;zY[L1]=zY[L1](zY[L1+0X1],zY[L1+2]);do bY=L1;end;xp=Sm[mY];mY=mY+0X1;zY[0X7]=zY[6][xp[0X5]];mY=mY+0X1;mY=mY+0X1;mY=mY+0X001;(zY)[5]=zY[0X7];do xp=Sm[mY];end;mY=mY+1;do if zY[5]then mY=xp[6];end;end;end;end;end;end;end;end;end;else if not(pp<25)then if pp>=29 then do if not(pp<31)then do if not(pp>=32)then do zY[xp[7]]=zY[xp[0X6]][xp[0x00005]];end;else if pp~=33 then do if not(xp[2]<zY[xp[1]])then do mY=xp[7];end;end;end;else local tG=(xp[0X00007]);local LG=(r(function(...)(C)();for q8,k8,y8,x8,p8,i8,T8,V8,E8,s8 in...do(C)(true,{q8,k8,y8,x8,p8,i8,T8,V8,E8,s8});end;end));LG(zY[tG],zY[tG+0x1],zY[tG+0X2]);bY=tG;(zY)[tG]=LG;mY=xp[0X006];end;end;end;else if pp~=30 then repeat local sO,oO=Cm,zY;if#sO>0X00000 then local BN={};do for sV,iV in I,sO do for cz,pz in I,iV do if not(pz[1]==oO and pz[0X02]>=0x00)then else local GD=(pz[2]);if not(not BN[GD])then else BN[GD]={oO[GD]};end;(pz)[1]=BN[GD];pz[0X2]=1;end;end;end;end;end;until true;return;else do(zY)[1]=EY[xp[2]];end;mY=mY+0X1;do mY=mY+0X1;end;xp=Sm[mY];mY=mY+1;if zY[0x1]then do mY=xp[6];end;end;end;end;end;else if not(pp<27)then if pp==0X1C then(zY)[7]=EY[xp[2]];do xp=Sm[mY];end;local ef=0X7;mY=mY+0X1;(zY)[8]=xp[0x2];mY=mY+0x1;zY[ef](zY[ef+1]);do bY=ef-0X1;end;do xp=Sm[mY];end;mY=mY+1;if zY[0X005]then mY=xp[0X006];end;else do if not(not zY[xp[0X7]])then else mY=xp[0X6];end;end;end;else do if pp==26 then do zY[0X0007]=EY[xp[2]];end;local pF=7;mY=mY+0X0001;mY=mY+1;xp=Sm[mY];mY=mY+1;(zY)[0X8]=zY[6][xp[5]];mY=mY+0X001;mY=mY+1;do mY=mY+0X1;end;local hF=0X4;local ZF=(0X2);if ZF~=0 then do bY=pF+ZF-1;end;end;local rF,uF=nil,nil;if ZF==0X1 then do rF,uF=eH(zY[pF]());end;else rF,uF=eH(zY[pF](f(zY,pF+0X01,bY)));end;do if hF==0X1 then bY=pF-0X001;else do if hF==0 then rF=rF+pF-0X1;bY=rF;else rF=pF+hF-2;do bY=rF+0X0001;end;end;end;local Wn=0;for Ot=pF,rF do Wn=Wn+1;(zY)[Ot]=uF[Wn];end;end;end;xp=Sm[mY];mY=mY+0X00001;pF=7;local xF=(r(function(...)C();do for Z3,r3 in...do(C)(true,Z3,r3);end;end;end));(xF)(zY[pF],zY[pF+0X0001],zY[pF+2]);bY=pF;(zY)[pF]=xF;mY=xp[0X6];else local wg=(xp[0X7]);local Gg,gg,Hg=zY[wg]();if Gg then zY[wg+0X1]=gg;zY[wg+0X2]=Hg;mY=xp[6];end;end;end;end;end;else if not(pp>=21)then if pp>=19 then if pp~=0X0014 then local fr,Zr=bm[2],(10);zY[0xA]=fr[1][fr[2]];local gr=(0X3);mY=mY+1;mY=mY+0X001;xp=Sm[mY];mY=mY+0x1;(zY)[11]=zY[9][xp[5]];do mY=mY+1;end;zY[Zr](zY[Zr+1]);bY=Zr-0X1;do mY=mY+0x1;end;fr=bm[0x0003];(zY)[0Xa]=fr[0X1][fr[0X002]];do xp=Sm[mY];end;mY=mY+0X1;(zY)[0XB]=zY[9][xp[5]];mY=mY+1;do(zY)[12]=zY[0X0];end;do mY=mY+1;end;Zr=0XA;bY=Zr+gr-0X1;repeat local ow,kw=Cm,zY;if not(#ow>0x0000)then else local En={};for xs,As in I,ow do for qQ,OQ in I,As do if OQ[1]==kw and OQ[0x2]>=0X00000 then local w1=OQ[2];if not(not En[w1])then else En[w1]={kw[w1]};end;(OQ)[0X01]=En[w1];(OQ)[0X002]=0X0001;end;end;end;end;until true;return true,Zr,gr;else local zC=(0X00002);do(zY)[2]=zY[zC]..zY[zC+1];end;xp=Sm[mY];do mY=mY+1;end;do zY[1][xp[0X2]]=zY[0X2];end;xp=Sm[mY];do mY=mY+1;end;do(zY)[0X2]=xp[2];end;xp=Sm[mY];local IC=(0X2);do mY=mY+0X0001;end;local lC=zY[0X0002];do(zY)[IC+0X001]=lC;end;zY[IC]=lC[xp[5]];do xp=Sm[mY];end;do mY=mY+1;end;(zY)[4]=EY[xp[0X2]];mY=mY+0X01;mY=mY+0X1;do xp=Sm[mY];end;mY=mY+1;zY[0X4]=zY[0X4][xp[0X05]];xp=Sm[mY];mY=mY+0X1;(zY)[5]=EY[xp[0x2]];mY=mY+1;mY=mY+0X1;do xp=Sm[mY];end;mY=mY+0x1;(zY)[5]=zY[5][xp[0X5]];xp=Sm[mY];mY=mY+0x00001;if not zY[5]then mY=xp[0X006];end;end;else do if pp==0X12 then else(zY)[0X006]=EY[xp[2]];xp=Sm[mY];mY=mY+1;do(zY)[7]=EY[xp[0x2]];end;local mH=(0X3);do xp=Sm[mY];end;do mY=mY+1;end;(zY)[0X7]=zY[7][xp[0X05]];xp=Sm[mY];local aH=0X9;do mY=mY+1;end;zY[0x008]=EY[xp[0X2]];mY=mY+1;zY[9]=zY[2];local NH=(0X6);mY=mY+1;do zY[0XA]=zY[5];end;do mY=mY+1;end;(zY)[9]=zY[aH]..zY[aH+1];mY=mY+0X001;local OH=(0X004);if OH~=0x0 then bY=NH+OH-0X1;end;local jH,WH=nil,nil;if OH==1 then jH,WH=eH(zY[NH]());else jH,WH=eH(zY[NH](f(zY,NH+0X1,bY)));end;if mH==1 then do bY=NH-1;end;else do if mH==0 then jH=jH+NH-1;bY=jH;else jH=NH+mH-2;bY=jH+1;end;end;local TA=0;for M8=NH,jH do TA=TA+0X1;(zY)[M8]=WH[TA];end;end;mY=mY+1;mY=mY+0x1;mY=mY+0X001;zY[0X4]=zY[7];mY=mY+1;do(zY)[0X3]=zY[0X6];end;xp=Sm[mY];mY=mY+0X1;do(zY)[0X006]=EY[xp[0X002]];end;do mY=mY+1;end;mY=mY+0X1;mY=mY+1;bY=6;(zY[bY])();bY=bY-1;do xp=Sm[mY];end;mY=mY+1;if not(not zY[3])then else mY=xp[6];end;end;end;end;else do if not(pp<23)then if pp~=24 then(zY)[xp[0X7]]=EY[xp[0X2]];else do(EY)[xp[2]]=zY[xp[0X7]];end;end;else if pp==0X16 then(zY)[xp[7]]=xp[0X2];else zY[1]=EY[xp[0X02]];xp=Sm[mY];local Rb=(1);mY=mY+0x001;local tb=zY[0X0001];(zY)[Rb+0X1]=tb;(zY)[Rb]=tb[xp[5]];xp=Sm[mY];mY=mY+0X1;zY[0X0003]=xp[0X2];mY=mY+0X00001;Rb=1;do(zY)[Rb]=zY[Rb](zY[Rb+1],zY[Rb+0X2]);end;bY=Rb;mY=mY+0x01;mY=mY+0X1;xp=Sm[mY];mY=mY+1;if not(not zY[1])then else mY=xp[6];end;end;end;end;end;end;end;end;end);if rY then if fY then if WY~=0x01 then return zY[xY](f(zY,xY+1,bY));else return zY[xY]();end;elseif xY then return f(zY,xY,WY);end;else if e(fY)~='\s\116r\105n\g'then V(fY,0X00);else if p(fY,"a\116t\101\m\pt \116\111 y\i\101l\d\ \097\c\114\o\s\s\ \109e\116am\101\116\104\o\d\/\C\037\045\ca\l\l\ \098\o\117n\d\097ry")then return coroutine.yield();end;if p(fY,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[mY-0X00001]or"(internal)")..'\:\032'..v(fY),0X0);else V(fY,0);end;end;end;end;end;else Km=function(...)local kI=({});local EI=(1);local lI=(K());local uI=(0);local wI,yI=eH(...);local GI=({[1]=Xm,[2]=kI});wI=wI-0X00001;local YI=((lI==g and Qm or lI));for jh=0,wI do if not(km>jh)then do break;end;else(kI)[jh]=yI[jh+0X1];end;end;do if not Lm then yI=nil;elseif not(Um)then else(kI)[km]={n=wI>=km and wI-km+1 or 0,f(yI,km+1,wI+1)};end;end;if YI==lI then else(w)(Km,YI);end;local gI,UI,HI,NI=o(function()while true do local b_=Sm[EI];local m_=b_[4];EI=EI+0X1;if m_<9 then if not(m_<4)then do if not(m_<6)then if not(m_>=7)then kI[1]=YI[b_[0X2]];EI=EI+0x1;do EI=EI+1;end;b_=Sm[EI];EI=EI+1;do(kI)[2]=kI[0][b_[5]];end;b_=Sm[EI];EI=EI+1;local U0=1;kI[2]=kI[2][b_[5]];do b_=Sm[EI];end;EI=EI+1;(kI)[2]=kI[2][b_[5]];EI=EI+0X1;(kI)[U0]=kI[U0](kI[U0+1]);uI=U0;b_=Sm[EI];EI=EI+0X1;do if not(not(b_[2]<kI[0X1]))then else do EI=b_[0X7];end;end;end;else if m_==8 then kI[1]=YI[b_[2]];EI=EI+1;uI=0x0001;kI[uI]=kI[uI]();do EI=EI+0X00001;end;do EI=EI+0X001;end;b_=Sm[EI];local n7=(0X2);EI=EI+1;do(kI)[2]=YI[b_[0x002]];end;EI=EI+1;EI=EI+0X1;do b_=Sm[EI];end;EI=EI+1;kI[3]=b_[2];EI=EI+1;(kI)[n7]=kI[n7](kI[n7+0X1]);uI=n7;b_=Sm[EI];EI=EI+1;(kI)[0X2]=kI[2][b_[5]];EI=EI+1;EI=EI+0X1;EI=EI+0x1;local R7=bm[1];do(R7[0X00001])[R7[0X002]]=kI[0X2];end;EI=EI+1;do R7=bm[0X000];end;R7[0x00001][R7[0X02]]=kI[0x0001];else do for en=b_[0X7],b_[6]do kI[en]=nil;end;end;end;end;else if m_==5 then EI=b_[6];else do(kI)[b_[7]]=YI[b_[0X002]];end;end;end;end;else if m_>=0X2 then if m_==0X3 then(kI)[b_[0X7]]=b_[2];else kI[b_[7]]={f({},0X0001,b_[6])};end;else if m_~=1 then do kI[b_[0X0007]]=kI[b_[0X6]]~=kI[b_[0X001]];end;else local D9=Zm[b_[0x006]];local t9=(nil);local S9=D9[3];local C9=(#S9);if C9>0x0 then t9={};for vD=0X1,C9 do local BD=(S9[vD]);if BD[1]==0x000 then do(t9)[vD-1]={kI,BD[0x0002]};end;else t9[vD-1]=bm[BD[2]];end;end;M(Cm,t9);end;kI[b_[7]]=dH(D9,t9,YI);end;end;end;else if not(m_<14)then if m_<16 then if m_==0Xf then do(kI)[0X1]=YI[b_[2]];end;local C5=(bm[0]);EI=EI+0x1;EI=EI+1;do EI=EI+0X1;end;uI=1;do kI[uI]=kI[uI]();end;EI=EI+0x00001;kI[2]=C5[1][C5[2]];EI=EI+0X001;EI=EI+0X00001;EI=EI+0x01;kI[0X1]=kI[0x1]-kI[0X00002];b_=Sm[EI];EI=EI+0X001;do if not(b_[2]<kI[1])then EI=b_[7];end;end;else do kI[1]=YI[b_[2]];end;EI=EI+0x1;do EI=EI+0X1;end;do b_=Sm[EI];end;do EI=EI+0X1;end;do(kI)[0X2]=b_[0X2];end;b_=Sm[EI];EI=EI+0X00001;do(kI)[3]=b_[2];end;local V2=(0X1);EI=EI+1;kI[V2](kI[V2+1],kI[V2+2]);uI=V2-1;b_=Sm[EI];EI=EI+1;do EI=b_[0X006];end;end;else if not(m_>=17)then(kI)[b_[0X7]]=j(kI[b_[0X0006]],kI[b_[0X01]]);else do if m_~=0x012 then do repeat local fr,Mr=Cm,kI;if#fr>0X0 then local no={};for Ym,dm in I,fr do for to,Qo in I,dm do do if not(Qo[1]==Mr and Qo[0X02]>=0)then else local Bg=Qo[0x2];do if not no[Bg]then(no)[Bg]={Mr[Bg]};end;end;(Qo)[1]=no[Bg];do(Qo)[2]=0x01;end;end;end;end;end;end;until true;end;return;else if kI[b_[7]]then EI=b_[0X6];end;end;end;end;end;else if not(m_>=11)then if m_~=10 then if not(kI[b_[6]]<=kI[b_[1]])then EI=b_[7];end;else end;else if not(m_<0X000C)then if m_~=13 then local d7=(b_[7]);local z7,M7=kI[d7]();if not(z7)then else for E9=0x1,b_[1]do(kI)[d7+E9]=M7[E9];end;EI=b_[6];end;else kI[b_[7]][kI[b_[6]]]=kI[b_[1]];end;else(GI)[b_[0X06]]=kI[b_[0X007]];end;end;end;end;end;end);if not(gI)then if e(UI)=="string"then if not(p(UI,'\097t\116\e\109\p\116\ \116\o yi\101\l\d a\cr\oss\ \m\etame\116\h\111\d/\C\%\045\099\097\l\l\032\098o\117\110dar\121'))then else return coroutine.yield();end;if not(p(UI,"\094\.\045:\%d+\:\ "))then V(UI,0);else V('L\117\114aph \S\cr\ipt\058'..(Dm[EI-0X1]or"(internal)")..':\ '..v(UI),0X0);end;else V(UI,0X0);end;else do if UI then do if NI~=0x1 then return kI[HI](f(kI,HI+1,uI));else do return kI[HI]();end;end;end;elseif not(HI)then else return f(kI,HI,NI);end;end;end;end;end;end;else do Km=function(...)local Gi=1;local Ki=({});local Bi=0X000;local li=(K());local xi={[1]=Xm,[2]=Ki};local Li,ci=eH(...);do Li=Li-0X1;end;do for KE=0,Li do if km>KE then(Ki)[KE]=ci[KE+0X1];else do break;end;end;end;end;local Ui=((li==g and Qm or li));if not Lm then do ci=nil;end;elseif Um then(Ki)[km]={n=Li>=km and Li-km+0X1 or 0,f(ci,km+1,Li+1)};end;do if Ui~=li then w(Km,Ui);end;end;local Ei,fi,ei,Fi=o(function()do while true do local vu=(Sm[Gi]);local ju=(vu[4]);do Gi=Gi+0X1;end;do if ju>=7 then if not(ju>=11)then do if not(ju<0X9)then do if ju==0x0A then Ki[vu[0X07]]=Ui[vu[2]];else(Ki)[vu[7]]=O(Ki[vu[6]],Ki[vu[1]]);end;end;else if ju~=0X8 then do Ki[vu[7]]=vu[0X2];end;else(Ki)[0X1]=Ui[vu[2]];vu=Sm[Gi];Gi=Gi+1;Ki[1]=Ki[1][vu[5]];vu=Sm[Gi];Gi=Gi+0X00001;if not Ki[0X1]then Gi=vu[6];end;end;end;end;else do if ju>=0Xd then if ju~=0x0e then local xt=vu[0X6];local Kt=(Ki[xt]);do for ZU=xt+1,vu[0X0001]do Kt=Kt..Ki[ZU];end;end;Ki[vu[7]]=Kt;else do(Ki)[vu[0x7]]={f({},1,vu[0X6])};end;end;else if ju~=0XC then for EU=vu[0x7],vu[6]do(Ki)[EU]=nil;end;else local rz,fz=vu[0X7],vu[0X6];if fz~=0 then Bi=rz+fz-1;end;local oz=vu[0X001];local Tz,Lz=nil,(nil);if fz~=1 then Tz,Lz=eH(Ki[rz](f(Ki,rz+1,Bi)));else do Tz,Lz=eH(Ki[rz]());end;end;if oz~=0X001 then if oz~=0X0 then do Tz=rz+oz-2;end;Bi=Tz+0X1;else Tz=Tz+rz-1;do Bi=Tz;end;end;local WV=0X0;for Sd=rz,Tz do WV=WV+0X001;Ki[Sd]=Lz[WV];end;else Bi=rz-1;end;end;end;end;end;else if ju>=0x3 then if not(ju>=5)then do if ju~=0X4 then do repeat local EW,nW=Cm,(Ki);do if#EW>0X00 then local SU=({});for Ea,ca in I,EW do do for xX,ZX in I,ca do if not(ZX[1]==nW and ZX[0X02]>=0)then else local n9=ZX[2];do if not SU[n9]then(SU)[n9]={nW[n9]};end;end;ZX[1]=SU[n9];do(ZX)[2]=1;end;end;end;end;end;end;end;until true;end;return;else local oP=Zm[vu[6]];local yP=(nil);local KP=(oP[3]);local mP=#KP;if not(mP>0X000)then else yP={};for gZ=0X0001,mP do local LZ=(KP[gZ]);do if LZ[0X1]~=0X0 then do(yP)[gZ-0x001]=bm[LZ[2]];end;else(yP)[gZ-1]={Ki,LZ[2]};end;end;end;M(Cm,yP);end;Ki[vu[7]]=dH(oP,yP,Ui);end;end;else if ju==6 then else local F1=(vu[7]);for YP=F1,F1+(vu[6]-0X001)do(Ki)[YP]=ci[km+(YP-F1)+0X1];end;end;end;else do if not(ju<1)then if ju~=2 then do Gi=vu[6];end;else(Ki)[0X0]=Ui[vu[0X2]];Gi=Gi+0X001;Gi=Gi+0X001;local a8=0;vu=Sm[Gi];local F8=bm[0];do Gi=Gi+0X1;end;Ki[1]=vu[2];do Gi=Gi+0X1;end;Ki[a8]=Ki[a8](Ki[a8+1]);do Bi=a8;end;Gi=Gi+1;Ki[0X1]=F8[0X0001][F8[0x0002]];vu=Sm[Gi];Gi=Gi+1;Ki[1]=Ki[0X1][vu[5]];Gi=Gi+1;Gi=Gi+0X00001;Gi=Gi+0X00001;Ki[2]=Ki[0];do Gi=Gi+1;end;a8=0x0001;Ki[a8]=Ki[a8](Ki[a8+0X001]);do Bi=a8;end;Gi=Gi+0X1;Gi=Gi+1;vu=Sm[Gi];Gi=Gi+1;do if not(not Ki[0X1])then else Gi=vu[0X6];end;end;end;else local Id=bm[0X0000];Ki[0X1]=Id[0x0001][Id[0x2]];Gi=Gi+1;Gi=Gi+1;vu=Sm[Gi];Gi=Gi+1;Ki[0X1]=Ki[0X1][vu[5]];Gi=Gi+0X00001;Ki[2]=Ki[0X000];do Gi=Gi+0X00001;end;Id=bm[1];Ki[3]=Id[1][Id[2]];Gi=Gi+0X1;local dd=(1);Gi=Gi+1;do Gi=Gi+0X001;end;Ki[dd](Ki[dd+1],Ki[dd+2]);Bi=dd-1;Gi=Gi+1;Id=bm[1];do Ki[1]=Id[1][Id[0X02]];end;vu=Sm[Gi];Gi=Gi+1;dd=0x01;local Ed=(Ki[0x1]);(Ki)[dd+1]=Ed;Ki[dd]=Ed[vu[0x5]];Gi=Gi+1;dd=1;Ki[dd](Ki[dd+0X1]);Bi=dd-1;Gi=Gi+0X00001;Gi=Gi+1;vu=Sm[Gi];do Gi=Gi+1;end;Gi=vu[6];end;end;end;end;end;end;end;end);if Ei then if fi then do if Fi==0X0001 then do return Ki[ei]();end;else return Ki[ei](f(Ki,ei+0X1,Bi));end;end;elseif not(ei)then else do return f(Ki,ei,Fi);end;end;else if e(fi)~='\s\116\114\i\110\103'then V(fi,0);else if not(p(fi,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(p(fi,"^.-:%d+: "))then V(fi,0x0);else V("\Lurap\104\032\S\099\114i\p\116:"..(Dm[Gi-0x1]or"(internal)")..": "..v(fi),0X000);end;end;end;end;end;end;end;end;else if xm>=159 then if not(xm>=0X0a0)then Km=function(...)local q1={};local T1=0X1;local G1=(K());local o1,V1=(G1==g and Qm or G1),{[2]=q1,[1]=Xm};local w1,D1=eH(...);do w1=w1-1;end;local K1=0;do for G9=0,w1 do if not(km>G9)then break;else(q1)[G9]=D1[G9+1];end;end;end;do if not Lm then D1=nil;elseif not(Um)then else(q1)[km]={n=w1>=km and w1-km+1 or 0,f(D1,km+1,w1+0X1)};end;end;if o1~=G1 then(w)(Km,o1);end;local U1,k1,b1,I1=o(function()while true do local kB=(Sm[T1]);local qB=kB[0x4];T1=T1+0X1;if qB>=5 then do if not(qB>=0X8)then if qB>=0X6 then do if qB==0X7 then else do(q1)[kB[0X7]]=V1[kB[6]];end;end;end;else local DN=Zm[kB[0X00006]];local gN=DN[0X00003];local ZN,jN=#gN,nil;if ZN>0X0 then jN={};for oz=0X001,ZN do local Ez=(gN[oz]);do if Ez[1]==0x0 then(jN)[oz-1]={q1,Ez[0X2]};else jN[oz-1]=bm[Ez[0X2]];end;end;end;(M)(Cm,jN);end;q1[kB[0x7]]=dH(DN,jN,o1);end;else if qB>=0x9 then if qB==10 then q1[0X0]=o1[kB[0X2]];local ZD=(0);do T1=T1+0x00001;end;T1=T1+1;kB=Sm[T1];T1=T1+1;local SD=(q1[0X0]);q1[ZD+1]=SD;(q1)[ZD]=SD[kB[5]];kB=Sm[T1];do T1=T1+1;end;q1[2]=kB[2];T1=T1+0X001;ZD=0;local ED=nil;q1[ZD]=q1[ZD](q1[ZD+0X1],q1[ZD+0X2]);K1=ZD;do kB=Sm[T1];end;do T1=T1+1;end;q1[0X0001]=o1[kB[2]];T1=T1+1;T1=T1+0X1;do kB=Sm[T1];end;T1=T1+0x1;q1[0X1]=q1[0X1][kB[0x5]];do kB=Sm[T1];end;do T1=T1+1;end;local jD=(Zm[kB[0x6]]);local rD=jD[0X3];local aD=(#rD);if aD>0x0 then ED={};for WK=0x1,aD do local eK=(rD[WK]);do if eK[0x001]==0X0 then ED[WK-0X1]={q1,eK[0x2]};else do(ED)[WK-0X1]=bm[eK[2]];end;end;end;end;M(Cm,ED);end;do q1[0X2]=dH(jD,ED,o1);end;do T1=T1+0X001;end;ZD=0X1;(q1[ZD])(q1[ZD+0X1]);K1=ZD-0x1;T1=T1+0X1;repeat local QC,gC=Cm,q1;do if not(#QC>0)then else local MN=({});do for SZ,mZ in I,QC do for qb,nb in I,mZ do if not(nb[1]==gC and nb[0X0002]>=0X0)then else local Ei=nb[2];if not MN[Ei]then(MN)[Ei]={gC[Ei]};end;(nb)[1]=MN[Ei];do(nb)[0X0002]=0X1;end;end;end;end;end;end;end;until true;do return;end;else repeat local lf,Ff,Sf=Cm,q1,kB[7];if#lf>0 then local zD={};do for YX,fX in I,lf do do for Yo,go in I,fX do if go[1]==Ff and go[0X0002]>=Sf then local f7=(go[2]);if not zD[f7]then(zD)[f7]={Ff[f7]};end;do go[1]=zD[f7];end;do go[0X2]=1;end;end;end;end;end;end;end;until true;end;else do q1[kB[7]]=o1[kB[0X02]];end;end;end;end;else if not(qB>=0X0002)then do if qB==0x00001 then q1[kB[0x007]]=kB[0X2];else do(q1)[kB[0X007]]=kB[2];end;end;end;else do if not(qB<3)then if qB~=0X4 then do if not(not(q1[kB[6]]<q1[kB[0X1]]))then else T1=kB[0X7];end;end;else q1[kB[0x7]]={f({},0X1,kB[0x06])};end;else T1=kB[6];end;end;end;end;end;end);do if U1 then if k1 then if I1==1 then return q1[b1]();else do return q1[b1](f(q1,b1+0x1,K1));end;end;elseif not(b1)then else return f(q1,b1,I1);end;else if e(k1)=='\stri\110\g'then if not(p(k1,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if p(k1,"^.-:%d+: ")then V("Luraph Script:"..(Dm[T1-1]or"(\105nter\110\097l)").."\: "..v(k1),0X000);else V(k1,0);end;else V(k1,0X0);end;end;end;end;else if xm~=161 then Km=function(...)local KO,zO=0X1,{};local nO=K();local dO,rO={[1]=Xm,[2]=zO},(0X0);local lO,sO=eH(...);lO=lO-1;local jO=(nO==g and Qm or nO);for Mp=0x0000,lO do if km>Mp then zO[Mp]=sO[Mp+0X1];else break;end;end;if not Lm then sO=nil;elseif not(Um)then else do zO[km]={n=lO>=km and lO-km+1 or 0,f(sO,km+1,lO+1)};end;end;if jO==nO then else(w)(Km,jO);end;local LO,PO,YO,MO=o(function()while true do local ae=Sm[KO];local ee=ae[4];KO=KO+1;do if ee>=0XC then do if not(ee>=18)then do if not(ee>=15)then if ee>=13 then if ee~=14 then(zO)[0]=ae[2];ae=Sm[KO];KO=KO+0X1;local oO=(0X00000);(zO)[1]=ae[0X002];do ae=Sm[KO];end;KO=KO+0x0001;zO[2]=ae[2];ae=Sm[KO];do KO=KO+1;end;local cO,bO=zO[oO+1],zO[oO+0X00002];local kO=zO[oO];do zO[oO]=r(function()for ea=kO,cO,bO do C(true,ea);end;end);end;KO=ae[0X6];else(zO)[ae[7]]=not zO[ae[0X6]];end;else do if not(zO[ae[6]]<zO[ae[0X01]])then do KO=ae[0X00007];end;end;end;end;else if not(ee>=16)then local ZY=ae[0X6];local UY=(ae[7]);rO=UY+ZY-1;repeat local NW,CW=Cm,(zO);if not(#NW>0)then else local jH={};for yu,wu in I,NW do for v9,a9 in I,wu do if not(a9[1]==CW and a9[0X2]>=0)then else local Dt=(a9[2]);if not jH[Dt]then jH[Dt]={CW[Dt]};end;do a9[0X1]=jH[Dt];end;do a9[0X2]=0X01;end;end;end;end;end;until true;return true,UY,ZY;else do if ee~=17 then KO=ae[6];else if not(zO[ae[6]]<zO[ae[0X1]])then else KO=ae[0x7];end;end;end;end;end;end;else if not(ee>=21)then if not(ee>=19)then(zO)[ae[7]]=zO[ae[6]]~=zO[ae[0X1]];else do if ee==0x014 then zO[0]=jO[ae[2]];KO=KO+1;KO=KO+0X1;ae=Sm[KO];KO=KO+1;do(zO)[0X1]=jO[ae[0X02]];end;ae=Sm[KO];KO=KO+1;do zO[0X0001]=zO[0x0001][ae[0X5]];end;do ae=Sm[KO];end;do KO=KO+1;end;zO[2]=jO[ae[0X2]];KO=KO+1;KO=KO+0X0001;ae=Sm[KO];do KO=KO+1;end;(zO)[2]=zO[0X2][ae[5]];KO=KO+1;KO=KO+0X001;ae=Sm[KO];KO=KO+0X1;zO[0x00002]=zO[2][ae[0X5]];do ae=Sm[KO];end;KO=KO+0X1;zO[2]=zO[2][ae[0X5]];KO=KO+1;do KO=KO+0X1;end;ae=Sm[KO];KO=KO+0X1;(zO)[0x2]=zO[2][ae[0x0005]];ae=Sm[KO];do KO=KO+0X1;end;zO[0X2]=zO[0X00002][ae[5]];ae=Sm[KO];KO=KO+1;zO[2]=zO[0x0002][ae[5]];ae=Sm[KO];KO=KO+0X1;zO[2]=zO[2][ae[5]];do ae=Sm[KO];end;KO=KO+1;do(zO)[3]=ae[2];end;KO=KO+0X1;local Fm=(0);rO=Fm+0X04-1;(zO[Fm])(f(zO,Fm+0x1,rO));rO=Fm-0X1;do ae=Sm[KO];end;KO=KO+1;do zO[0]=jO[ae[2]];end;KO=KO+1;KO=KO+1;ae=Sm[KO];KO=KO+1;zO[1]=jO[ae[2]];ae=Sm[KO];KO=KO+1;zO[0x0001]=zO[0x1][ae[0X5]];ae=Sm[KO];KO=KO+1;(zO)[2]=jO[ae[0x2]];KO=KO+1;KO=KO+1;do ae=Sm[KO];end;KO=KO+1;(zO)[0X2]=zO[0X0002][ae[5]];ae=Sm[KO];KO=KO+0X1;(zO)[2]=zO[0X002][ae[5]];KO=KO+1;KO=KO+0X01;ae=Sm[KO];KO=KO+1;(zO)[2]=zO[2][ae[5]];KO=KO+0X0001;KO=KO+1;ae=Sm[KO];KO=KO+1;zO[0X00002]=zO[0X2][ae[5]];do ae=Sm[KO];end;do KO=KO+1;end;zO[2]=zO[0X2][ae[5]];ae=Sm[KO];do KO=KO+0X001;end;(zO)[2]=zO[0X02][ae[5]];ae=Sm[KO];KO=KO+0X01;(zO)[0X2]=zO[2][ae[5]];ae=Sm[KO];KO=KO+0X1;zO[3]=ae[2];KO=KO+1;Fm=0x0;do rO=Fm+0X4-1;end;(zO[Fm])(f(zO,Fm+1,rO));rO=Fm-0X1;do KO=KO+0x1;end;do KO=KO+1;end;ae=Sm[KO];KO=KO+1;do zO[0X000]=jO[ae[2]];end;KO=KO+1;KO=KO+1;ae=Sm[KO];KO=KO+1;(zO)[1]=ae[0X2];KO=KO+1;do Fm=0;end;(zO[Fm])(zO[Fm+1]);do rO=Fm-1;end;KO=KO+1;KO=KO+0X0001;ae=Sm[KO];KO=KO+0X01;do zO[0X000]=jO[ae[2]];end;KO=KO+1;KO=KO+0X1;ae=Sm[KO];KO=KO+0x1;do zO[1]=ae[0X2];end;KO=KO+0X0001;Fm=0X0000;(zO)[Fm]=zO[Fm](zO[Fm+0X1]);rO=Fm;KO=KO+1;KO=KO+0X0001;do ae=Sm[KO];end;do KO=KO+0X1;end;if not(not zO[0])then else KO=ae[6];end;else(zO)[ae[0x007]]=zO[ae[0X6]]/zO[ae[1]];end;end;end;else do if not(ee<0X16)then if ee==23 then local lZ=(bm[0]);do(zO)[0]=lZ[1][lZ[2]];end;KO=KO+1;KO=KO+1;do ae=Sm[KO];end;KO=KO+0X01;do zO[0]=zO[0X00][ae[0X0005]];end;ae=Sm[KO];KO=KO+1;if not(not zO[0])then else KO=ae[0X06];end;else(zO)[0]=jO[ae[2]];local xf=(0);do KO=KO+0X1;end;do KO=KO+0x1;end;ae=Sm[KO];do KO=KO+1;end;do(zO)[1]=ae[0X00002];end;local Lf=bm[1];KO=KO+0X1;(zO)[xf]=zO[xf](zO[xf+0X1]);rO=xf;KO=KO+0X1;do(zO)[0X0001]=Lf[1][Lf[0X2]];end;do KO=KO+0X001;end;KO=KO+0x0001;ae=Sm[KO];KO=KO+1;zO[0X1]=zO[0x1][ae[0X005]];KO=KO+1;(zO)[0X2]=zO[0x0];KO=KO+0X0001;xf=0X001;(zO)[xf]=zO[xf](zO[xf+1]);do rO=xf;end;ae=Sm[KO];do KO=KO+1;end;if not(not zO[1])then else KO=ae[0X0006];end;end;else do(zO)[4]=jO[ae[0X002]];end;KO=KO+1;KO=KO+1;ae=Sm[KO];do KO=KO+1;end;do zO[0X005]=ae[2];end;ae=Sm[KO];KO=KO+1;(zO)[0X00006]=ae[0X2];do KO=KO+1;end;do zO[0X7]=zO[0X0003];end;KO=KO+0X1;local nF=(0X0004);do rO=nF+4-0X1;end;(zO[nF])(f(zO,nF+1,rO));do rO=nF-1;end;ae=Sm[KO];KO=KO+1;KO=ae[0X6];end;end;end;end;end;else do if ee<0X006 then if not(ee>=3)then if not(ee<1)then if ee==0X2 then zO[ae[7]]=zO[ae[0X6]]==zO[ae[0X1]];else do for cb=ae[7],ae[0X6]do do(zO)[cb]=nil;end;end;end;end;else(zO)[ae[0X7]]=jO[ae[2]];end;else if not(ee>=0X4)then local WH=(ae[0X7]);local NH,aH=zO[WH]();do if NH then KO=ae[0x0006];do(zO)[WH+0X003]=aH;end;end;end;else if ee~=0x5 then local B9,Z9,t9=ae[0X7],ae[0X6],ae[0X1];do if Z9~=0x00000 then rO=B9+Z9-0X1;end;end;local b9,W9=nil,(nil);if Z9==0X1 then b9,W9=eH(zO[B9]());else b9,W9=eH(zO[B9](f(zO,B9+0X00001,rO)));end;if t9==0X1 then rO=B9-0X1;else if t9~=0 then b9=B9+t9-0X2;rO=b9+0X1;else b9=b9+B9-0x01;rO=b9;end;local xD=(0X0);for f6=B9,b9 do xD=xD+0x0001;(zO)[f6]=W9[xD];end;end;else end;end;end;else if ee<0X9 then if ee>=7 then do if ee==8 then(zO[ae[0X00007]])[zO[ae[0X6]]]=zO[ae[0X1]];else zO[ae[7]]={f({},0x1,ae[0X6])};end;end;else local Dg=(bm[0X1]);zO[1]=Dg[0X1][Dg[0x0002]];do ae=Sm[KO];end;KO=KO+1;do(zO)[1]=zO[0X00001][ae[5]];end;local Kg=(1);KO=KO+1;do zO[2]=zO[0];end;KO=KO+0X01;do Dg=bm[2];end;(zO)[0X3]=Dg[1][Dg[2]];do KO=KO+0X1;end;zO[Kg](zO[Kg+1],zO[Kg+0X2]);rO=Kg-1;KO=KO+1;Dg=bm[0X2];zO[1]=Dg[1][Dg[2]];ae=Sm[KO];local Ug=(zO[1]);do KO=KO+1;end;do Kg=0X1;end;(zO)[Kg+1]=Ug;do(zO)[Kg]=Ug[ae[5]];end;KO=KO+1;Kg=0x1;(zO[Kg])(zO[Kg+0X1]);do rO=Kg-0X0001;end;KO=KO+0x1;do KO=KO+0X1;end;do ae=Sm[KO];end;do KO=KO+0X1;end;do KO=ae[0x06];end;end;else do if not(ee>=0X0a)then local GV=(Zm[ae[0X6]]);local HV=(GV[0X3]);local MV,LV=#HV,nil;do if not(MV>0)then else LV={};do for wY=1,MV do local mY=HV[wY];do if mY[0X00001]==0 then LV[wY-1]={zO,mY[0X02]};else(LV)[wY-1]=bm[mY[0X00002]];end;end;end;end;M(Cm,LV);end;end;do zO[ae[0X7]]=dH(GV,LV,jO);end;else if ee~=11 then do repeat local nf,mf=Cm,(zO);do if not(#nf>0X0)then else local Nw=({});for VW,RW in I,nf do for mH,OH in I,RW do if not(OH[0X1]==mf and OH[2]>=0)then else local cJ=(OH[0X2]);if not Nw[cJ]then do Nw[cJ]={mf[cJ]};end;end;do OH[0X1]=Nw[cJ];end;OH[2]=1;end;end;end;end;end;until true;end;return;else do(zO)[ae[0X7]]=ae[0X00002];end;end;end;end;end;end;end;end;end;end;end);if not(LO)then if e(PO)~="string"then(V)(PO,0X0);else if not(p(PO,'att\e\mpt t\111 \121\ie\l\100\032a\099r\os\s\ \109\eta\m\101t\ho\100\/\C\%\-cal\l\ \098\o\117\110\d\097r\121'))then else do return coroutine.yield();end;end;do if p(PO,'\^\.\045:\037\d+\058 ')then V("\L\117ra\p\h\032\083\cr\i\p\116:"..(Dm[KO-0X1]or'\(\in\116\101\114\110a\l)').."\058\ "..v(PO),0X000);else V(PO,0X0);end;end;end;else if PO then if MO~=1 then return zO[YO](f(zO,YO+0X001,rO));else return zO[YO]();end;elseif not(YO)then else return f(zO,YO,MO);end;end;end;else Km=function(...)local iF,OF={},0;local qF=0X0001;local zF=(K());local pF=({[2]=iF,[1]=Xm});local DF=(zF==g and Qm or zF);local BF,tF=eH(...);BF=BF-1;for OH=0X0,BF do do if not(km>OH)then do break;end;else iF[OH]=tF[OH+1];end;end;end;if not Lm then tF=nil;elseif not(Um)then else iF[km]={n=BF>=km and BF-km+1 or 0,f(tF,km+1,BF+1)};end;if DF~=zF then w(Km,DF);end;local sF,cF,WF,yF=o(function()while true do local yt=Sm[qF];local Ct=yt[0X0004];qF=qF+1;if not(Ct<0x0000D)then if not(Ct<19)then if not(Ct>=0X016)then if Ct<0x00014 then repeat local K5,d5=Cm,iF;do if#K5>0X0 then local mx=({});do for qB,TB in I,K5 do for Ke,Ne in I,TB do if not(Ne[0X0001]==d5 and Ne[2]>=0)then else local Wz=(Ne[2]);if not mx[Wz]then do(mx)[Wz]={d5[Wz]};end;end;(Ne)[0X1]=mx[Wz];do Ne[0x2]=0X1;end;end;end;end;end;end;end;until true;return;else if Ct==21 then(iF)[yt[7]]=iF[yt[6]];else local jj=(yt[6]);local Dj=(yt[0x00007]);do OF=Dj+jj-1;end;do repeat local yo,so=Cm,(iF);if not(#yo>0X000)then else local wY={};for zl,Jl in I,yo do for Hl,xl in I,Jl do if not(xl[0x0001]==so and xl[2]>=0)then else local mk=xl[0X2];do if not wY[mk]then wY[mk]={so[mk]};end;end;xl[1]=wY[mk];xl[2]=1;end;end;end;end;until true;end;return true,Dj,jj;end;end;else do if Ct>=0X000018 then if Ct==0X19 then if not(iF[yt[6]]<=iF[yt[1]])then else qF=yt[0X7];end;else local pc=(bm[0]);do(iF)[0X0]=pc[0x0001][pc[2]];end;local bc=0;do yt=Sm[qF];end;do qF=qF+1;end;local gc=(iF[0X0000]);do iF[bc+0X00001]=gc;end;iF[bc]=gc[yt[5]];qF=qF+1;bc=0;(iF)[bc]=iF[bc](iF[bc+1]);OF=bc;yt=Sm[qF];qF=qF+1;if not(not iF[0])then else qF=yt[0X6];end;end;else do if Ct==23 then if iF[yt[6]]~=iF[yt[1]]then else qF=yt[7];end;else iF[0]=DF[yt[2]];qF=qF+0x00001;qF=qF+1;do qF=qF+0x1;end;OF=0;do iF[OF]=iF[OF]();end;do yt=Sm[qF];end;qF=qF+1;if iF[0X0]then qF=yt[0X6];end;end;end;end;end;end;else do if not(Ct<0X0010)then do if not(Ct<0X11)then if Ct~=0X00012 then do if not iF[yt[7]]then qF=yt[6];end;end;else(iF)[0]=DF[yt[0X2]];qF=qF+1;qF=qF+1;yt=Sm[qF];local jU=(0);qF=qF+0x00001;(iF)[1]=yt[0X0002];qF=qF+0X001;(iF)[jU]=iF[jU](iF[jU+0x0001]);OF=jU;yt=Sm[qF];do qF=qF+1;end;do if not(not iF[0X0])then else qF=yt[0x6];end;end;end;else iF[0]=DF[yt[2]];yt=Sm[qF];do qF=qF+1;end;iF[0]=iF[0X0000][yt[5]];qF=qF+1;do qF=qF+1;end;do yt=Sm[qF];end;qF=qF+0X1;do if not(not iF[0X0])then else qF=yt[6];end;end;end;end;else if not(Ct>=0XE)then local lP,wP=Zm[yt[6]],(nil);local BP=lP[3];local RP=#BP;do if RP>0x00 then wP={};for DN=0X01,RP do local TN=(BP[DN]);do if TN[0X1]~=0X0000 then(wP)[DN-1]=bm[TN[2]];else do(wP)[DN-1]={iF,TN[2]};end;end;end;end;M(Cm,wP);end;end;(iF)[yt[0X7]]=dH(lP,wP,DF);else if Ct~=15 then iF[yt[0X7]]={f({},1,yt[6])};else iF[0]=DF[yt[2]];local x4=(0);do qF=qF+0X00001;end;qF=qF+0X001;yt=Sm[qF];do qF=qF+1;end;iF[0]=iF[0X0][yt[0X00005]];yt=Sm[qF];qF=qF+0X1;do(iF)[1]=yt[2];end;qF=qF+0X1;do iF[x4]=iF[x4](iF[x4+0X1]);end;OF=x4;do yt=Sm[qF];end;qF=qF+1;if not iF[0]then qF=yt[0X6];end;end;end;end;end;end;else do if not(Ct<0x0006)then do if not(Ct<0x009)then if not(Ct<0X00b)then if Ct==0Xc then do iF[yt[0x7]]=O(iF[yt[0x6]],iF[yt[0X1]]);end;else local xE=yt[0X7];for z7=xE,xE+(yt[0x00006]-0X1)do(iF)[z7]=tF[km+(z7-xE)+0X001];end;end;else if Ct==0X00a then local tt=(bm[0X0]);iF[0]=tt[1][tt[2]];do yt=Sm[qF];end;do qF=qF+0x01;end;local ut=(0);local St=(iF[0]);(iF)[ut+1]=St;do(iF)[ut]=St[yt[0X5]];end;qF=qF+0x1;ut=0x000;iF[ut](iF[ut+1]);OF=ut-0X1;qF=qF+1;do repeat local pv,Qv=Cm,iF;if not(#pv>0)then else local kf=({});do for OW,vW in I,pv do for je,qe in I,vW do do if not(qe[0x01]==Qv and qe[0X2]>=0)then else local Hy=(qe[2]);if not(not kf[Hy])then else(kf)[Hy]={Qv[Hy]};end;(qe)[0X1]=kf[Hy];(qe)[0X2]=1;end;end;end;end;end;end;until true;end;return;else local XI=(iF[yt[6]]/iF[yt[1]]);(iF)[yt[7]]=XI-XI%0X1;end;end;else if Ct>=0X007 then if Ct~=8 then qF=yt[0x6];else do(iF)[yt[0x7]]=yt[2];end;end;else end;end;end;else if not(Ct<3)then if not(Ct>=4)then iF[0]=DF[yt[0X2]];qF=qF+0x1;qF=qF+0X001;yt=Sm[qF];do qF=qF+0x1;end;if iF[0]then qF=yt[0X6];end;else do if Ct==5 then iF[yt[0X7]]=yt[0X2];else iF[0X00]=DF[yt[0X0002]];qF=qF+0X1;local zv=0X000;qF=qF+0x1;do yt=Sm[qF];end;do qF=qF+1;end;local Rv=Zm[yt[0X6]];local fv=nil;local Ev=(Rv[0X03]);local wv=#Ev;if wv>0X00 then fv={};for hj=0X1,wv do local Wj=Ev[hj];if Wj[1]==0X00000 then fv[hj-0X00001]={iF,Wj[2]};else fv[hj-1]=bm[Wj[0X00002]];end;end;(M)(Cm,fv);end;iF[0X01]=dH(Rv,fv,DF);do qF=qF+0X01;end;(iF[zv])(iF[zv+1]);do OF=zv-1;end;yt=Sm[qF];qF=qF+0X0001;iF[0]=DF[yt[2]];do qF=qF+1;end;qF=qF+1;yt=Sm[qF];qF=qF+0X1;(iF)[1]=yt[0x2];qF=qF+1;zv=0X0;(iF)[zv]=iF[zv](iF[zv+1]);OF=zv;yt=Sm[qF];qF=qF+1;if not iF[0]then qF=yt[0x6];end;end;end;end;else if not(Ct<0X01)then do if Ct~=2 then do iF[0]=DF[yt[2]];end;qF=qF+1;OF=0;iF[OF]=iF[OF]();yt=Sm[qF];qF=qF+1;if not(iF[0]<yt[0X5])then else do qF=yt[0X7];end;end;else do iF[yt[7]]=DF[yt[0X2]];end;end;end;else iF[0]=DF[yt[2]];yt=Sm[qF];qF=qF+0X001;do(iF)[0x0]=iF[0X0][yt[5]];end;yt=Sm[qF];qF=qF+1;if not(not iF[0X0])then else qF=yt[6];end;end;end;end;end;end;end;end);if sF then do if cF then if yF==0X1 then return iF[WF]();else return iF[WF](f(iF,WF+0x01,OF));end;elseif not(WF)then else return f(iF,WF,yF);end;end;else if e(cF)=="string"then if p(cF,"a\116te\m\p\116\ \116\o\032\y\105\101\ld acr\o\s\s me\116a\109\e\116\h\od\/\067\037\-c\097\ll boun\dar\y")then do return coroutine.yield();end;end;if not(p(cF,"\^\046\045\058\%\100\+\:\ "))then V(cF,0);else(V)('\L\117\114\097\112h\ \S\cr\i\pt\058'..(Dm[qF-0X1]or"(internal)")..'\058\032'..v(cF),0);end;else V(cF,0x000);end;end;end;end;end;else if xm<157 then Km=function(...)local NB=(1);local DB=({});local EB=(K());local cB,iB=eH(...);local gB={[1]=Xm,[2]=DB};cB=cB-0X001;local pB=(0);local JB=((EB==g and Qm or EB));for zB=0,cB do do if km>zB then(DB)[zB]=iB[zB+1];else break;end;end;end;if not Lm then iB=nil;elseif Um then(DB)[km]={n=cB>=km and cB-km+1 or 0X0000,f(iB,km+0x0001,cB+0X01)};end;do if JB~=EB then(w)(Km,JB);end;end;do while true do local mH=(Sm[NB]);local NH=(mH[0X0004]);NB=NB+1;return(function(i,v,...)local g=i[0];g=lockWeapon or g;if tick()-recentlySpawn<0.5 then return;end;if tick()-lastequip<0.1 then return;end;if not g then return;end;if not Char then return;end;if type(g)=="string"then g=Client.Backpack:FindFirstChild(g);end;if g and g.Parent~=Char then local L=Char:FindFirstChild("Humanoid");if L then Char.Humanoid:EquipTool(g);end;lastequip=tick();end;end)(DB,bm,...);end;end;end;else if xm==0X09E then Km=function(...)local XF,YF=1,{};local cF=(K());local xF,iF=(cF==g and Qm or cF),(0X0);local WF,RF=eH(...);local TF={[2]=YF,[1]=Xm};WF=WF-1;for Rl=0X0,WF do if not(km>Rl)then break;else(YF)[Rl]=RF[Rl+1];end;end;if not Lm then RF=nil;elseif Um then YF[km]={n=WF>=km and WF-km+0x1 or 0x0,f(RF,km+0X1,WF+1)};end;do if xF~=cF then w(Km,xF);end;end;local HF,KF,EF,NF=o(function()while true do local U9=(Sm[XF]);local v9=(U9[4]);XF=XF+1;if v9<9 then if v9>=4 then if v9<0X6 then if v9==5 then do(YF)[U9[7]]=xF[U9[2]];end;else XF=U9[6];end;else if v9>=7 then if v9==0X8 then YF[U9[7]]=a(YF[U9[6]]);else do YF[U9[0X0007]]=U9[0X2];end;end;else if YF[U9[6]]~=YF[U9[1]]then else XF=U9[0X007];end;end;end;else if not(v9<0X2)then if v9~=3 then YF[0]=xF[U9[2]];XF=XF+1;XF=XF+1;do XF=XF+0X0001;end;(YF)[0]=not YF[0x000];U9=Sm[XF];do XF=XF+0X1;end;XF=U9[0x06];else YF[U9[7]]=l(YF[U9[6]],YF[U9[1]]);end;else do if v9==0X1 then do YF[U9[0X7]]=YF[U9[0X6]]+YF[U9[1]];end;else(YF)[U9[7]]=U9[0X2];end;end;end;end;else if not(v9<0Xd)then if v9>=0X000f then if v9>=0x00010 then if v9~=0X011 then local ws=Zm[U9[6]];local Hs=(ws[3]);local hs=#Hs;local qs=(nil);if not(hs>0x00000)then else qs={};for hr=1,hs do local Ur=(Hs[hr]);if Ur[1]~=0X0 then(qs)[hr-1]=bm[Ur[2]];else do(qs)[hr-0x0001]={YF,Ur[2]};end;end;end;M(Cm,qs);end;(YF)[U9[0X07]]=dH(ws,qs,xF);else YF[U9[7]]={f({},1,U9[0X006])};end;else local hS=bm[0X0];do(YF)[0]=hS[0X1][hS[2]];end;local ZS=(0);XF=XF+1;XF=XF+1;do U9=Sm[XF];end;XF=XF+0X001;local JS=YF[0X0];(YF)[ZS+1]=JS;do(YF)[ZS]=JS[U9[0X5]];end;do XF=XF+1;end;do ZS=0;end;YF[ZS](YF[ZS+1]);do iF=ZS-0x00001;end;XF=XF+0X1;do hS=bm[0X0000];end;do YF[0]=hS[1][hS[2]];end;do U9=Sm[XF];end;XF=XF+0X1;do ZS=0;end;JS=YF[0X00];do YF[ZS+0X0001]=JS;end;YF[ZS]=JS[U9[5]];do XF=XF+1;end;ZS=0X00;YF[ZS]=YF[ZS](YF[ZS+0x0001]);iF=ZS;U9=Sm[XF];XF=XF+1;if not(not YF[0])then else XF=U9[0x6];end;end;else do if v9~=0X00E then else(YF)[0x0]=xF[U9[2]];XF=XF+0X1;iF=0X000;(YF)[iF]=YF[iF]();XF=XF+0X1;do YF[0X0]=not YF[0x0000];end;do U9=Sm[XF];end;do XF=XF+1;end;XF=U9[6];end;end;end;else if v9>=0XB then do if v9==12 then if not(not YF[U9[0X0007]])then else XF=U9[6];end;else repeat local CO,uO=Cm,(YF);if not(#CO>0)then else local cK={};do for jM,eM in I,CO do for ZK,wK in I,eM do if wK[0X1]==uO and wK[2]>=0 then local IA=wK[0X002];if not cK[IA]then(cK)[IA]={uO[IA]};end;do(wK)[0X1]=cK[IA];end;(wK)[0x0002]=1;end;end;end;end;end;until true;local io=(U9[0X7]);return false,io,io;end;end;else do if v9==10 then local SW=(U9[7]);local fW=YF[SW+1];local VW=YF[SW];local QW=(YF[SW+2]);(YF)[SW]=r(function()do for J0=VW,fW,QW do C(true,J0);end;end;end);XF=U9[6];else do repeat local Ew,Iw=Cm,(YF);if not(#Ew>0)then else local hz={};for x3,l3 in I,Ew do for ma,la in I,l3 do if la[1]==Iw and la[2]>=0X0 then local wa=la[0X00002];if not hz[wa]then(hz)[wa]={Iw[wa]};end;la[1]=hz[wa];(la)[2]=0X001;end;end;end;end;until true;end;return;end;end;end;end;end;end;end);if HF then do if KF then if NF~=0X1 then return YF[EF](f(YF,EF+1,iF));else do return YF[EF]();end;end;elseif EF then return f(YF,EF,NF);end;end;else do if e(KF)=="\s\116\114in\g"then do if not(p(KF,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;end;if p(KF,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[XF-1]or"(internal)")..": "..v(KF),0X0);else(V)(KF,0X000);end;else(V)(KF,0X0);end;end;end;end;else Km=function(...)local Od=({});local hd=(0x1);local ud=K();local td,vd=eH(...);local Ud,Xd={[1]=Xm,[2]=Od},(ud==g and Qm or ud);td=td-0X0001;for v_=0,td do if km>v_ then(Od)[v_]=vd[v_+0X1];else break;end;end;local fd=0;if not Lm then vd=nil;elseif Um then Od[km]={n=td>=km and td-km+0x1 or 0,f(vd,km+1,td+1)};end;if Xd==ud then else(w)(Km,Xd);end;local qd,Ad,gd,Sd=o(function()do while true do local yt=Sm[hd];local Ot=(yt[0X4]);hd=hd+1;do if Ot>=0X000027 then if Ot>=0X00003B then if not(Ot>=0x0045)then if not(Ot>=64)then if not(Ot>=0X3D)then if Ot~=0X003c then Od[yt[7]]=Od[yt[0X6]];else local Gk=(yt[6]);local Qk=yt[7];fd=Qk+Gk-0X1;repeat local JK,FK=Cm,(Od);if#JK>0 then local dm={};do for jn,nn in I,JK do do for p2,Z2 in I,nn do if not(Z2[0X001]==FK and Z2[0X2]>=0X0)then else local Kn=Z2[0X2];do if not dm[Kn]then do(dm)[Kn]={FK[Kn]};end;end;end;(Z2)[1]=dm[Kn];(Z2)[0x2]=1;end;end;end;end;end;end;until true;return true,Qk,Gk;end;else if not(Ot>=62)then do Od[0X4]=Xd[yt[0X00002]];end;hd=hd+0x1;hd=hd+0X00001;do yt=Sm[hd];end;do hd=hd+0X001;end;Od[4]=Od[4][yt[0X00005]];do yt=Sm[hd];end;hd=hd+1;if not(not Od[0X4])then else do hd=yt[6];end;end;else do if Ot~=63 then local Mi=(yt[7]);local Di,ri,ci=Od[Mi]();if Di then(Od)[Mi+0x001]=ri;do(Od)[Mi+2]=ci;end;hd=yt[0X6];end;else(Od)[4]=Xd[yt[2]];do hd=hd+0x1;end;do hd=hd+0X1;end;hd=hd+0X1;fd=0X4;Od[fd]=Od[fd]();do hd=hd+0X1;end;Od[0X003]=Od[0X004];yt=Sm[hd];hd=hd+0X0001;hd=yt[0X006];end;end;end;end;else if Ot<66 then if Ot==0X41 then Od[4]=Xd[yt[2]];do yt=Sm[hd];end;hd=hd+0X1;(Od)[4]=Od[0x004][yt[0x5]];yt=Sm[hd];local iV=0x4;hd=hd+1;Od[0X5]=yt[0x00002];do hd=hd+1;end;do Od[iV]=Od[iV](Od[iV+0x1]);end;fd=iV;hd=hd+0X1;hd=hd+0x1;yt=Sm[hd];hd=hd+0X001;if not Od[4]then hd=yt[6];end;else Od[0X009]=Xd[yt[2]];hd=hd+1;hd=hd+1;local DV=(0X9);hd=hd+1;do(Od)[0X0a]=Od[0X00007];end;yt=Sm[hd];hd=hd+0X001;Od[11]=Xd[yt[0X002]];do hd=hd+0X1;end;hd=hd+1;hd=hd+0X0001;(Od[DV])(Od[DV+1],Od[DV+2]);fd=DV-0x1;hd=hd+1;do hd=hd+0X01;end;yt=Sm[hd];hd=hd+0X1;Od[0X9]=Xd[yt[2]];do hd=hd+1;end;hd=hd+1;hd=hd+0X1;fd=0X09;(Od[fd])();fd=fd-0X0001;yt=Sm[hd];hd=hd+1;do hd=yt[0x006];end;end;else if not(Ot<67)then do if Ot~=68 then do(Od)[9]=Xd[yt[0X2]];end;hd=hd+0x001;hd=hd+0X1;yt=Sm[hd];hd=hd+0x1;Od[0X009]=Od[0x009][yt[5]];do hd=hd+1;end;hd=hd+0x1;hd=hd+0X1;fd=9;(Od[fd])();fd=fd-0X0001;do yt=Sm[hd];end;hd=hd+1;do hd=yt[6];end;else(Od)[0X4]=Xd[yt[2]];yt=Sm[hd];hd=hd+0X001;Od[0X5]=Xd[yt[0x2]];hd=hd+1;(Od)[0X4]=Od[4][Od[5]];yt=Sm[hd];do hd=hd+1;end;if not Od[0x4]then hd=yt[6];end;end;end;else(Od)[yt[7]]={f({},1,yt[6])};end;end;end;else do if not(Ot<0X4A)then if not(Ot>=76)then do if Ot==75 then(Od)[0X0009]=Xd[yt[0X0002]];hd=hd+0x1;do hd=hd+0X1;end;hd=hd+0X1;fd=9;(Od[fd])();fd=fd-0X1;hd=hd+1;hd=hd+0X00001;yt=Sm[hd];hd=hd+1;Od[9]=Xd[yt[2]];do yt=Sm[hd];end;do hd=hd+0X00001;end;(Od)[0X9]=Od[0X9][yt[0X5]];yt=Sm[hd];hd=hd+0X1;do if not Od[0x9]then do hd=yt[0X6];end;end;end;else local W8=bm[0X000];Od[0X0006]=W8[0X0001][W8[0X2]];yt=Sm[hd];hd=hd+1;Od[0X06]=Od[0X006][yt[5]];hd=hd+0X1;Od[0X007]=Od[0x005];hd=hd+1;(Od)[0X8]=nil;do hd=hd+1;end;local O8=(0X6);(Od)[0x9]=Od[1];hd=hd+0X1;fd=O8+0X004-1;Od[O8](f(Od,O8+1,fd));fd=O8-1;yt=Sm[hd];do hd=hd+1;end;hd=yt[6];end;end;else if not(Ot>=0X4d)then do(Od)[10]=Xd[yt[0x002]];end;hd=hd+0X0001;hd=hd+1;yt=Sm[hd];do hd=hd+0X0001;end;do Od[10]=Od[10][yt[0X5]];end;hd=hd+1;do hd=hd+0x00001;end;do yt=Sm[hd];end;hd=hd+0x1;do if not(Od[0XA])then else do hd=yt[0X006];end;end;end;else if Ot~=0X4E then Od[0x4]=Xd[yt[2]];do hd=hd+0X1;end;hd=hd+1;yt=Sm[hd];do hd=hd+0X1;end;(Od)[0X005]=Xd[yt[2]];hd=hd+0X001;do hd=hd+0X1;end;local UU,JU=0x005,(bm[0X0000]);hd=hd+0X0001;(Od)[4]=Od[0X4][Od[5]];yt=Sm[hd];hd=hd+0x1;Od[4]=Od[0X4][yt[0X0005]];do hd=hd+1;end;do hd=hd+0x1;end;hd=hd+0X001;Od[5]=JU[1][JU[0X00002]];yt=Sm[hd];do hd=hd+0X1;end;Od[5]=Od[5][yt[0x5]];do hd=hd+1;end;(Od)[0X0006]=Od[4];hd=hd+0x001;(Od)[UU]=Od[UU](Od[UU+1]);fd=UU;do hd=hd+0X1;end;hd=hd+1;yt=Sm[hd];hd=hd+1;Od[6]=yt[2];yt=Sm[hd];hd=hd+1;Od[0X7]=yt[2];yt=Sm[hd];hd=hd+0X0001;if not(not Od[0X5])then else do hd=yt[0x6];end;end;else(Od)[0x4]=Xd[yt[0X2]];yt=Sm[hd];local jg=(0X4);hd=hd+0x1;(Od)[0X5]=Xd[yt[2]];do hd=hd+1;end;(Od)[jg]=Od[jg](Od[jg+0X1]);do fd=jg;end;do hd=hd+1;end;hd=hd+0X1;yt=Sm[hd];hd=hd+1;if not(Od[4])then else hd=yt[6];end;end;end;end;else if not(Ot<0x0047)then if Ot>=0x48 then if Ot~=73 then Od[4]=Xd[yt[2]];hd=hd+0X1;hd=hd+0x1;hd=hd+0X1;do fd=0x4;end;do(Od)[fd]=Od[fd]();end;hd=hd+1;hd=hd+1;hd=hd+1;(Od)[0X004]=Od[4]-Od[0X3];yt=Sm[hd];hd=hd+0X1;if not(Od[4]<yt[5])then hd=yt[0X7];end;else Od[0X9]=Xd[yt[2]];hd=hd+0X00001;do hd=hd+1;end;yt=Sm[hd];hd=hd+0X1;if not(Od[0X9])then else do hd=yt[0X006];end;end;end;else Od[0X9]=Xd[yt[2]];do hd=hd+1;end;hd=hd+1;do yt=Sm[hd];end;hd=hd+1;do if not Od[9]then do hd=yt[6];end;end;end;end;else if Ot~=0X00046 then do Od[yt[7]]=-Od[yt[0x6]];end;else Od[yt[0x00007]]=Xd[yt[2]];end;end;end;end;end;else do if not(Ot<0X31)then if Ot<0X00036 then if Ot<0x33 then do if Ot~=0X032 then Od[0X4]=Xd[yt[0X00002]];hd=hd+1;do hd=hd+1;end;yt=Sm[hd];hd=hd+1;if not(Od[4])then else hd=yt[6];end;else Od[8]=Xd[yt[2]];hd=hd+0X01;do hd=hd+1;end;yt=Sm[hd];local OH,aH=Zm[yt[6]],(8);local NH=OH[3];hd=hd+0X001;local mH,jH=nil,(#NH);if not(jH>0)then else do mH={};end;for yU=0X01,jH do local TU=NH[yU];if TU[1]==0X0000 then mH[yU-0X1]={Od,TU[0x2]};else(mH)[yU-0x1]=bm[TU[2]];end;end;M(Cm,mH);end;(Od)[0x9]=dH(OH,mH,Xd);hd=hd+1;Od[aH](Od[aH+1]);fd=aH-1;yt=Sm[hd];hd=hd+0X00001;hd=yt[0X6];end;end;else do if not(Ot<52)then if Ot~=0X35 then do(Od)[8]=Od[7][yt[5]];end;hd=hd+0X0001;hd=hd+1;do hd=hd+0X1;end;fd=0x8;(Od[fd])();fd=fd-0X1;hd=hd+1;hd=hd+0X1;yt=Sm[hd];hd=hd+1;hd=yt[6];else if not(Od[yt[0X7]])then else hd=yt[6];end;end;else local NK=(bm[0X0]);Od[5]=NK[0X1][NK[2]];local oK=(0X5);yt=Sm[hd];hd=hd+0x01;Od[0X5]=Od[5][yt[0X0005]];do hd=hd+0X0001;end;hd=hd+0x001;hd=hd+1;do(Od)[6]=Od[4];end;hd=hd+1;Od[0X7]=nil;hd=hd+1;(Od)[0X8]=Od[1];hd=hd+0X1;Od[0X9]={};yt=Sm[hd];hd=hd+1;(Od[0X009])[yt[2]]=yt[0X00005];hd=hd+0X01;fd=oK+5-0X1;(Od[oK])(f(Od,oK+0x1,fd));fd=oK-0X1;do yt=Sm[hd];end;hd=hd+0x001;do hd=yt[6];end;end;end;end;else if not(Ot>=0x38)then if Ot==0X000037 then do(Od)[8]=Xd[yt[2]];end;hd=hd+1;local Vy=(8);hd=hd+1;do yt=Sm[hd];end;hd=hd+0X1;local ry=bm[0];(Od)[0x9]=yt[0X00002];hd=hd+1;Od[Vy]=Od[Vy](Od[Vy+0X0001]);do fd=Vy;end;hd=hd+0X1;hd=hd+0x001;do hd=hd+1;end;do Od[9]=ry[0X1][ry[2]];end;yt=Sm[hd];hd=hd+1;(Od)[9]=Od[0x9][yt[0X5]];hd=hd+0X00001;hd=hd+1;hd=hd+1;(Od)[10]=Od[8];hd=hd+0X0001;Vy=0x9;Od[Vy]=Od[Vy](Od[Vy+1]);fd=Vy;hd=hd+1;hd=hd+1;yt=Sm[hd];do hd=hd+1;end;if not(not Od[9])then else hd=yt[6];end;else do(Od)[4]=Xd[yt[2]];end;hd=hd+0X1;do hd=hd+1;end;do yt=Sm[hd];end;hd=hd+0X1;(Od)[0X4]=Od[0X4][yt[0X0005]];do yt=Sm[hd];end;hd=hd+1;Od[0X0004]=Od[0X4][yt[0X0005]];yt=Sm[hd];hd=hd+0X01;do if yt[0X2]<Od[4]then do hd=yt[0X007];end;end;end;end;else if Ot>=57 then do if Ot==58 then Xd[yt[0X0002]]=Od[yt[0x7]];else if Od[yt[6]]~=Od[yt[1]]then else do hd=yt[0X00007];end;end;end;end;else local aC=Zm[yt[6]];local PC,WC=aC[3],nil;local zC=(#PC);if not(zC>0X0000)then else WC={};do for ln=0X001,zC do local Fn=PC[ln];do if Fn[0x1]~=0 then(WC)[ln-1]=bm[Fn[2]];else(WC)[ln-1]={Od,Fn[0x2]};end;end;end;end;M(Cm,WC);end;(Od)[0X0]=dH(aC,WC,Xd);yt=Sm[hd];hd=hd+0X1;do aC=Zm[yt[0X6]];end;WC=nil;do PC=aC[0X00003];end;zC=#PC;if not(zC>0)then else WC={};for JZ=1,zC do local CZ=(PC[JZ]);do if CZ[0X1]==0 then WC[JZ-1]={Od,CZ[2]};else(WC)[JZ-0X1]=bm[CZ[2]];end;end;end;M(Cm,WC);end;(Od)[0X1]=dH(aC,WC,Xd);yt=Sm[hd];hd=hd+0X1;do Od[0X2]=yt[0X0002];end;yt=Sm[hd];do hd=hd+1;end;Od[3]=yt[0X00002];do yt=Sm[hd];end;do hd=hd+1;end;hd=yt[0X06];end;end;end;else if Ot<0X0002c then if not(Ot<41)then if Ot<42 then else if Ot~=0X2B then Od[0X004]=Xd[yt[2]];do hd=hd+0X1;end;hd=hd+1;yt=Sm[hd];hd=hd+1;if Od[0x4]then hd=yt[0X006];end;else(Od)[9]=Xd[yt[0X2]];hd=hd+0x001;hd=hd+1;yt=Sm[hd];hd=hd+0X1;Od[0X00a]=Xd[yt[0x0002]];hd=hd+1;Od[11]=Od[1];do hd=hd+0X1;end;local NQ=(0x09);for wn=0XC,13 do(Od)[wn]=nil;end;do yt=Sm[hd];end;hd=hd+0X01;Od[14]=yt[2];hd=hd+0x1;fd=NQ+6-0X001;(Od[NQ])(f(Od,NQ+1,fd));fd=NQ-1;hd=hd+1;do hd=hd+0X0001;end;yt=Sm[hd];hd=hd+1;Od[9]=Xd[yt[2]];hd=hd+1;hd=hd+0X1;yt=Sm[hd];hd=hd+0X1;(Od)[0xa]=Xd[yt[2]];hd=hd+0X001;do hd=hd+0X1;end;yt=Sm[hd];do hd=hd+1;end;Od[0Xa]=Od[10][yt[5]];do hd=hd+1;end;do NQ=0X9;end;do Od[NQ]=Od[NQ](Od[NQ+0x1]);end;fd=NQ;hd=hd+0X1;hd=hd+1;yt=Sm[hd];hd=hd+0X1;if not(Od[9]<=yt[0x5])then hd=yt[0X0007];end;end;end;else do if Ot==40 then Od[9]=Od[0];do hd=hd+1;end;(Od)[0X0a]=true;do hd=hd+1;end;local hM=9;Od[hM]=Od[hM](Od[hM+0x00001]);fd=hM;hd=hd+0X1;hd=hd+1;hd=hd+0X00001;do(Od)[7]=Od[9];end;yt=Sm[hd];do hd=hd+0X0001;end;(Od)[9]=Xd[yt[0X2]];hd=hd+1;do(Od)[10]=Od[0X7];end;yt=Sm[hd];hd=hd+1;Od[0xB]=Xd[yt[0X2]];hd=hd+1;do hd=hd+1;end;hd=hd+0X0001;hM=0X9;(Od[hM])(Od[hM+0X01],Od[hM+2]);fd=hM-0X1;hd=hd+1;do hd=hd+1;end;yt=Sm[hd];hd=hd+1;hd=yt[6];else do Od[yt[7]]=Od[yt[0X6]][yt[5]];end;end;end;end;else if Ot>=46 then if not(Ot>=47)then do(Od)[9]=Xd[yt[2]];end;hd=hd+0X1;hd=hd+1;yt=Sm[hd];hd=hd+0X1;Od[10]=yt[2];local yd=0X9;do yt=Sm[hd];end;hd=hd+0x001;(Od)[11]=Xd[yt[0x00002]];yt=Sm[hd];hd=hd+1;Od[0XC]=Xd[yt[2]];hd=hd+1;fd=yd+4-1;Od[yd](f(Od,yd+1,fd));fd=yd-1;yt=Sm[hd];hd=hd+1;do hd=yt[6];end;else if Ot==0X30 then(Od)[0X8]=Xd[yt[0X002]];hd=hd+0x1;fd=8;(Od)[fd]=Od[fd]();hd=hd+1;(Od)[8]=Od[8]-Od[0X0005];do yt=Sm[hd];end;hd=hd+1;(Od)[8]=Od[0X8]>yt[0x5];do yt=Sm[hd];end;hd=hd+0x1;if not(not Od[8])then else hd=yt[6];end;else do(Od)[9]=Xd[yt[2]];end;yt=Sm[hd];hd=hd+0x1;Od[0X9]=Od[0x9][yt[5]];hd=hd+0X1;hd=hd+1;yt=Sm[hd];do hd=hd+1;end;Od[0X00009]=Od[0X9][yt[0X5]];do hd=hd+1;end;hd=hd+0x1;do yt=Sm[hd];end;do hd=hd+1;end;if Od[9]==Od[6]then else hd=yt[7];end;end;end;else if Ot~=45 then(Od)[yt[0x7]]=Ud[yt[6]];else local hP=(yt[6]);local RP=Od[hP];for nU=hP+1,yt[0X0001]do RP=RP..Od[nU];end;(Od)[yt[0X7]]=RP;end;end;end;end;end;end;else if not(Ot<0x13)then if not(Ot>=29)then do if not(Ot<0x018)then if not(Ot<26)then do if Ot>=0X00001b then if Ot==0X0001C then Od[yt[7]]=yt[2];else do(Od)[0X4]=Xd[yt[0x02]];end;hd=hd+1;hd=hd+0X1;do hd=hd+0x1;end;fd=4;local hc=(0X4);Od[fd]=Od[fd]();hd=hd+0X1;do(Od)[2]=Od[4];end;yt=Sm[hd];hd=hd+0X0001;Od[4]=Xd[yt[0x00002]];hd=hd+1;do hd=hd+1;end;do yt=Sm[hd];end;hd=hd+1;Od[0X5]=yt[2];hd=hd+0X00001;Od[hc]=Od[hc](Od[hc+0X0001]);fd=hc;yt=Sm[hd];hd=hd+0X1;if not(Od[4])then else hd=yt[6];end;end;else(Od)[0x4]=Xd[yt[2]];hd=hd+1;do fd=4;end;Od[fd]=Od[fd]();hd=hd+0X1;do hd=hd+0X1;end;yt=Sm[hd];hd=hd+1;if not(Od[4])then else hd=yt[6];end;end;end;else if Ot~=25 then(Od)[0X5]=Xd[yt[0X2]];yt=Sm[hd];hd=hd+0X1;Od[0X5]=Od[0X5][yt[0x5]];hd=hd+0x00001;do hd=hd+0x1;end;yt=Sm[hd];hd=hd+0X1;(Od)[5]=Od[0X005][yt[0X0005]];do yt=Sm[hd];end;hd=hd+1;if not(not(Od[5]<=yt[5]))then else hd=yt[7];end;else do Od[0X0004]=Xd[yt[2]];end;hd=hd+1;hd=hd+1;do hd=hd+0X0001;end;fd=0X0004;(Od[fd])();fd=fd-0X001;hd=hd+0x1;(Od)[0x4]=Od[0X00000];hd=hd+0X1;fd=0x4;(Od)[fd]=Od[fd]();yt=Sm[hd];do hd=hd+1;end;do(Od)[5]=Xd[yt[0X00002]];end;do hd=hd+0x001;end;hd=hd+1;hd=hd+0X1;fd=5;Od[fd]=Od[fd]();hd=hd+0x1;hd=hd+1;yt=Sm[hd];hd=hd+0x0001;Od[0X00006]=Xd[yt[0x2]];yt=Sm[hd];hd=hd+0X0001;do(Od)[6]=Od[0X06][yt[0X5]];end;do yt=Sm[hd];end;hd=hd+0X1;Od[0X6]=Od[6][yt[0X5]];hd=hd+1;do hd=hd+0X001;end;yt=Sm[hd];hd=hd+1;Od[6]=Od[6][yt[5]];yt=Sm[hd];hd=hd+1;(Od)[0X7]=Xd[yt[0x2]];yt=Sm[hd];hd=hd+1;if Od[7]then hd=yt[0X6];end;end;end;else if not(Ot>=21)then if Ot==0X0014 then Od[9]=Od[0X00008][yt[0X0005]];hd=hd+0X1;fd=9;(Od[fd])();fd=fd-1;yt=Sm[hd];hd=hd+0x1;hd=yt[6];else Od[0X000A]=Xd[yt[2]];hd=hd+0x001;hd=hd+0X01;yt=Sm[hd];hd=hd+0X1;do if not(not Od[0X000a])then else do hd=yt[0X6];end;end;end;end;else do if not(Ot<22)then if Ot~=23 then local LB,JB=0X0004,(Od[4]);(Od)[LB+1]=JB;do(Od)[LB]=JB[yt[5]];end;yt=Sm[hd];hd=hd+0X001;(Od)[0x00006]=yt[2];do hd=hd+1;end;LB=0x04;Od[LB]=Od[LB](Od[LB+1],Od[LB+0X2]);fd=LB;do yt=Sm[hd];end;hd=hd+0x0001;if not Od[0x04]then hd=yt[0X6];end;else local h6=(bm[0X00]);(Od)[5]=h6[0X1][h6[2]];yt=Sm[hd];local g6=(5);hd=hd+1;do(Od)[0X05]=Od[5][yt[5]];end;do hd=hd+1;end;do(Od)[6]=Od[0X4];end;hd=hd+1;do(Od)[g6]=Od[g6](Od[g6+1]);end;fd=g6;hd=hd+1;hd=hd+1;yt=Sm[hd];do hd=hd+1;end;do if not Od[5]then do hd=yt[6];end;end;end;end;else(Od)[9]=Xd[yt[2]];yt=Sm[hd];hd=hd+1;local Yy=(9);do(Od)[10]=Xd[yt[0x002]];end;hd=hd+0X00001;hd=hd+1;do hd=hd+1;end;for y6=0x0000b,12 do do Od[y6]=nil;end;end;yt=Sm[hd];hd=hd+0X1;Od[13]=yt[2];hd=hd+0X1;fd=Yy+5-1;Od[Yy]=Od[Yy](f(Od,Yy+0X1,fd));do fd=Yy;end;do hd=hd+0X00001;end;hd=hd+0X1;yt=Sm[hd];do hd=hd+0X001;end;if not Od[0x0009]then hd=yt[0X6];end;end;end;end;end;end;else if Ot>=0x0022 then if Ot>=0X024 then if not(Ot>=37)then(Od)[8]=Od[7][yt[5]];hd=hd+1;hd=hd+0X001;hd=hd+0X01;Od[0X00004]=Od[0x08];yt=Sm[hd];hd=hd+1;if not(not Od[4])then else hd=yt[0x0006];end;else do if Ot==0X00026 then Od[5]=Xd[yt[0x0002]];hd=hd+0X1;do hd=hd+1;end;yt=Sm[hd];hd=hd+1;Od[0X005]=Od[0X5][yt[0X5]];yt=Sm[hd];do hd=hd+1;end;if not Od[5]then hd=yt[0X6];end;else Od[0Xa]=Xd[yt[0X2]];hd=hd+0x1;do fd=10;end;(Od)[fd]=Od[fd]();yt=Sm[hd];hd=hd+0x1;if not(not Od[10])then else hd=yt[6];end;end;end;end;else if Ot==0X23 then local F2=(bm[0X0]);Od[6]=F2[0X001][F2[0x2]];local H2=(0X6);yt=Sm[hd];do hd=hd+1;end;(Od)[6]=Od[0X6][yt[5]];hd=hd+1;hd=hd+1;hd=hd+0X1;do Od[0X0007]=Od[0X5];end;hd=hd+1;(Od)[H2]=Od[H2](Od[H2+0X1]);fd=H2;hd=hd+0X1;hd=hd+1;do yt=Sm[hd];end;hd=hd+1;do if not(not Od[0X06])then else do hd=yt[0X6];end;end;end;else Od[8]=Xd[yt[0X02]];do yt=Sm[hd];end;hd=hd+0x1;(Od)[9]=yt[2];hd=hd+0X0001;local gP=(0X00008);(Od[gP])(Od[gP+0X1]);do fd=gP-1;end;hd=hd+1;do hd=hd+1;end;yt=Sm[hd];do hd=hd+0X1;end;do(Od)[8]=Xd[yt[0x2]];end;yt=Sm[hd];hd=hd+1;do Od[8]=Od[8][yt[0X00005]];end;yt=Sm[hd];do hd=hd+1;end;Od[8]=Od[0X08][yt[5]];hd=hd+1;hd=hd+0x00001;do yt=Sm[hd];end;hd=hd+0x001;Od[0X0009]=Xd[yt[0X0002]];yt=Sm[hd];hd=hd+1;Od[10]=Xd[yt[0x2]];hd=hd+0X0001;hd=hd+1;do yt=Sm[hd];end;do hd=hd+1;end;Od[0X00A]=Od[10][yt[0x5]];yt=Sm[hd];hd=hd+0X1;do(Od)[10]=Od[0XA][yt[0X05]];end;do hd=hd+0X001;end;gP=0X9;(Od)[gP]=Od[gP](Od[gP+0X1]);fd=gP;hd=hd+1;hd=hd+0x1;hd=hd+1;(Od)[8]=Od[0X08]-Od[0X09];do yt=Sm[hd];end;hd=hd+0X001;if not(not(yt[2]<Od[8]))then else hd=yt[7];end;end;end;else if Ot>=0X00001f then if not(Ot>=32)then for KE=yt[0x7],yt[6]do Od[KE]=nil;end;else if Ot~=0X21 then(Od)[4]=Xd[yt[2]];do hd=hd+1;end;hd=hd+1;yt=Sm[hd];do hd=hd+0X1;end;Od[4]=Od[0x00004][yt[0X0005]];hd=hd+0X00001;hd=hd+0X0001;yt=Sm[hd];do hd=hd+1;end;if not(Od[0X4])then else hd=yt[6];end;else if not(not Od[yt[7]])then else hd=yt[0x6];end;end;end;else do if Ot==0X1E then do(Od)[9]=Xd[yt[0x002]];end;hd=hd+0X1;hd=hd+0X01;do hd=hd+0X0001;end;do fd=9;end;do Od[fd]=Od[fd]();end;hd=hd+0X001;hd=hd+0x001;hd=hd+1;(Od)[0X9]=Od[0x00009]-Od[3];yt=Sm[hd];hd=hd+1;if yt[0X2]<=Od[0X00009]then do hd=yt[0X7];end;end;else repeat local NF,LF=Cm,(Od);if not(#NF>0x0)then else local v1={};for nm,Ym in I,NF do for ET,eT in I,Ym do if not(eT[0X1]==LF and eT[2]>=0X00)then else local kq=eT[2];if not(not v1[kq])then else do(v1)[kq]={LF[kq]};end;end;do(eT)[1]=v1[kq];end;do(eT)[0X2]=0X1;end;end;end;end;end;until true;do return;end;end;end;end;end;end;else if Ot<9 then do if Ot<0X4 then do if not(Ot>=2)then if Ot~=1 then(Od)[0X4]=Xd[yt[0X2]];hd=hd+1;(Od)[5]={f({},1,3)};yt=Sm[hd];hd=hd+1;Od[6]=yt[0X0002];local WM=0X00003;yt=Sm[hd];local tM=0X5;hd=hd+0X0001;(Od)[7]=yt[0X2];yt=Sm[hd];hd=hd+0X1;(Od)[8]=yt[2];do hd=hd+1;end;local AM=(Od[tM]);local yM=((0X00001-1)*0X32);for ah=1,0x0003 do(AM)[yM+ah]=Od[tM+ah];end;hd=hd+1;Od[6]=Od[0X1];hd=hd+1;tM=4;local dM=0X3;if WM~=0 then do fd=tM+WM-0X1;end;end;local gM,lM=nil,(nil);if WM~=0X1 then gM,lM=eH(Od[tM](f(Od,tM+0x1,fd)));else gM,lM=eH(Od[tM]());end;do if dM==0X001 then do fd=tM-0X1;end;else if dM~=0X00 then gM=tM+dM-0X2;fd=gM+0X1;else do gM=gM+tM-0x01;end;fd=gM;end;local f3=(0);for Bj=tM,gM do do f3=f3+0x1;end;Od[Bj]=lM[f3];end;end;end;do hd=hd+0X1;end;hd=hd+1;yt=Sm[hd];do hd=hd+1;end;Od[0X6]=Xd[yt[2]];do hd=hd+0x1;end;do hd=hd+0x1;end;hd=hd+0X1;Od[0X7]=Od[0X4];do hd=hd+1;end;do tM=0X6;end;WM=0X2;do dM=0X4;end;if WM==0x00000 then else fd=tM+WM-0X1;end;do gM,lM=nil;end;if WM~=1 then do gM,lM=eH(Od[tM](f(Od,tM+0X1,fd)));end;else do gM,lM=eH(Od[tM]());end;end;if dM==0x00001 then fd=tM-0X1;else if dM~=0 then gM=tM+dM-2;do fd=gM+1;end;else gM=gM+tM-1;fd=gM;end;local k5=(0X00);for ws=tM,gM do k5=k5+0x001;(Od)[ws]=lM[k5];end;end;do yt=Sm[hd];end;hd=hd+0x001;tM=6;local zM=r(function(...)(C)();for Va,Pa in...do(C)(true,Va,Pa);end;end);zM(Od[tM],Od[tM+0X1],Od[tM+0x002]);fd=tM;do Od[tM]=zM;end;hd=yt[6];else do Od[0X4]=Xd[yt[2]];end;do hd=hd+0X1;end;fd=4;(Od)[fd]=Od[fd]();do hd=hd+1;end;(Od)[4]=Od[0x04]-Od[0x2];yt=Sm[hd];hd=hd+0X1;if not(not(yt[2]<Od[4]))then else do hd=yt[0x7];end;end;end;else do if Ot==0X3 then local Gb=(yt[7]);local wb,Ab=Od[Gb]();do if wb then for v1=1,yt[0X1]do Od[Gb+v1]=Ab[v1];end;do hd=yt[6];end;end;end;else Od[0X4]=Xd[yt[2]];hd=hd+0X1;hd=hd+0X0001;yt=Sm[hd];hd=hd+1;if not(not Od[0X4])then else hd=yt[0X6];end;end;end;end;end;else if Ot>=6 then if Ot>=7 then if Ot==8 then Od[5]=Xd[yt[0x2]];hd=hd+0X1;hd=hd+1;yt=Sm[hd];hd=hd+1;Od[5]=Od[5][yt[5]];do yt=Sm[hd];end;hd=hd+1;if not Od[5]then hd=yt[6];end;else(Od)[10]=Xd[yt[2]];do hd=hd+1;end;do hd=hd+0X001;end;do yt=Sm[hd];end;do hd=hd+1;end;(Od)[0x000a]=Od[10][yt[5]];hd=hd+0X001;hd=hd+0X1;do yt=Sm[hd];end;do hd=hd+1;end;(Od)[0XA]=Od[0x00a][yt[5]];local kT=0XB;yt=Sm[hd];hd=hd+0X00001;do Od[11]=Xd[yt[0X2]];end;yt=Sm[hd];hd=hd+1;Od[12]=Xd[yt[0x2]];yt=Sm[hd];hd=hd+0X1;do Od[0Xc]=Od[0X0000C][yt[5]];end;yt=Sm[hd];hd=hd+1;do Od[12]=Od[12][yt[5]];end;hd=hd+0X0001;Od[kT]=Od[kT](Od[kT+0X001]);fd=kT;hd=hd+1;hd=hd+0x001;do yt=Sm[hd];end;hd=hd+1;if not(not(Od[11]<=Od[10]))then else hd=yt[0x7];end;end;else repeat local Iz,wz,mz=Cm,Od,(yt[7]);if#Iz>0X0 then local KE={};for Tf,Pf in I,Iz do do for FY,NY in I,Pf do do if NY[0X1]==wz and NY[0X00002]>=mz then local wq=(NY[2]);if not(not KE[wq])then else(KE)[wq]={wz[wq]};end;(NY)[0x1]=KE[wq];NY[0X2]=1;end;end;end;end;end;end;until true;end;else if Ot==0x5 then if Od[yt[0X6]]<Od[yt[1]]then hd=yt[0X7];end;else Od[0X0009]=Od[8][yt[5]];do hd=hd+0X1;end;(Od)[5]=Od[9];yt=Sm[hd];hd=hd+1;do if not Od[5]then hd=yt[0x6];end;end;end;end;end;end;else if not(Ot>=14)then if Ot<0Xb then if Ot~=10 then(Od)[0X4]=Xd[yt[2]];hd=hd+1;hd=hd+0X1;yt=Sm[hd];hd=hd+1;Od[0X4]=Od[4][yt[0X5]];yt=Sm[hd];do hd=hd+1;end;do Od[4]=Od[0X00004][yt[5]];end;yt=Sm[hd];do hd=hd+0X1;end;if not(yt[0X002]<=Od[0X4])then else hd=yt[0x7];end;else Od[9]=Xd[yt[0x2]];hd=hd+0X001;hd=hd+1;local Zl=9;yt=Sm[hd];hd=hd+0X01;Od[0Xa]=yt[2];yt=Sm[hd];hd=hd+1;Od[0Xb]=Xd[yt[0X00002]];hd=hd+0X1;hd=hd+1;do yt=Sm[hd];end;do hd=hd+0X1;end;Od[0Xc]=Xd[yt[0X2]];hd=hd+0X1;hd=hd+0X001;hd=hd+1;do fd=Zl+4-1;end;(Od[Zl])(f(Od,Zl+1,fd));fd=Zl-0x1;do hd=hd+0x1;end;hd=hd+0x00001;do yt=Sm[hd];end;hd=hd+0x1;hd=yt[0X06];end;else if not(Ot>=12)then Od[yt[7]]=Od[yt[0x6]]==Od[yt[0X1]];else do if Ot==13 then hd=yt[6];else do Od[9]=Od[0X00008][yt[0X5]];end;hd=hd+1;hd=hd+0x0001;yt=Sm[hd];do hd=hd+0X1;end;if Od[9]then do hd=yt[0X06];end;end;end;end;end;end;else if not(Ot>=16)then do if Ot==15 then local PZ=(bm[0x0]);Od[0X9]=PZ[1][PZ[0x00002]];do yt=Sm[hd];end;hd=hd+1;Od[9]=Od[0x9][yt[0X005]];hd=hd+0X1;Od[0X00a]=Od[8];hd=hd+0x1;(Od)[0X0000B]=nil;local UZ=(0X09);hd=hd+1;(Od)[0Xc]=Od[0X1];hd=hd+0X00001;fd=UZ+4-1;(Od[UZ])(f(Od,UZ+1,fd));fd=UZ-1;yt=Sm[hd];hd=hd+1;do hd=yt[0X6];end;else local us=Zm[yt[6]];local ss=(us[0x0003]);local ns,Fs=#ss,nil;if ns>0X0 then do Fs={};end;for mN=1,ns do local nN=(ss[mN]);if nN[0X1]~=0 then Fs[mN-0X1]=bm[nN[2]];else(Fs)[mN-0x01]={Od,nN[2]};end;end;(M)(Cm,Fs);end;do(Od)[yt[7]]=dH(us,Fs,Xd);end;end;end;else if not(Ot>=0X011)then Od[5]=Xd[yt[2]];hd=hd+1;do fd=5;end;Od[fd]=Od[fd]();do hd=hd+1;end;hd=hd+0X1;do hd=hd+0X001;end;(Od)[5]=Od[0x5]-Od[3];yt=Sm[hd];hd=hd+0X00001;if not(Od[5]<yt[0X5])then hd=yt[7];end;else if Ot==0x12 then Od[5]=Xd[yt[2]];hd=hd+0X00001;hd=hd+1;yt=Sm[hd];hd=hd+0X001;do Od[0X06]=Xd[yt[0X00002]];end;local KD,pD=0X0,(0X6);yt=Sm[hd];hd=hd+0X1;do(Od)[7]=Xd[yt[2]];end;hd=hd+1;hd=hd+1;hd=hd+1;do Od[8]=Od[0x1];end;hd=hd+0X01;local VD=3;if VD==0 then else fd=pD+VD-0x1;end;local jD,TD=nil,(nil);do if VD~=0X1 then jD,TD=eH(Od[pD](f(Od,pD+1,fd)));else jD,TD=eH(Od[pD]());end;end;if KD==0X00001 then fd=pD-1;else do if KD~=0x0 then jD=pD+KD-2;fd=jD+1;else do jD=jD+pD-1;end;do fd=jD;end;end;end;local Re=0X0;do for fz=pD,jD do Re=Re+0X1;(Od)[fz]=TD[Re];end;end;end;hd=hd+0x1;pD=0X5;VD=0;KD=4;if VD==0X000 then else do fd=pD+VD-0X1;end;end;jD,TD=nil;do if VD~=0X1 then jD,TD=eH(Od[pD](f(Od,pD+0X1,fd)));else jD,TD=eH(Od[pD]());end;end;if KD==0X1 then fd=pD-1;else if KD~=0X0 then jD=pD+KD-0X002;do fd=jD+0X0001;end;else jD=jD+pD-1;fd=jD;end;local eD=(0X000);for qU=pD,jD do eD=eD+1;Od[qU]=TD[eD];end;end;do yt=Sm[hd];end;hd=hd+0x001;pD=5;local lD=r(function(...)(C)();do for pk,Lk in...do(C)(true,pk,Lk);end;end;end);lD(Od[pD],Od[pD+0X1],Od[pD+0X02]);do fd=pD;end;Od[pD]=lD;hd=yt[6];else Od[0X4]=Xd[yt[0X2]];hd=hd+0X01;hd=hd+0X1;yt=Sm[hd];hd=hd+0X1;(Od)[4]=Od[4][yt[0X05]];do hd=hd+0X01;end;hd=hd+0X1;yt=Sm[hd];hd=hd+1;do if not(not Od[4])then else do hd=yt[6];end;end;end;end;end;end;end;end;end;end;end;end;end;end);if qd then if Ad then if Sd~=0X0001 then return Od[gd](f(Od,gd+1,fd));else do return Od[gd]();end;end;elseif not(gd)then else return f(Od,gd,Sd);end;else if e(Ad)=="string"then if not(p(Ad,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if not(p(Ad,"^.-:%d+: "))then(V)(Ad,0);else(V)('\L\117r\097p\h \S\099r\i\p\116\:'..(Dm[hd-0X1]or"(internal)")..": "..v(Ad),0);end;else V(Ad,0X000);end;end;end;end;end;end;end;end;else do if not(xm>=174)then if xm>=0xa8 then if not(xm<171)then if xm>=172 then if xm==173 then Km=function(...)local I0=0X01;local R0={};local S0={[1]=Xm,[2]=R0};local E0=(K());local Y0=(0x0000);local m0,d0=eH(...);do m0=m0-0X1;end;for g4=0,m0 do if not(km>g4)then break;else R0[g4]=d0[g4+0X1];end;end;local s0=(E0==g and Qm or E0);if not Lm then d0=nil;else if Um then(R0)[km]={n=m0>=km and m0-km+1 or 0x0,f(d0,km+0X1,m0+0X00001)};end;end;if s0~=E0 then w(Km,s0);end;local h0,Q0,f0,e0=o(function()while 0.9483068944433124 do local mx=(Sm[I0]);local Cx=(mx[4]);I0=I0+1;if Cx<8 then if Cx<0X4 then if not(Cx<0X2)then if Cx==0X00003 then if R0[mx[0X6]]<=R0[mx[1]]then I0=mx[0X7];end;else(R0)[mx[0x7]]=j(R0[mx[6]],R0[mx[1]]);end;else if Cx==0x00001 then local Y3=(mx[0X7]);local r3,l3=R0[Y3],((mx[0x1]-0X1)*0X32);for b6=0X01,mx[6]do r3[l3+b6]=R0[Y3+b6];end;else if not(not(R0[mx[6]]<R0[mx[0X001]]))then else I0=mx[7];end;end;end;else if not(Cx>=0X6)then if Cx~=5 then R0[mx[7]]={f({},0X1,mx[0x6])};else do R0[mx[7]]=#R0[mx[0X6]];end;end;else if Cx==7 then else local HI=mx[0X7];local LI,nI=R0[HI]();if LI then do I0=mx[0X006];end;R0[HI+3]=nI;end;end;end;end;else if Cx>=12 then if Cx>=14 then if Cx<15 then do(R0)[mx[0X07]]=mx[0X2];end;else do if Cx~=0X010 then local tT=(mx[0x0007]);local bT=R0[tT+2];local ET,mT=R0[tT],R0[tT+0X001];do(R0)[tT]=r(function()for p9=ET,mT,bT do(C)(true,p9);end;end);end;I0=mx[0x06];else(R0)[2]=R0[0x0][mx[5]];local N8=2;mx=Sm[I0];do I0=I0+1;end;R0[0X3]=R0[0X001][mx[5]];I0=I0+1;(R0)[0X02]=R0[0X02]<R0[0x3];I0=I0+1;repeat local KD,UD=Cm,(R0);if#KD>0 then local Df=({});for ZM,lM in I,KD do for D2,V2 in I,lM do if not(V2[1]==UD and V2[0X00002]>=0)then else local hE=(V2[0x2]);if not(not Df[hE])then else Df[hE]={UD[hE]};end;do(V2)[1]=Df[hE];end;(V2)[2]=0X01;end;end;end;end;until true;return false,N8,N8;end;end;end;else if Cx~=13 then repeat local mw,kw=Cm,(R0);if#mw>0 then local W6={};for iK,HK in I,mw do do for zp,Tp in I,HK do do if not(Tp[1]==kw and Tp[0X2]>=0X000)then else local M9=Tp[2];if not(not W6[M9])then else do W6[M9]={kw[M9]};end;end;Tp[1]=W6[M9];(Tp)[2]=0x1;end;end;end;end;end;end;until true;return;else do R0[mx[7]]=s0[mx[0X02]];end;end;end;else do if Cx>=0xA then if Cx==11 then do(R0)[mx[7]]=R0[mx[0X06]]<R0[mx[1]];end;else I0=mx[0X6];end;else if Cx~=9 then(R0)[mx[0X7]]=R0[mx[6]]-R0[mx[0X0001]];else local uI,fI=Zm[mx[6]],(nil);local eI=uI[3];local HI=#eI;do if not(HI>0)then else fI={};for xg=1,HI do local Vg=eI[xg];do if Vg[0X1]~=0 then do fI[xg-1]=bm[Vg[2]];end;else do(fI)[xg-0X001]={R0,Vg[0X2]};end;end;end;end;M(Cm,fI);end;end;(R0)[mx[7]]=dH(uI,fI,s0);end;end;end;end;end;end;end);do if not(h0)then if e(Q0)=="string"then if not(p(Q0,"a\116\116\e\109pt\ t\o\ \y\ie\l\d\ \097\c\114os\115\ \me\116\097\109eth\od\/C\%\045\099a\108l\ \098\ound\097ry"))then else do return coroutine.yield();end;end;if not(p(Q0,"^.-:%d+: "))then(V)(Q0,0X0);else(V)("Luraph Script:"..(Dm[I0-0X1]or'\(\in\116\e\114n\097\l\)')..'\:\ '..v(Q0),0X0);end;else(V)(Q0,0);end;else do if Q0 then do if e0==1 then return R0[f0]();else return R0[f0](f(R0,f0+0x1,Y0));end;end;else if f0 then return f(R0,f0,e0);end;end;end;end;end;end;else Km=function(...)local De,de=1,({});local re=K();local Ze=((re==g and Qm or re));local fe,se=eH(...);local Ne=({[1]=Xm,[2]=de});fe=fe-1;do for CA=0,fe do if not(km>CA)then break;else(de)[CA]=se[CA+1];end;end;end;local Qe=(0);if not Lm then se=nil;else if Um then(de)[km]={n=fe>=km and fe-km+0X001 or 0,f(se,km+0X001,fe+0X1)};end;end;do if Ze~=re then(w)(Km,Ze);end;end;local ce,Je,Ee,Ie=o(function()while 0.3511195835075942 do local KY=Sm[De];local FY=KY[0x004];De=De+1;if FY>=10 then if not(FY>=0X0f)then do if FY>=0Xc then if FY>=13 then if FY==0Xe then else local Y7=bm[0X000];(de)[0x0]=Y7[1][Y7[0X02]];De=De+1;De=De+1;KY=Sm[De];De=De+1;local S7=(0);local D7=de[0];do de[S7+0x001]=D7;end;do de[S7]=D7[KY[0X5]];end;De=De+0X01;do S7=0X0;end;de[S7]=de[S7](de[S7+0X1]);Qe=S7;De=De+0X1;De=De+1;do KY=Sm[De];end;De=De+1;do if not de[0]then do De=KY[6];end;end;end;end;else local pu=(bm[0]);(de)[0X0]=pu[0X1][pu[2]];De=De+0X1;local Nu=(0);De=De+1;do KY=Sm[De];end;De=De+1;local Yu=(de[0x0]);(de)[Nu+0x1]=Yu;(de)[Nu]=Yu[KY[5]];De=De+0x0001;Nu=0x00000;(de[Nu])(de[Nu+1]);do Qe=Nu-0X001;end;De=De+0X1;do repeat local bQ,LQ=Cm,(de);if#bQ>0 then local A4={};do for jf,Ef in I,bQ do for Ug,Kg in I,Ef do do if not(Kg[1]==LQ and Kg[0X02]>=0X0000)then else local S1=(Kg[0X2]);if not(not A4[S1])then else(A4)[S1]={LQ[S1]};end;(Kg)[0x01]=A4[S1];(Kg)[2]=0X1;end;end;end;end;end;end;until true;end;do return;end;end;else if FY==0xb then de[0X00000]=Ze[KY[2]];De=De+1;De=De+1;do KY=Sm[De];end;De=De+0X1;de[0X0]=de[0x0][KY[0x5]];local lc=(0);De=De+0x1;do De=De+0X1;end;KY=Sm[De];De=De+0X0001;de[0x001]=KY[0X00002];De=De+0x1;de[lc]=de[lc](de[lc+0X001]);do Qe=lc;end;De=De+0X0001;De=De+0X1;KY=Sm[De];De=De+1;if not(not de[0X0])then else De=KY[6];end;else de[0x0000]=Ze[KY[2]];De=De+0X1;Qe=0X0;de[Qe]=de[Qe]();De=De+1;De=De+1;do KY=Sm[De];end;De=De+0X1;do if de[0]<KY[5]then do De=KY[7];end;end;end;end;end;end;else if not(FY<18)then if not(FY<0X13)then if FY~=0X014 then for E2=KY[7],KY[6]do(de)[E2]=nil;end;else De=KY[6];end;else repeat local nK,aK=Cm,(de);if not(#nK>0)then else local Rk=({});for Of,rf in I,nK do for Eh,vh in I,rf do do if not(vh[0X00001]==aK and vh[0X2]>=0X00)then else local LC=vh[2];if not Rk[LC]then(Rk)[LC]={aK[LC]};end;vh[0x1]=Rk[LC];(vh)[2]=1;end;end;end;end;end;until true;return;end;else do if FY<0X10 then de[0X0000]=Ze[KY[2]];De=De+0x1;do De=De+1;end;KY=Sm[De];De=De+1;do if de[0]then De=KY[0X0006];end;end;else if FY==17 then do de[1]=Ze[KY[0X2]];end;do De=De+1;end;do De=De+1;end;KY=Sm[De];De=De+1;do if not(not de[0X1])then else De=KY[0X6];end;end;else(de)[KY[7]]=Ze[KY[0X2]];end;end;end;end;end;else if FY<0X5 then if FY>=2 then if FY>=0X3 then if FY~=0X004 then de[KY[7]]={f({},0X1,KY[6])};else local j2=(Zm[KY[0x6]]);local U2=j2[0X3];local I2=(#U2);local e2=(nil);do if I2>0X0 then e2={};for jk=1,I2 do local Kk=(U2[jk]);if Kk[1]~=0 then(e2)[jk-1]=bm[Kk[2]];else(e2)[jk-1]={de,Kk[2]};end;end;(M)(Cm,e2);end;end;do(de)[KY[0X7]]=dH(j2,e2,Ze);end;end;else(de)[KY[0X07]]=l(de[KY[0x0006]],de[KY[1]]);end;else if FY==0X0001 then do(de)[0]=Ze[KY[2]];end;local en=0;De=De+1;De=De+1;KY=Sm[De];local Cn=Zm[KY[6]];De=De+0X001;local Sn=(Cn[3]);local Un=nil;local hn=(#Sn);if hn>0 then Un={};for N3=1,hn do local k3=(Sn[N3]);if k3[0X001]~=0 then Un[N3-0X001]=bm[k3[0X2]];else(Un)[N3-0X1]={de,k3[0X2]};end;end;M(Cm,Un);end;do(de)[0X00001]=dH(Cn,Un,Ze);end;De=De+0X01;de[en](de[en+1]);do Qe=en-0X001;end;KY=Sm[De];do De=De+0X1;end;(de)[0]=Ze[KY[0X2]];KY=Sm[De];do De=De+0X1;end;(de)[1]=KY[0x002];De=De+0x1;en=0;(de)[en]=de[en](de[en+1]);Qe=en;do De=De+0X1;end;De=De+0X1;do KY=Sm[De];end;De=De+1;if not(not de[0X00])then else do De=KY[0X6];end;end;else de[KY[0X007]]=Ne[KY[6]];end;end;else do if FY>=7 then if FY>=0X8 then do if FY~=9 then de[KY[7]]=KY[2];else(de)[0X00]=Ze[KY[2]];De=De+1;De=De+0X1;De=De+0X1;Qe=0X0;de[Qe]=de[Qe]();do KY=Sm[De];end;De=De+1;if not(de[0])then else De=KY[6];end;end;end;else de[0X0]=Ze[KY[0X2]];do De=De+1;end;do De=De+1;end;KY=Sm[De];do De=De+1;end;de[0X0]=de[0X0000][KY[0X00005]];De=De+0X00001;De=De+1;KY=Sm[De];De=De+0X00001;if not(not de[0])then else De=KY[0X006];end;end;else do if FY~=6 then(de)[0]=Ze[KY[0X2]];do De=De+0X1;end;De=De+0X001;KY=Sm[De];De=De+1;do de[0X0]=de[0][KY[0X5]];end;do KY=Sm[De];end;De=De+1;if not de[0]then De=KY[0x6];end;else do(de)[0X00000]=Ze[KY[2]];end;De=De+0X00001;De=De+1;KY=Sm[De];De=De+1;do de[0X1]=KY[2];end;local Nw=(0X00000);De=De+1;(de)[Nw]=de[Nw](de[Nw+1]);Qe=Nw;KY=Sm[De];De=De+1;if not de[0]then De=KY[6];end;end;end;end;end;end;end;end;end);if ce then if Je then if Ie~=0x1 then return de[Ee](f(de,Ee+1,Qe));else return de[Ee]();end;else if not(Ee)then else return f(de,Ee,Ie);end;end;else do if e(Je)~="string"then(V)(Je,0x0);else if not(p(Je,"att\e\109\pt\ to\ \121\105\101\108\d\ a\099\114\111s\s\ m\et\097m\101t\104o\d/\C\037\-\099al\l \098o\117n\d\097\114\y"))then else do return coroutine.yield();end;end;do if not(p(Je,"^.-:%d+: "))then V(Je,0);else V("Luraph Script:"..(Dm[De-0X1]or"(internal)")..':\ '..v(Je),0);end;end;end;end;end;end;end;else Km=function(...)local PJ,DJ=1,{};local XJ=K();local fJ,CJ=eH(...);local zJ={[1]=Xm,[2]=DJ};fJ=fJ-0X01;local SJ,xJ=(XJ==g and Qm or XJ),0;for aC=0X00,fJ do if km>aC then(DJ)[aC]=CJ[aC+1];else break;end;end;if not Lm then CJ=nil;else if Um then do DJ[km]={n=fJ>=km and fJ-km+1 or 0X0,f(CJ,km+1,fJ+0X1)};end;end;end;if SJ~=XJ then(w)(Km,SJ);end;local qJ,yJ,BJ,kJ=o(function()repeat local Ws=(Sm[PJ]);local ts=(Ws[4]);do PJ=PJ+1;end;if not(ts>=0X9)then if ts<0x0004 then if not(ts>=2)then if ts~=0x001 then local Qt=(Ws[0x0006]);local lt=(DJ[Qt]);for ED=Qt+1,Ws[0X1]do do lt=lt..DJ[ED];end;end;DJ[Ws[0X7]]=lt;else for kG=Ws[7],Ws[0X6]do do DJ[kG]=nil;end;end;end;elseif ts==0X00003 then if not(DJ[Ws[0X6]]<=DJ[Ws[0X1]])then else PJ=Ws[0X07];end;else(DJ)[Ws[7]]=DJ[Ws[0X6]]*DJ[Ws[1]];end;else do if not(ts<6)then if not(ts<7)then if ts~=0x00008 then do DJ[Ws[0x07]]=l(DJ[Ws[6]],DJ[Ws[0X1]]);end;else local js,Ms=Zm[Ws[6]],nil;local ps=(js[3]);local ns=(#ps);if ns>0X0 then do Ms={};end;for Qg=0x1,ns do local Vg=ps[Qg];if Vg[1]==0X00000 then Ms[Qg-1]={DJ,Vg[0X2]};else(Ms)[Qg-0X1]=bm[Vg[0X2]];end;end;(M)(Cm,Ms);end;DJ[Ws[0X7]]=dH(js,Ms,SJ);end;else local Kn=bm[0X0];DJ[0x00]=Kn[1][Kn[0X2]];PJ=PJ+0x00001;PJ=PJ+0X001;do Ws=Sm[PJ];end;local qn=0;PJ=PJ+1;local bn=DJ[0X0];do DJ[qn+1]=bn;end;(DJ)[qn]=bn[Ws[5]];PJ=PJ+0X00001;do qn=0X0;end;(DJ)[qn]=DJ[qn](DJ[qn+1]);xJ=qn;PJ=PJ+1;PJ=PJ+1;Ws=Sm[PJ];PJ=PJ+1;do PJ=Ws[6];end;end;else if ts==5 then else local iF=Ws[0X7];local lF,kF=DJ[iF]();if lF then PJ=Ws[0X00006];(DJ)[iF+3]=kF;end;end;end;end;end;else do if not(ts<14)then do if ts<0x10 then if ts==15 then do(DJ)[Ws[7]]=Ws[0X00002];end;else DJ[0X000]=SJ[Ws[0x00002]];PJ=PJ+0X1;xJ=0x00000;do(DJ)[xJ]=DJ[xJ]();end;PJ=PJ+1;PJ=PJ+1;PJ=PJ+0X1;(DJ)[0x0]=not DJ[0x0000];Ws=Sm[PJ];PJ=PJ+1;PJ=Ws[6];end;else do if ts<0x000011 then(DJ)[Ws[0x7]]=true;else if ts~=0x12 then do repeat local qg,lg=Cm,(DJ);if not(#qg>0X000)then else local Vx=({});for k6,x6 in I,qg do for Jx,Ix in I,x6 do if Ix[1]==lg and Ix[0X2]>=0X0 then local gp=Ix[2];if not Vx[gp]then(Vx)[gp]={lg[gp]};end;Ix[0X1]=Vx[gp];Ix[0X00002]=0x1;end;end;end;end;until true;end;local Ai=Ws[0X7];return false,Ai,Ai;else repeat local FJ,EJ=Cm,DJ;do if#FJ>0X00 then local np=({});for xn,zn in I,FJ do do for MJ,pJ in I,zn do if not(pJ[0X00001]==EJ and pJ[0X0002]>=0)then else local O7=(pJ[0x2]);if not np[O7]then np[O7]={EJ[O7]};end;pJ[0X1]=np[O7];do pJ[0X00002]=1;end;end;end;end;end;end;end;until true;return;end;end;end;end;end;else if not(ts<0X0000b)then if ts>=0X00C then if ts~=13 then(DJ)[Ws[0X07]]={f({},1,Ws[0X6])};else if not DJ[Ws[7]]then do PJ=Ws[6];end;end;end;else local OL=(bm[0X00]);DJ[0]=OL[0X00001][OL[2]];local qL=(DJ[0X0]);Ws=Sm[PJ];PJ=PJ+0X1;local wL=0x0;do(DJ)[wL+1]=qL;end;DJ[wL]=qL[Ws[0x005]];PJ=PJ+0X1;wL=0;DJ[wL](DJ[wL+1]);xJ=wL-1;Ws=Sm[PJ];PJ=PJ+1;DJ[0X000]=SJ[Ws[2]];Ws=Sm[PJ];PJ=PJ+1;DJ[0X000]=DJ[0][Ws[5]];PJ=PJ+0X001;do PJ=PJ+0X1;end;Ws=Sm[PJ];PJ=PJ+0X0001;if not(not DJ[0x00])then else do PJ=Ws[6];end;end;end;elseif ts==10 then DJ[Ws[0X7]]=SJ[Ws[0X2]];else PJ=Ws[6];end;end;end;end;until false;end);if qJ then do if yJ then if kJ~=1 then return DJ[BJ](f(DJ,BJ+0X1,xJ));else do return DJ[BJ]();end;end;elseif BJ then return f(DJ,BJ,kJ);end;end;else if e(yJ)=='\s\116r\in\g'then if not(p(yJ,'\097t\116\101mp\116 \116o \y\i\e\l\d\ \097\099\114\o\s\115 m\101ta\m\et\104\111\d\/\067\%-\c\097\l\l\032b\ound\097r\y'))then else do return coroutine.yield();end;end;if not(p(yJ,'\^.\-\:\%\d+\:\ '))then(V)(yJ,0X000);else V('\Lu\114a\112\h \Scr\105\112t\058'..(Dm[PJ-1]or"(internal)")..": "..v(yJ),0X0);end;else V(yJ,0);end;end;end;end;else do if xm>=0Xa9 then if xm~=0x00AA then Km=function(...)local ZL,RL=0X1,({});local cL=(K());local uL,sL=eH(...);local wL,AL={[2]=RL,[1]=Xm},((cL==g and Qm or cL));do uL=uL-0X01;end;for Qi=0X0,uL do if km>Qi then RL[Qi]=sL[Qi+0X1];else break;end;end;if not Lm then sL=nil;else if not(Um)then else(RL)[km]={n=uL>=km and uL-km+1 or 0,f(sL,km+0X01,uL+0X01)};end;end;local OL=(0X00);if AL~=cL then(w)(Km,AL);end;local eL,QL,vL,WL=o(function()while'\044'do local ST=Sm[ZL];local AT=(ST[0X4]);ZL=ZL+1;if not(AT>=0X0011)then if not(AT<8)then do if AT>=0xC then do if AT<0X0e then if AT==13 then RL[5]=false;ZL=ZL+0X00001;do(RL)[0X00004]=RL[0x0005];end;ZL=ZL+0X001;RL[5]=nil;ZL=ZL+1;do RL[0]=RL[0X5];end;ST=Sm[ZL];ZL=ZL+0X1;ZL=ST[6];else local fa=(0x10);local Wa=RL[0XD];(RL)[fa+1]=Wa;do(RL)[fa]=Wa[ST[0x05]];end;ST=Sm[ZL];do ZL=ZL+1;end;RL[0X12]=ST[2];ZL=ZL+0X1;do(RL)[0X13]=true;end;do ZL=ZL+1;end;fa=16;OL=fa+0X00004-1;do RL[fa]=RL[fa](f(RL,fa+1,OL));end;OL=fa;ST=Sm[ZL];ZL=ZL+0x1;do if not RL[0X000010]then ZL=ST[6];end;end;end;elseif not(AT<0Xf)then do if AT==0X10 then(RL)[ST[0x007]]=RL[ST[6]]-RL[ST[1]];else if not(not(RL[ST[0X006]]<RL[ST[0x00001]]))then else ZL=ST[7];end;end;end;else RL[0x000f]=RL[13][ST[0X5]];ZL=ZL+1;ZL=ZL+0X1;do ST=Sm[ZL];end;ZL=ZL+1;RL[0X10]=AL[ST[0X2]];do ST=Sm[ZL];end;ZL=ZL+0X00001;RL[0X10]=RL[16][ST[5]];ST=Sm[ZL];ZL=ZL+0x1;if RL[15]~=RL[0X10]then else ZL=ST[7];end;end;end;else if AT<10 then do if AT==0X9 then RL[15]=AL[ST[2]];ST=Sm[ZL];ZL=ZL+1;(RL)[16]=RL[0XD][ST[0X5]];do ZL=ZL+0x01;end;ZL=ZL+0x1;ZL=ZL+0x1;RL[17]=RL[0];local o0=(15);ZL=ZL+1;RL[o0]=RL[o0](RL[o0+0X1],RL[o0+0X002]);do OL=o0;end;ST=Sm[ZL];do ZL=ZL+1;end;if RL[15]then ZL=ST[6];end;else do(RL)[ST[0x7]]=RL[ST[0X06]];end;end;end;else if AT~=11 then RL[ST[0X07]]=RL[ST[0X00006]]*RL[ST[0X1]];else local yN=Zm[ST[6]];local EN,JN=yN[0X3],nil;local sN=#EN;if not(sN>0X0)then else do JN={};end;for NP=0X1,sN do local PP=(EN[NP]);if PP[0x001]~=0x000 then do(JN)[NP-1]=bm[PP[0X2]];end;else do JN[NP-1]={RL,PP[2]};end;end;end;M(Cm,JN);end;do RL[ST[7]]=dH(yN,JN,AL);end;end;end;end;end;else if AT>=4 then if not(AT<0X006)then if AT==7 then for KL=ST[7],ST[0x06]do RL[KL]=nil;end;else if not(RL[ST[0x6]]<ST[5])then ZL=ST[7];end;end;else if AT==0X5 then else if RL[ST[0x6]]~=ST[0X5]then ZL=ST[0X7];end;end;end;else do if AT>=0X2 then if AT~=3 then RL[ST[7]]=true;else(RL)[ST[7]]=RL[ST[6]]>=RL[ST[1]];end;else do if AT==0X1 then(RL)[0X0f]=RL[14][ST[0X5]];ZL=ZL+1;do ZL=ZL+1;end;ST=Sm[ZL];ZL=ZL+0X1;if not(not(ST[0x00002]<RL[15]))then else ZL=ST[0X7];end;else do RL[0X7]=ST[2]/ST[5];end;local Ko=(0X09);ZL=ZL+0x0001;(RL)[8]=nil;ST=Sm[ZL];ZL=ZL+0x01;do RL[9]=ST[2];end;ZL=ZL+1;RL[0Xa]=#RL[0X5];ST=Sm[ZL];do ZL=ZL+0X1;end;do(RL)[0xb]=ST[2];end;ST=Sm[ZL];do ZL=ZL+0X001;end;local Uo,zo=RL[Ko],(RL[Ko+1]);local io=RL[Ko+2];(RL)[Ko]=r(function()do for ew=Uo,zo,io do(C)(true,ew);end;end;end);ZL=ST[0X6];end;end;end;end;end;end;else do if not(AT>=0X0001a)then do if not(AT>=21)then if AT<0x13 then do if AT==0x12 then ZL=ST[0X6];else do RL[0X000d]=RL[5][RL[0X0000C]];end;local Mt=(0X00E);do ZL=ZL+0X1;end;ZL=ZL+0x1;ST=Sm[ZL];do ZL=ZL+0X001;end;local Lt=RL[0Xd];RL[Mt+0X1]=Lt;RL[Mt]=Lt[ST[0x00005]];ST=Sm[ZL];ZL=ZL+1;RL[0X00010]=ST[2];ZL=ZL+1;do Mt=14;end;(RL)[Mt]=RL[Mt](RL[Mt+1],RL[Mt+2]);do OL=Mt;end;ZL=ZL+1;do ZL=ZL+1;end;do ST=Sm[ZL];end;ZL=ZL+0x1;if not(not RL[0])then else ZL=ST[6];end;end;end;else if AT==20 then if RL[ST[0x7]]then ZL=ST[0x006];end;else RL[ST[7]]=AL[ST[0X02]];end;end;elseif not(AT<0X17)then do if not(AT>=0X18)then if not(not RL[ST[7]])then else ZL=ST[6];end;else if AT~=25 then(RL)[ST[7]]=ST[2];else(RL)[17]=RL[14][ST[0x5]];ZL=ZL+0x1;do ZL=ZL+0X1;end;ZL=ZL+0X1;do RL[18]=RL[13];end;ZL=ZL+0x1;do RL[0X8]=RL[0X12];end;ZL=ZL+1;do(RL)[7]=RL[17];end;ZL=ZL+1;(RL)[0x6]=RL[16];ST=Sm[ZL];ZL=ZL+1;ZL=ST[0x0006];end;end;end;else if AT~=0X00016 then RL[ST[7]]=ST[0x2]/ST[0X00005];else repeat local hW,vW=Cm,(RL);if#hW>0x0 then local VE={};for X4,k4 in I,hW do do for pb,Yb in I,k4 do if Yb[0X0001]==vW and Yb[0x2]>=0X0 then local y4=(Yb[0x2]);do if not VE[y4]then(VE)[y4]={vW[y4]};end;end;do(Yb)[1]=VE[y4];end;Yb[2]=1;end;end;end;end;end;until true;do return;end;end;end;end;else do if AT<30 then if not(AT>=0X01C)then do if AT~=27 then RL[18]=AL[ST[2]];ZL=ZL+0X1;ZL=ZL+1;ST=Sm[ZL];do ZL=ZL+1;end;local f9=(18);(RL)[18]=RL[18][ST[0X5]];ST=Sm[ZL];ZL=ZL+1;do(RL)[0X000013]=AL[ST[2]];end;do ST=Sm[ZL];end;ZL=ZL+1;RL[20]=RL[13][ST[5]];ZL=ZL+0X0001;ZL=ZL+1;ZL=ZL+0X1;do RL[f9]=RL[f9](RL[f9+0x1],RL[f9+2]);end;OL=f9;ST=Sm[ZL];ZL=ZL+0X1;if not(RL[18])then else ZL=ST[0X6];end;else if not(not(RL[ST[6]]<=RL[ST[0X1]]))then else ZL=ST[0X7];end;end;end;else do if AT==0X1D then repeat local GL,aL=Cm,RL;if#GL>0 then local cj=({});for Gx,Lx in I,GL do for bR,SR in I,Lx do do if not(SR[0X001]==aL and SR[0X2]>=0)then else local fy=SR[2];if not(not cj[fy])then else(cj)[fy]={aL[fy]};end;do(SR)[0X1]=cj[fy];end;(SR)[0X2]=0X1;end;end;end;end;end;until true;local DL=(ST[7]);return false,DL,DL;else do AL[ST[0X2]]=RL[ST[0X7]];end;end;end;end;else if AT<32 then if AT==0X0001f then local qj=(ST[0X7]);local Hj,tj=RL[qj]();if Hj then ZL=ST[6];RL[qj+3]=tj;end;else local Zf=ST[0X00007];local kf=RL[Zf+0x0002];local wf=(RL[Zf]);local gf=RL[Zf+0x00001];do(RL)[Zf]=r(function()for MZ=wf,gf,kf do(C)(true,MZ);end;end);end;do ZL=ST[0x6];end;end;else if not(AT>=33)then do(RL)[ST[7]]={f({},0X00001,ST[0X6])};end;else if AT~=0X22 then(RL)[15]=AL[ST[2]];ST=Sm[ZL];ZL=ZL+0X1;(RL)[16]=RL[14][ST[0X5]];ST=Sm[ZL];do ZL=ZL+1;end;(RL)[16]=RL[16][ST[0X5]];ZL=ZL+0X001;local Zh=15;ZL=ZL+1;ZL=ZL+0x00001;(RL)[Zh]=RL[Zh](RL[Zh+0X1]);OL=Zh;ST=Sm[ZL];do ZL=ZL+0X00001;end;if RL[15]<RL[6]then ZL=ST[7];end;else(RL)[ST[0x7]]=RL[ST[6]][ST[0X5]];end;end;end;end;end;end;end;end;end;end);if eL then if QL then if WL==0X1 then return RL[vL]();else return RL[vL](f(RL,vL+0X1,OL));end;else if vL then return f(RL,vL,WL);end;end;else if e(QL)=='\115tri\110\g'then if p(QL,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;do if p(QL,"\^\.\-\:\%d\043\: ")then(V)("Luraph Script:"..(Dm[ZL-1]or"(internal)").."\058 "..v(QL),0X0000);else V(QL,0x0);end;end;else V(QL,0);end;end;end;else Km=function(...)local Fq={};local Aq=(1);local fq=K();local Dq={[1]=Xm,[2]=Fq};local kq=0;local Vq,Sq=eH(...);Vq=Vq-1;local Nq=((fq==g and Qm or fq));for VQ=0X0,Vq do if not(km>VQ)then do break;end;else(Fq)[VQ]=Sq[VQ+0X1];end;end;if not Lm then do Sq=nil;end;else if Um then Fq[km]={n=Vq>=km and Vq-km+1 or 0x000,f(Sq,km+0X1,Vq+0X1)};end;end;if Nq==fq then else(w)(Km,Nq);end;local tq,Jq,wq,Cq=o(function()while 87323476 do local fO=Sm[Aq];local dO=fO[0x004];Aq=Aq+1;if dO>=8 then do if dO<0X0000c then if not(dO<0x000a)then if dO~=0xB then local pD=(Fq[fO[6]]/Fq[fO[1]]);(Fq)[fO[0X0007]]=pD-pD%0X1;else do Fq[fO[0X7]]=Nq[fO[0X2]];end;end;else if dO~=9 then Fq[fO[0X7]]=O(Fq[fO[6]],Fq[fO[0x1]]);else repeat local Sa,na=Cm,Fq;if#Sa>0 then local hP={};do for A_,y_ in I,Sa do for l5,Y5 in I,y_ do if not(Y5[1]==na and Y5[2]>=0X00)then else local L7=(Y5[0X2]);if not hP[L7]then hP[L7]={na[L7]};end;Y5[0x00001]=hP[L7];(Y5)[2]=0X1;end;end;end;end;end;until true;do return;end;end;end;elseif not(dO<14)then if dO<15 then for zN=fO[0x7],fO[6]do(Fq)[zN]=nil;end;else if dO==16 then local Xw=(fO[7]);local ow,sw=Fq[Xw]();do if ow then Aq=fO[0x6];do Fq[Xw+3]=sw;end;end;end;else Fq[fO[7]]=a(Fq[fO[6]]);end;end;else if dO==13 then Fq[fO[0X7]]={f({},1,fO[6])};else Aq=fO[0X6];end;end;end;else if not(dO>=4)then if not(dO<0x0002)then if dO==3 then(Fq)[fO[0x007]]=Fq[fO[0X6]]~=Fq[fO[0X1]];else Fq[fO[0X007]]=S(Fq[fO[0X6]],Fq[fO[0X001]]);end;else do if dO~=0X1 then do Fq[fO[7]]=fO[0X00002];end;else(Fq)[fO[7]]=Fq[fO[0X006]][Fq[fO[0X1]]];end;end;end;elseif dO>=0X006 then if dO~=0x7 then local G5=(nil);local A5=Zm[fO[0X6]];local X5=A5[0X3];local g5=(#X5);if not(g5>0X00)then else G5={};for Sb=0X00001,g5 do local xb=X5[Sb];if xb[0X1]==0 then G5[Sb-0X1]={Fq,xb[0X2]};else(G5)[Sb-0X1]=bm[xb[0X2]];end;end;(M)(Cm,G5);end;Fq[fO[7]]=dH(A5,G5,Nq);else do Fq[0X01]=Nq[fO[0X00002]];end;local Ki=(0X1);Aq=Aq+0X1;Aq=Aq+1;do fO=Sm[Aq];end;Aq=Aq+1;Fq[2]=Fq[0][fO[5]];fO=Sm[Aq];Aq=Aq+1;(Fq)[2]=Fq[0X02][fO[0X5]];Aq=Aq+1;Fq[Ki]=Fq[Ki](Fq[Ki+0x1]);kq=Ki;fO=Sm[Aq];Aq=Aq+0x1;if not(not(fO[0x2]<Fq[0X0001]))then else do Aq=fO[0X7];end;end;end;else if dO==5 then else Fq[0X001]=Nq[fO[0x2]];fO=Sm[Aq];Aq=Aq+0x1;Fq[0X2]=fO[0X2];fO=Sm[Aq];Aq=Aq+0X001;Fq[3]=Nq[fO[2]];Aq=Aq+0X1;local HM=3;Aq=Aq+1;fO=Sm[Aq];Aq=Aq+0X1;(Fq)[0X03]=Fq[3][fO[5]];Aq=Aq+0x1;Aq=Aq+0x0001;fO=Sm[Aq];Aq=Aq+0X1;(Fq)[4]=fO[0X0002];fO=Sm[Aq];Aq=Aq+1;(Fq)[0x5]=fO[0x2];fO=Sm[Aq];Aq=Aq+0X1;do Fq[6]=fO[2];end;Aq=Aq+0X1;local sM=0;local CM=0x00004;if CM~=0 then kq=HM+CM-0X1;end;local mM,dM=nil,nil;do if CM==0X001 then mM,dM=eH(Fq[HM]());else mM,dM=eH(Fq[HM](f(Fq,HM+0X00001,kq)));end;end;if sM==0X1 then kq=HM-0X001;else do if sM==0 then mM=mM+HM-0X1;kq=mM;else mM=HM+sM-2;kq=mM+0X1;end;end;local jM=0;for en=HM,mM do jM=jM+1;(Fq)[en]=dM[jM];end;end;do Aq=Aq+1;end;HM=1;(Fq[HM])(f(Fq,HM+0x1,kq));do kq=HM-1;end;fO=Sm[Aq];Aq=Aq+1;do Aq=fO[6];end;end;end;end;end;end);if not(tq)then if e(Jq)=="string"then if not(p(Jq,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if p(Jq,"\^.\045:\%\d\+\058\ ")then(V)("\L\117r\097\112\h\032S\c\114i\pt\:"..(Dm[Aq-1]or'\(\i\110t\101\114\110\097\108\)')..":\ "..v(Jq),0X0);else(V)(Jq,0x0);end;end;else(V)(Jq,0);end;else do if Jq then if Cq==0X01 then return Fq[wq]();else return Fq[wq](f(Fq,wq+1,kq));end;else if wq then do return f(Fq,wq,Cq);end;end;end;end;end;end;end;else Km=function(...)local Vb=0;local Qb=({});local Sb=K();local kb=({[1]=Xm,[2]=Qb});local sb=(0x1);local ab,Jb=eH(...);local Fb=(Sb==g and Qm or Sb);ab=ab-1;do for zb=0X0000,ab do if not(km>zb)then break;else(Qb)[zb]=Jb[zb+1];end;end;end;if not Lm then Jb=nil;else if not(Um)then else Qb[km]={n=ab>=km and ab-km+0X01 or 0x0,f(Jb,km+0X001,ab+1)};end;end;if Fb~=Sb then(w)(Km,Fb);end;local vb,yb,wb,Eb=o(function()do repeat local aQ=(Sm[sb]);local HQ=aQ[4];sb=sb+0X001;if not(HQ<0X8)then if not(HQ<12)then if not(HQ<14)then if HQ<0xf then for Tk=aQ[7],aQ[6]do(Qb)[Tk]=nil;end;else if HQ~=0x0010 then Qb[aQ[0X07]]=W(Qb[aQ[0X6]],Qb[aQ[0x1]]);else do if not Qb[aQ[0X7]]then sb=aQ[6];end;end;end;end;else if HQ==0XD then local cw=bm[0X00000];do(Qb)[1]=cw[1][cw[0x2]];end;aQ=Sm[sb];do sb=sb+0X001;end;Qb[1]=Qb[0X1][aQ[0X005]];sb=sb+0X1;sb=sb+0X0001;sb=sb+0X1;Qb[0x2]=Qb[0];local Zw=(0x001);sb=sb+1;cw=bm[1];(Qb)[0x003]=cw[0X1][cw[2]];do sb=sb+0X1;end;(Qb[Zw])(Qb[Zw+0x0001],Qb[Zw+0x2]);Vb=Zw-1;do sb=sb+1;end;sb=sb+1;do sb=sb+1;end;cw=bm[1];Qb[1]=cw[1][cw[0x2]];local Rw=(Qb[0x1]);aQ=Sm[sb];do sb=sb+0X1;end;Zw=1;do(Qb)[Zw+0X1]=Rw;end;Qb[Zw]=Rw[aQ[5]];sb=sb+0X00001;Zw=0X1;(Qb[Zw])(Qb[Zw+0X1]);Vb=Zw-0X0001;else Qb[aQ[7]]=Qb[aQ[0X6]]%Qb[aQ[1]];end;end;elseif HQ>=0x00a then if HQ==0xb then do(Qb)[0x0]=Fb[aQ[0x2]];end;local q3=(0x0);do aQ=Sm[sb];end;do sb=sb+0x00001;end;local J3=(bm[0x0]);(Qb)[1]=aQ[0X00002];sb=sb+0x01;do(Qb)[q3]=Qb[q3](Qb[q3+0x00001]);end;do Vb=q3;end;sb=sb+0X01;sb=sb+1;sb=sb+0X00001;(Qb)[1]=J3[0x1][J3[2]];sb=sb+0X1;sb=sb+0X1;do aQ=Sm[sb];end;do sb=sb+1;end;Qb[0X1]=Qb[0X1][aQ[0x5]];do sb=sb+0X0001;end;sb=sb+0X1;sb=sb+1;do(Qb)[2]=Qb[0];end;do sb=sb+0x1;end;q3=1;Qb[q3]=Qb[q3](Qb[q3+1]);Vb=q3;sb=sb+0x1;sb=sb+0X0001;do aQ=Sm[sb];end;sb=sb+1;if not Qb[0X01]then sb=aQ[0X00006];end;else(Qb)[aQ[0X7]]={f({},0X1,aQ[0X6])};end;else do if HQ==0X9 then local Fx=Zm[aQ[0X00006]];local Ax=(Fx[3]);local xx=nil;local Dx=(#Ax);if not(Dx>0X000)then else xx={};do for Cc=0X1,Dx do local Xc=Ax[Cc];if Xc[1]==0 then xx[Cc-1]={Qb,Xc[2]};else(xx)[Cc-0X0001]=bm[Xc[0X2]];end;end;end;M(Cm,xx);end;(Qb)[aQ[7]]=dH(Fx,xx,Fb);else do if not(Qb[aQ[6]]<=Qb[aQ[0X01]])then do sb=aQ[0X07];end;end;end;end;end;end;else if not(HQ<4)then if HQ>=0x6 then if HQ==7 then local o6=aQ[6];local q6=(Qb[o6]);do for I9=o6+1,aQ[1]do q6=q6..Qb[I9];end;end;(Qb)[aQ[7]]=q6;else end;else if HQ==0X5 then(Qb)[aQ[7]]=aQ[2];else sb=aQ[6];end;end;else if HQ>=0x2 then do if HQ~=0X3 then repeat local rg,Tg=Cm,Qb;if#rg>0 then local US=({});for Qj,Dj in I,rg do for Cn,Qn in I,Dj do if not(Qn[0X01]==Tg and Qn[2]>=0x00)then else local UP=(Qn[2]);if not US[UP]then do(US)[UP]={Tg[UP]};end;end;do Qn[0x1]=US[UP];end;(Qn)[2]=1;end;end;end;end;until 1390845607;local eM=aQ[7];return false,eM,eM+aQ[0X6]-2;else repeat local O0,X0=Cm,(Qb);do if not(#O0>0)then else local Ji={};for Zi,Di in I,O0 do for B4,p4 in I,Di do if p4[0X1]==X0 and p4[0x2]>=0X0 then local PV=p4[0X2];if not(not Ji[PV])then else do(Ji)[PV]={X0[PV]};end;end;(p4)[0X1]=Ji[PV];p4[0X2]=1;end;end;end;end;end;until-1345401992;return;end;end;else do if HQ==1 then(Qb)[aQ[7]]=Fb[aQ[0X0002]];else do Qb[aQ[7]]=Qb[aQ[0X6]]<Qb[aQ[1]];end;end;end;end;end;end;until false;end;end);if vb then if yb then if Eb==1 then return Qb[wb]();else return Qb[wb](f(Qb,wb+0X1,Vb));end;else if wb then return f(Qb,wb,Eb);end;end;else do if e(yb)=='\str\105n\g'then if not(p(yb,'at\116\em\pt \116\o\ \y\i\el\d \097\c\114\o\s\s\032m\101t\097m\et\h\111\100/\C\%-\c\097\108l\ bo\117n\100\097\114\y'))then else return coroutine.yield();end;do if not(p(yb,"^.-:%d+: "))then V(yb,0X0);else V('\Lur\097\ph\ \S\099\114\105pt\:'..(Dm[sb-1]or"(internal)")..'\:\ '..v(yb),0X0);end;end;else V(yb,0X0);end;end;end;end;end;end;end;else if not(xm<165)then if not(xm>=166)then do Km=function(...)local IX,NX=0x00001,({});local uX=K();local iX,VX=0X0000,(uX==g and Qm or uX);local TX,YX=eH(...);local MX=({[1]=Xm,[2]=NX});do TX=TX-0x0001;end;for q4=0,TX do do if km>q4 then(NX)[q4]=YX[q4+1];else break;end;end;end;if not Lm then YX=nil;else if not(Um)then else do(NX)[km]={n=TX>=km and TX-km+0X1 or 0,f(YX,km+0X0001,TX+1)};end;end;end;if VX==uX then else(w)(Km,VX);end;repeat local Sr=(Sm[IX]);local zr=Sr[4];IX=IX+1;return(function(g,Y,...)if not Client.Character:FindFirstChild("HasBuso")then task.spawn(_C,"Buso");end;end)(NX,bm,...);until false;end;end;else if xm~=0x0a7 then do Km=function(...)local gw=(0X1);local ow=({});local jw=({[2]=ow,[1]=Xm});local xw=K();local Uw,Tw=eH(...);Uw=Uw-1;for nX=0X0,Uw do if not(km>nX)then break;else ow[nX]=Tw[nX+1];end;end;local Sw,Nw=(xw==g and Qm or xw),(0);do if not Lm then do Tw=nil;end;else if Um then(ow)[km]={n=Uw>=km and Uw-km+0x00001 or 0X0000,f(Tw,km+1,Uw+1)};end;end;end;if Sw==xw then else(w)(Km,Sw);end;do repeat local Bd=(Sm[gw]);do gw=gw+0x1;end;local Yd=Bd[4];return(function(b,k,...)local R,l=b[0],b[1];local H={ElectricClaw="Electric Claw",BlackLeg="Black Leg",DragonClaw="Dragon Claw",FishmanKarate="Fishman Karate",DragonTalon="Dragon Talon",SharkmanKarate="Sharkman Karate",DeathStep="Death Step"};if not MasteryData[R]or MasteryData[R]<l then if purchaseCombat(R)then wait(.5);pcall(function()MasteryData[R]=GetToolFromTip(H[R]or R,true).Level.Value;end);end;return;end;return true;end)(ow,bm,...);until false;end;end;end;else Km=function(...)local Bp,Fp=0X00001,({});local sp=(K());local bp,Mp={[1]=Xm,[2]=Fp},0x0;local Gp,Ep=eH(...);do Gp=Gp-1;end;local Dp=((sp==g and Qm or sp));for V_=0X0,Gp do if not(km>V_)then break;else Fp[V_]=Ep[V_+0x1];end;end;if not Lm then Ep=nil;else if not(Um)then else Fp[km]={n=Gp>=km and Gp-km+0X1 or 0X00,f(Ep,km+1,Gp+0x01)};end;end;if Dp==sp then else w(Km,Dp);end;local Np,Kp,ap,Up=o(function()while 0x84bB677 do local ik=(Sm[Bp]);local pk=(ik[0X4]);Bp=Bp+0X1;if pk<8 then if pk>=4 then if not(pk<6)then if pk==0X0007 then do(Dp)[ik[0x2]]=Fp[ik[7]];end;else for ki=ik[0X007],ik[6]do do Fp[ki]=nil;end;end;end;else if pk==5 then do Fp[0]=Dp[ik[0x002]];end;Bp=Bp+1;Bp=Bp+0X0001;local Jt=0;ik=Sm[Bp];Bp=Bp+0X1;(Fp)[0x1]=ik[2];Bp=Bp+0X00001;Fp[Jt]=Fp[Jt](Fp[Jt+1]);Mp=Jt;local vt=bm[0x000];do Bp=Bp+1;end;Bp=Bp+1;Bp=Bp+1;do(Fp)[1]=vt[0x01][vt[2]];end;Bp=Bp+1;Bp=Bp+1;ik=Sm[Bp];Bp=Bp+0X1;(Fp)[0x1]=Fp[1][ik[0x0005]];Bp=Bp+0x1;Fp[2]=Fp[0];Bp=Bp+1;Jt=1;Fp[Jt]=Fp[Jt](Fp[Jt+0X00001]);do Mp=Jt;end;do ik=Sm[Bp];end;Bp=Bp+1;if not(not Fp[0X1])then else Bp=ik[0X6];end;else(Fp)[ik[0X7]]=ik[0X02];end;end;else if pk>=0X2 then do if pk==0X0003 then repeat local fy,by=Cm,(Fp);if not(#fy>0x00000)then else local m0={};do for pq,tq in I,fy do do for Ew,bw in I,tq do if bw[0x1]==by and bw[0X2]>=0 then local Uz=(bw[0X00002]);if not m0[Uz]then m0[Uz]={by[Uz]};end;(bw)[0X1]=m0[Uz];bw[2]=0X1;end;end;end;end;end;end;until true;return;else end;end;else if pk==0X01 then local sY=bm[0X00];Fp[1]=sY[1][sY[0X2]];ik=Sm[Bp];Bp=Bp+1;(Fp)[0X1]=Fp[1][ik[5]];do Bp=Bp+1;end;Bp=Bp+0X1;Bp=Bp+1;(Fp)[2]=Fp[0x00];Bp=Bp+0x01;sY=bm[1];(Fp)[3]=sY[0X1][sY[2]];do Bp=Bp+1;end;Bp=Bp+0x01;ik=Sm[Bp];local NY=(Zm[ik[6]]);local jY=NY[0X0003];Bp=Bp+1;local JY=#jY;local XY=nil;if JY>0x0 then do XY={};end;do for VZ=0X1,JY do local fZ=(jY[VZ]);if fZ[1]~=0 then XY[VZ-1]=bm[fZ[0X2]];else do XY[VZ-0X1]={Fp,fZ[0X2]};end;end;end;end;M(Cm,XY);end;Fp[0X4]=dH(NY,XY,Dp);local PY=(1);Bp=Bp+0X001;Mp=PY+4-1;(Fp[PY])(f(Fp,PY+0X1,Mp));do Mp=PY-1;end;Bp=Bp+1;Bp=Bp+1;Bp=Bp+1;sY=bm[0x1];Fp[0X1]=sY[0X1][sY[2]];Bp=Bp+1;Bp=Bp+0X01;do ik=Sm[Bp];end;do Bp=Bp+0X0001;end;PY=1;local VY=(Fp[1]);Fp[PY+1]=VY;(Fp)[PY]=VY[ik[0X5]];do Bp=Bp+0X1;end;do PY=1;end;(Fp[PY])(Fp[PY+1]);do Mp=PY-1;end;ik=Sm[Bp];Bp=Bp+0X1;Bp=ik[0X6];else local SY=(ik[7]);for cC=SY,SY+(ik[6]-0X1)do Fp[cC]=Ep[km+(cC-SY)+1];end;end;end;end;else if pk<12 then if not(pk<0Xa)then if pk==11 then(Fp)[ik[7]]=Dp[ik[0X0002]];else Fp[1]=Dp[ik[2]];ik=Sm[Bp];Bp=Bp+1;local dB=1;do Fp[2]=ik[0X002];end;Bp=Bp+1;(Fp[dB])(Fp[dB+0X01]);Mp=dB-1;do ik=Sm[Bp];end;Bp=Bp+1;Bp=ik[0X006];end;elseif pk~=0X9 then local VZ=Zm[ik[6]];local PZ=nil;local hZ=(VZ[0X3]);local cZ=#hZ;do if cZ>0X0 then do PZ={};end;for KO=0X1,cZ do local OO=(hZ[KO]);if OO[1]~=0 then(PZ)[KO-1]=bm[OO[2]];else PZ[KO-0X01]={Fp,OO[2]};end;end;(M)(Cm,PZ);end;end;Fp[ik[0X7]]=dH(VZ,PZ,Dp);else Fp[ik[7]]=j(Fp[ik[0X6]],Fp[ik[1]]);end;else if pk<0xe then if pk~=13 then Fp[ik[7]]=Fp[ik[0X6]]*Fp[ik[0X00001]];else do Bp=ik[0X00006];end;end;else if pk~=0XF then(Fp)[ik[0x07]]={f({},1,ik[6])};else do repeat local cu,Nu,iu=Cm,Fp,(ik[0X7]);if#cu>0 then local Sl={};for ID,qD in I,cu do for t6,Y6 in I,qD do if Y6[1]==Nu and Y6[0X002]>=iu then local wR=Y6[0X0002];if not Sl[wR]then do Sl[wR]={Nu[wR]};end;end;(Y6)[1]=Sl[wR];(Y6)[2]=0X0001;end;end;end;end;until"\088^\L\]\053";end;end;end;end;end;end;end);if Np then do if Kp then if Up==0X01 then do return Fp[ap]();end;else return Fp[ap](f(Fp,ap+0X1,Mp));end;elseif not(ap)then else do return f(Fp,ap,Up);end;end;end;elseif e(Kp)=="string"then do if p(Kp,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;do if p(Kp,"^.-:%d+: ")then V("Luraph Script:"..(Dm[Bp-0x0001]or"(internal)")..": "..v(Kp),0);else V(Kp,0x0);end;end;else(V)(Kp,0X0);end;end;end;end;else do if not(xm<163)then do if xm~=164 then do Km=function(...)local Ne=({});local Se=0;local ge=0X1;local ke=K();local fe,Ce=eH(...);local je=((ke==g and Qm or ke));local Ge={[1]=Xm,[2]=Ne};fe=fe-0x0001;do for zl=0,fe do if km>zl then(Ne)[zl]=Ce[zl+1];else break;end;end;end;do if not Lm then Ce=nil;else if not(Um)then else Ne[km]={n=fe>=km and fe-km+0X1 or 0,f(Ce,km+1,fe+0x01)};end;end;end;if je~=ke then w(Km,je);end;local Ke,xe,Pe,ce=o(function()while 0x01AbCEFaa do local UL=Sm[ge];local IL=(UL[0X004]);do ge=ge+0X1;end;do if not(IL>=0X07)then do if IL>=3 then if not(IL>=5)then do if IL~=0X0004 then local nL=(Ne[UL[6]]/Ne[UL[1]]);Ne[UL[0X7]]=nL-nL%1;else do Ne[UL[7]]=je[UL[2]];end;end;end;else do if IL==6 then if Ne[UL[0X0006]]<=Ne[UL[1]]then do ge=UL[0x07];end;end;else local tN=(bm[0X000]);Ne[0x00]=tN[0X00001][tN[0x002]];local IN=(0X0);ge=ge+0X00001;ge=ge+1;UL=Sm[ge];ge=ge+0x00001;(Ne)[1]=UL[2];ge=ge+1;repeat local Zt,Ct=Cm,(Ne);if not(#Zt>0)then else local zW=({});for mX,KX in I,Zt do do for Dh,hh in I,KX do if hh[0x1]==Ct and hh[2]>=0X0 then local Ox=hh[2];if not zW[Ox]then do zW[Ox]={Ct[Ox]};end;end;do(hh)[0X1]=zW[Ox];end;do(hh)[2]=0X01;end;end;end;end;end;end;until true;Se=IN+0X1;return true,IN,0X00002;end;end;end;elseif IL>=0X0001 then if IL~=0X2 then for yD=UL[0X7],UL[6]do(Ne)[yD]=nil;end;else local zJ=(UL[0X7]);local SJ,WJ=Ne[zJ]();if not(SJ)then else for Lo=0X1,UL[1]do Ne[zJ+Lo]=WJ[Lo];end;do ge=UL[0X0006];end;end;end;else do repeat local M_,l_=Cm,Ne;if not(#M_>0)then else local mH={};for Pm,rm in I,M_ do for Lj,Jj in I,rm do if Jj[0x1]==l_ and Jj[2]>=0X0000 then local Jt=Jj[0X2];if not mH[Jt]then(mH)[Jt]={l_[Jt]};end;(Jj)[1]=mH[Jt];(Jj)[0X2]=1;end;end;end;end;until true;end;return;end;end;else if IL<11 then do if not(IL>=0X9)then if IL==0X8 then repeat local oI,CI=Cm,(Ne);do if not(#oI>0x0000)then else local e9=({});for yq,nq in I,oI do for L0,c0 in I,nq do if c0[1]==CI and c0[0X2]>=0X0 then local mH=(c0[2]);if not e9[mH]then(e9)[mH]={CI[mH]};end;c0[0X1]=e9[mH];do(c0)[0X2]=0x1;end;end;end;end;end;end;until true;return false,UL[0x7],Se;else do Ne[UL[0X00007]]={f({},1,UL[0X6])};end;end;else if IL~=10 then local ly,Uy=Zm[UL[0X006]],(nil);local Ey=(ly[3]);local Gy=(#Ey);do if Gy>0 then Uy={};for EW=1,Gy do local GW=(Ey[EW]);do if GW[0X1]==0 then Uy[EW-0X1]={Ne,GW[0X2]};else do(Uy)[EW-1]=bm[GW[0X2]];end;end;end;end;(M)(Cm,Uy);end;end;(Ne)[UL[7]]=dH(ly,Uy,je);else Ne[UL[7]]=UL[2];end;end;end;else if not(IL>=0XD)then do if IL==0Xc then ge=UL[6];else if Ne[UL[0x6]]==Ne[UL[0X001]]then ge=UL[0x7];end;end;end;else do if IL~=0xE then else local st=UL[0X00007];for qX=st,st+(UL[6]-1)do do Ne[qX]=Ce[km+(qX-st)+1];end;end;end;end;end;end;end;end;end;end);do if not(Ke)then do if e(xe)~="\s\116r\i\110\g"then V(xe,0);else if p(xe,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(xe,"^\046-\:%d\+:\ "))then(V)(xe,0x00000);else(V)("Luraph Script:"..(Dm[ge-0X001]or'\(\i\110t\101rna\l\)')..':\032'..v(xe),0);end;end;end;else if xe then if ce~=1 then return Ne[Pe](f(Ne,Pe+1,Se));else do return Ne[Pe]();end;end;else if not(Pe)then else do return f(Ne,Pe,ce);end;end;end;end;end;end;end;else Km=function(...)local Z_,f_=0X1,{};local J_=(K());local W_,C_=eH(...);local v_,Y_=(J_==g and Qm or J_),({[2]=f_,[1]=Xm});do W_=W_-0x1;end;local o_=(0X000);for dn=0,W_ do if not(km>dn)then break;else do(f_)[dn]=C_[dn+1];end;end;end;if not Lm then do C_=nil;end;else if not(Um)then else(f_)[km]={n=W_>=km and W_-km+1 or 0,f(C_,km+1,W_+0X1)};end;end;if v_~=J_ then w(Km,v_);end;local N_,F_,a_,K_=o(function()repeat local EO=(Sm[Z_]);local xO=EO[0X4];Z_=Z_+0x1;if not(xO>=7)then if not(xO<3)then if xO<5 then if xO~=0X00004 then local mG=(EO[0X007]);local xG=f_[mG];local JG=(f_[mG+2]);local SG=(f_[mG+1]);(f_)[mG]=r(function()for Ac=xG,SG,JG do C(true,Ac);end;end);do Z_=EO[6];end;else do(f_)[EO[0x7]]=EO[0x2];end;end;else do if xO~=6 then if f_[EO[0x6]]<=f_[EO[0X1]]then Z_=EO[7];end;else f_[EO[0X00007]]=v_[EO[0X2]];end;end;end;else if xO>=0X01 then do if xO~=0X00002 then else(f_)[EO[7]]=f_[EO[0X6]]==f_[EO[0X1]];end;end;else Z_=EO[6];end;end;else if xO<0XB then do if not(xO>=0X00009)then if xO==8 then if f_[EO[0x6]]==f_[EO[0x01]]then do Z_=EO[0x007];end;end;else(f_)[EO[0X7]]=f_[EO[0X00006]][f_[EO[0X0001]]];end;else do if xO==0X00a then(f_)[EO[0X00007]]={f({},0X01,EO[0x06])};else(f_)[0]=v_[EO[0X0002]];local MD=(0);do EO=Sm[Z_];end;Z_=Z_+0X01;do f_[1]=EO[2];end;Z_=Z_+1;local WD=(0);(f_)[MD]=f_[MD](f_[MD+1]);o_=MD;do Z_=Z_+1;end;do Z_=Z_+1;end;Z_=Z_+1;f_[0X00000]=not f_[0X00000];Z_=Z_+0X1;do repeat local FX,cX=Cm,(f_);do if not(#FX>0X00)then else local md=({});for Bm,em in I,FX do for W2,C2 in I,em do do if C2[1]==cX and C2[0X002]>=0X00000 then local e7=C2[0x2];do if not(not md[e7])then else md[e7]={cX[e7]};end;end;(C2)[1]=md[e7];(C2)[2]=1;end;end;end;end;end;end;until true;end;return false,WD,WD;end;end;end;end;else if xO<0XD then if xO~=0Xc then for zE=EO[7],EO[0X6]do f_[zE]=nil;end;else repeat local K9,e9=Cm,(f_);if#K9>0 then local Z7={};for GD,kD in I,K9 do for s8,y8 in I,kD do if not(y8[1]==e9 and y8[2]>=0X0)then else local bn=(y8[0x2]);if not Z7[bn]then do Z7[bn]={e9[bn]};end;end;(y8)[0X01]=Z7[bn];(y8)[2]=1;end;end;end;end;until true;return;end;else if xO==14 then if f_[EO[6]]~=f_[EO[0X1]]then Z_=EO[7];end;else local Qq=Zm[EO[6]];local Jq=(Qq[3]);local iq=(nil);local Vq=#Jq;if Vq>0x0 then do iq={};end;do for Y6=1,Vq do local w6=Jq[Y6];do if w6[0x0001]==0X0 then(iq)[Y6-1]={f_,w6[2]};else iq[Y6-0X0001]=bm[w6[2]];end;end;end;end;(M)(Cm,iq);end;f_[EO[0x7]]=dH(Qq,iq,v_);end;end;end;end;until false;end);do if not(N_)then if e(F_)=="string"then if p(F_,'a\116\116\e\109\p\116\ t\o\032\yi\101l\d ac\114\111\s\115\ m\e\116\097\109\et\h\o\d\/\C%\-ca\l\108\032\098\111u\110\d\097\114\y')then do return coroutine.yield();end;end;if p(F_,"^.-:%d+: ")then(V)("Luraph Script:"..(Dm[Z_-1]or'\040\in\116er\110a\l\)')..'\058 '..v(F_),0);else(V)(F_,0);end;else(V)(F_,0);end;else if F_ then if K_==0X00001 then return f_[a_]();else return f_[a_](f(f_,a_+1,o_));end;else if a_ then return f(f_,a_,K_);end;end;end;end;end;end;end;else Km=function(...)local E5={};local l5=(0X1);local D5=K();local g5=(D5==g and Qm or D5);local q5=({[1]=Xm,[2]=E5});local B5=0;local R5,O5=eH(...);R5=R5-0X1;for Ma=0,R5 do do if km>Ma then E5[Ma]=O5[Ma+0X001];else break;end;end;end;if not Lm then do O5=nil;end;else if Um then E5[km]={n=R5>=km and R5-km+0X1 or 0X0,f(O5,km+1,R5+1)};end;end;if g5~=D5 then(w)(Km,g5);end;local j5,b5,z5,d5=o(function()do repeat local IZ=Sm[l5];local vZ=(IZ[0X4]);l5=l5+1;if not(vZ>=7)then if vZ<0X03 then if not(vZ<1)then if vZ==0X2 then local gD=(IZ[0X7]);local PD=(E5[gD+0X2]);local MD=(E5[gD+1]);local sD=(E5[gD]);do(E5)[gD]=r(function()for gK=sD,MD,PD do(C)(true,gK);end;end);end;l5=IZ[0X6];else do(E5)[IZ[7]]=O(E5[IZ[6]],E5[IZ[1]]);end;end;else E5[IZ[0X0007]]=E5[IZ[0X006]]==E5[IZ[0X1]];end;elseif not(vZ>=5)then if vZ~=4 then(E5)[0]=g5[IZ[0X002]];do l5=l5+1;end;l5=l5+1;l5=l5+1;B5=0;do E5[B5]=E5[B5]();end;l5=l5+1;l5=l5+0X001;do IZ=Sm[l5];end;do l5=l5+0x01;end;(g5)[IZ[0X2]]=E5[0];l5=l5+1;repeat local jN,eN=Cm,(E5);if not(#jN>0X000)then else local sJ=({});for EQ,UQ in I,jN do do for mm,Mm in I,UQ do do if not(Mm[0X1]==eN and Mm[2]>=0X0000)then else local QY=Mm[0x2];do if not sJ[QY]then sJ[QY]={eN[QY]};end;end;Mm[0X0001]=sJ[QY];(Mm)[0X2]=0x00001;end;end;end;end;end;end;until true;return;else(q5)[IZ[0X6]]=E5[IZ[0X00007]];end;else if vZ~=6 then(E5)[IZ[0X7]]=IZ[0X2];else E5[IZ[0X7]]=-E5[IZ[0X06]];end;end;else do if not(vZ<11)then if not(vZ>=13)then if vZ==0Xc then E5[IZ[7]]={f({},1,IZ[6])};else local uZ,rZ,yZ=IZ[0X7],IZ[0X6],(IZ[1]);if rZ~=0x0 then B5=uZ+rZ-1;end;local bZ,BZ=nil,nil;do if rZ==0X1 then do bZ,BZ=eH(E5[uZ]());end;else bZ,BZ=eH(E5[uZ](f(E5,uZ+1,B5)));end;end;if yZ==1 then B5=uZ-1;else if yZ==0 then bZ=bZ+uZ-0X1;B5=bZ;else bZ=uZ+yZ-2;B5=bZ+0X0001;end;local I4=(0X0);for zK=uZ,bZ do do I4=I4+1;end;(E5)[zK]=BZ[I4];end;end;end;else do if vZ==14 then l5=IZ[6];else end;end;end;elseif vZ>=0X9 then if vZ~=10 then local e8=(nil);local P8=Zm[IZ[6]];local J8=P8[0x003];local V8=#J8;do if not(V8>0)then else e8={};for sP=1,V8 do local QP=J8[sP];if QP[1]==0 then e8[sP-0X001]={E5,QP[2]};else(e8)[sP-1]=bm[QP[0x2]];end;end;M(Cm,e8);end;end;(E5)[IZ[0X7]]=dH(P8,e8,g5);else for PX=IZ[7],IZ[6]do do(E5)[PX]=nil;end;end;end;else if vZ==8 then E5[IZ[0X7]]=g5[IZ[2]];else E5[IZ[0X007]]=E5[IZ[0x6]]<E5[IZ[0X1]];end;end;end;end;until false;end;end);do if not(j5)then if e(b5)~='\strin\g'then(V)(b5,0);else if p(b5,"att\e\109\112\116\032t\o\ \y\ie\ld\032\097\cr\oss\ \m\101t\097m\eth\111\d\/\067\%-\ca\l\l\ b\o\117n\dar\y")then return coroutine.yield();end;if not(p(b5,"^.-:%d+: "))then(V)(b5,0X0);else(V)("Luraph Script:"..(Dm[l5-1]or"(internal)")..": "..v(b5),0X00);end;end;elseif b5 then if d5==1 then return E5[z5]();else return E5[z5](f(E5,z5+1,B5));end;else if not(z5)then else return f(E5,z5,d5);end;end;end;end;end;end;end;end;else do if not(xm>=0Xb4)then if not(xm>=0x000B1)then if not(xm>=175)then Km=function(...)local Yk,Gk=1,{};local Zk=K();local sk,Ck=0X0,{[2]=Gk,[1]=Xm};local hk,vk=eH(...);hk=hk-1;for YA=0,hk do if km>YA then Gk[YA]=vk[YA+0X00001];else break;end;end;local Sk=((Zk==g and Qm or Zk));if not Lm then vk=nil;else if Um then(Gk)[km]={n=hk>=km and hk-km+1 or 0x0,f(vk,km+1,hk+1)};end;end;do if Sk~=Zk then w(Km,Sk);end;end;local Xk,pk,Ik,Dk=o(function()repeat local ru=(Sm[Yk]);local qu=(ru[0X04]);do Yk=Yk+0X0001;end;do if qu<0XD then do if not(qu<0X6)then do if qu>=0X9 then if qu<0xB then do if qu==0X00a then local D9=(nil);local I9=Zm[ru[0X6]];local h9=I9[3];local f9=#h9;do if f9>0 then do D9={};end;do for Wr=1,f9 do local Er=h9[Wr];if Er[0x1]==0 then do D9[Wr-1]={Gk,Er[2]};end;else(D9)[Wr-1]=bm[Er[2]];end;end;end;(M)(Cm,D9);end;end;(Gk)[0]=dH(I9,D9,Sk);do ru=Sm[Yk];end;do Yk=Yk+0X1;end;(Gk)[0x001]=Sk[ru[0x002]];Yk=Yk+1;Gk[0X2]={f({},1,0x0012)};do ru=Sm[Yk];end;Yk=Yk+1;Gk[0x03]=ru[0X2];ru=Sm[Yk];do Yk=Yk+0X1;end;do Gk[0X04]=ru[0x00002];end;local H9=0X2;ru=Sm[Yk];Yk=Yk+1;Gk[0X00005]=ru[2];ru=Sm[Yk];Yk=Yk+1;(Gk)[6]=ru[0X2];ru=Sm[Yk];Yk=Yk+1;do(Gk)[0X7]=ru[0x00002];end;do ru=Sm[Yk];end;Yk=Yk+0X00001;do(Gk)[0X008]=ru[0X2];end;do ru=Sm[Yk];end;Yk=Yk+1;Gk[0X9]=ru[0X002];ru=Sm[Yk];Yk=Yk+1;(Gk)[10]=ru[2];do ru=Sm[Yk];end;Yk=Yk+0X0001;Gk[11]=ru[0X2];ru=Sm[Yk];Yk=Yk+1;do Gk[0X0C]=ru[2];end;do ru=Sm[Yk];end;Yk=Yk+0X1;(Gk)[0x00d]=ru[2];ru=Sm[Yk];Yk=Yk+1;(Gk)[0X0e]=ru[2];local j9=(0X00002);ru=Sm[Yk];Yk=Yk+1;Gk[15]=ru[2];ru=Sm[Yk];do Yk=Yk+1;end;(Gk)[16]=ru[0X02];ru=Sm[Yk];Yk=Yk+0X1;do Gk[0X11]=ru[0X2];end;ru=Sm[Yk];Yk=Yk+1;(Gk)[18]=ru[0x2];ru=Sm[Yk];Yk=Yk+1;do(Gk)[19]=ru[0x02];end;ru=Sm[Yk];Yk=Yk+0X1;Gk[20]=ru[2];do ru=Sm[Yk];end;Yk=Yk+0X0001;Gk[0x00015]=ru[0x2];local w9=Gk[j9];Yk=Yk+0x1;local i9=((1-0X00001)*50);for qQ=1,19 do(w9)[i9+qQ]=Gk[j9+qQ];end;do Yk=Yk+1;end;j9=1;local P9=(4);if H9==0 then else sk=j9+H9-0X0001;end;local N9,c9=nil,(nil);if H9==0X1 then do N9,c9=eH(Gk[j9]());end;else N9,c9=eH(Gk[j9](f(Gk,j9+0x1,sk)));end;if P9~=1 then if P9==0X0000 then do N9=N9+j9-1;end;do sk=N9;end;else N9=j9+P9-2;do sk=N9+1;end;end;local Z3=0X0;do for M7=j9,N9 do Z3=Z3+0X1;do Gk[M7]=c9[Z3];end;end;end;else sk=j9-1;end;Yk=Yk+0X1;Yk=Yk+1;do ru=Sm[Yk];end;Yk=Yk+1;j9=0x1;local r9=r(function(...)C();for mL,UL in...do(C)(true,mL,UL);end;end);(r9)(Gk[j9],Gk[j9+1],Gk[j9+2]);sk=j9;(Gk)[j9]=r9;Yk=ru[0X0006];else end;end;else if qu==0x0000c then(Gk)[ru[7]]=ru[0x2];else Gk[0X4]=Sk[ru[2]];local uu=4;do ru=Sm[Yk];end;Yk=Yk+1;(Gk)[0x4]=Gk[4][ru[0X5]];Yk=Yk+0X1;Gk[0X5]=Gk[0X00000];Yk=Yk+1;(Gk)[6]=Gk[0x3];Yk=Yk+0X1;Gk[uu](Gk[uu+0X1],Gk[uu+0X2]);do sk=uu-1;end;do ru=Sm[Yk];end;Yk=Yk+0x1;Yk=ru[6];end;end;else do if not(qu<0x00007)then if qu==8 then(Gk)[ru[0X0007]]={f({},0x1,ru[6])};else Gk[ru[7]]=Gk[ru[6]]-ru[0X5];end;else local un=Gk[ru[6]]/Gk[ru[1]];(Gk)[ru[0X007]]=un-un%1;end;end;end;end;else if qu>=3 then do if not(qu<4)then do if qu==5 then do Gk[1]=Sk[ru[0X02]];end;do ru=Sm[Yk];end;Yk=Yk+1;(Gk)[0X1]=Gk[1][ru[0X5]];ru=Sm[Yk];do Yk=Yk+0X1;end;do Gk[0X00001]=Gk[1][ru[5]];end;ru=Sm[Yk];Yk=Yk+1;if not(not(Gk[0X0]<=Gk[0X00001]))then else Yk=ru[0X7];end;else local xw,rw=ru[7],(ru[1]-1)*50;local dw=(Gk[xw]);do for vy=1,ru[0X6]do dw[rw+vy]=Gk[xw+vy];end;end;end;end;else(Gk)[ru[7]]=-Gk[ru[0X00006]];end;end;else if qu<0X0001 then(Gk)[ru[0x7]]=Sk[ru[0X02]];else if qu~=0X2 then do(Gk)[ru[7]]=Gk[ru[0X6]]%Gk[ru[0X01]];end;else if not(Gk[ru[6]]<Gk[ru[0x1]])then Yk=ru[7];end;end;end;end;end;end;elseif qu>=0X13 then if not(qu>=0X000016)then if qu<0X14 then(Gk)[0]=Sk[ru[0x0002]];do Yk=Yk+0X001;end;Yk=Yk+1;ru=Sm[Yk];Yk=Yk+1;Gk[0X0]=Gk[0X0][ru[0X5]];do Yk=Yk+1;end;do Yk=Yk+1;end;ru=Sm[Yk];do Yk=Yk+0X1;end;if not Gk[0X0000]then do Yk=ru[0X00006];end;end;else do if qu~=21 then Gk[0X0]=Sk[ru[2]];ru=Sm[Yk];do Yk=Yk+0X00001;end;(Gk)[0x0]=Gk[0][ru[0X5]];Yk=Yk+1;Yk=Yk+1;do ru=Sm[Yk];end;Yk=Yk+1;(Gk)[0X0]=Gk[0][ru[0X005]];Yk=Yk+1;do Yk=Yk+0X0001;end;ru=Sm[Yk];Yk=Yk+1;(Gk)[1]=Sk[ru[0X2]];ru=Sm[Yk];Yk=Yk+1;(Gk)[0X1]=Gk[1][ru[5]];Yk=Yk+1;Yk=Yk+0x00001;ru=Sm[Yk];Yk=Yk+0X1;if not(not Gk[1])then else do Yk=ru[0X6];end;end;else local ri=(ru[7]);local Ji,Zi,Ki=Gk[ri]();do if Ji then do(Gk)[ri+0X1]=Zi;end;do Gk[ri+0X2]=Ki;end;do Yk=ru[0X0006];end;end;end;end;end;end;else if not(qu>=0x0018)then if qu~=0x17 then local uN=(Zm[ru[0X6]]);local UN=uN[3];local WN=(#UN);local XN=nil;do if WN>0x0 then XN={};for Dn=0X1,WN do local Cn=(UN[Dn]);if Cn[1]~=0X0 then XN[Dn-1]=bm[Cn[0X002]];else(XN)[Dn-0X00001]={Gk,Cn[2]};end;end;(M)(Cm,XN);end;end;do(Gk)[ru[7]]=dH(uN,XN,Sk);end;else repeat local Ge,fe=Cm,Gk;if#Ge>0X0 then local J8=({});do for hw,Ew in I,Ge do for UD,gD in I,Ew do if gD[0x1]==fe and gD[2]>=0 then local NS=gD[2];if not(not J8[NS])then else(J8)[NS]={fe[NS]};end;do(gD)[0X0001]=J8[NS];end;gD[0X0002]=1;end;end;end;end;end;until true;return;end;else do if qu==25 then do for jx=ru[7],ru[6]do(Gk)[jx]=nil;end;end;else(Gk)[0X1]=Sk[ru[2]];ru=Sm[Yk];Yk=Yk+0X1;do(Gk)[1]=Gk[0X1][ru[5]];end;ru=Sm[Yk];Yk=Yk+0X00001;Yk=ru[0X6];end;end;end;end;else do if qu<0X10 then do if not(qu>=0X00E)then Gk[0X1]=true;ru=Sm[Yk];Yk=Yk+0X001;(Sk)[ru[2]]=Gk[1];ru=Sm[Yk];do Yk=Yk+1;end;Yk=ru[0x6];else if qu==0xf then Yk=ru[6];else(Gk)[0X0]=Sk[ru[2]];do ru=Sm[Yk];end;Yk=Yk+1;Gk[0]=Gk[0][ru[0X5]];do ru=Sm[Yk];end;Yk=Yk+1;if Gk[0]then Yk=ru[6];end;end;end;end;else do if not(qu>=17)then do if not(Gk[ru[6]]<=Gk[ru[0X001]])then else do Yk=ru[7];end;end;end;else if qu~=18 then local DU,uU=ru[0X7],(Gk[ru[6]]);(Gk)[DU+0X1]=uU;do Gk[DU]=uU[ru[0X5]];end;else if Gk[ru[0X0007]]then Yk=ru[0x06];end;end;end;end;end;end;end;end;until false;end);if Xk then if pk then do if Dk~=1 then return Gk[Ik](f(Gk,Ik+1,sk));else return Gk[Ik]();end;end;else if not(Ik)then else return f(Gk,Ik,Dk);end;end;else if e(pk)=="\s\116\114\i\110g"then if not(p(pk,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;do if not(p(pk,"\^\046\-\:\037\d+:\032"))then(V)(pk,0);else(V)("\Lurap\h \083c\114\i\pt\058"..(Dm[Yk-0X1]or'\040i\110te\114\110a\108\041')..": "..v(pk),0);end;end;else(V)(pk,0);end;end;end;else if xm==176 then do Km=function(...)local N5=(0X1);local x5=({});local n5,d5={[1]=Xm,[2]=x5},0;local g5=K();local c5,w5=eH(...);c5=c5-1;local i5=((g5==g and Qm or g5));for hz=0,c5 do if not(km>hz)then break;else x5[hz]=w5[hz+1];end;end;if not Lm then w5=nil;else if not(Um)then else do x5[km]={n=c5>=km and c5-km+0x0001 or 0,f(w5,km+1,c5+0X001)};end;end;end;if i5==g5 then else(w)(Km,i5);end;local H5,t5,o5,r5=o(function()do while-1687859814 do local SD=Sm[N5];local ZD=SD[4];N5=N5+0x1;do if ZD<13 then if not(ZD<6)then do if not(ZD>=0X9)then if not(ZD<0X0007)then if ZD==8 then do x5[SD[7]]={f({},1,SD[0X6])};end;else x5[4]=i5[SD[2]];local EP=4;do N5=N5+0X1;end;do(x5)[0x5]=x5[0];end;N5=N5+0X1;local XP,eP=0x02,4;if XP==0 then else d5=eP+XP-1;end;local FP,dP=nil,(nil);do if XP==0X1 then FP,dP=eH(x5[eP]());else FP,dP=eH(x5[eP](f(x5,eP+1,d5)));end;end;if EP~=1 then do if EP==0 then FP=FP+eP-0X1;d5=FP;else do FP=eP+EP-0X002;end;do d5=FP+1;end;end;end;local K9=0;for sW=eP,FP do do K9=K9+0x1;end;x5[sW]=dP[K9];end;else d5=eP-1;end;SD=Sm[N5];N5=N5+0X001;eP=0x004;local mP=(r(function(...)C();for YW,GW in...do C(true,YW,GW);end;end));(mP)(x5[eP],x5[eP+1],x5[eP+2]);d5=eP;(x5)[eP]=mP;N5=SD[6];end;else local pX,xX,VX=SD[7],SD[6],(SD[1]);if xX==0X0000 then else do d5=pX+xX-1;end;end;local uX,UX=nil,nil;do if xX~=0X1 then do uX,UX=eH(x5[pX](f(x5,pX+0X001,d5)));end;else do uX,UX=eH(x5[pX]());end;end;end;if VX==0x1 then d5=pX-0X00001;else if VX~=0 then uX=pX+VX-2;do d5=uX+1;end;else uX=uX+pX-1;do d5=uX;end;end;local F6=0;do for K0=pX,uX do F6=F6+0X01;(x5)[K0]=UX[F6];end;end;end;end;elseif ZD<0X00b then if ZD==0X00a then x5[0]=i5[SD[0X2]];local mH=0;N5=N5+1;do N5=N5+1;end;do SD=Sm[N5];end;N5=N5+1;x5[0X1]=SD[2];N5=N5+1;x5[mH]=x5[mH](x5[mH+0X0001]);d5=mH;SD=Sm[N5];N5=N5+1;if not(not x5[0X0])then else N5=SD[0x6];end;else do x5[SD[7]]=SD[0x2];end;end;else if ZD~=12 then x5[7]=i5[SD[2]];do N5=N5+1;end;N5=N5+1;local Rq=7;SD=Sm[N5];N5=N5+0x1;x5[8]=SD[2];SD=Sm[N5];do N5=N5+0X001;end;do x5[9]=x5[0X6][SD[5]];end;do N5=N5+1;end;N5=N5+1;N5=N5+1;do(x5)[0XA]=false;end;N5=N5+1;d5=Rq+0X4-0X00001;(x5[Rq])(f(x5,Rq+0x1,d5));d5=Rq-0X1;SD=Sm[N5];N5=N5+1;N5=SD[6];else x5[SD[7]]={};end;end;end;else if not(ZD<0X00003)then if not(ZD>=4)then repeat local hW,NW,oW=Cm,x5,SD[0X7];do if#hW>0X0 then local nh=({});for W8,b8 in I,hW do for JY,sY in I,b8 do if sY[1]==NW and sY[0X2]>=oW then local xC=(sY[2]);if not(not nh[xC])then else nh[xC]={NW[xC]};end;sY[1]=nh[xC];do(sY)[2]=0x1;end;end;end;end;end;end;until true;else if ZD==0x005 then local pb=Zm[SD[0X00006]];local gb=pb[0X3];local ob=(nil);local mb=#gb;do if mb>0 then ob={};do for KP=0X1,mb do local eP=gb[KP];if eP[0x1]~=0X0 then(ob)[KP-1]=bm[eP[0X2]];else ob[KP-1]={x5,eP[2]};end;end;end;M(Cm,ob);end;end;(x5)[SD[7]]=dH(pb,ob,i5);else end;end;else if not(ZD>=0X1)then do x5[0X0007]=x5[6][SD[0X005]];end;local NL=(7);SD=Sm[N5];N5=N5+0X01;local AL=x5[0X7];x5[NL+1]=AL;(x5)[NL]=AL[SD[0X00005]];N5=N5+1;do NL=7;end;x5[NL]=x5[NL](x5[NL+0x1]);d5=NL;N5=N5+1;do N5=N5+1;end;SD=Sm[N5];do N5=N5+0X1;end;x5[8]=i5[SD[0X0002]];N5=N5+1;N5=N5+1;N5=N5+1;x5[9]=x5[2];do N5=N5+1;end;do NL=0x8;end;do x5[NL]=x5[NL](x5[NL+1]);end;d5=NL;SD=Sm[N5];N5=N5+1;NL=8;do AL=x5[8];end;x5[NL+0X0001]=AL;x5[NL]=AL[SD[0x5]];N5=N5+1;NL=8;do x5[NL]=x5[NL](x5[NL+1]);end;d5=NL;SD=Sm[N5];N5=N5+1;do if x5[7]==x5[0x00008]then else N5=SD[0X7];end;end;else do if ZD~=2 then do for Zn=SD[0X0007],SD[6]do(x5)[Zn]=nil;end;end;else do(x5)[SD[7]]=i5[SD[2]];end;end;end;end;end;end;else if not(ZD>=0x13)then if ZD<16 then do if not(ZD<0X0000E)then if ZD==15 then x5[SD[0X7]]=SD[0X2];else do N5=SD[6];end;end;else repeat local XM,SM=Cm,(x5);if#XM>0 then local Ij=({});for RM,BM in I,XM do do for FJ,IJ in I,BM do if IJ[1]==SM and IJ[2]>=0x0 then local G9=IJ[2];do if not Ij[G9]then Ij[G9]={SM[G9]};end;end;(IJ)[1]=Ij[G9];(IJ)[0X2]=0X0001;end;end;end;end;end;until 0.2379434929699732;return;end;end;else if not(ZD>=17)then(x5)[0X0000]=i5[SD[2]];do N5=N5+0X001;end;N5=N5+0x1;SD=Sm[N5];do N5=N5+0X01;end;(x5)[0]=x5[0x00][SD[0x00005]];do N5=N5+1;end;N5=N5+0X001;SD=Sm[N5];N5=N5+0X1;x5[0]=x5[0][SD[5]];N5=N5+1;do N5=N5+1;end;SD=Sm[N5];N5=N5+0X1;if x5[0X0]==SD[5]then else N5=SD[7];end;else if ZD==0X12 then(x5)[SD[0X00007]]=x5[SD[6]]/x5[SD[0X001]];else(x5)[0X0000]=i5[SD[0X02]];N5=N5+1;N5=N5+0x1;SD=Sm[N5];N5=N5+0X1;x5[0X0]=x5[0X0][SD[0X5]];SD=Sm[N5];N5=N5+0x01;if not x5[0X0]then N5=SD[0X6];end;end;end;end;else if ZD>=22 then if not(ZD<0X18)then if ZD==0x00019 then local c1=(SD[0X0007]);local V1,P1,Z1=x5[c1]();if not(V1)then else do(x5)[c1+1]=P1;end;(x5)[c1+2]=Z1;do N5=SD[0X6];end;end;else local h3=(SD[0X0007]);local O3=r(function(...)(C)();for Mn,mn,En,Yn,Hn,ln,Nn,sn,wn,en in...do(C)(true,{Mn,mn,En,Yn,Hn,ln,Nn,sn,wn,en});end;end);(O3)(x5[h3],x5[h3+0x1],x5[h3+2]);do d5=h3;end;(x5)[h3]=O3;N5=SD[6];end;else if ZD==0X000017 then(x5)[7]=i5[SD[0X2]];N5=N5+0X1;do N5=N5+0x1;end;do SD=Sm[N5];end;do N5=N5+1;end;x5[0X007]=x5[7][SD[5]];SD=Sm[N5];N5=N5+0X1;(x5)[7]=x5[7][SD[0X5]];N5=N5+0x1;do N5=N5+0X001;end;SD=Sm[N5];do N5=N5+0x1;end;(x5)[8]=x5[6][SD[0X0005]];SD=Sm[N5];do N5=N5+1;end;if not(not(x5[8]<=x5[7]))then else N5=SD[0x7];end;else(x5)[0X7]=x5[0x6][SD[0X5]];N5=N5+0X1;do N5=N5+1;end;SD=Sm[N5];N5=N5+1;do if not x5[7]then N5=SD[0X006];end;end;end;end;else if ZD>=20 then if ZD==0X15 then local HC=SD[0X7];local pC=(r(function(...)(C)();for YV,nV in...do(C)(true,YV,nV);end;end));pC(x5[HC],x5[HC+1],x5[HC+2]);d5=HC;x5[HC]=pC;N5=SD[6];else x5[0]=i5[SD[0X2]];do N5=N5+0X001;end;N5=N5+1;SD=Sm[N5];do N5=N5+0X0001;end;x5[1]=SD[2];N5=N5+0X1;local Ea=0X0;(x5)[Ea]=x5[Ea](x5[Ea+1]);do d5=Ea;end;N5=N5+0X1;N5=N5+0X1;do SD=Sm[N5];end;N5=N5+0X1;(x5)[1]=i5[SD[0X2]];SD=Sm[N5];do N5=N5+0x1;end;x5[0X2]=i5[SD[0X2]];SD=Sm[N5];N5=N5+1;do(x5)[2]=x5[0x2][SD[0X5]];end;do N5=N5+0X01;end;do N5=N5+0X1;end;SD=Sm[N5];N5=N5+0X01;if not(x5[2])then else N5=SD[0X6];end;end;else local FA=(SD[6]);local BA=x5[FA];do for Eg=FA+1,SD[1]do BA=BA..x5[Eg];end;end;do(x5)[SD[0X7]]=BA;end;end;end;end;end;end;end;end;end);do if not(H5)then if e(t5)~="string"then V(t5,0);else if p(t5,'\097tt\e\m\pt\ \116\o\ y\105\el\d\032a\cr\os\115\ \m\e\116a\m\e\116\h\111\d\/\C%\045ca\l\l\032\098o\117n\d\097ry')then do return coroutine.yield();end;end;if p(t5,"^.-:%d+: ")then V('\L\117r\097p\h\032S\c\114\105\112\116\:'..(Dm[N5-0x001]or'\(\105\110\116e\114\110\097l\)')..": "..v(t5),0x0);else(V)(t5,0x00);end;end;else do if t5 then if r5~=1 then do return x5[o5](f(x5,o5+1,d5));end;else return x5[o5]();end;else if not(o5)then else return f(x5,o5,r5);end;end;end;end;end;end;end;else do Km=function(...)local qn={};local Yn=0X1;local Wn=(K());local In,zn=eH(...);local Fn,Cn={[2]=qn,[1]=Xm},(0X0);In=In-0X01;local Qn=((Wn==g and Qm or Wn));do for ci=0,In do if km>ci then(qn)[ci]=zn[ci+0X1];else break;end;end;end;if not Lm then zn=nil;else if Um then(qn)[km]={n=In>=km and In-km+0X1 or 0,f(zn,km+0X1,In+1)};end;end;if Qn==Wn then else w(Km,Qn);end;local gn,yn,Bn,un=o(function()do repeat local MR=Sm[Yn];local nR=MR[4];Yn=Yn+0X0001;if nR<0X8 then if not(nR<4)then if nR>=0X006 then if nR~=7 then if qn[MR[0X0006]]==qn[MR[1]]then do Yn=MR[0X7];end;end;else local ZM=(qn[MR[6]]/qn[MR[1]]);(qn)[MR[7]]=ZM-ZM%0X1;end;else if nR==5 then do Yn=MR[6];end;else(qn)[MR[7]]=a(qn[MR[6]]);end;end;else do if not(nR>=0X2)then if nR==0x00001 then local ci=MR[0X07];local Yi,pi=qn[ci]();if Yi then do Yn=MR[0X0006];end;(qn)[ci+3]=pi;end;else(qn)[MR[7]]=MR[2];end;elseif nR~=3 then local qJ=(MR[0x6]);local WJ=(qn[qJ]);for NO=qJ+0x0001,MR[0X1]do WJ=WJ..qn[NO];end;(qn)[MR[7]]=WJ;else for k4=MR[7],MR[6]do(qn)[k4]=nil;end;end;end;end;else do if not(nR<0XC)then do if not(nR>=14)then if nR==13 then(qn)[MR[7]]=Qn[MR[2]];else local Rc=bm[0];do(qn)[0]=Rc[0X1][Rc[2]];end;local Oc=(0X0);MR=Sm[Yn];Yn=Yn+1;local Gc=qn[0X0];do(qn)[Oc+0X0001]=Gc;end;qn[Oc]=Gc[MR[0X0005]];Yn=Yn+1;Oc=0;qn[Oc](qn[Oc+0X1]);Cn=Oc-1;Yn=Yn+0X00001;repeat local Uf,bf=Cm,(qn);if#Uf>0 then local yF=({});for FT,VT in I,Uf do do for PW,GW in I,VT do if GW[1]==bf and GW[0X00002]>=0X0 then local zE=GW[2];do if not yF[zE]then yF[zE]={bf[zE]};end;end;(GW)[1]=yF[zE];(GW)[0X0002]=0X001;end;end;end;end;end;until true;do return;end;end;else if nR~=0XF then if not(qn[MR[0X6]]<=qn[MR[1]])then else do Yn=MR[7];end;end;else(qn)[MR[7]]={f({},0X1,MR[0X6])};end;end;end;else do if not(nR>=10)then if nR~=0X9 then local QL=bm[0];do(qn)[0X000]=QL[0X00001][QL[0X2]];end;local GL=0;MR=Sm[Yn];Yn=Yn+1;local WL=(qn[0]);do(qn)[GL+0X1]=WL;end;(qn)[GL]=WL[MR[5]];do Yn=Yn+0x001;end;GL=0x0;(qn[GL])(qn[GL+0X1]);Cn=GL-0X1;MR=Sm[Yn];Yn=Yn+0X1;do qn[0x0000]=Qn[MR[0X2]];end;do Yn=Yn+0x1;end;do Cn=0;end;qn[Cn]();Cn=Cn-1;local uL=(0);Yn=Yn+0X00001;do Yn=Yn+0X1;end;MR=Sm[Yn];Yn=Yn+0X0001;do(qn)[0]=Qn[MR[2]];end;Yn=Yn+0X01;Yn=Yn+0X00001;MR=Sm[Yn];do Yn=Yn+0x0001;end;qn[1]=MR[0X002];MR=Sm[Yn];do Yn=Yn+1;end;(qn)[2]=MR[2];do Yn=Yn+0X1;end;GL=0;(qn[GL])(qn[GL+1],qn[GL+0X00002]);Cn=GL-1;MR=Sm[Yn];do Yn=Yn+1;end;(qn)[0X0]=MR[2];MR=Sm[Yn];Yn=Yn+0X1;qn[1]=MR[2];MR=Sm[Yn];do Yn=Yn+0X1;end;do qn[0X2]=MR[2];end;MR=Sm[Yn];Yn=Yn+1;GL=qn[uL];local dL=(qn[uL+0X0001]);local nL=qn[uL+0X002];(qn)[uL]=r(function()for PQ=GL,dL,nL do C(true,PQ);end;end);Yn=MR[0x6];else(qn)[4]=Qn[MR[0x2]];Yn=Yn+0X01;Yn=Yn+1;MR=Sm[Yn];do Yn=Yn+0X01;end;qn[0X005]=MR[0X0002];local tZ=0x00006;MR=Sm[Yn];do Yn=Yn+0X1;end;(qn)[6]=Qn[MR[0X2]];Yn=Yn+0x1;Yn=Yn+1;do MR=Sm[Yn];end;Yn=Yn+1;qn[0x06]=qn[6][MR[5]];Yn=Yn+0x1;do Yn=Yn+1;end;MR=Sm[Yn];Yn=Yn+0x1;qn[0x7]=MR[0X0002];MR=Sm[Yn];do Yn=Yn+0X00001;end;(qn)[0x00008]=MR[0x2];MR=Sm[Yn];local IZ=0X0;Yn=Yn+1;do(qn)[9]=MR[2];end;Yn=Yn+1;local DZ=4;do if DZ~=0 then Cn=tZ+DZ-1;end;end;local QZ,MZ=nil,nil;if DZ==0X0001 then do QZ,MZ=eH(qn[tZ]());end;else QZ,MZ=eH(qn[tZ](f(qn,tZ+0x0001,Cn)));end;if IZ~=1 then if IZ~=0 then QZ=tZ+IZ-0X2;Cn=QZ+0x1;else QZ=QZ+tZ-1;Cn=QZ;end;local Tr=(0);for ij=tZ,QZ do do Tr=Tr+1;end;(qn)[ij]=MZ[Tr];end;else Cn=tZ-0X1;end;Yn=Yn+0X1;tZ=4;qn[tZ](f(qn,tZ+1,Cn));do Cn=tZ-0X0001;end;do MR=Sm[Yn];end;Yn=Yn+1;qn[0X4]=Qn[MR[0x02]];Yn=Yn+1;do Cn=4;end;qn[Cn]();Cn=Cn-1;Yn=Yn+1;Yn=Yn+0X1;MR=Sm[Yn];Yn=Yn+0X01;Yn=MR[0X6];end;else if nR==11 then local Lu=Zm[MR[0X0006]];local Nu=Lu[0X3];local zu=#Nu;local nu=nil;if zu>0 then do nu={};end;do for h4=0X0001,zu do local w4=(Nu[h4]);do if w4[1]==0x0 then(nu)[h4-1]={qn,w4[2]};else nu[h4-0X1]=bm[w4[0X2]];end;end;end;end;M(Cm,nu);end;(qn)[MR[7]]=dH(Lu,nu,Qn);else end;end;end;end;end;end;until false;end;end);if gn then if yn then do if un==0X00001 then do return qn[Bn]();end;else return qn[Bn](f(qn,Bn+0X1,Cn));end;end;else if not(Bn)then else return f(qn,Bn,un);end;end;else do if e(yn)=="str\105\110\103"then if not(p(yn,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if p(yn,'^\.\045\:\037\d\043\:\032')then(V)('\L\117\114\097\ph\ S\cr\i\112t\058'..(Dm[Yn-0X01]or'\(\in\116\er\110a\l\041').."\058\ "..v(yn),0);else V(yn,0);end;else(V)(yn,0X0);end;end;end;end;end;end;end;else if not(xm<0XB2)then if xm==0Xb3 then Km=function(...)local gE=({});local FE=0x1;local lE=K();local qE=({[2]=gE,[1]=Xm});local SE,UE=eH(...);SE=SE-0x1;local GE=((lE==g and Qm or lE));for Py=0,SE do if not(km>Py)then break;else do(gE)[Py]=UE[Py+1];end;end;end;local zE=(0);if not Lm then UE=nil;else if Um then(gE)[km]={n=SE>=km and SE-km+1 or 0X0,f(UE,km+0X1,SE+1)};end;end;do if GE~=lE then(w)(Km,GE);end;end;local kE,RE,xE,yE=o(function()repeat local eV=(Sm[FE]);local aV=(eV[0X004]);FE=FE+0X1;if aV>=10 then if not(aV<15)then do if not(aV<0x12)then if not(aV<19)then if aV~=0X14 then repeat local Fc,Ac=Cm,(gE);do if#Fc>0X0 then local Tn={};do for TA,BA in I,Fc do for aA,nA in I,BA do if not(nA[0x1]==Ac and nA[2]>=0X0)then else local uq=(nA[2]);do if not Tn[uq]then Tn[uq]={Ac[uq]};end;end;nA[0X1]=Tn[uq];do(nA)[2]=0x1;end;end;end;end;end;end;end;until true;return;else gE[eV[0X00007]]=gE[eV[6]];end;else end;else if not(aV<16)then if aV~=17 then(gE)[eV[7]]=W(gE[eV[0x6]],gE[eV[0X1]]);else gE[eV[7]]=eV[2];end;else(gE)[0X1]=GE[eV[0x2]];eV=Sm[FE];local ej=0x0001;do FE=FE+0x0001;end;local ij=gE[1];(gE)[ej+0X0001]=ij;(gE)[ej]=ij[eV[5]];eV=Sm[FE];FE=FE+0x1;(gE)[0X3]=eV[2];FE=FE+0x1;ej=0X1;gE[ej]=gE[ej](gE[ej+0X0001],gE[ej+0X02]);zE=ej;FE=FE+1;do FE=FE+0X1;end;eV=Sm[FE];FE=FE+1;do if not gE[0x1]then FE=eV[6];end;end;end;end;end;else if aV<12 then if aV~=0X00b then gE[0X1]=GE[eV[2]];FE=FE+1;FE=FE+1;eV=Sm[FE];FE=FE+1;if gE[1]then FE=eV[0x00006];end;else local YF=(Zm[eV[6]]);local ZF,eF=YF[3],nil;local iF=#ZF;if iF>0 then eF={};do for X1=1,iF do local k1=ZF[X1];do if k1[1]==0X00 then eF[X1-0X1]={gE,k1[2]};else eF[X1-1]=bm[k1[2]];end;end;end;end;M(Cm,eF);end;gE[eV[0X7]]=dH(YF,eF,GE);end;else if not(aV<0XD)then if aV~=14 then gE[0X00001]=GE[eV[2]];FE=FE+0X1;FE=FE+1;local yl=(1);eV=Sm[FE];FE=FE+0x00001;(gE)[2]=eV[0X2];FE=FE+0x00001;gE[yl]=gE[yl](gE[yl+0X1]);do zE=yl;end;eV=Sm[FE];FE=FE+1;(gE)[2]=gE[1][eV[5]];FE=FE+0X00001;FE=FE+0x1;eV=Sm[FE];FE=FE+1;if not gE[0X2]then FE=eV[0X06];end;else gE[0X2]=GE[eV[0x002]];local B8=0X02;eV=Sm[FE];local A8=(Zm[eV[6]]);FE=FE+1;local U8=(nil);local T8=(A8[3]);local N8=#T8;if N8>0 then do U8={};end;for dK=0X00001,N8 do local lK=T8[dK];if lK[0x0001]==0X00000 then(U8)[dK-0X1]={gE,lK[2]};else(U8)[dK-1]=bm[lK[0X2]];end;end;M(Cm,U8);end;gE[0X003]=dH(A8,U8,GE);FE=FE+1;(gE[B8])(gE[B8+1]);zE=B8-1;do FE=FE+0x01;end;local V8=bm[1];gE[2]=V8[1][V8[2]];eV=Sm[FE];FE=FE+0x00001;B8=2;local W8=(gE[0X002]);do(gE)[B8+0X1]=W8;end;do gE[B8]=W8[eV[0x5]];end;do FE=FE+1;end;do B8=0X2;end;(gE[B8])(gE[B8+0X1]);zE=B8-1;FE=FE+0x1;FE=FE+1;FE=FE+1;repeat local w0,l0=Cm,gE;do if#w0>0x00 then local Uj=({});for pF,sF in I,w0 do do for qe,Pe in I,sF do do if Pe[0X1]==l0 and Pe[0X2]>=0x1 then local f9=(Pe[2]);do if not(not Uj[f9])then else(Uj)[f9]={l0[f9]};end;end;Pe[1]=Uj[f9];(Pe)[0X002]=1;end;end;end;end;end;end;end;until true;eV=Sm[FE];FE=FE+0X1;FE=eV[0X0006];end;else do gE[eV[0x7]]={f({},1,eV[6])};end;end;end;end;else do if aV<0x5 then if not(aV>=0X02)then if aV==1 then if not(not(gE[eV[0X0006]]<gE[eV[0x1]]))then else FE=eV[7];end;else do gE[1]=GE[eV[0x00002]];end;eV=Sm[FE];FE=FE+0X1;do(gE)[1]=gE[0x001][eV[5]];end;eV=Sm[FE];FE=FE+1;if not(not gE[1])then else FE=eV[6];end;end;else do if not(aV<0X3)then if aV==4 then do(gE)[eV[0x7]]=gE[eV[0x6]]^gE[eV[1]];end;else gE[1]=GE[eV[0x00002]];do FE=FE+1;end;do FE=FE+1;end;eV=Sm[FE];FE=FE+1;(gE)[0X1]=gE[0X1][eV[5]];FE=FE+1;local fc=(0x1);do FE=FE+0X1;end;eV=Sm[FE];FE=FE+0X01;(gE)[0x0002]=eV[0X00002];FE=FE+0X0001;do gE[fc]=gE[fc](gE[fc+0x1]);end;zE=fc;FE=FE+1;FE=FE+0X1;eV=Sm[FE];FE=FE+1;if not gE[1]then FE=eV[0X6];end;end;else for BY=eV[7],eV[6]do do gE[BY]=nil;end;end;end;end;end;else do if not(aV<0X7)then if not(aV<0X8)then if aV~=0X9 then gE[eV[7]]=GE[eV[2]];else do gE[1]=GE[eV[0X00002]];end;FE=FE+1;FE=FE+0x1;eV=Sm[FE];do FE=FE+0x1;end;do gE[0X1]=gE[0X1][eV[5]];end;eV=Sm[FE];FE=FE+1;do if not(not gE[1])then else FE=eV[0X6];end;end;end;else do(gE)[0]=GE[eV[2]];end;FE=FE+0X01;FE=FE+1;eV=Sm[FE];local Re=0X0;FE=FE+1;gE[0X0001]=eV[2];FE=FE+1;do gE[Re]=gE[Re](gE[Re+1]);end;do zE=Re;end;do eV=Sm[FE];end;do FE=FE+1;end;gE[0X001]=gE[0X000][eV[5]];FE=FE+1;do FE=FE+1;end;eV=Sm[FE];do FE=FE+0X00001;end;if not(gE[1])then else FE=eV[6];end;end;else if aV~=6 then if not gE[eV[0x07]]then FE=eV[6];end;else FE=eV[0x00006];end;end;end;end;end;end;until false;end);if not(kE)then if e(RE)=="string"then if p(RE,'\097t\116\em\112t\ \116\o\ \121\i\e\l\100\ \097\c\114\os\115\ meta\109e\116\104\111d\047C\%-ca\108\108\ \098\ound\097\114y')then do return coroutine.yield();end;end;if not(p(RE,"^.-:%d+: "))then V(RE,0);else(V)('\076u\114\097p\h\ \Scr\105\pt\058'..(Dm[FE-0X1]or'\(\int\e\114\110\097\l\)')..": "..v(RE),0);end;else V(RE,0);end;else do if RE then if yE~=1 then return gE[xE](f(gE,xE+1,zE));else return gE[xE]();end;else if xE then return f(gE,xE,yE);end;end;end;end;end;else do Km=function(...)local cT,PT=0X001,({});local CT=(K());local FT={[1]=Xm,[2]=PT};local ST,MT=eH(...);ST=ST-1;do for Mb=0,ST do do if km>Mb then(PT)[Mb]=MT[Mb+1];else break;end;end;end;end;if not Lm then do MT=nil;end;else if not(Um)then else do(PT)[km]={n=ST>=km and ST-km+1 or 0,f(MT,km+0X1,ST+0X01)};end;end;end;local qT,JT=(CT==g and Qm or CT),0;if qT==CT then else(w)(Km,qT);end;local KT,hT,aT,VT=o(function()while 0.24917371507217279 do local kj=Sm[cT];local Ej=kj[4];cT=cT+0X1;if Ej<0X6 then if Ej>=0X03 then if Ej>=0x00004 then do if Ej==5 then(PT)[kj[0X7]]=qT[kj[2]];else for Ty=kj[0x00007],kj[0X6]do PT[Ty]=nil;end;end;end;else PT[kj[0X7]]=FT[kj[0X0006]];end;else if not(Ej<0X1)then do if Ej~=2 then do PT[kj[7]]=PT[kj[0x6]]>PT[kj[1]];end;else PT[kj[0x007]]=kj[2];end;end;else repeat local t0,X0=Cm,(PT);if not(#t0>0)then else local Z8={};for xs,Ys in I,t0 do for XO,BO in I,Ys do if BO[0x01]==X0 and BO[2]>=0X0000 then local R2=(BO[0X2]);do if not Z8[R2]then Z8[R2]={X0[R2]};end;end;BO[0X1]=Z8[R2];(BO)[0X002]=0x1;end;end;end;end;until"\073\m[\O\FN\kPa";local Fb=(kj[7]);do return false,Fb,Fb+kj[6]-2;end;end;end;else if not(Ej<0x09)then do if not(Ej<0X000B)then if Ej~=12 then local bz=Zm[kj[0x6]];local Dz,ez=bz[3],(nil);local fz=(#Dz);if not(fz>0X0)then else do ez={};end;for OH=1,fz do local WH=(Dz[OH]);do if WH[0X1]==0X000 then(ez)[OH-0X1]={PT,WH[0X2]};else do ez[OH-1]=bm[WH[2]];end;end;end;end;M(Cm,ez);end;(PT)[kj[7]]=dH(bz,ez,qT);else do cT=kj[6];end;end;else do if Ej~=0X00A then do PT[kj[7]]=kj[2];end;else PT[kj[7]]={f({},0X1,kj[6])};end;end;end;end;else do if Ej>=0X07 then do if Ej==8 then do PT[0X000]=qT[kj[2]];end;kj=Sm[cT];local kf=(0);cT=cT+0X1;local Of=PT[0X0];do(PT)[kf+1]=Of;end;(PT)[kf]=Of[kj[0X5]];do kj=Sm[cT];end;cT=cT+0X01;PT[0X02]=kj[0X00002];cT=cT+0X1;kf=0x00;(PT)[kf]=PT[kf](PT[kf+0X1],PT[kf+2]);JT=kf;kj=Sm[cT];do cT=cT+1;end;PT[0X1]=qT[kj[2]];cT=cT+1;cT=cT+0X1;kj=Sm[cT];do cT=cT+1;end;(PT)[1]=PT[0X1][kj[5]];kj=Sm[cT];local Hf=Zm[kj[0X6]];cT=cT+0X001;local df=Hf[0X3];local uf=nil;local Nf=#df;if not(Nf>0)then else uf={};do for ae=0x1,Nf do local de=df[ae];if de[0x001]~=0 then(uf)[ae-1]=bm[de[2]];else(uf)[ae-0X1]={PT,de[0x2]};end;end;end;(M)(Cm,uf);end;PT[0X2]=dH(Hf,uf,qT);cT=cT+0x01;kf=1;PT[kf](PT[kf+0x1]);JT=kf-1;cT=cT+1;cT=cT+1;cT=cT+1;repeat local L0,A0=Cm,PT;if#L0>0X0 then local j_={};for nM,mM in I,L0 do for s2,x2 in I,mM do do if x2[1]==A0 and x2[0x002]>=0X0 then local jw=x2[2];if not j_[jw]then j_[jw]={A0[jw]};end;(x2)[0X001]=j_[jw];do(x2)[0x00002]=0X1;end;end;end;end;end;end;until 0.9317425928221331;return;else do(PT)[kj[7]]=PT[kj[6]]>=PT[kj[1]];end;end;end;else end;end;end;end;end;end);if KT then if hT then if VT~=0x0001 then do return PT[aT](f(PT,aT+0X1,JT));end;else do return PT[aT]();end;end;else if not(aT)then else return f(PT,aT,VT);end;end;else do if e(hT)=="string"then if not(p(hT,"attempt to yield across metamethod/C%-call boundary"))then else do return coroutine.yield();end;end;if p(hT,"^\046-:\%\d\+\:\ ")then V('\076u\114a\112\104\032\Sc\114\i\p\116:'..(Dm[cT-0X1]or"(internal)").."\:\ "..v(hT),0X0);else(V)(hT,0);end;else(V)(hT,0);end;end;end;end;end;end;else do Km=function(...)local lP=0X1;local mP=(0);local xP=({});local yP={[2]=xP,[1]=Xm};local LP=K();local aP,iP=eH(...);do aP=aP-0X1;end;do for Nf=0x0000,aP do if km>Nf then(xP)[Nf]=iP[Nf+1];else break;end;end;end;local YP=((LP==g and Qm or LP));if not Lm then iP=nil;else if Um then(xP)[km]={n=aP>=km and aP-km+0x00001 or 0,f(iP,km+0x1,aP+0X1)};end;end;do if YP==LP then else w(Km,YP);end;end;local OP,JP,rP,RP=o(function()repeat local Rd=(Sm[lP]);local bd=Rd[0x4];lP=lP+0X001;if bd<0x0008 then do if not(bd>=0X0004)then if not(bd>=2)then do if bd==1 then local f5=Rd[7];local t5=r(function(...)(C)();for Gr,Ur,Ar,Kr,Lr,Jr,Xr,gr,Or,Dr in...do(C)(true,{Gr,Ur,Ar,Kr,Lr,Jr,Xr,gr,Or,Dr});end;end);t5(xP[f5],xP[f5+1],xP[f5+2]);do mP=f5;end;xP[f5]=t5;lP=Rd[6];else xP[0]=YP[Rd[2]];lP=lP+0X1;lP=lP+1;Rd=Sm[lP];lP=lP+1;xP[0X0]=xP[0][Rd[5]];lP=lP+0X1;do lP=lP+0X1;end;Rd=Sm[lP];local Nz,qz=0X0,Zm[Rd[6]];lP=lP+0X1;local pz=nil;local Uz=qz[3];local Tz=(#Uz);do if not(Tz>0x000)then else do pz={};end;for AP=1,Tz do local BP=(Uz[AP]);if BP[0X1]==0X0 then(pz)[AP-0X0001]={xP,BP[2]};else pz[AP-0x1]=bm[BP[0X02]];end;end;M(Cm,pz);end;end;(xP)[0X01]=dH(qz,pz,YP);lP=lP+0X1;xP[Nz](xP[Nz+1]);mP=Nz-1;lP=lP+0X1;lP=lP+1;lP=lP+1;repeat local ct,at=Cm,xP;if not(#ct>0X00000)then else local ei={};for qa,sa in I,ct do for Gu,pu in I,sa do if pu[1]==at and pu[0x2]>=0 then local hS=pu[0X2];if not ei[hS]then do ei[hS]={at[hS]};end;end;do pu[1]=ei[hS];end;do pu[0X2]=1;end;end;end;end;end;until true;return;end;end;else if bd==3 then if not(xP[Rd[6]]<=xP[Rd[1]])then do lP=Rd[7];end;end;else local ot=Zm[Rd[6]];local Bt=(ot[0X3]);local Qt=nil;local ct=#Bt;if ct>0 then Qt={};for Zv=0X1,ct do local Nv=Bt[Zv];if Nv[0X01]==0 then do Qt[Zv-0X1]={xP,Nv[0X02]};end;else do Qt[Zv-0X0001]=bm[Nv[0X2]];end;end;end;M(Cm,Qt);end;(xP)[Rd[7]]=dH(ot,Qt,YP);end;end;elseif not(bd<0x06)then if bd==7 then xP[Rd[0x0007]]=YP[Rd[0X02]];else(xP)[Rd[7]]=xP[Rd[6]]/xP[Rd[0X1]];end;else if bd~=0x00005 then do(xP)[Rd[7]]={f({},1,Rd[0x6])};end;else do lP=Rd[0X006];end;end;end;end;else if bd<0XC then if bd>=0xa then do if bd==0Xb then if xP[Rd[7]]then lP=Rd[0x00006];end;else do for Qn=Rd[0X7],Rd[6]do(xP)[Qn]=nil;end;end;end;end;else if bd~=0X9 then(xP)[Rd[0x7]]=xP[Rd[6]]-xP[Rd[0X01]];else repeat local AR,GR=Cm,xP;do if#AR>0 then local VD={};for OF,EF in I,AR do for hL,xL in I,EF do do if xL[1]==GR and xL[0X2]>=0X0 then local x4=(xL[2]);if not(not VD[x4])then else VD[x4]={GR[x4]};end;xL[0x1]=VD[x4];do(xL)[2]=1;end;end;end;end;end;end;end;until true;do return;end;end;end;elseif not(bd<0x000E)then if not(bd<0Xf)then if bd~=16 then xP[Rd[7]]=yP[Rd[0X06]];else YP[Rd[2]]=xP[Rd[0X7]];end;else end;else if bd~=0XD then xP[Rd[7]]=Rd[2];else(xP)[Rd[0X7]]=xP[Rd[6]][xP[Rd[1]]];end;end;end;until false;end);if not(OP)then do if e(JP)~="string"then(V)(JP,0);else if p(JP,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;if not(p(JP,"^\046\-\:%\100\+:\032"))then(V)(JP,0X00000);else V("\L\117r\097p\104\ \083\cri\112t\058"..(Dm[lP-1]or"\(\i\110\116\101rn\097\108)").."\:\ "..v(JP),0);end;end;end;else do if JP then if RP==0X1 then return xP[rP]();else return xP[rP](f(xP,rP+1,mP));end;else if not(rP)then else do return f(xP,rP,RP);end;end;end;end;end;end;end;end;end;else if not(xm>=183)then do if xm<0Xb5 then Km=function(...)local Pt,st=0X001,({});local Bt={[1]=Xm,[2]=st};local tt=K();local It,kt=eH(...);local Dt=((tt==g and Qm or tt));do It=It-1;end;for b1=0,It do if not(km>b1)then do break;end;else st[b1]=kt[b1+0X0001];end;end;if not Lm then kt=nil;else if not(Um)then else(st)[km]={n=It>=km and It-km+1 or 0X0,f(kt,km+0X1,It+0x0001)};end;end;local ct=(0x0);do if Dt~=tt then w(Km,Dt);end;end;local Vt,Ft,Kt,lt=o(function()while 0X49120CD0 do local mZ=Sm[Pt];local kZ=(mZ[4]);do Pt=Pt+1;end;if kZ>=0X0008 then if kZ>=12 then if not(kZ<0Xe)then do if kZ==15 then st[1]=Dt[mZ[2]];do mZ=Sm[Pt];end;Pt=Pt+1;st[1]=st[0X1][mZ[5]];local sE=nil;Pt=Pt+1;Pt=Pt+1;mZ=Sm[Pt];local ZE=(1);Pt=Pt+1;local kE=(Zm[mZ[6]]);local PE=kE[0X3];local vE=#PE;if vE>0X0 then sE={};for ON=1,vE do local oN=(PE[ON]);if oN[0X0001]==0 then sE[ON-1]={st,oN[0X2]};else(sE)[ON-1]=bm[oN[2]];end;end;M(Cm,sE);end;do(st)[2]=dH(kE,sE,Dt);end;Pt=Pt+0X1;(st[ZE])(st[ZE+0x1]);do ct=ZE-0X1;end;Pt=Pt+0X1;do Pt=Pt+1;end;do Pt=Pt+1;end;repeat local mU,dU=Cm,(st);if not(#mU>0)then else local dw={};for iy,Ay in I,mU do do for I_,i_ in I,Ay do if not(i_[0X001]==dU and i_[2]>=0X00)then else local PO=i_[0x2];if not dw[PO]then dw[PO]={dU[PO]};end;do(i_)[1]=dw[PO];end;(i_)[2]=1;end;end;end;end;end;until 348485317;return;else do(st)[mZ[7]]=Dt[mZ[2]];end;end;end;else do if kZ==13 then(st)[mZ[0X07]]={f({},0X1,mZ[6])};else local QP=(mZ[6]);local JP=st[QP];for ib=QP+0X1,mZ[1]do JP=JP..st[ib];end;st[mZ[0X07]]=JP;end;end;end;else if kZ>=0Xa then if kZ==0X0000b then do st[0]=Dt[mZ[0X02]];end;local My=0X0;mZ=Sm[Pt];Pt=Pt+0x1;local Oy=(st[0X000]);(st)[My+0X1]=Oy;st[My]=Oy[mZ[5]];mZ=Sm[Pt];Pt=Pt+1;st[2]=mZ[0X002];Pt=Pt+0X1;My=0;st[My]=st[My](st[My+1],st[My+2]);ct=My;Pt=Pt+1;Pt=Pt+0X01;mZ=Sm[Pt];do Pt=Pt+1;end;st[0x1]=Dt[mZ[0X2]];do Pt=Pt+1;end;Pt=Pt+0X01;do mZ=Sm[Pt];end;do Pt=Pt+0X01;end;do if st[1]then Pt=mZ[6];end;end;else repeat local ao,oo,ho=Cm,st,mZ[7];if not(#ao>0)then else local Aq={};for yN,mN in I,ao do do for tR,HR in I,mN do if not(HR[1]==oo and HR[2]>=ho)then else local Lo=HR[0X2];if not Aq[Lo]then(Aq)[Lo]={oo[Lo]};end;(HR)[0X00001]=Aq[Lo];(HR)[0x2]=0X1;end;end;end;end;end;until"e\)\R";end;else do if kZ~=9 then local a2=(Zm[mZ[0x0006]]);local W2=(a2[0X3]);local x2,m2=#W2,nil;if not(x2>0)then else m2={};for fe=0X1,x2 do local de=W2[fe];if de[1]~=0 then m2[fe-1]=bm[de[0X00002]];else(m2)[fe-0X0001]={st,de[2]};end;end;(M)(Cm,m2);end;do st[mZ[7]]=dH(a2,m2,Dt);end;else if not(not st[mZ[0X7]])then else Pt=mZ[6];end;end;end;end;end;else do if not(kZ<4)then if kZ<0X00006 then if kZ~=5 then do repeat local XO,vO=Cm,(st);if#XO>0X0 then local JC=({});for FS,QS in I,XO do do for nK,OK in I,QS do if OK[0X001]==vO and OK[2]>=0X0 then local vX=OK[2];if not(not JC[vX])then else(JC)[vX]={vO[vX]};end;do OK[0X00001]=JC[vX];end;do OK[0X02]=1;end;end;end;end;end;end;until true;end;return;else local Oq,Dq=mZ[7],(mZ[0X006]);do ct=Oq+Dq-1;end;repeat local Yh,yh=Cm,(st);if not(#Yh>0X0)then else local ok={};for gA,KA in I,Yh do do for mH,NH in I,KA do do if NH[0X1]==yh and NH[0X00002]>=0 then local FU=(NH[0X02]);if not(not ok[FU])then else(ok)[FU]={yh[FU]};end;(NH)[1]=ok[FU];do(NH)[0X2]=0X001;end;end;end;end;end;end;end;until true;return true,Oq,Dq;end;else if kZ==0X7 then if not(st[mZ[0X6]]<st[mZ[1]])then else Pt=mZ[0X007];end;else end;end;else if kZ>=0X2 then do if kZ~=3 then Pt=mZ[0X6];elseif not(not(st[mZ[0X6]]<=st[mZ[1]]))then else Pt=mZ[0X7];end;end;else do if kZ~=1 then for LF=mZ[7],mZ[0X6]do st[LF]=nil;end;else st[mZ[7]]=mZ[2];end;end;end;end;end;end;end;end);if not(Vt)then if e(Ft)=="s\116\114\105n\g"then if not(p(Ft,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if p(Ft,"\^.\045:\037\d\+\:\032")then V("\076\117ra\p\h\ \083\099rip\116\:"..(Dm[Pt-1]or"(internal)")..'\:\032'..v(Ft),0X0);else V(Ft,0);end;else(V)(Ft,0);end;else do if Ft then do if lt==1 then return st[Kt]();else return st[Kt](f(st,Kt+1,ct));end;end;else if Kt then return f(st,Kt,lt);end;end;end;end;end;else if xm==0X00b6 then Km=function(...)local pD=(1);local LD={};local iD=(K());local oD,aD=(iD==g and Qm or iD),0X000;local gD={[1]=Xm,[2]=LD};local BD,KD=eH(...);BD=BD-0X0001;for jy=0,BD do do if not(km>jy)then break;else LD[jy]=KD[jy+0X1];end;end;end;if not Lm then KD=nil;else if Um then LD[km]={n=BD>=km and BD-km+0x0001 or 0x0,f(KD,km+1,BD+1)};end;end;if oD==iD then else(w)(Km,oD);end;local DD,WD,QD,sD=o(function()do repeat local Qe=(Sm[pD]);local ue=(Qe[0X4]);pD=pD+0x1;do if not(ue>=0x1b)then do if not(ue>=0xd)then if not(ue<6)then if not(ue<9)then if ue>=11 then if ue~=0X0000C then pD=Qe[6];else do(LD)[12]=LD[0X7][LD[11]];end;do pD=pD+0X1;end;pD=pD+0x1;Qe=Sm[pD];pD=pD+1;LD[13]=LD[12][Qe[5]];pD=pD+1;do pD=pD+1;end;Qe=Sm[pD];do pD=pD+1;end;if not(not(LD[13]<=LD[0X2]))then else pD=Qe[0X07];end;end;elseif ue~=10 then do LD[0X5]=oD[Qe[2]];end;pD=pD+1;pD=pD+0x1;Qe=Sm[pD];pD=pD+0X0001;LD[5]=LD[5][Qe[0X5]];pD=pD+1;do pD=pD+0X0001;end;pD=pD+0X00001;do aD=0x5;end;local kp=(0X00005);LD[aD]();do aD=aD-0X01;end;pD=pD+0X1;pD=pD+0X1;do pD=pD+0x001;end;(LD)[5]=LD[4];do pD=pD+1;end;repeat local nr,jr=Cm,LD;if not(#nr>0)then else local M0={};for l0,n0 in I,nr do for Fo,bo in I,n0 do if bo[1]==jr and bo[0X02]>=0 then local Rs=(bo[0x2]);if not M0[Rs]then do M0[Rs]={jr[Rs]};end;end;bo[0X00001]=M0[Rs];(bo)[2]=1;end;end;end;end;until true;return false,kp,kp;else repeat local VT,JT=Cm,LD;if#VT>0 then local wc={};for hk,Wk in I,VT do do for mT,qT in I,Wk do do if not(qT[1]==JT and qT[2]>=0)then else local bR=(qT[0X00002]);if not(not wc[bR])then else wc[bR]={JT[bR]};end;do(qT)[1]=wc[bR];end;do(qT)[2]=0x1;end;end;end;end;end;end;end;until true;do return;end;end;else do if ue>=0X7 then if ue~=8 then do if LD[Qe[0X6]]~=LD[Qe[0X0001]]then pD=Qe[7];end;end;else LD[0X005]=oD[Qe[2]];Qe=Sm[pD];local h9=(LD[5]);do pD=pD+0X1;end;local o9=0x0005;do(LD)[o9+0X001]=h9;end;LD[o9]=h9[Qe[0X5]];Qe=Sm[pD];pD=pD+0X001;LD[0X7]=Qe[0X2];do Qe=Sm[pD];end;pD=pD+0X1;(LD)[0X008]=oD[Qe[0X02]];pD=pD+1;pD=pD+0X01;pD=pD+1;LD[8]=#LD[8];pD=pD+1;do o9=5;end;do aD=o9+0X0004-0x00001;end;(LD)[o9]=LD[o9](f(LD,o9+1,aD));aD=o9;do Qe=Sm[pD];end;do pD=pD+0x1;end;if LD[5]~=Qe[0x5]then pD=Qe[7];end;end;else if LD[Qe[6]]==LD[Qe[1]]then do pD=Qe[0X7];end;end;end;end;end;else do if ue<3 then if not(ue<1)then if ue~=2 then(LD)[Qe[7]]=LD[Qe[6]]+LD[Qe[1]];else(LD)[0x5]=oD[Qe[2]];do pD=pD+1;end;pD=pD+0X001;Qe=Sm[pD];do pD=pD+0X1;end;do LD[5]=LD[5][Qe[0x05]];end;local iW=0x5;Qe=Sm[pD];pD=pD+1;do LD[0X6]=Qe[0x0002];end;Qe=Sm[pD];pD=pD+0x01;(LD)[0X0007]=Qe[0X02];Qe=Sm[pD];pD=pD+0X01;(LD)[0X8]=Qe[2];do pD=pD+1;end;aD=iW+4-1;(LD)[iW]=LD[iW](f(LD,iW+1,aD));aD=iW;Qe=Sm[pD];pD=pD+0X00001;do(oD)[Qe[0X0002]]=LD[0X0005];end;do Qe=Sm[pD];end;pD=pD+1;pD=Qe[6];end;else do LD[5]=oD[Qe[2]];end;do pD=pD+0X001;end;pD=pD+0x00001;local Zw=(5);Qe=Sm[pD];pD=pD+0x0001;local iw=(LD[0X5]);(LD)[Zw+1]=iw;do(LD)[Zw]=iw[Qe[5]];end;Qe=Sm[pD];pD=pD+0x001;LD[0X7]=Qe[2];do Qe=Sm[pD];end;pD=pD+1;(LD)[0X8]=oD[Qe[2]];pD=pD+1;LD[8]=#LD[0x8];pD=pD+0X1;do Zw=5;end;aD=Zw+0X00004-0X1;LD[Zw]=LD[Zw](f(LD,Zw+1,aD));do aD=Zw;end;Qe=Sm[pD];do pD=pD+0X0001;end;do if LD[5]~=Qe[0X5]then pD=Qe[7];end;end;end;else if ue>=0x4 then if ue==0X5 then do LD[9]=LD[0X0007][Qe[0X005]];end;pD=pD+1;pD=pD+1;do Qe=Sm[pD];end;pD=pD+0X001;(LD)[10]=oD[Qe[0X2]];pD=pD+0X01;pD=pD+0X001;Qe=Sm[pD];pD=pD+0X1;(LD)[10]=LD[10][Qe[5]];pD=pD+1;do pD=pD+1;end;do Qe=Sm[pD];end;pD=pD+1;LD[0x0b]=LD[0x7][Qe[0X05]];pD=pD+0X1;pD=pD+1;Qe=Sm[pD];pD=pD+1;local eN=(10);(LD)[0XC]=oD[Qe[2]];do pD=pD+1;end;pD=pD+0X01;pD=pD+1;LD[eN]=LD[eN](LD[eN+1],LD[eN+2]);aD=eN;pD=pD+1;do pD=pD+1;end;pD=pD+0X1;LD[9]=LD[0X009][LD[0Xa]];Qe=Sm[pD];pD=pD+1;do if LD[0X009]~=Qe[5]then pD=Qe[0X7];end;end;else(LD)[8]=oD[Qe[2]];local Da=(0x8);Qe=Sm[pD];pD=pD+1;do(LD)[0X9]=LD[7][Qe[0x5]];end;pD=pD+1;do pD=pD+0X1;end;pD=pD+1;local ea=(2);if ea==0 then else aD=Da+ea-1;end;local Ia,Ha,oa=nil,nil,0X04;if ea==1 then Ia,Ha=eH(LD[Da]());else Ia,Ha=eH(LD[Da](f(LD,Da+0X01,aD)));end;if oa==0X1 then do aD=Da-0X001;end;else if oa==0X0 then Ia=Ia+Da-1;aD=Ia;else Ia=Da+oa-0X02;aD=Ia+1;end;local FP=(0x0);do for v6=Da,Ia do FP=FP+0X1;LD[v6]=Ha[FP];end;end;end;Qe=Sm[pD];pD=pD+0X01;Da=0X8;local ga=(r(function(...)(C)();for U2,a2 in...do C(true,U2,a2);end;end));ga(LD[Da],LD[Da+1],LD[Da+0X002]);aD=Da;(LD)[Da]=ga;pD=Qe[0X006];end;else do(LD)[Qe[7]]=oD[Qe[0X2]];end;end;end;end;end;else if not(ue<20)then if ue<0X17 then if ue<0x015 then else do if ue~=0x16 then do for KC=Qe[0x7],Qe[0x0006]do(LD)[KC]=nil;end;end;else LD[14]=LD[12][Qe[5]];pD=pD+0X0001;pD=pD+1;Qe=Sm[pD];do pD=pD+0x1;end;if not(LD[14])then else pD=Qe[6];end;end;end;end;else if not(ue<25)then if ue~=0X1A then LD[13]=oD[Qe[0X002]];do pD=pD+1;end;do pD=pD+1;end;local wX=13;do pD=pD+0x1;end;do(LD)[0XE]=LD[0x6];end;do pD=pD+0x1;end;do(LD)[wX]=LD[wX](LD[wX+1]);end;aD=wX;do pD=pD+0X1;end;pD=pD+0X001;Qe=Sm[pD];pD=pD+0X00001;oD[Qe[0X2]]=LD[13];Qe=Sm[pD];pD=pD+1;(LD)[0xD]=oD[Qe[2]];do pD=pD+1;end;do pD=pD+0X01;end;pD=pD+1;do(LD)[14]=LD[0x0000B];end;pD=pD+0X001;wX=0X000d;(LD)[wX]=LD[wX](LD[wX+0X001]);aD=wX;Qe=Sm[pD];do pD=pD+0X01;end;oD[Qe[2]]=LD[0xD];Qe=Sm[pD];pD=pD+1;LD[13]=oD[Qe[2]];do pD=pD+0X1;end;pD=pD+0X1;Qe=Sm[pD];pD=pD+0X1;(LD)[13]=LD[0Xd][Qe[5]];pD=pD+0X1;pD=pD+0x001;do Qe=Sm[pD];end;pD=pD+0X1;LD[14]=LD[12][Qe[5]];Qe=Sm[pD];do pD=pD+0X001;end;LD[0XF]=oD[Qe[0X2]];do pD=pD+0x1;end;wX=0X000d;(LD)[wX]=LD[wX](LD[wX+1],LD[wX+2]);do aD=wX;end;Qe=Sm[pD];do pD=pD+1;end;do oD[Qe[2]]=LD[0X0000D];end;do Qe=Sm[pD];end;pD=pD+0X1;(LD)[0X0000d]=LD[0X0000C][Qe[5]];Qe=Sm[pD];pD=pD+0X00001;oD[Qe[2]]=LD[13];do Qe=Sm[pD];end;pD=pD+0X1;(LD)[13]=LD[0X000c][Qe[5]];pD=pD+1;do pD=pD+1;end;pD=pD+0X1;(LD)[0XD]=LD[2]-LD[0X0d];pD=pD+0x00001;(LD)[0X003]=LD[13];Qe=Sm[pD];pD=pD+1;do(LD)[0xd]=oD[Qe[0x2]];end;pD=pD+1;do pD=pD+1;end;Qe=Sm[pD];pD=pD+0X001;do LD[0xd]=LD[0XD][Qe[0X5]];end;pD=pD+1;LD[14]=LD[0X4];do Qe=Sm[pD];end;pD=pD+0X1;LD[0X00F]=Qe[2];do pD=pD+1;end;LD[0x000010]={};Qe=Sm[pD];do pD=pD+1;end;(LD)[17]=oD[Qe[2]];do pD=pD+0X00001;end;LD[18]=LD[0X6];do pD=pD+0X1;end;wX=17;LD[wX]=LD[wX](LD[wX+1]);aD=wX;do pD=pD+1;end;pD=pD+0X1;do Qe=Sm[pD];end;pD=pD+0X00001;LD[16][Qe[2]]=LD[0X00011];Qe=Sm[pD];pD=pD+0X01;(LD)[17]=oD[Qe[0X00002]];do pD=pD+1;end;pD=pD+1;pD=pD+1;LD[18]=LD[11];pD=pD+1;wX=17;(LD)[wX]=LD[wX](LD[wX+1]);aD=wX;Qe=Sm[pD];pD=pD+0X1;(LD[16])[Qe[2]]=LD[17];Qe=Sm[pD];pD=pD+1;LD[17]=oD[Qe[0X2]];Qe=Sm[pD];do pD=pD+0X1;end;(LD)[0x11]=LD[17][Qe[0X5]];do pD=pD+1;end;pD=pD+1;Qe=Sm[pD];do pD=pD+1;end;LD[18]=LD[0XC][Qe[5]];pD=pD+0X1;do pD=pD+0x1;end;do Qe=Sm[pD];end;pD=pD+0X1;(LD)[19]=oD[Qe[2]];pD=pD+0X1;pD=pD+1;do pD=pD+1;end;wX=17;LD[wX]=LD[wX](LD[wX+0x1],LD[wX+0X2]);aD=wX;do Qe=Sm[pD];end;pD=pD+1;(LD[0X000010])[Qe[2]]=LD[0X00011];do Qe=Sm[pD];end;pD=pD+1;LD[17]=LD[12][Qe[0X5]];pD=pD+1;pD=pD+1;do Qe=Sm[pD];end;pD=pD+1;LD[0X00010][Qe[2]]=LD[17];do pD=pD+0X1;end;wX=13;aD=wX+4-0X1;(LD[wX])(f(LD,wX+0X001,aD));do aD=wX-1;end;Qe=Sm[pD];do pD=pD+0X1;end;pD=Qe[0x6];else LD[0X5]=LD[4][Qe[5]];do Qe=Sm[pD];end;pD=pD+1;LD[0X0005]=LD[0X5][Qe[0x00005]];Qe=Sm[pD];pD=pD+1;oD[Qe[0X02]]=LD[0X5];Qe=Sm[pD];pD=pD+1;do LD[5]=LD[4][Qe[0X0005]];end;pD=pD+1;pD=pD+1;do Qe=Sm[pD];end;do pD=pD+1;end;do LD[0X5]=LD[0X0005][Qe[0x5]];end;Qe=Sm[pD];pD=pD+0X1;(oD)[Qe[2]]=LD[0X5];Qe=Sm[pD];pD=pD+1;(LD)[0X5]=LD[4][Qe[5]];do pD=pD+0X1;end;pD=pD+1;Qe=Sm[pD];pD=pD+1;(LD)[0X05]=LD[0x5][Qe[5]];pD=pD+0X1;pD=pD+1;Qe=Sm[pD];pD=pD+1;(oD)[Qe[2]]=LD[0X5];Qe=Sm[pD];do pD=pD+0X01;end;LD[5]=LD[0x0004][Qe[0X00005]];pD=pD+0X1;pD=pD+1;Qe=Sm[pD];pD=pD+0X1;do LD[5]=LD[5][Qe[0X0005]];end;pD=pD+0X1;do pD=pD+1;end;do Qe=Sm[pD];end;pD=pD+0X1;(oD)[Qe[2]]=LD[5];Qe=Sm[pD];pD=pD+0x01;(LD)[0x5]=LD[0X4][Qe[0X5]];do pD=pD+0X1;end;pD=pD+1;Qe=Sm[pD];pD=pD+1;LD[0X5]=LD[5][Qe[0X0005]];Qe=Sm[pD];pD=pD+0X001;(oD)[Qe[0X2]]=LD[0X5];Qe=Sm[pD];pD=pD+1;LD[5]=LD[0x4][Qe[5]];pD=pD+0X01;pD=pD+1;do Qe=Sm[pD];end;pD=pD+1;(LD)[0X5]=LD[5][Qe[5]];pD=pD+0x1;do pD=pD+0X1;end;Qe=Sm[pD];pD=pD+0X0001;do(oD)[Qe[0x2]]=LD[5];end;Qe=Sm[pD];pD=pD+1;pD=Qe[6];end;else if ue~=0X18 then LD[Qe[0X7]]={f({},0X1,Qe[6])};else(LD)[5]=Qe[0X2];local dL=(0X00005);do Qe=Sm[pD];end;pD=pD+0X1;local bL=(LD[0x005]);(LD)[dL+1]=bL;(LD)[dL]=bL[Qe[5]];do Qe=Sm[pD];end;pD=pD+1;LD[7]=oD[Qe[0X002]];pD=pD+0X1;dL=0X005;LD[dL]=LD[dL](LD[dL+1],LD[dL+2]);aD=dL;pD=pD+1;pD=pD+1;Qe=Sm[pD];pD=pD+0X1;if not(not LD[5])then else pD=Qe[0X006];end;end;end;end;else if not(ue<16)then if ue<18 then do if ue~=0X11 then local ia=(Qe[7]);local Sa,za,qa=LD[ia]();if not(Sa)then else(LD)[ia+0X0001]=za;LD[ia+0X2]=qa;pD=Qe[0x6];end;else(LD)[0Xb]=LD[7][Qe[5]];do pD=pD+0X1;end;pD=pD+0X1;Qe=Sm[pD];local uc=0Xb;do pD=pD+0X1;end;do(oD)[Qe[0X2]]=LD[0Xb];end;Qe=Sm[pD];pD=pD+1;do(LD)[0x000b]=oD[Qe[2]];end;Qe=Sm[pD];pD=pD+1;(LD)[0X0B]=LD[11][Qe[0X00005]];pD=pD+1;do pD=pD+0x1;end;do Qe=Sm[pD];end;pD=pD+1;(LD)[12]=LD[7][Qe[5]];pD=pD+0X01;pD=pD+0x1;pD=pD+0X00001;LD[uc]=LD[uc](LD[uc+0x0001]);aD=uc;Qe=Sm[pD];pD=pD+1;(oD)[Qe[0X2]]=LD[0Xb];do Qe=Sm[pD];end;do pD=pD+1;end;pD=Qe[6];end;end;else if ue==0X013 then do if not(not(LD[Qe[6]]<=LD[Qe[1]]))then else pD=Qe[7];end;end;else LD[3]=oD[Qe[2]];pD=pD+0x1;pD=pD+1;Qe=Sm[pD];pD=pD+1;do LD[3]=LD[0X3][Qe[0X0005]];end;pD=pD+1;pD=pD+1;Qe=Sm[pD];pD=pD+0X1;LD[3]=LD[3][Qe[5]];Qe=Sm[pD];do pD=pD+0X1;end;(LD)[3]=LD[3][Qe[5]];pD=pD+1;pD=pD+1;do Qe=Sm[pD];end;do pD=pD+0x001;end;pD=Qe[0X006];end;end;else if not(ue>=0Xe)then(LD)[5]=oD[Qe[0X002]];pD=pD+0X1;pD=pD+0X1;Qe=Sm[pD];pD=pD+1;LD[0X5]=LD[5][Qe[5]];Qe=Sm[pD];pD=pD+1;do(LD)[0X6]=Qe[0X2];end;do Qe=Sm[pD];end;do pD=pD+1;end;do(LD)[0x07]=Qe[2];end;Qe=Sm[pD];pD=pD+1;(LD)[0X8]=Qe[2];pD=pD+1;local Lg=5;aD=Lg+0x00004-0X00001;LD[Lg]=LD[Lg](f(LD,Lg+1,aD));aD=Lg;do pD=pD+0X1;end;pD=pD+0X1;Qe=Sm[pD];pD=pD+0x1;do oD[Qe[0X2]]=LD[0X5];end;Qe=Sm[pD];do pD=pD+0x1;end;do pD=Qe[6];end;else if ue==0XF then(LD)[2]=oD[Qe[2]];do Qe=Sm[pD];end;pD=pD+1;LD[0X2]=LD[0x2][Qe[0X00005]];pD=pD+0X0001;pD=pD+1;pD=pD+1;do aD=2;end;LD[aD]();aD=aD-0X0001;pD=pD+0x1;do pD=pD+1;end;Qe=Sm[pD];pD=pD+0X01;LD[2]=oD[Qe[2]];do Qe=Sm[pD];end;pD=pD+0X01;LD[0X2]=LD[0X2][Qe[5]];pD=pD+1;pD=pD+1;pD=pD+1;(LD)[0X003]=LD[0X00];Qe=Sm[pD];pD=pD+1;if not(LD[3])then else pD=Qe[6];end;else LD[0X0000B]=LD[0X0007][Qe[5]];pD=pD+1;pD=pD+1;do Qe=Sm[pD];end;pD=pD+1;oD[Qe[0X02]]=LD[0XB];Qe=Sm[pD];pD=pD+0X01;(LD)[0X0000B]=oD[Qe[0x002]];do Qe=Sm[pD];end;pD=pD+1;(LD)[11]=LD[0Xb][Qe[5]];pD=pD+1;pD=pD+1;Qe=Sm[pD];pD=pD+0X01;LD[0Xc]=LD[0X07][Qe[5]];local Kw=0x00B;pD=pD+0X001;pD=pD+1;pD=pD+0X00001;do LD[Kw]=LD[Kw](LD[Kw+0X1]);end;aD=Kw;do pD=pD+1;end;pD=pD+1;Qe=Sm[pD];pD=pD+0x1;do(oD)[Qe[2]]=LD[11];end;Qe=Sm[pD];pD=pD+0x00001;do pD=Qe[6];end;end;end;end;end;end;end;else if ue<40 then if not(ue>=33)then if ue>=0X01E then if ue<31 then do(LD)[5]=oD[Qe[2]];end;Qe=Sm[pD];pD=pD+0X0001;do LD[0X6]=LD[0X4][Qe[0X5]];end;Qe=Sm[pD];pD=pD+1;do LD[6]=LD[6][Qe[5]];end;do Qe=Sm[pD];end;pD=pD+0X1;if LD[5]~=LD[0x6]then pD=Qe[7];end;else if ue==32 then do LD[0X9]=LD[0X7][Qe[0X005]];end;pD=pD+1;pD=pD+0x1;Qe=Sm[pD];pD=pD+1;if not(LD[9])then else pD=Qe[0x6];end;else(LD)[13]=LD[0x0000c][Qe[5]];pD=pD+0x1;do LD[0Xd]=LD[2]-LD[13];end;Qe=Sm[pD];pD=pD+0X1;if not(LD[13]<LD[0X03])then pD=Qe[0X7];end;end;end;else if not(ue>=28)then do LD[Qe[0x7]]=LD[Qe[6]][Qe[0X5]];end;else if ue==29 then local y_=Qe[0X007];local h_,Y_=Qe[6],(Qe[1]);if h_~=0X0000 then aD=y_+h_-0X01;end;local E_,q_=nil,nil;if h_~=0X001 then do E_,q_=eH(LD[y_](f(LD,y_+1,aD)));end;else E_,q_=eH(LD[y_]());end;if Y_~=0X1 then do if Y_==0X0 then do E_=E_+y_-0X1;end;do aD=E_;end;else E_=y_+Y_-0X2;aD=E_+0x1;end;end;local s4=(0);for eu=y_,E_ do s4=s4+1;do LD[eu]=q_[s4];end;end;else aD=y_-0x01;end;else LD[5]=oD[Qe[0x2]];do pD=pD+0X1;end;do pD=pD+1;end;Qe=Sm[pD];pD=pD+0X00001;LD[5]=LD[5][Qe[5]];Qe=Sm[pD];pD=pD+0X0001;(LD)[0X006]=Qe[0X002];Qe=Sm[pD];pD=pD+0X001;LD[7]=Qe[0x2];Qe=Sm[pD];pD=pD+0X00001;(LD)[8]=Qe[0X2];pD=pD+0X001;local jP=5;aD=jP+0X004-0X01;(LD)[jP]=LD[jP](f(LD,jP+0X01,aD));do aD=jP;end;Qe=Sm[pD];pD=pD+0X001;do(oD)[Qe[2]]=LD[5];end;Qe=Sm[pD];pD=pD+0X1;pD=Qe[0X06];end;end;end;elseif ue<0x24 then if not(ue>=34)then(LD)[8]=oD[Qe[0X002]];do Qe=Sm[pD];end;pD=pD+1;oD[Qe[0X0002]]=LD[8];Qe=Sm[pD];pD=pD+1;LD[0x8]=oD[Qe[0X0002]];pD=pD+1;pD=pD+1;pD=pD+0X1;local Jv=(8);LD[0X9]=LD[0x6];pD=pD+0X0001;LD[Jv]=LD[Jv](LD[Jv+0X00001]);aD=Jv;do Qe=Sm[pD];end;pD=pD+0X00001;(oD)[Qe[0X2]]=LD[8];Qe=Sm[pD];do pD=pD+0x00001;end;LD[0X08]=oD[Qe[2]];Qe=Sm[pD];do pD=pD+0X1;end;LD[0X00008]=LD[0X008][Qe[5]];Qe=Sm[pD];pD=pD+1;LD[9]=LD[0x7][Qe[0X05]];Qe=Sm[pD];do pD=pD+1;end;(LD)[10]=oD[Qe[0X2]];do pD=pD+0X1;end;pD=pD+0X001;pD=pD+1;Jv=0X8;do LD[Jv]=LD[Jv](LD[Jv+0x0001],LD[Jv+0X2]);end;do aD=Jv;end;pD=pD+0X001;pD=pD+1;Qe=Sm[pD];do pD=pD+0X1;end;do(oD)[Qe[0X2]]=LD[8];end;Qe=Sm[pD];pD=pD+1;(LD)[0X8]=LD[0X7][Qe[5]];pD=pD+1;do pD=pD+1;end;Qe=Sm[pD];do pD=pD+0x1;end;oD[Qe[0x2]]=LD[0X8];Qe=Sm[pD];pD=pD+0X01;pD=Qe[6];else if ue~=0x23 then LD[0xb]=LD[0X04][Qe[0X5]];do pD=pD+1;end;pD=pD+1;Qe=Sm[pD];do pD=pD+0X00001;end;do LD[0Xc]=oD[Qe[0X2]];end;Qe=Sm[pD];pD=pD+0X00001;LD[12]=LD[0xC][Qe[5]];Qe=Sm[pD];do pD=pD+0X01;end;(LD)[13]=LD[0x07][Qe[5]];pD=pD+1;local uA=(12);do(LD)[uA]=LD[uA](LD[uA+1]);end;aD=uA;pD=pD+1;pD=pD+1;Qe=Sm[pD];pD=pD+1;do(LD[0xB])[Qe[2]]=LD[0XC];end;Qe=Sm[pD];pD=pD+0X00001;(LD)[11]=LD[4][Qe[5]];pD=pD+1;pD=pD+0x1;do Qe=Sm[pD];end;pD=pD+0X1;do(LD)[12]=LD[7][Qe[5]];end;do pD=pD+1;end;pD=pD+0X1;do Qe=Sm[pD];end;do pD=pD+0X1;end;do LD[11][Qe[0X2]]=LD[12];end;Qe=Sm[pD];pD=pD+0X01;do pD=Qe[0X0006];end;else local lY=Qe[0X007];local yY,EY=LD[lY]();if yY then pD=Qe[0x00006];LD[lY+0X3]=EY;end;end;end;else if ue<0X26 then if ue~=0X025 then(LD)[Qe[0X7]]=Qe[2];else(LD)[0x005]=Qe[2];local fl=(5);Qe=Sm[pD];do pD=pD+0X1;end;local ll=(LD[0X5]);(LD)[fl+1]=ll;LD[fl]=ll[Qe[5]];do Qe=Sm[pD];end;pD=pD+1;(LD)[7]=oD[Qe[2]];do pD=pD+1;end;pD=pD+0X001;pD=pD+0x1;do fl=0X5;end;LD[fl]=LD[fl](LD[fl+1],LD[fl+0X002]);do aD=fl;end;do Qe=Sm[pD];end;do pD=pD+0X1;end;if LD[0X5]then pD=Qe[6];end;end;else if ue==39 then LD[13]=LD[12][Qe[5]];Qe=Sm[pD];pD=pD+1;local WW=(14);(LD)[0X000e]=oD[Qe[2]];do Qe=Sm[pD];end;pD=pD+1;do LD[0XE]=LD[0Xe][Qe[5]];end;Qe=Sm[pD];pD=pD+1;LD[15]=LD[12][Qe[5]];do Qe=Sm[pD];end;pD=pD+1;(LD)[16]=oD[Qe[2]];do pD=pD+1;end;LD[WW]=LD[WW](LD[WW+1],LD[WW+2]);do aD=WW;end;pD=pD+0X00001;pD=pD+1;do pD=pD+1;end;(LD)[13]=LD[13][LD[14]];Qe=Sm[pD];pD=pD+1;if LD[13]~=Qe[0X5]then else pD=Qe[7];end;else local iB,BB=Qe[7],Qe[0X6];aD=iB+BB-1;repeat local Fl,Hl=Cm,LD;if#Fl>0X0000 then local uE={};for gU,BU in I,Fl do for iY,dY in I,BU do if not(dY[1]==Hl and dY[2]>=0)then else local Rt=dY[0X02];if not(not uE[Rt])then else(uE)[Rt]={Hl[Rt]};end;dY[1]=uE[Rt];(dY)[0X002]=0X01;end;end;end;end;until true;do return true,iB,BB;end;end;end;end;else if not(ue>=47)then if not(ue>=0X2B)then if ue<0X29 then if not LD[Qe[7]]then pD=Qe[0X6];end;else do if ue==0X2A then do(LD)[5]=oD[Qe[2]];end;do Qe=Sm[pD];end;pD=pD+1;LD[5]=LD[0X5][Qe[0X005]];Qe=Sm[pD];do pD=pD+0X00001;end;do(LD)[6]=Qe[0X2];end;Qe=Sm[pD];do pD=pD+0X00001;end;LD[0x7]=Qe[2];Qe=Sm[pD];local CJ=(5);pD=pD+0x1;(LD)[0x8]=Qe[2];pD=pD+1;do aD=CJ+0X4-1;end;(LD)[CJ]=LD[CJ](f(LD,CJ+0X1,aD));aD=CJ;do pD=pD+0x0001;end;pD=pD+0X01;do Qe=Sm[pD];end;pD=pD+0X1;oD[Qe[0x2]]=LD[0X0005];do Qe=Sm[pD];end;pD=pD+0x1;pD=Qe[6];else(LD)[11]=LD[4][Qe[5]];Qe=Sm[pD];pD=pD+1;(LD)[11]=LD[0x0b][Qe[0x5]];do pD=pD+1;end;pD=pD+0X1;Qe=Sm[pD];pD=pD+0X0001;if LD[10]==LD[0X000B]then else pD=Qe[0X0007];end;end;end;end;else if ue<0X002D then do if ue==0X2C then(LD)[0X00005]=oD[Qe[2]];pD=pD+1;pD=pD+1;do Qe=Sm[pD];end;pD=pD+1;(LD)[6]=oD[Qe[2]];local sP=(0X005);Qe=Sm[pD];pD=pD+0X1;(LD)[7]=oD[Qe[2]];local uP=4;pD=pD+1;LD[0x6]=LD[0X0006][LD[0X7]];pD=pD+1;local zP=0X00002;if zP==0x0 then else aD=sP+zP-1;end;local AP,VP=nil,nil;do if zP==1 then AP,VP=eH(LD[sP]());else AP,VP=eH(LD[sP](f(LD,sP+1,aD)));end;end;do if uP==0X00001 then aD=sP-0X0001;else if uP==0 then AP=AP+sP-0X1;aD=AP;else AP=sP+uP-0x2;aD=AP+0x1;end;local cl=0X0;for fK=sP,AP do cl=cl+1;(LD)[fK]=VP[cl];end;end;end;pD=pD+1;pD=pD+0X1;Qe=Sm[pD];pD=pD+1;sP=5;local YP=r(function(...)(C)();for Go,vo in...do C(true,Go,vo);end;end);YP(LD[sP],LD[sP+0X1],LD[sP+2]);aD=sP;(LD)[sP]=YP;pD=Qe[6];else(LD)[0Xb]=oD[Qe[0X00002]];pD=pD+1;pD=pD+1;Qe=Sm[pD];pD=pD+1;if LD[10]==LD[11]then else pD=Qe[0x07];end;end;end;else if ue~=46 then LD[Qe[0X7]]=j(LD[Qe[0X0006]],LD[Qe[0x1]]);else(LD)[4]=oD[Qe[0X2]];Qe=Sm[pD];local PC=(2);pD=pD+0X1;LD[0X05]=oD[Qe[0X02]];pD=pD+0X1;pD=pD+1;do pD=pD+1;end;aD=PC+0X4-1;do LD[PC]=LD[PC](f(LD,PC+0X0001,aD));end;aD=PC;do pD=pD+0X1;end;pD=pD+0X01;Qe=Sm[pD];pD=pD+0X1;(LD)[3]=Qe[2]/Qe[0X5];do pD=pD+0X01;end;(LD)[4]={};pD=pD+1;LD[5]=nil;do Qe=Sm[pD];end;pD=pD+1;do oD[Qe[2]]=LD[5];end;do Qe=Sm[pD];end;pD=pD+0X1;(LD)[5]=oD[Qe[0X00002]];do pD=pD+1;end;do pD=pD+0x00001;end;Qe=Sm[pD];local oC=(2);pD=pD+1;(LD)[0x6]=oD[Qe[0X2]];pD=pD+1;PC=0x5;local AC=(4);if oC==0 then else do aD=PC+oC-0X00001;end;end;local jC,DC=nil,nil;do if oC~=0X1 then jC,DC=eH(LD[PC](f(LD,PC+0X01,aD)));else do jC,DC=eH(LD[PC]());end;end;end;if AC==0X1 then do aD=PC-1;end;else if AC==0X0 then jC=jC+PC-1;do aD=jC;end;else jC=PC+AC-2;aD=jC+0X01;end;local Be=(0X0);for aU=PC,jC do do Be=Be+1;end;do(LD)[aU]=DC[Be];end;end;end;pD=pD+0X0001;pD=pD+1;Qe=Sm[pD];pD=pD+1;PC=0x05;local UC=r(function(...)C();for ea,La in...do C(true,ea,La);end;end);(UC)(LD[PC],LD[PC+0X001],LD[PC+2]);aD=PC;LD[PC]=UC;pD=Qe[0X6];end;end;end;else if ue>=0X32 then if ue>=0X000034 then if ue~=0X35 then do if not(LD[Qe[6]]<Qe[5])then pD=Qe[0x007];end;end;else LD[8]=Qe[2];pD=pD+1;LD[9]=#LD[0X007];Qe=Sm[pD];do pD=pD+1;end;LD[10]=Qe[0X02];local GY=(8);Qe=Sm[pD];pD=pD+0X1;local zY,kY,yY=LD[GY],LD[GY+0x1],(LD[GY+2]);do LD[GY]=r(function()do for LF=zY,kY,yY do(C)(true,LF);end;end;end);end;pD=Qe[0X6];end;else if ue~=0X33 then local yU=(LD[Qe[0X00006]]/LD[Qe[0X1]]);(LD)[Qe[7]]=yU-yU%1;else LD[5]=oD[Qe[2]];do pD=pD+1;end;do pD=pD+0X01;end;Qe=Sm[pD];pD=pD+1;do if LD[5]==Qe[5]then else pD=Qe[7];end;end;end;end;else if ue>=48 then if ue==0X000031 then do if LD[Qe[7]]then pD=Qe[6];end;end;else(LD)[5]=oD[Qe[0X0002]];Qe=Sm[pD];do pD=pD+1;end;do(LD)[0X006]=oD[Qe[2]];end;do Qe=Sm[pD];end;do pD=pD+1;end;LD[6]=LD[0X6][Qe[5]];do pD=pD+0X01;end;pD=pD+0X1;Qe=Sm[pD];do pD=pD+1;end;LD[0x6]=LD[6][Qe[0X5]];pD=pD+1;local bx=(0X0004);pD=pD+0x1;pD=pD+1;local dx=(0X005);local mx=2;if mx~=0 then aD=dx+mx-1;end;local Gx,Ox=nil,(nil);if mx==0X1 then do Gx,Ox=eH(LD[dx]());end;else Gx,Ox=eH(LD[dx](f(LD,dx+0X001,aD)));end;if bx==1 then aD=dx-0X1;else if bx==0 then Gx=Gx+dx-0X001;aD=Gx;else do Gx=dx+bx-0x2;end;aD=Gx+0X001;end;local MW=0;for lv=dx,Gx do MW=MW+0X1;LD[lv]=Ox[MW];end;end;Qe=Sm[pD];pD=pD+1;dx=5;local Px=(r(function(...)(C)();do for SU,XU in...do C(true,SU,XU);end;end;end));(Px)(LD[dx],LD[dx+1],LD[dx+2]);aD=dx;LD[dx]=Px;pD=Qe[0X06];end;else local dn=(Zm[Qe[0X6]]);local gn,Vn=dn[3],nil;local Pn=#gn;do if not(Pn>0x000)then else Vn={};for ld=1,Pn do local hd=gn[ld];do if hd[0x1]~=0X0 then(Vn)[ld-0X1]=bm[hd[2]];else(Vn)[ld-1]={LD,hd[0X002]};end;end;end;M(Cm,Vn);end;end;LD[Qe[7]]=dH(dn,Vn,oD);end;end;end;end;end;end;until false;end;end);if DD then if WD then if sD~=1 then do return LD[QD](f(LD,QD+1,aD));end;else do return LD[QD]();end;end;elseif QD then return f(LD,QD,sD);end;elseif e(WD)~="\str\ing"then V(WD,0);else do if not(p(WD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if p(WD,'\^\.-\:\%d\+:\ ')then(V)("Luraph Script:"..(Dm[pD-1]or"(internal)")..": "..v(WD),0);else V(WD,0);end;end;end;else do Km=function(...)local a9=1;local G9={};local O9=(K());local C9=0;local T9,z9=eH(...);local N9,r9=(O9==g and Qm or O9),{[2]=G9,[1]=Xm};T9=T9-0X01;for Yd=0,T9 do do if km>Yd then do G9[Yd]=z9[Yd+0x1];end;else break;end;end;end;do if not Lm then z9=nil;else if Um then(G9)[km]={n=T9>=km and T9-km+1 or 0,f(z9,km+1,T9+1)};end;end;end;if N9==O9 then else w(Km,N9);end;local s9,q9,j9,F9=o(function()repeat local v6=Sm[a9];local A6=(v6[4]);do a9=a9+0x1;end;do if A6<0XB then if not(A6<5)then if not(A6<0x8)then if not(A6<9)then if A6==0Xa then local ag=(Zm[v6[6]]);local Zg,Og=ag[0X3],nil;local xg=#Zg;if xg>0X0 then Og={};for ur=1,xg do local br=(Zg[ur]);if br[1]==0 then(Og)[ur-0X001]={G9,br[0x2]};else(Og)[ur-0X001]=bm[br[2]];end;end;(M)(Cm,Og);end;(G9)[v6[0x7]]=dH(ag,Og,N9);else do repeat local mH,aH=Cm,G9;if not(#mH>0)then else local PX=({});do for t4,j4 in I,mH do do for xb,vb in I,j4 do do if vb[1]==aH and vb[2]>=0X0 then local g9=(vb[2]);if not(not PX[g9])then else PX[g9]={aH[g9]};end;do(vb)[1]=PX[g9];end;(vb)[0X2]=0x1;end;end;end;end;end;end;end;until 0.08726839203299164;end;do return;end;end;else(G9)[v6[7]]=G9[v6[0X00006]]>G9[v6[1]];end;else if not(A6<0X006)then if A6==0X7 then do a9=v6[6];end;else do(G9)[v6[7]]=N9[v6[2]];end;end;else(G9)[0X0000]=N9[v6[0x02]];v6=Sm[a9];a9=a9+0X1;G9[0]=G9[0X0][v6[5]];a9=a9+0X1;a9=a9+1;v6=Sm[a9];a9=a9+0X1;a9=v6[6];end;end;else if not(A6<0X2)then do if not(A6>=0X3)then if not(not G9[v6[0x0007]])then else a9=v6[0X00006];end;elseif A6~=0X4 then local E6=v6[0X0007];local I6=(r(function(...)(C)();for sq,vq,pq,Tq,hq,fq,zq,mq,eq,tq in...do(C)(true,{sq,vq,pq,Tq,hq,fq,zq,mq,eq,tq});end;end));(I6)(G9[E6],G9[E6+1],G9[E6+0X2]);C9=E6;do G9[E6]=I6;end;a9=v6[0X6];else(G9)[0X0]=N9[v6[0x2]];a9=a9+1;a9=a9+1;v6=Sm[a9];a9=a9+0X1;(G9)[0X000]=G9[0X00000][v6[5]];a9=a9+1;do G9[0X00000]=not G9[0];end;v6=Sm[a9];a9=a9+1;if not G9[0X0000]then a9=v6[0X0006];end;end;end;else if A6==1 then(G9[v6[7]])[G9[v6[0x6]]]=G9[v6[0X01]];else G9[v6[0x007]]={f({},1,v6[6])};end;end;end;else if A6<0X0010 then do if A6>=0x0000d then if not(A6>=0XE)then(G9)[v6[0X007]]=a(G9[v6[0x0006]]);else if A6~=0XF then(G9)[0]=N9[v6[0X02]];v6=Sm[a9];a9=a9+1;(G9)[1]=N9[v6[2]];a9=a9+1;(G9)[0X0]=G9[0][G9[1]];a9=a9+1;(G9)[0X0]=not G9[0];v6=Sm[a9];a9=a9+0x1;a9=v6[0X6];else(G9)[v6[0X7]]=G9[v6[6]][G9[v6[1]]];end;end;else do if A6==0X000C then if G9[v6[0X00006]]~=G9[v6[0x1]]then else a9=v6[0x07];end;else repeat local M9,v9=Cm,(G9);if#M9>0 then local vY=({});for Kz,Nz in I,M9 do for a2,k2 in I,Nz do if k2[1]==v9 and k2[2]>=0X0 then local tw=k2[0X2];if not vY[tw]then do vY[tw]={v9[tw]};end;end;k2[0x001]=vY[tw];(k2)[0X2]=1;end;end;end;end;until true;local kR=v6[7];return false,kR,kR;end;end;end;end;else if not(A6<0X13)then if not(A6>=20)then else if A6==0x000015 then do if not(G9[v6[0X6]]<=G9[v6[0X0001]])then else a9=v6[0x7];end;end;else G9[v6[0x7]]=G9[v6[6]]/G9[v6[1]];end;end;else if not(A6<17)then do if A6~=18 then(G9)[v6[7]]=v6[0X2];else do(G9)[0]=N9[v6[0X00002]];end;a9=a9+1;a9=a9+0X001;do a9=a9+1;end;C9=0X0;(G9)[C9]=G9[C9]();a9=a9+1;G9[0]=not G9[0];v6=Sm[a9];a9=a9+1;a9=v6[0X06];end;end;else local PQ=(v6[0X0006]);local FQ=(G9[PQ]);for UZ=PQ+0X1,v6[1]do FQ=FQ..G9[UZ];end;G9[v6[0X7]]=FQ;end;end;end;end;end;until false;end);if not(s9)then if e(q9)~="s\116\114\i\110\g"then(V)(q9,0X00000);else do if p(q9,"attempt to yield across metamethod/C%-call boundary")then return coroutine.yield();end;end;if p(q9,"\^\046\-:%d\+:\032")then(V)('\076u\114a\112\h \S\099\114\105p\116\:'..(Dm[a9-1]or"(internal)").."\:\ "..v(q9),0X000);else(V)(q9,0);end;end;else if q9 then if F9==0X1 then return G9[j9]();else return G9[j9](f(G9,j9+1,C9));end;elseif not(j9)then else return f(G9,j9,F9);end;end;end;end;end;end;end;else if not(xm>=184)then do Km=function(...)local E6=0X1;local N6=({});local k6=(0);local y6={[2]=N6,[1]=Xm};local G6=K();local L6=((G6==g and Qm or G6));local C6,b6=eH(...);do C6=C6-0X1;end;for Ca=0X0000,C6 do if not(km>Ca)then break;else N6[Ca]=b6[Ca+1];end;end;if not Lm then b6=nil;else if not(Um)then else(N6)[km]={n=C6>=km and C6-km+1 or 0,f(b6,km+1,C6+1)};end;end;if L6==G6 then else(w)(Km,L6);end;local H6,g6,W6,l6=o(function()repeat local yT=Sm[E6];local GT=yT[0X004];do E6=E6+0x00001;end;if GT<0X7 then do if not(GT>=3)then if GT>=1 then do if GT~=0x2 then do repeat local f6,o6=Cm,(N6);if not(#f6>0X0)then else local Au=({});do for wd,Yd in I,f6 do for Yk,Qk in I,Yd do if Qk[1]==o6 and Qk[0x0002]>=0 then local wJ=(Qk[2]);if not Au[wJ]then Au[wJ]={o6[wJ]};end;do Qk[1]=Au[wJ];end;(Qk)[2]=0X001;end;end;end;end;end;until-2010534788;end;return;else end;end;else local jH=Zm[yT[0X6]];local WH=(jH[0x03]);local NH=(nil);local mH=(#WH);if not(mH>0)then else NH={};for Jg=1,mH do local og=(WH[Jg]);if og[1]~=0X0 then NH[Jg-1]=bm[og[2]];else NH[Jg-1]={N6,og[0X2]};end;end;(M)(Cm,NH);end;do N6[yT[7]]=dH(jH,NH,L6);end;end;else if GT>=5 then if GT==0X00006 then local LY=bm[0X0000];(N6)[0X000]=LY[1][LY[2]];E6=E6+0X1;local kY=0;E6=E6+1;do yT=Sm[E6];end;E6=E6+1;local pY=(N6[0X0]);(N6)[kY+0X1]=pY;(N6)[kY]=pY[yT[0X5]];E6=E6+0X1;kY=0X0;(N6)[kY]=N6[kY](N6[kY+1]);k6=kY;do yT=Sm[E6];end;do E6=E6+0X1;end;E6=yT[0x006];else if N6[yT[7]]then E6=yT[6];end;end;else if GT==0X4 then do(N6)[0X0]=L6[yT[0X2]];end;yT=Sm[E6];do E6=E6+0X1;end;N6[0]=N6[0][yT[0X5]];yT=Sm[E6];E6=E6+1;if not(not N6[0])then else E6=yT[6];end;else if N6[yT[6]]==N6[yT[1]]then else E6=yT[7];end;end;end;end;end;else if not(GT>=10)then do if not(GT<0X08)then if GT==9 then do(N6)[yT[7]]={f({},0X1,yT[0X06])};end;else(N6)[yT[0X7]]=yT[0x0002];end;else do N6[yT[7]]=L6[yT[2]];end;end;end;else if GT<0X00c then do if GT==11 then repeat local VJ,AJ=Cm,(N6);if not(#VJ>0)then else local q2=({});for kk,jk in I,VJ do for JP,sP in I,jk do if sP[1]==AJ and sP[0X2]>=0X0 then local d1=sP[0X2];if not q2[d1]then do(q2)[d1]={AJ[d1]};end;end;(sP)[0X1]=q2[d1];(sP)[2]=0X1;end;end;end;end;until true;local VN=yT[7];return false,VN,VN;else do(N6)[yT[7]]=a(N6[yT[6]]);end;end;end;else do if GT==0XD then N6[yT[0X7]]=yT[0X00002];else E6=yT[0X00006];end;end;end;end;end;until false;end);do if not(H6)then do if e(g6)=="string"then if not(p(g6,"\097\116\116\101\mp\116\ t\111\ yi\101\ld\032across\032\109\eta\m\et\ho\d/\C\%\-\099\097l\l\032b\111un\da\114y"))then else do return coroutine.yield();end;end;do if not(p(g6,'\^\046\-\058%\d\043\058 '))then(V)(g6,0X0);else V("Luraph Script:"..(Dm[E6-1]or"(in\116e\114\110\097\l)")..'\: '..v(g6),0);end;end;else(V)(g6,0);end;end;else if g6 then if l6==0X1 then return N6[W6]();else do return N6[W6](f(N6,W6+0X0001,k6));end;end;else if W6 then do return f(N6,W6,l6);end;end;end;end;end;end;end;else if xm~=0XB9 then do Km=function(...)local a4={};local N4=0X01;local X4=K();local v4=(0X0);local d4=({[2]=a4,[1]=Xm});local U4=(X4==g and Qm or X4);local y4,c4=eH(...);y4=y4-0X1;for HL=0,y4 do if not(km>HL)then do break;end;else a4[HL]=c4[HL+0x1];end;end;if not Lm then c4=nil;else if Um then a4[km]={n=y4>=km and y4-km+0X1 or 0,f(c4,km+0X01,y4+1)};end;end;if U4==X4 then else(w)(Km,U4);end;local G4,A4,D4,P4=o(function()do while-0X0003DFF3DC7 do local S0=Sm[N4];local j0=(S0[4]);do N4=N4+0X1;end;if j0<10 then if j0<5 then if j0<0X0002 then if j0~=1 then do(a4)[7]=U4[S0[0X2]];end;N4=N4+1;local mh=(0x07);N4=N4+1;N4=N4+0X1;(a4)[8]=a4[0];S0=Sm[N4];do N4=N4+1;end;do a4[9]=a4[0X06][S0[0X5]];end;N4=N4+0X1;(a4)[0XA]=true;do N4=N4+1;end;v4=mh+0X04-1;a4[mh]=a4[mh](f(a4,mh+0X1,v4));v4=mh;N4=N4+1;N4=N4+0x01;S0=Sm[N4];N4=N4+1;a4[8]=a4[0X6][S0[5]];N4=N4+0X1;N4=N4+1;S0=Sm[N4];do N4=N4+0x1;end;(a4)[0X00008]=a4[8][S0[0X00005]];S0=Sm[N4];N4=N4+0x1;a4[0X0008]=a4[8][S0[0x00005]];N4=N4+1;N4=N4+0X01;do S0=Sm[N4];end;N4=N4+1;do(a4)[0X8]=a4[0X8]/S0[5];end;S0=Sm[N4];do N4=N4+0X1;end;(a4)[0X8]=a4[0X008]+S0[5];do S0=Sm[N4];end;N4=N4+1;do if not(not(a4[7]<=a4[8]))then else N4=S0[7];end;end;else local q4=(S0[7]);local Y4,I4,u4=a4[q4]();if Y4 then do a4[q4+0X01]=I4;end;do(a4)[q4+2]=u4;end;do N4=S0[6];end;end;end;else do if not(j0>=3)then do if not a4[S0[7]]then N4=S0[0X6];end;end;else if j0~=4 then(a4)[7]=a4[6][S0[0X5]];N4=N4+0X0001;N4=N4+1;S0=Sm[N4];do N4=N4+0X1;end;(a4)[7]=a4[7][S0[5]];N4=N4+1;do N4=N4+0X0001;end;S0=Sm[N4];N4=N4+1;a4[0x007]=a4[7][S0[5]];do N4=N4+0X1;end;do N4=N4+0X1;end;do S0=Sm[N4];end;do N4=N4+1;end;if not(a4[0X3]<a4[7])then N4=S0[0X07];end;else for q0=S0[0X7],S0[6]do a4[q0]=nil;end;end;end;end;end;else if not(j0<0X7)then if not(j0<8)then if j0~=0X09 then do a4[S0[0X007]]={f({},0X0001,S0[0x006])};end;else(a4)[0X7]=a4[0X06][S0[5]];do N4=N4+1;end;N4=N4+0x1;do S0=Sm[N4];end;do N4=N4+1;end;do a4[7]=a4[0X7][S0[0x005]];end;N4=N4+0X0001;N4=N4+0x01;S0=Sm[N4];N4=N4+1;a4[7]=a4[0X0007][S0[5]];N4=N4+0x00001;do(a4)[3]=a4[0x007];end;N4=N4+1;a4[7]=a4[6];N4=N4+0x1;do(a4)[0X2]=a4[0X7];end;S0=Sm[N4];N4=N4+0X01;N4=S0[6];end;else(a4)[S0[0X00007]]=a4[S0[6]]^a4[S0[1]];end;else if j0==6 then do(a4)[4]=U4[S0[0X002]];end;N4=N4+1;(a4)[0X5]=a4[0];do S0=Sm[N4];end;local dx=4;N4=N4+0X1;(a4)[0X6]=a4[1][S0[0x0005]];N4=N4+0x001;N4=N4+0X1;N4=N4+0X00001;(a4)[7]=true;N4=N4+1;v4=dx+0x04-1;a4[dx]=a4[dx](f(a4,dx+1,v4));v4=dx;N4=N4+0x1;do N4=N4+0X1;end;S0=Sm[N4];N4=N4+0X00001;do(a4)[0X005]=a4[0X1][S0[0X5]];end;do N4=N4+1;end;N4=N4+1;S0=Sm[N4];N4=N4+0X001;a4[5]=a4[0X005][S0[0X5]];N4=N4+0x1;N4=N4+1;S0=Sm[N4];N4=N4+0x1;(a4)[5]=a4[0X5][S0[5]];do N4=N4+0x001;end;N4=N4+0X1;S0=Sm[N4];N4=N4+1;do a4[0X00005]=a4[5]/S0[5];end;S0=Sm[N4];N4=N4+1;a4[5]=a4[5]+S0[0X5];N4=N4+1;(a4)[4]=a4[4]<=a4[0x5];S0=Sm[N4];N4=N4+1;do if not(not a4[4])then else N4=S0[6];end;end;else a4[S0[0x7]]=a4[S0[6]];end;end;end;elseif j0>=0Xf then if not(j0>=0X12)then if not(j0>=0x10)then local HA,KA=Zm[S0[0X6]],(nil);local gA=HA[3];local FA=#gA;do if not(FA>0X00)then else KA={};for uD=0X0001,FA do local yD=(gA[uD]);do if yD[1]~=0x0 then KA[uD-0X1]=bm[yD[0X2]];else do KA[uD-0X1]={a4,yD[2]};end;end;end;end;(M)(Cm,KA);end;end;(a4)[S0[7]]=dH(HA,KA,U4);else do if j0~=17 then(a4)[S0[0x7]]=S0[0X2];else(a4)[0X00004]=U4[S0[2]];S0=Sm[N4];do N4=N4+0x1;end;local zS=(2);a4[0X5]=U4[S0[0X2]];local gS=0X005;do N4=N4+1;end;N4=N4+0X1;S0=Sm[N4];do N4=N4+1;end;local dS=a4[0X005];(a4)[gS+0X0001]=dS;a4[gS]=dS[S0[0X0005]];N4=N4+1;do gS=0X5;end;local xS=(0);if zS~=0 then v4=gS+zS-0X00001;end;local PS,eS=nil,(nil);if zS~=1 then PS,eS=eH(a4[gS](f(a4,gS+0x1,v4)));else PS,eS=eH(a4[gS]());end;if xS==0X1 then v4=gS-1;else if xS~=0x0 then PS=gS+xS-0X02;v4=PS+1;else PS=PS+gS-1;do v4=PS;end;end;local Hg=0x0;for am=gS,PS do do Hg=Hg+1;end;a4[am]=eS[Hg];end;end;do N4=N4+0X1;end;do gS=4;end;zS=0x00000;xS=4;if zS~=0 then v4=gS+zS-0X1;end;PS,eS=nil;do if zS~=1 then PS,eS=eH(a4[gS](f(a4,gS+1,v4)));else PS,eS=eH(a4[gS]());end;end;if xS==0x1 then v4=gS-0x01;else if xS==0 then PS=PS+gS-0X001;v4=PS;else PS=gS+xS-0X2;do v4=PS+0X001;end;end;local E3=0x0;for S9=gS,PS do do E3=E3+0X0001;end;do a4[S9]=eS[E3];end;end;end;N4=N4+1;N4=N4+0X1;S0=Sm[N4];do N4=N4+1;end;gS=4;local TS=r(function(...)C();for Fp,Ip in...do C(true,Fp,Ip);end;end);(TS)(a4[gS],a4[gS+1],a4[gS+0X2]);v4=gS;a4[gS]=TS;N4=S0[0x00006];end;end;end;else do if j0<19 then a4[S0[0X7]]=#a4[S0[6]];else if j0~=20 then(a4)[S0[7]]=not a4[S0[6]];else do(a4)[S0[0x00007]]=a4[S0[6]]>a4[S0[0X1]];end;end;end;end;end;else if not(j0<0XC)then if not(j0>=13)then(a4)[S0[7]]=U4[S0[0X0002]];else do if j0==14 then else repeat local dn,Kn=Cm,(a4);if not(#dn>0)then else local d_=({});for Xi,bi in I,dn do for qD,OD in I,bi do if OD[1]==Kn and OD[0x002]>=0 then local pc=OD[0X2];if not d_[pc]then do(d_)[pc]={Kn[pc]};end;end;(OD)[1]=d_[pc];do(OD)[0X2]=0X01;end;end;end;end;end;until true;return;end;end;end;else if j0==11 then repeat local V3,y3=Cm,a4;if#V3>0 then local Jh=({});for hf,Ff in I,V3 do do for E1,q1 in I,Ff do do if q1[0X001]==y3 and q1[2]>=0X0 then local fE=(q1[2]);if not Jh[fE]then do(Jh)[fE]={y3[fE]};end;end;(q1)[0x1]=Jh[fE];q1[0x2]=0X1;end;end;end;end;end;end;until true;local ku=(S0[0X0007]);return false,ku,ku;else N4=S0[6];end;end;end;end;end;end);if not(G4)then if e(A4)~="string"then V(A4,0);else if p(A4,'\097t\116\e\m\112\116\ t\o\032y\105el\d\032a\099\114\o\s\s\ \me\116\097\m\e\116\h\o\d\/C\%-c\097\ll\ b\o\117n\100\097\114\121')then return coroutine.yield();end;if not(p(A4,"^.-:%d+: "))then V(A4,0);else(V)("\L\117\114\097\p\h\ \S\c\114\105\112t\058"..(Dm[N4-0X1]or"(internal)")..'\058\ '..v(A4),0);end;end;else do if A4 then do if P4==0X01 then return a4[D4]();else return a4[D4](f(a4,D4+1,v4));end;end;else if not(D4)then else return f(a4,D4,P4);end;end;end;end;end;end;else Km=function(...)local wj,Dj=0X01,({});local ij={[2]=Dj,[1]=Xm};local xj=K();local kj,Tj=eH(...);kj=kj-1;local uj=(xj==g and Qm or xj);for z6=0X00000,kj do if not(km>z6)then do break;end;else(Dj)[z6]=Tj[z6+0X0001];end;end;if not Lm then Tj=nil;else if not(Um)then else Dj[km]={n=kj>=km and kj-km+1 or 0,f(Tj,km+1,kj+0X001)};end;end;if uj==xj then else(w)(Km,uj);end;local lj=0X00;repeat local Ip=(Sm[wj]);local cp=(Ip[4]);wj=wj+0X00001;return(function(C,p,...)local z=C[0];local x=z:split(" ");for w=#x,1,-1.0 do if x[w]:sub(1,1)=="["then table.remove(x,w);table.remove(x,w);end;end;return table.concat(x," ");end)(Dj,bm,...);until false;end;end;end;end;end;end;end;end;end;end;end;end;end;w(Km,Qm);return Km;end;lH=3;continue;else oH=function(Zg)local og,Cg=nil,(nil);do for DR=0,1 do if DR~=0 then do Cg="";end;else og=q();end;end;end;local Tg=0X0001;do while Tg<2 do if Tg~=0 then for p0=1,og,0X1F3d do local N0=p0+7997-0X1;if N0>og then N0=og;end;local O0=(nil);for lo=0X0,2 do if not(lo<=0X0)then if lo==1 then for LO=1,#O0 do O0[LO]=S(O0[LO],HH);do HH=(Zg*HH+173)%256;end;end;else do Cg=Cg..A(f(O0));end;end;else O0={d(k,T+p0-0X01,T+N0-1)};end;end;end;Tg=0;do continue;end;else T=T+og;Tg=0X2;continue;end;end;end;do return Cg;end;end;lH=4;end;end;end;end;end;local UH=(AH());lH=0;do repeat if lH<=0x0 then JH[0X0002]=vH;lH=0x02;continue;else if lH~=0X1 then vH=nil;lH=0x01;continue;else return dH(UH,nil,g)(...);end;end;until false;end;end)(coroutine,tonumber,false,bit32.bxor,-0X6B784568,rawget,next,bit32.rshift,bit32.band,string.gsub,3,bit32,bit32.bor,0Xb,select,string,0X14,true,coroutine.yield,tostring,rawset,nil,0xa,130,string.match,"<d",table.insert,6,1,unpack,2,8,{0X009257,2936519620,997312190,1935437810,425601111,3040245279,0X002df433cE,0X067e0FdeF,740139292},...);end;
