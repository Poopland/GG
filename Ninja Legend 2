local lI111IilIliIlI11IIi = assert local IiIIIillllIi1IIliII = select local I1l1iiIi1il11ilIii1 = tonumber local I1i1l1llllil11111iI = unpack local IlIl1ii1lIIlilIii1I = pcall local IIiIIl1I11i1llli1il = setfenv local lI1I1IlIllli1IilIil = setmetatable local lIlII1lI1iil11Iliilll = type local lIlI1IIIilIlIilil1111 = getfenv local iilIl1Iiii1Ii111II1 = tostring local i1ll1iIllillllI1I1l = error local Iiili1Il1liliiii111 = string.sub local i11iIIiI1I1iI1ii1II = string.byte local i11l11iiIillIiIIiiI = string.char local lIlI11lIIiiiIilliiI1I = string.rep local i1liI1iIlIli1lI1ili = string.gsub local iillIIIl1ll1lii1l1l = string.match local i111lIllIlIIi1lI1li = table.insert local iliiliII1l1Illl11Il = i11iIIiI1I1iI1ii1II("<", 1) local lilll111l111lII1l11, lIliliIIIlIiIIiIiiIil = #{470}, #{ 2811, 55, 305, 5390, 3801, 2557, 3707, 3660, 1775, 4071, 6635, 160, 169, 6333, 2752, 5898, 2536, 1927, 2511, 3612, 4927 } + iliiliII1l1Illl11Il + 130990 local II1i111l1II1iIIl1Il = {} local il1iil11liiiiIIIi1I = 1 local iII1lli1ili1liIiI1I, IlliIiIli1IiIIii1l1 local function ii1l11i11Il1lIlI111(lI1I1IIl1IIlliIIIl1, lIl1liliIIiliIlII11Il) local lIlil1iI1IIl11IlliIIl lI1I1IIl1IIlliIIIl1 = i1liI1iIlIli1lI1ili(Iiili1Il1liliiii111(lI1I1IIl1IIlliIIIl1, 5), "..", function(lIlIi11llIi1ll1llll1I) if i11iIIiI1I1iI1ii1II(lIlIi11llIi1ll1llll1I, 2) == 72 then lIlil1iI1IIl11IlliIIl = I1l1iiIi1il11ilIii1(Iiili1Il1liliiii111(lIlIi11llIi1ll1llll1I, 1, 1)) return "" else local Il1IIiIl1I1l1l1IIll = i11l11iiIillIiIIiiI(I1l1iiIi1il11ilIii1(lIlIi11llIi1ll1llll1I, 16)) if lIlil1iI1IIl11IlliIIl then local ll1I1lIllI11IiI1ill = lIlI11lIIiiiIilliiI1I(Il1IIiIl1I1l1l1IIll, lIlil1iI1IIl11IlliIIl) lIlil1iI1IIl11IlliIIl = nil return ll1I1lIllI11IiI1ill else return Il1IIiIl1I1l1l1IIll end end end) local function Il1ll11l1li1I1llIli() local IIIliI11iIl1i1iI1i1 = i11iIIiI1I1iI1ii1II(lI1I1IIl1IIlliIIIl1, il1iil11liiiiIIIi1I, il1iil11liiiiIIIi1I) il1iil11liiiiIIIi1I = il1iil11liiiiIIIi1I + 1 return IIIliI11iIl1i1iI1i1 end local function illII1IlI111Iilll1i() local IIIliI11iIl1i1iI1i1, Il1IIiIl1I1l1l1IIll, ll1I1lIllI11IiI1ill, Iii1i1i1lI1liIl1ili = i11iIIiI1I1iI1ii1II(lI1I1IIl1IIlliIIIl1, il1iil11liiiiIIIi1I, il1iil11liiiiIIIi1I + 3) il1iil11liiiiIIIi1I = il1iil11liiiiIIIi1I + 4 return Iii1i1i1lI1liIl1ili * 16777216 + ll1I1lIllI11IiI1ill * 65536 + Il1IIiIl1I1l1l1IIll * 256 + IIIliI11iIl1i1iI1i1 end local function lIlIlil111lIi1iIl111I(ilIi11i11llIl1ilIil, Illl1lliIlIllIi1ill, lIl1lI1l111llIIIIIlli) if lIl1lI1l111llIIIIIlli then local lIlIil1iI1IlilI111III, lIlli1I11illI11lIli1I = 0, 0 for l1ii1llilIi1i1iiI1i = Illl1lliIlIllIi1ill, lIl1lI1l111llIIIIIlli do lIlIil1iI1IlilI111III = lIlIil1iI1IlilI111III + 2 ^ lIlli1I11illI11lIli1I * lIlIlil111lIi1iIl111I(ilIi11i11llIl1ilIil, l1ii1llilIi1i1iiI1i) lIlli1I11illI11lIli1I = lIlli1I11illI11lIli1I + 1 end return lIlIil1iI1IlilI111III else local illili1lili111lili1 = 2 ^ (Illl1lliIlIllIi1ill - 1) return illili1lili111lili1 <= ilIi11i11llIl1ilIil % (illili1lili111lili1 + illili1lili111lili1) and 1 or 0 end end local function ili11l1Iili1i1li1l1() local IIIliI11iIl1i1iI1i1, Il1IIiIl1I1l1l1IIll = illII1IlI111Iilll1i(), illII1IlI111Iilll1i() if IIIliI11iIl1i1iI1i1 == 0 and Il1IIiIl1I1l1l1IIll == 0 then return 0 end return (-2 * lIlIlil111lIi1iIl111I(Il1IIiIl1I1l1l1IIll, 32) + 1) * 2 ^ (lIlIlil111lIi1iIl111I(Il1IIiIl1I1l1l1IIll, 21, 31) - 1023) * ((lIlIlil111lIi1iIl111I(Il1IIiIl1I1l1l1IIll, 1, 20) * 4294967296 + IIIliI11iIl1i1iI1i1) / 4503599627370496 + 1) end local lIl1lI1lIiilI111I11lI = bit or bit32 local lIlIli11IilIIl11i1i1I = lIl1lI1lIiilI111I11lI and lIl1lI1lIiilI111I11lI.bxor or function(IIIliI11iIl1i1iI1i1, Il1IIiIl1I1l1l1IIll) local Illi1l11IIii11111l1 = 1 local ll1I1lIllI11IiI1ill = 0 while IIIliI11iIl1i1iI1i1 > 0 and Il1IIiIl1I1l1l1IIll > 0 do local IiII1Illil11l1iliII = IIIliI11iIl1i1iI1i1 % 2 local llII1II111liIIiiIil = Il1IIiIl1I1l1l1IIll % 2 if IiII1Illil11l1iliII ~= llII1II111liIIiiIil then ll1I1lIllI11IiI1ill = ll1I1lIllI11IiI1ill + Illi1l11IIii11111l1 end IIIliI11iIl1i1iI1i1 = (IIIliI11iIl1i1iI1i1 - IiII1Illil11l1iliII) / 2 Il1IIiIl1I1l1l1IIll = (Il1IIiIl1I1l1l1IIll - llII1II111liIIiiIil) / 2 Illi1l11IIii11111l1 = Illi1l11IIii11111l1 * 2 end if IIIliI11iIl1i1iI1i1 < Il1IIiIl1I1l1l1IIll then IIIliI11iIl1i1iI1i1 = Il1IIiIl1I1l1l1IIll end while IIIliI11iIl1i1iI1i1 > 0 do local IiII1Illil11l1iliII = IIIliI11iIl1i1iI1i1 % 2 if IiII1Illil11l1iliII > 0 then ll1I1lIllI11IiI1ill = ll1I1lIllI11IiI1ill + Illi1l11IIii11111l1 end IIIliI11iIl1i1iI1i1 = (IIIliI11iIl1i1iI1i1 - IiII1Illil11l1iliII) / 2 Illi1l11IIii11111l1 = Illi1l11IIii11111l1 * 2 end return ll1I1lIllI11IiI1ill end local function lIlIillli1lliIlIIII1i(iiil1lliIIi1iiI1iI1) local lI1I11iIlI1iIilI111 = { i11iIIiI1I1iI1ii1II(lI1I1IIl1IIlliIIIl1, il1iil11liiiiIIIi1I, il1iil11liiiiIIIi1I + 3) } il1iil11liiiiIIIi1I = il1iil11liiiiIIIi1I + 4 local IIIliI11iIl1i1iI1i1 = lIlIli11IilIIl11i1i1I(lI1I11iIlI1iIilI111[1], IlliIiIli1IiIIii1l1) local Il1IIiIl1I1l1l1IIll = lIlIli11IilIIl11i1i1I(lI1I11iIlI1iIilI111[2], IlliIiIli1IiIIii1l1) local ll1I1lIllI11IiI1ill = lIlIli11IilIIl11i1i1I(lI1I11iIlI1iIilI111[3], IlliIiIli1IiIIii1l1) local Iii1i1i1lI1liIl1ili = lIlIli11IilIIl11i1i1I(lI1I11iIlI1iIilI111[4], IlliIiIli1IiIIii1l1) IlliIiIli1IiIIii1l1 = (249 * IlliIiIli1IiIIii1l1 + iiil1lliIIi1iiI1iI1) % 256 return Iii1i1i1lI1liIl1ili * 16777216 + ll1I1lIllI11IiI1ill * 65536 + Il1IIiIl1I1l1l1IIll * 256 + IIIliI11iIl1i1iI1i1 end local function IiIllIli1l1iIIllI1l(lli1Illilll1lll11ii) local lIlIiillI11i1lIi1I1ii = illII1IlI111Iilll1i() local lIll111lIlIlIIiIIiiii = "" for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, lIlIiillI11i1lIi1I1ii do lIll111lIlIlIIiIIiiii = lIll111lIlIlIIiIIiiii .. i11l11iiIillIiIIiiI(lIlIli11IilIIl11i1i1I(i11iIIiI1I1iI1ii1II(lI1I1IIl1IIlliIIIl1, il1iil11liiiiIIIi1I + l1ii1llilIi1i1iiI1i - 1), iII1lli1ili1liIiI1I)) iII1lli1ili1liIiI1I = (lli1Illilll1lll11ii * iII1lli1ili1liIiI1I + 143) % 256 end il1iil11liiiiIIIi1I = il1iil11liiiiIIIi1I + lIlIiillI11i1lIi1I1ii return lIll111lIlIlIIiIIiiii end iII1lli1ili1liIiI1I = Il1ll11l1li1I1llIli() IlliIiIli1IiIIii1l1 = Il1ll11l1li1I1llIli() local lIl1lII1IiI111IiIliii = {} for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, Il1ll11l1li1I1llIli() do local liIIl1lIlliIlIIiIlI = Il1ll11l1li1I1llIli() local Illll1IiI1lI1Illlli = (l1ii1llilIi1i1iiI1i - 1) * 2 lIl1lII1IiI111IiIliii[Illll1IiI1lI1Illlli] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, 1, 4) lIl1lII1IiI111IiIliii[Illll1IiI1lI1Illlli + 1] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, 5, 8) end local function Ii1I1I1II11Ili1l1I1() local I1I1llIlIiiIiIl1iii = { nil, nil, {}, {}, {}, {}, nil } illII1IlI111Iilll1i() illII1IlI111Iilll1i() Il1ll11l1li1I1llIli() Il1ll11l1li1I1llIli() local iiii11iiilI1l1I11il = illII1IlI111Iilll1i() for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, iiii11iiilI1l1I11il do I1I1llIlIiiIiIl1iii[4][l1ii1llilIi1i1iiI1i] = illII1IlI111Iilll1i() end local lIlli1i11iIl1il1ill = illII1IlI111Iilll1i() - (#{ 3843, 760, 2660, 1498, 1102, 2482, 750, 3464, 6333, 4995, 6304, 6521, 6409, 6001, 1346, 486, 5217, 6877, 3180, 4129, 4863, 1965 } + iliiliII1l1Illl11Il + 133620) local iliiliIlliI11i11l1i = Il1ll11l1li1I1llIli() for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, lIlli1i11iIl1il1ill do local II11111IliiIIlliIII = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local liIIl1lIlliIlIIiIlI = lIlIillli1lliIlIIII1i(iliiliIlliI11i11l1i) II11111IliiIIlliIII[9] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, #{5020}, #{ 1810, 1199, 410, 5012, 3592, 4327, 5467, 4633, 330, 4645, 4206, 6133, 4555, 5198, 1708, 1928, 2796, 2523 }) II11111IliiIIlliIII[10] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, #{ 667, 2034, 6716, 6911, 759, 3259, 4728, 1801, 4409, 2857, 2583, 1502, 3959, 2742, 4054, 4200, 619, 2605, 565, 1208, 2421 } + iliiliII1l1Illl11Il + -54, #{ 1792, 3950, 4799, 2857, 6329, 2475, 3207, 2785, 933, 1048, 279, 4212, 5717, 968, 997, 5224, 410, 1212, 5447, 4206, 4760 } + iliiliII1l1Illl11Il + -49) II11111IliiIIlliIII[8] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, #{1868}, #{ 2284, 1298, 6806, 741, 4578, 4539, 6906, 643, 6765 }) II11111IliiIIlliIII[5] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, #{ 3750, 2142, 5927, 1539, 6066, 5261, 3348, 2998, 2602, 1589 }, #{ 5005, 1183, 4211, 2233, 3438, 2951, 6747, 4477, 6912, 6456, 2794, 3113, 1956, 6602, 3166, 307, 550, 3151 }) II11111IliiIIlliIII[6] = lIlIlil111lIi1iIl111I(liIIl1lIlliIlIIiIlI, #{ 2282, 2995, 2075, 1890, 4340, 739, 6261, 5920, 5460, 3424, 5580, 3539, 1249, 2118, 2015, 6717, 5566, 6743, 2315 }, #{ 5981, 3077, 70, 6027, 1343, 4098, 4286, 1163, 5198, 5926, 2985, 1398, 5960, 3028, 721, 1036, 6260, 553, 2594, 2707, 5639 } + iliiliII1l1Illl11Il + -55) I1I1llIlIiiIiIl1iii[6][l1ii1llilIi1i1iiI1i] = II11111IliiIIlliIII end Il1ll11l1li1I1llIli() I1I1llIlIiiIiIl1iii[2] = Il1ll11l1li1I1llIli() local iiii11iiilI1l1I11il = illII1IlI111Iilll1i() for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, iiii11iiilI1l1I11il do I1I1llIlIiiIiIl1iii[5][l1ii1llilIi1i1iiI1i - lilll111l111lII1l11] = Ii1I1I1II11Ili1l1I1() end Il1ll11l1li1I1llIli() I1I1llIlIiiIiIl1iii[1] = Il1ll11l1li1I1llIli() I1I1llIlIiiIiIl1iii[7] = Il1ll11l1li1I1llIli() Il1ll11l1li1I1llIli() local iiii11iiilI1l1I11il = illII1IlI111Iilll1i() - (#{ 738, 3222, 241, 1673, 1389, 4362, 5950, 5726, 5276, 815, 2061, 4125, 2047, 3396, 5802, 563, 6103, 6797, 4942, 1023, 4734, 5889 } + iliiliII1l1Illl11Il + 133632) local I11Ill1llI1IiiI111l = Il1ll11l1li1I1llIli() for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, iiii11iiilI1l1I11il do local iIlllliIil1l1IIil1I local lIlII1lI1iil11Iliilll = Il1ll11l1li1I1llIli() if lIlII1lI1iil11Iliilll == #{ 4810, 6535, 6552, 3218, 1589, 2529, 1501, 2091, 3254, 2135, 3511, 269, 994, 3448, 5821, 6608, 2551, 1831, 3630, 6384, 6559 } + iliiliII1l1Illl11Il + 70 then iIlllliIil1l1IIil1I = #{ 5805, 4386, 4842, 2733, 802, 4088, 4051, 4379, 5387, 277, 4066, 328, 1797, 648, 532, 3986, 221, 1597, 5799, 3279, 6388 } + iliiliII1l1Illl11Il + 13458 == #{ 5287, 2716, 915, 993, 2795, 6435, 3163, 1776, 3597, 6699, 4849, 5184, 5123, 5994, 4890, 6155, 1868, 4152, 3569, 104, 1839, 954, 4135, 574 } + iliiliII1l1Illl11Il + 26834 end if lIlII1lI1iil11Iliilll == #{ 3242, 4737, 3012, 2349, 1021, 3473 } then iIlllliIil1l1IIil1I = Iiili1Il1liliiii111(IiIllIli1l1iIIllI1l(I11Ill1llI1IiiI111l), #{2445, 3716}) end if lIlII1lI1iil11Iliilll == #{ 4779, 39, 6334, 1457, 2694, 4288, 5057, 2405, 5727, 6718, 148, 5760, 3114, 2651, 1091, 2996, 2884 } then iIlllliIil1l1IIil1I = Iiili1Il1liliiii111(IiIllIli1l1iIIllI1l(#{ 6896, 5825, 3694, 1092, 6175, 6802, 862, 4682, 1839, 6319, 321, 1559, 4257, 6592, 5760, 549, 1338, 5626, 668, 270, 3879 } + iliiliII1l1Illl11Il + 39), #{4369}) end if lIlII1lI1iil11Iliilll == #{ 6750, 3901, 289, 1955, 568, 5030, 4856, 2527, 5101, 3165, 2365, 6653, 6740, 4432, 6943, 6814, 3358, 1589, 3630, 1761, 2743, 1294 } + iliiliII1l1Illl11Il + 60 then iIlllliIil1l1IIil1I = ili11l1Iili1i1li1l1() end if lIlII1lI1iil11Iliilll == #{ 2744, 2914, 6081, 4369, 5146, 4339, 4172, 4842, 5945, 1901, 3498, 4927, 3602, 1641, 1272, 5846, 6698, 4755, 2227, 4927, 890, 2592, 4730 } + iliiliII1l1Illl11Il + 72 then iIlllliIil1l1IIil1I = Il1ll11l1li1I1llIli() end if lIlII1lI1iil11Iliilll == #{ 2512, 355, 1600, 3978, 4541, 5986, 3206, 522, 447, 3283, 4121, 5250, 4823, 3132, 2163, 6088, 2971, 2888, 4666, 2454 } + iliiliII1l1Illl11Il + 11 then iIlllliIil1l1IIil1I = #{ 5085, 5976, 2618, 3063, 6784, 6517, 4423, 555, 5127, 5546, 5998, 5226, 3038, 3262, 1337, 3559, 6077, 1361, 3148, 1351, 1491, 1590, 4685, 6930 } + iliiliII1l1Illl11Il + 35233 == #{ 5085, 5976, 2618, 3063, 6784, 6517, 4423, 555, 5127, 5546, 5998, 5226, 3038, 3262, 1337, 3559, 6077, 1361, 3148, 1351, 1491, 1590, 4685, 6930 } + iliiliII1l1Illl11Il + 35233 end if lIlII1lI1iil11Iliilll == #{ 2257, 4506, 4305, 4932, 4660, 6902, 6720, 3118, 669, 4475, 3594, 1733, 816, 1055, 1794, 5186, 3120, 6291, 6035, 6181, 3451 } + iliiliII1l1Illl11Il + 17 then iIlllliIil1l1IIil1I = ili11l1Iili1i1li1l1() end if lIlII1lI1iil11Iliilll == #{ 462, 6487, 2658, 4664, 5852, 4205, 4771, 1850, 3291, 5545, 5880, 4153, 3810, 671, 6105, 3197, 3720, 5224, 4541, 6710, 3796 } + iliiliII1l1Illl11Il + 101 then iIlllliIil1l1IIil1I = Il1ll11l1li1I1llIli() end if lIlII1lI1iil11Iliilll == #{ 5715, 513, 583, 38, 4257, 5400, 5874, 3653, 1448, 1350, 4993, 6095, 2736, 2281, 2399, 2503, 1517, 3968, 1214, 6921, 5890, 2295, 5216, 2015 } + iliiliII1l1Illl11Il + -7 then iIlllliIil1l1IIil1I = Iiili1Il1liliiii111(IiIllIli1l1iIIllI1l(insEncKey), #{ 3043, 1495, 4193, 21 }) end I1I1llIlIiiIiIl1iii[3][l1ii1llilIi1i1iiI1i - lilll111l111lII1l11] = iIlllliIil1l1IIil1I end for l1ii1llilIi1i1iiI1i = lilll111l111lII1l11, lIlli1i11iIl1il1ill do local II11111IliiIIlliIII = I1I1llIlIiiIiIl1iii[6][l1ii1llilIi1i1iiI1i] local i111I11i11Iii1lliIl = lIl1lII1IiI111IiIliii[II11111IliiIIlliIII[10]] if i111I11i11Iii1lliIl == #{ 1071, 1705, 1901 } then if II11111IliiIIlliIII[8] > 255 then II11111IliiIIlliIII[7] = true II11111IliiIIlliIII[1] = I1I1llIlIiiIiIl1iii[3][II11111IliiIIlliIII[8] - 256] end if II11111IliiIIlliIII[5] > 255 then II11111IliiIIlliIII[3] = true II11111IliiIIlliIII[2] = I1I1llIlIiiIiIl1iii[3][II11111IliiIIlliIII[5] - 256] end end if i111I11i11Iii1lliIl == #{ 1599, 1020, 3400, 5871 } then II11111IliiIIlliIII[4] = I1I1llIlIiiIiIl1iii[3][II11111IliiIIlliIII[9]] end if i111I11i11Iii1lliIl == #{286, 1371} and II11111IliiIIlliIII[5] > 255 then II11111IliiIIlliIII[3] = true II11111IliiIIlliIII[2] = I1I1llIlIiiIiIl1iii[3][II11111IliiIIlliIII[5] - 256] end if i111I11i11Iii1lliIl == #{3883} and II11111IliiIIlliIII[8] > 255 then II11111IliiIIlliIII[7] = true II11111IliiIIlliIII[1] = I1I1llIlIiiIiIl1iii[3][II11111IliiIIlliIII[8] - 256] end end illII1IlI111Iilll1i() illII1IlI111Iilll1i() illII1IlI111Iilll1i() return I1I1llIlIiiIiIl1iii end local function lIlIII1Ii111liIl1llli(I1I1llIlIiiIiIl1iii, lIl1liliIIiliIlII11Il, IIlliIl1I1l11liIIi1) local Ii11l1l1l1lIIlII1i1, iii1l1iliII1II1iilI = 20, 22 local lIlIlIil1I1IllIlIii11 = I1I1llIlIiiIiIl1iii[6] local lIlIiI1lI1I1IiIlIIiil = 7 local lIlllI1llIliIIllli1II = I1I1llIlIiiIiIl1iii[5] local l1i1II1IiiIill1lii1 = I1I1llIlIiiIiIl1iii[1] local il1Ill11iI111lIIlII = I1I1llIlIiiIiIl1iii[2] local lIl1li1llIll1liiIliii = 10 local lIil1iIliIiI1l1II1l = I1I1llIlIiiIiIl1iii[4] local lIilliiI1II11liIi1I = 8 local function lIlliIlli111i1Il11ii1(...) local IIl1liI1i1li1IilIi1 = 0 local i1iIIliIiIllliilllI = { I1i1l1llllil11111iI({}, 1, il1Ill11iI111lIIlII) } local iii11IIiIIililIl1li = 1 local ili1iiiiii1IlliIi11 = {} local lIll1iil1l1I11IIi1lii = {} local lIl1liliIIiliIlII11Il = lIlI1IIIilIlIilil1111() local Ii1IlIllIi1liII11ii = { ... } local i1IIIl1II1Il11lill1 = #Ii1IlIllIi1liII11ii - 1 for l1ii1llilIi1i1iiI1i = 0, i1IIIl1II1Il11lill1 do if l1ii1llilIi1i1iiI1i < l1i1II1IiiIill1lii1 then i1iIIliIiIllliilllI[l1ii1llilIi1i1iiI1i] = Ii1IlIllIi1liII11ii[l1ii1llilIi1i1iiI1i + 1] end end local function iIIi1iIIi1IlIlIII1I(...) local ll1I1lIllI11IiI1ill = IiIIIillllIi1IIliII("#", ...) local li1Ili1I1IlIiI1l1ll = { ... } return ll1I1lIllI11IiI1ill, li1Ili1I1IlIiI1l1ll end local function Ii1iI11l1l1ii1lili1() while true do local iI1iIII1iIilIiiIIlI = lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] local lIliIlI1IIiIIiiIllill = iI1iIII1iIilIiiIIlI[10] iii11IIiIIililIl1li = iii11IIiIIililIl1li + 1 if lIliIlI1IIiIIiiIllill >= 11 then if lIliIlI1IIiIIiiIllill >= 17 then if lIliIlI1IIiIIiiIllill < 20 then if lIliIlI1IIiIIiiIllill >= 18 then if lIliIlI1IIiIIiiIllill == 19 then local ll1I1lIllI11IiI1ill if iI1iIII1iIilIiiIIlI[3] then ll1I1lIllI11IiI1ill = iI1iIII1iIilIiiIIlI[2] else ll1I1lIllI11IiI1ill = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[5]] end i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]][ll1I1lIllI11IiI1ill] else local Il1IIiIl1I1l1l1IIll, ll1I1lIllI11IiI1ill if iI1iIII1iIilIiiIIlI[7] then Il1IIiIl1I1l1l1IIll = iI1iIII1iIilIiiIIlI[1] else Il1IIiIl1I1l1l1IIll = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] end if iI1iIII1iIilIiiIIlI[3] then ll1I1lIllI11IiI1ill = iI1iIII1iIilIiiIIlI[2] else ll1I1lIllI11IiI1ill = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[5]] end i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = Il1IIiIl1I1l1l1IIll * ll1I1lIllI11IiI1ill end elseif iI1iIII1iIilIiiIIlI[5] == 229 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 2, [6] = (iI1iIII1iIilIiiIIlI[6] - 60) % 256, [5] = (iI1iIII1iIilIiiIIlI[8] - 60) % 256 } else i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = #i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] end elseif lIliIlI1IIiIIiiIllill < 21 then i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] elseif lIliIlI1IIiIIiiIllill == 22 then i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = IIlliIl1I1l11liIIi1[iI1iIII1iIilIiiIIlI[8]] else local Il1IIiIl1I1l1l1IIll, ll1I1lIllI11IiI1ill if iI1iIII1iIilIiiIIlI[7] then Il1IIiIl1I1l1l1IIll = iI1iIII1iIilIiiIIlI[1] else Il1IIiIl1I1l1l1IIll = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] end if iI1iIII1iIilIiiIIlI[3] then ll1I1lIllI11IiI1ill = iI1iIII1iIilIiiIIlI[2] else ll1I1lIllI11IiI1ill = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[5]] end i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = Il1IIiIl1I1l1l1IIll + ll1I1lIllI11IiI1ill end elseif lIliIlI1IIiIIiiIllill >= 14 then if lIliIlI1IIiIIiiIllill >= 15 then if lIliIlI1IIiIIiiIllill ~= 16 then i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = { I1i1l1llllil11111iI(II1i111l1II1iIIl1Il, 1, iI1iIII1iIilIiiIIlI[8] == 0 and 255 or iI1iIII1iIilIiiIIlI[8]) } elseif iI1iIII1iIilIiiIIlI[5] == 186 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 22, [6] = (iI1iIII1iIilIiiIIlI[6] - 34) % 256, [8] = (iI1iIII1iIilIiiIIlI[8] - 34) % 256 } elseif iI1iIII1iIilIiiIIlI[5] == 236 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 8, [6] = (iI1iIII1iIilIiiIIlI[6] - 191) % 256, [8] = (iI1iIII1iIilIiiIIlI[8] - 191) % 256 } else i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = not i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] end else local Il1IIiIl1I1l1l1IIll, ll1I1lIllI11IiI1ill if iI1iIII1iIilIiiIIlI[7] then Il1IIiIl1I1l1l1IIll = iI1iIII1iIilIiiIIlI[1] else Il1IIiIl1I1l1l1IIll = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] end if iI1iIII1iIilIiiIIlI[3] then ll1I1lIllI11IiI1ill = iI1iIII1iIilIiiIIlI[2] else ll1I1lIllI11IiI1ill = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[5]] end i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]][Il1IIiIl1I1l1l1IIll] = ll1I1lIllI11IiI1ill end elseif lIliIlI1IIiIIiiIllill >= 12 then if lIliIlI1IIiIIiiIllill == 13 then local Il1IIiIl1I1l1l1IIll, ll1I1lIllI11IiI1ill if iI1iIII1iIilIiiIIlI[7] then Il1IIiIl1I1l1l1IIll = iI1iIII1iIilIiiIIlI[1] else Il1IIiIl1I1l1l1IIll = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] end if iI1iIII1iIilIiiIIlI[3] then ll1I1lIllI11IiI1ill = iI1iIII1iIilIiiIIlI[2] else ll1I1lIllI11IiI1ill = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[5]] end if Il1IIiIl1I1l1l1IIll == ll1I1lIllI11IiI1ill ~= (iI1iIII1iIilIiiIIlI[6] ~= 0) then iii11IIiIIililIl1li = iii11IIiIIililIl1li + 1 end else local ii1iiiIIi11I1iliiI1 = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[8]] local ll1I1lIllI11IiI1ill if iI1iIII1iIilIiiIIlI[3] then ll1I1lIllI11IiI1ill = iI1iIII1iIilIiiIIlI[2] else ll1I1lIllI11IiI1ill = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[5]] end i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6] + 1] = ii1iiiIIi11I1iliiI1 i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = ii1iiiIIi11I1iliiI1[ll1I1lIllI11IiI1ill] end else i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = iI1iIII1iIilIiiIIlI[4] end elseif lIliIlI1IIiIIiiIllill < 5 then if lIliIlI1IIiIIiiIllill < 2 then if lIliIlI1IIiIIiiIllill ~= 1 then i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = iI1iIII1iIilIiiIIlI[8] ~= 0 if iI1iIII1iIilIiiIIlI[5] ~= 0 then iii11IIiIIililIl1li = iii11IIiIIililIl1li + 1 end elseif iI1iIII1iIilIiiIIlI[8] == 193 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 7, [6] = (iI1iIII1iIilIiiIIlI[6] - 202) % 256, [8] = (iI1iIII1iIilIiiIIlI[5] - 202) % 256 } elseif iI1iIII1iIilIiiIIlI[8] == 143 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 3, [6] = (iI1iIII1iIilIiiIIlI[6] - 175) % 256, [8] = (iI1iIII1iIilIiiIIlI[5] - 175) % 256 } else local ii1llI1llli11I1i1ii = iI1iIII1iIilIiiIIlI[6] local Illll1IiI1lI1Illlli = ii1llI1llli11I1i1ii + 2 local lIll1ili11Iil1iI1Ii11 = { i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii](i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii + 1], i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii + 2]) } for l1ii1llilIi1i1iiI1i = 1, iI1iIII1iIilIiiIIlI[5] do i1iIIliIiIllliilllI[Illll1IiI1lI1Illlli + l1ii1llilIi1i1iiI1i] = lIll1ili11Iil1iI1Ii11[l1ii1llilIi1i1iiI1i] end if i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii + 3] ~= nil then i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii + 2] = i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii + 3] else iii11IIiIIililIl1li = iii11IIiIIililIl1li + 1 end end elseif lIliIlI1IIiIIiiIllill >= 3 then if lIliIlI1IIiIIiiIllill == 4 then local ii1llI1llli11I1i1ii = iI1iIII1iIilIiiIIlI[6] local Ii1IlIllIi1liII11ii = iI1iIII1iIilIiiIIlI[8] local iii1iII111i11ilI1Ii = iI1iIII1iIilIiiIIlI[5] local lIlil1l1I1llIii1iii, lIlIIlIlIiIliii1i1l1i, Ii1iI11l1l1ii1lili1 if Ii1IlIllIi1liII11ii ~= 1 then if Ii1IlIllIi1liII11ii ~= 0 then lIlIIlIlIiIliii1i1l1i = ii1llI1llli11I1i1ii + Ii1IlIllIi1liII11ii - 1 else lIlIIlIlIiIliii1i1l1i = IIl1liI1i1li1IilIi1 end lIlIIlIlIiIliii1i1l1i, lIlil1l1I1llIii1iii = iIIi1iIIi1IlIlIII1I(i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii](I1i1l1llllil11111iI(i1iIIliIiIllliilllI, ii1llI1llli11I1i1ii + 1, lIlIIlIlIiIliii1i1l1i))) else lIlIIlIlIiIliii1i1l1i, lIlil1l1I1llIii1iii = iIIi1iIIi1IlIlIII1I(i1iIIliIiIllliilllI[ii1llI1llli11I1i1ii]()) end if iii1iII111i11ilI1Ii ~= 1 then if iii1iII111i11ilI1Ii ~= 0 then lIlIIlIlIiIliii1i1l1i = ii1llI1llli11I1i1ii + iii1iII111i11ilI1Ii - 2 IIl1liI1i1li1IilIi1 = lIlIIlIlIiIliii1i1l1i + 1 else lIlIIlIlIiIliii1i1l1i = lIlIIlIlIiIliii1i1l1i + ii1llI1llli11I1i1ii - 1 IIl1liI1i1li1IilIi1 = lIlIIlIlIiIliii1i1l1i end Ii1iI11l1l1ii1lili1 = 0 for l1ii1llilIi1i1iiI1i = ii1llI1llli11I1i1ii, lIlIIlIlIiIliii1i1l1i do Ii1iI11l1l1ii1lili1 = Ii1iI11l1l1ii1lili1 + 1 i1iIIliIiIllliilllI[l1ii1llilIi1i1iiI1i] = lIlil1l1I1llIii1iii[Ii1iI11l1l1ii1lili1] end else IIl1liI1i1li1IilIi1 = ii1llI1llli11I1i1ii - 1 end for l1ii1llilIi1i1iiI1i = IIl1liI1i1li1IilIi1 + 1, il1Ill11iI111lIIlII do i1iIIliIiIllliilllI[l1ii1llilIi1i1iiI1i] = nil end else local iIll1IIIiIii11IlIIi = iI1iIII1iIilIiiIIlI[6] local lIliI1l1l11ill111lI1i = {} for lIl1llIilllIIIIl11liI, lIiillili1IiIi1i1li in pairs(ili1iiiiii1IlliIi11[i1iIIliIiIllliilllI]) do for lIl1llIilllIIIIl11liI, Iil11lIi1i11IIl1i11 in pairs(lIiillili1IiIi1i1li) do if Iil11lIi1i11IIl1i11[1] == i1iIIliIiIllliilllI and iIll1IIIiIii11IlIIi <= Iil11lIi1i11IIl1i11[2] then local liI1Iili1iIlIIllIiI = Iil11lIi1i11IIl1i11[2] if not lIliI1l1l11ill111lI1i[liI1Iili1iIlIIllIiI] then lIlIII1Ii111liIl1llli(lIll1iil1l1I11IIi1lii, i1iIIliIiIllliilllI[liI1Iili1iIlIIllIiI]) lIliI1l1l11ill111lI1i[liI1Iili1iIlIIllIiI] = #lIll1iil1l1I11IIi1lii end Iil11lIi1i11IIl1i11[1] = lIll1iil1l1I11IIi1lii Iil11lIi1i11IIl1i11[2] = lIliI1l1l11ill111lI1i[liI1Iili1iIlIIllIiI] end end end end elseif iI1iIII1iIilIiiIIlI[8] == 70 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 1, [6] = (iI1iIII1iIilIiiIIlI[6] - 31) % 256, [5] = (iI1iIII1iIilIiiIIlI[5] - 31) % 256 } elseif not not i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] == (iI1iIII1iIilIiiIIlI[5] == 0) then iii11IIiIIililIl1li = iii11IIiIIililIl1li + 1 end elseif lIliIlI1IIiIIiiIllill < 8 then if lIliIlI1IIiIIiiIllill < 6 then i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = lIl1liliIIiliIlII11Il[iI1iIII1iIilIiiIIlI[4]] elseif lIliIlI1IIiIIiiIllill ~= 7 then lIl1liliIIiliIlII11Il[iI1iIII1iIilIiiIIlI[4]] = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] else IIlliIl1I1l11liIIi1[iI1iIII1iIilIiiIIlI[8]] = i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] end elseif lIliIlI1IIiIIiiIllill < 9 then if iI1iIII1iIilIiiIIlI[5] == 75 then iii11IIiIIililIl1li = iii11IIiIIililIl1li - 1 lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] = { [10] = 20, [6] = (iI1iIII1iIilIiiIIlI[6] - 249) % 256, [8] = (iI1iIII1iIilIiiIIlI[8] - 249) % 256 } else ili1iiiiii1IlliIi11[i1iIIliIiIllliilllI] = nil local ii1llI1llli11I1i1ii = iI1iIII1iIilIiiIIlI[6] local l1IIiiIll11Ii111Ill = iI1iIII1iIilIiiIIlI[8] if l1IIiiIll11Ii111Ill == 1 then return true end local lIlIIlIlIiIliii1i1l1i = ii1llI1llli11I1i1ii + l1IIiiIll11Ii111Ill - 2 if l1IIiiIll11Ii111Ill == 0 then lIlIIlIlIiIliii1i1l1i = IIl1liI1i1li1IilIi1 end return true, ii1llI1llli11I1i1ii, lIlIIlIlIiIliii1i1l1i end elseif lIliIlI1IIiIIiiIllill == 10 then local IlliIlilIiliii1i1II = lIlllI1llIliIIllli1II[iI1iIII1iIilIiiIIlI[9]] local I11iIilllilI1iiIIil = {} if IlliIlilIiliii1i1II[lIlIiI1lI1I1IiIlIIiil] > 0 then do local lIiillili1IiIi1i1li = {} I11iIilllilI1iiIIil = lI1I1IlIllli1IilIil({}, { __index = function(li1Ili1I1IlIiI1l1ll, IiIIIiIilill11i11I1) local Iil11lIi1i11IIl1i11 = lIiillili1IiIi1i1li[IiIIIiIilill11i11I1] return Iil11lIi1i11IIl1i11[1][Iil11lIi1i11IIl1i11[2]] end, __newindex = function(li1Ili1I1IlIiI1l1ll, IiIIIiIilill11i11I1, Iiil1lIii11Iii1Ilil) local Iil11lIi1i11IIl1i11 = lIiillili1IiIi1i1li[IiIIIiIilill11i11I1] Iil11lIi1i11IIl1i11[1][Iil11lIi1i11IIl1i11[2]] = Iiil1lIii11Iii1Ilil end }) for l1ii1llilIi1i1iiI1i = 1, IlliIlilIiliii1i1II[lIlIiI1lI1I1IiIlIIiil] do local li1l1lIIlIili1iIil1 = lIlIlIil1I1IllIlIii11[iii11IIiIIililIl1li] if li1l1lIIlIili1iIil1[lIl1li1llIll1liiIliii] == Ii11l1l1l1lIIlII1i1 then lIiillili1IiIi1i1li[l1ii1llilIi1i1iiI1i - 1] = { i1iIIliIiIllliilllI, li1l1lIIlIili1iIil1[lIilliiI1II11liIi1I] } elseif li1l1lIIlIili1iIil1[lIl1li1llIll1liiIliii] == iii1l1iliII1II1iilI then lIiillili1IiIi1i1li[l1ii1llilIi1i1iiI1i - 1] = { IIlliIl1I1l11liIIi1, li1l1lIIlIili1iIil1[lIilliiI1II11liIi1I] } end iii11IIiIIililIl1li = iii11IIiIIililIl1li + 1 end if not ili1iiiiii1IlliIi11[i1iIIliIiIllliilllI] then ili1iiiiii1IlliIi11[i1iIIliIiIllliilllI] = {lIiillili1IiIi1i1li} else i111lIllIlIIi1lI1li(ili1iiiiii1IlliIi11[i1iIIliIiIllliilllI], lIiillili1IiIi1i1li) end end end local iiIiI1lIIiiIIiIlilI = lIlIII1Ii111liIl1llli(IlliIlilIiliii1i1II, lIl1liliIIiliIlII11Il, I11iIilllilI1iiIIil) i1iIIliIiIllliilllI[iI1iIII1iIilIiiIIlI[6]] = iiIiI1lIIiiIIiIlilI else iii11IIiIIililIl1li = iii11IIiIIililIl1li + (iI1iIII1iIilIiiIIlI[9] - lIliliIIIlIiIIiIiiIil) end end end local iliIIIlI1Iil1iiiI11, lIll111lIlIlIIiIIiiii, iIll1IIIiIii11IlIIi, l1II111iiiI1Il1liIl = IlIl1ii1lIIlilIii1I(Ii1iI11l1l1ii1lili1) if iliIIIlI1Iil1iiiI11 then if iIll1IIIiIii11IlIIi then return I1i1l1llllil11111iI(i1iIIliIiIllliilllI, iIll1IIIiIii11IlIIi, l1II111iiiI1Il1liIl) end else i1ll1iIllillllI1I1l("Luraph Script:" .. (lIil1iIliIiI1l1II1l[iii11IIiIIililIl1li - 1] or "") .. ": " .. iilIl1Iiii1Ii111II1(lIll111lIlIlIIiIIiiii), 0) end end IIiIIl1I11i1llli1il(lIlliIlli111i1Il11ii1, lIl1liliIIiliIlII11Il) return lIlliIlli111i1Il11ii1 end local lIliI1l1l11ill111lI1i = Ii1I1I1II11Ili1l1I1() return lIlIII1Ii111liIl1llli(lIliI1l1l11ill111lI1i, lIl1liliIIiliIlII11Il)() end ii1l11i11Il1lIllIlI1IIIilIlIilil1111()) 
